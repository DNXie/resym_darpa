[[4199656, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199696, "sub_401510", "__int64 sub_401510()\n{\n  return qword_611010();\n}\n"], [4199712, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4199728, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199744, ".localtime", "// attributes: thunk\nstruct tm *localtime(const time_t *timer)\n{\n  return localtime(timer);\n}\n"], [4199760, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199776, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199792, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199808, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199824, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199840, ".toupper", "// attributes: thunk\nint toupper(int c)\n{\n  return toupper(c);\n}\n"], [4199856, ".clock_gettime", "// attributes: thunk\nint clock_gettime(clockid_t clock_id, struct timespec *tp)\n{\n  return clock_gettime(clock_id, tp);\n}\n"], [4199872, ".setenv", "// attributes: thunk\nint setenv(const char *name, const char *value, int replace)\n{\n  return setenv(name, value, replace);\n}\n"], [4199888, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199904, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199920, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199936, ".stpcpy", "// attributes: thunk\nchar *stpcpy(char *dest, const char *src)\n{\n  return stpcpy(dest, src);\n}\n"], [4199952, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199968, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199984, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200000, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200016, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200032, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200048, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4200064, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4200080, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4200096, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4200112, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4200128, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4200144, ".fputc", "// attributes: thunk\nint fputc(int c, FILE *stream)\n{\n  return fputc(c, stream);\n}\n"], [4200160, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200176, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200192, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200208, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200224, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200240, ".putenv", "// attributes: thunk\nint putenv(char *string)\n{\n  return putenv(string);\n}\n"], [4200256, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4200272, ".fputc_unlocked", "// attributes: thunk\nint fputc_unlocked(int c, FILE *stream)\n{\n  return fputc_unlocked(c, stream);\n}\n"], [4200288, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200304, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200320, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200336, ".time", "// attributes: thunk\ntime_t time(time_t *timer)\n{\n  return time(timer);\n}\n"], [4200352, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200368, ".settimeofday", "// attributes: thunk\nint settimeofday(const struct timeval *tv, const struct timezone *tz)\n{\n  return settimeofday(tv, tz);\n}\n"], [4200384, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4200400, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4200416, ".putc_unlocked", "// attributes: thunk\nint putc_unlocked(int c, FILE *stream)\n{\n  return putc_unlocked(c, stream);\n}\n"], [4200432, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200448, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200464, ".nl_langinfo", "// attributes: thunk\nchar *nl_langinfo(nl_item item)\n{\n  return nl_langinfo(item);\n}\n"], [4200480, ".clock_settime", "// attributes: thunk\nint clock_settime(clockid_t clock_id, const struct timespec *tp)\n{\n  return clock_settime(clock_id, tp);\n}\n"], [4200496, ".mktime", "// attributes: thunk\ntime_t mktime(struct tm *tp)\n{\n  return mktime(tp);\n}\n"], [4200512, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200528, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200544, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200560, ".strftime", "// attributes: thunk\nsize_t strftime(char *s, size_t maxsize, const char *format, const struct tm *tp)\n{\n  return strftime(s, maxsize, format, tp);\n}\n"], [4200576, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200592, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200608, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200624, ".unsetenv", "// attributes: thunk\nint unsetenv(const char *name)\n{\n  return unsetenv(name);\n}\n"], [4200640, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200656, ".getline", "// attributes: thunk\n__ssize_t getline(char **lineptr, size_t *n, FILE *stream)\n{\n  return getline(lineptr, n, stream);\n}\n"], [4200672, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4200688, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200704, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200720, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200736, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200752, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200768, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200816, "sub_401970", "signed __int64 sub_401970()\n{\n  signed __int64 result; // rax\n\n  result = &unk_61128F - &unk_611288;\n  if ( (unsigned __int64)(&unk_61128F - &unk_611288) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200864, "sub_4019A0", "__int64 sub_4019A0()\n{\n  return 0LL;\n}\n"], [4200928, "sub_4019E0", "signed __int64 sub_4019E0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_6112F8 )\n  {\n    result = sub_401970();\n    byte_6112F8 = 1;\n  }\n  return result;\n}\n"], [4200960, "sub_401A00", "__int64 sub_401A00()\n{\n  return sub_4019A0();\n}\n"], [4201005, "sub_401A2D", "int sub_401A2D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402DFD(qword_611310);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402DFD(qword_611310);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402DFD(qword_611310);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201271, "sub_401B37", "__int64 __fastcall sub_401B37(__int64 a1, __int64 a2)\n{\n  return sub_405B1A(a1, a2);\n}\n"], [4201308, "sub_401B5C", "__int64 __fastcall sub_401B5C(__int64 a1)\n{\n  return a1;\n}\n"], [4201322, "sub_401B6A", "__int64 __fastcall sub_401B6A(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4201344, "sub_401B80", "void __fastcall __noreturn sub_401B80(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  __int64 v3; // r12\n  __int64 v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n  FILE *v22; // rbx\n  char *v23; // rax\n  FILE *v24; // rbx\n  char *v25; // rax\n  FILE *v26; // rbx\n  char *v27; // rax\n  FILE *v28; // rbx\n  char *v29; // rax\n  FILE *v30; // rbx\n  char *v31; // rax\n  FILE *v32; // rbx\n  char *v33; // rax\n  FILE *v34; // rbx\n  char *v35; // rax\n  FILE *v36; // rbx\n  char *v37; // rax\n  FILE *v38; // rbx\n  char *v39; // rax\n  FILE *v40; // rbx\n  char *v41; // rax\n  FILE *v42; // rbx\n  char *v43; // rax\n\n  if ( a1 )\n  {\n    v1 = qword_611310;\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = qword_611310;\n    v4 = qword_611310;\n    v5 = gettext(\"Usage: %s [OPTION]... [+FORMAT]\\n  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\\n\");\n    printf(v5, v4, v3);\n    v6 = stdout;\n    v7 = gettext(\n           \"Display the current time in the given FORMAT, or set the system date.\\n\"\n           \"\\n\"\n           \"  -d, --date=STRING         display time described by STRING, not `now'\\n\"\n           \"  -f, --file=DATEFILE       like --date once for each line of DATEFILE\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -r, --reference=FILE      display the last modification time of FILE\\n\"\n           \"  -R, --rfc-2822            output date and time in RFC 2822 format.\\n\"\n           \"                            Example: Mon, 07 Aug 2006 12:34:56 -0600\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"      --rfc-3339=TIMESPEC   output date and time in RFC 3339 format.\\n\"\n            \"                            TIMESPEC=`date', `seconds', or `ns' for\\n\"\n            \"                            date and time to the indicated precision.\\n\"\n            \"                            Date and time components are separated by\\n\"\n            \"                            a single space: 2006-08-07 12:34:56-06:00\\n\"\n            \"  -s, --set=STRING          set time described by STRING\\n\"\n            \"  -u, --utc, --universal    print or set Coordinated Universal Time\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"\\n\"\n            \"FORMAT controls the output.  Interpreted sequences are:\\n\"\n            \"\\n\"\n            \"  %%   a literal %\\n\"\n            \"  %a   locale's abbreviated weekday name (e.g., Sun)\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"  %A   locale's full weekday name (e.g., Sunday)\\n\"\n            \"  %b   locale's abbreviated month name (e.g., Jan)\\n\"\n            \"  %B   locale's full month name (e.g., January)\\n\"\n            \"  %c   locale's date and time (e.g., Thu Mar  3 23:05:25 2005)\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\n            \"  %C   century; like %Y, except omit last two digits (e.g., 20)\\n\"\n            \"  %d   day of month (e.g., 01)\\n\"\n            \"  %D   date; same as %m/%d/%y\\n\"\n            \"  %e   day of month, space padded; same as %_d\\n\");\n    fputs_unlocked(v21, v20);\n    v22 = stdout;\n    v23 = gettext(\n            \"  %F   full date; same as %Y-%m-%d\\n\"\n            \"  %g   last two digits of year of ISO week number (see %G)\\n\"\n            \"  %G   year of ISO week number (see %V); normally useful only with %V\\n\");\n    fputs_unlocked(v23, v22);\n    v24 = stdout;\n    v25 = gettext(\"  %h   same as %b\\n  %H   hour (00..23)\\n  %I   hour (01..12)\\n  %j   day of year (001..366)\\n\");\n    fputs_unlocked(v25, v24);\n    v26 = stdout;\n    v27 = gettext(\n            \"  %k   hour, space padded ( 0..23); same as %_H\\n\"\n            \"  %l   hour, space padded ( 1..12); same as %_I\\n\"\n            \"  %m   month (01..12)\\n\"\n            \"  %M   minute (00..59)\\n\");\n    fputs_unlocked(v27, v26);\n    v28 = stdout;\n    v29 = gettext(\n            \"  %n   a newline\\n\"\n            \"  %N   nanoseconds (000000000..999999999)\\n\"\n            \"  %p   locale's equivalent of either AM or PM; blank if not known\\n\"\n            \"  %P   like %p, but lower case\\n\"\n            \"  %r   locale's 12-hour clock time (e.g., 11:11:04 PM)\\n\"\n            \"  %R   24-hour hour and minute; same as %H:%M\\n\"\n            \"  %s   seconds since 1970-01-01 00:00:00 UTC\\n\");\n    fputs_unlocked(v29, v28);\n    v30 = stdout;\n    v31 = gettext(\n            \"  %S   second (00..60)\\n\"\n            \"  %t   a tab\\n\"\n            \"  %T   time; same as %H:%M:%S\\n\"\n            \"  %u   day of week (1..7); 1 is Monday\\n\");\n    fputs_unlocked(v31, v30);\n    v32 = stdout;\n    v33 = gettext(\n            \"  %U   week number of year, with Sunday as first day of week (00..53)\\n\"\n            \"  %V   ISO week number, with Monday as first day of week (01..53)\\n\"\n            \"  %w   day of week (0..6); 0 is Sunday\\n\"\n            \"  %W   week number of year, with Monday as first day of week (00..53)\\n\");\n    fputs_unlocked(v33, v32);\n    v34 = stdout;\n    v35 = gettext(\n            \"  %x   locale's date representation (e.g., 12/31/99)\\n\"\n            \"  %X   locale's time representation (e.g., 23:13:48)\\n\"\n            \"  %y   last two digits of year (00..99)\\n\"\n            \"  %Y   year\\n\");\n    fputs_unlocked(v35, v34);\n    v36 = stdout;\n    v37 = gettext(\n            \"  %z   +hhmm numeric time zone (e.g., -0400)\\n\"\n            \"  %:z  +hh:mm numeric time zone (e.g., -04:00)\\n\"\n            \"  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\\n\"\n            \"  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\\n\"\n            \"  %Z   alphabetic time zone abbreviation (e.g., EDT)\\n\"\n            \"\\n\"\n            \"By default, date pads numeric fields with zeroes.\\n\");\n    fputs_unlocked(v37, v36);\n    v38 = stdout;\n    v39 = gettext(\n            \"The following optional flags may follow `%':\\n\"\n            \"\\n\"\n            \"  -  (hyphen) do not pad the field\\n\"\n            \"  _  (underscore) pad with spaces\\n\"\n            \"  0  (zero) pad with zeros\\n\"\n            \"  ^  use upper case if possible\\n\"\n            \"  #  use opposite case if possible\\n\");\n    fputs_unlocked(v39, v38);\n    v40 = stdout;\n    v41 = gettext(\n            \"\\n\"\n            \"After any flags comes an optional field width, as a decimal number;\\n\"\n            \"then an optional modifier, which is either\\n\"\n            \"E to use the locale's alternate representations if available, or\\n\"\n            \"O to use the locale's alternate numeric symbols if available.\\n\");\n    fputs_unlocked(v41, v40);\n    v42 = stdout;\n    v43 = gettext(\n            \"\\n\"\n            \"Examples:\\n\"\n            \"Convert seconds since the epoch (1970-01-01 UTC) to a date\\n\"\n            \"  $ date --date='@2147483647'\\n\"\n            \"\\n\"\n            \"Show the time on the west coast of the US (use tzselect(1) to find TZ)\\n\"\n            \"  $ TZ='America/Los_Angeles' date\\n\"\n            \"\\n\"\n            \"Show the local time for 9AM next Friday on the west coast of the US\\n\"\n            \"  $ date --date='TZ=\\\"America/Los_Angeles\\\" 09:00 next Fri'\\n\");\n    fputs_unlocked(v43, v42);\n    sub_401A2D();\n  }\n  exit(a1);\n}\n"], [4202005, "sub_401E15", "_BOOL8 __fastcall sub_401E15(const char *a1, __int64 a2)\n{\n  const char *v2; // rbx\n  int *v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  const char *v6; // rbx\n  int *v7; // rax\n  char *s1; // [rsp+8h] [rbp-58h]\n  bool v10; // [rsp+1Fh] [rbp-41h]\n  char *lineptr; // [rsp+20h] [rbp-40h] BYREF\n  size_t n; // [rsp+28h] [rbp-38h] BYREF\n  FILE *stream; // [rsp+30h] [rbp-30h]\n  __ssize_t v14; // [rsp+38h] [rbp-28h]\n  __int64 v15[4]; // [rsp+40h] [rbp-20h] BYREF\n\n  s1 = (char *)a1;\n  if ( !strcmp(a1, \"-\") )\n  {\n    s1 = gettext(\"standard input\");\n    stream = (FILE *)stdin;\n  }\n  else\n  {\n    stream = fopen(a1, \"r\");\n    if ( !stream )\n    {\n      v2 = (const char *)sub_40A2F7(a1);\n      v3 = __errno_location();\n      error(1, *v3, \"%s\", v2);\n    }\n  }\n  lineptr = 0LL;\n  n = 0LL;\n  v10 = 1;\n  while ( 1 )\n  {\n    v14 = getline(&lineptr, &n, stream);\n    if ( v14 < 0 )\n      break;\n    if ( (unsigned __int8)sub_408BFC(v15, lineptr, 0LL) != 1 )\n    {\n      if ( lineptr[v14 - 1] == 10 )\n        lineptr[v14 - 1] = 0;\n      v4 = sub_40A2F7(lineptr);\n      v5 = gettext(\"invalid date %s\");\n      error(0, 0, v5, v4);\n      v10 = 0;\n    }\n    else\n    {\n      v10 = (v10 & (unsigned __int8)sub_4027CC(a2, v15[0], v15[1])) != 0;\n    }\n  }\n  if ( (unsigned int)sub_40C662(stream) == -1 )\n  {\n    v6 = (const char *)sub_40A2F7(s1);\n    v7 = __errno_location();\n    error(1, *v7, \"%s\", v6);\n  }\n  free(lineptr);\n  return v10;\n}\n"], [4202472, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  unsigned int v3; // eax\n  char *v4; // rdi\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  char *v10; // rax\n  int v11; // eax\n  __int64 v12; // rbx\n  char *v13; // rax\n  int *v14; // rax\n  __int64 v15; // rdx\n  __int64 v16; // rbx\n  char *v17; // rax\n  char *v18; // rbx\n  int *v19; // rax\n  char v21; // [rsp+1Dh] [rbp-F3h]\n  bool v22; // [rsp+1Eh] [rbp-F2h]\n  char v23; // [rsp+1Eh] [rbp-F2h]\n  char v24; // [rsp+1Fh] [rbp-F1h]\n  int v25; // [rsp+20h] [rbp-F0h]\n  int v26; // [rsp+2Ch] [rbp-E4h]\n  char *v27; // [rsp+30h] [rbp-E0h]\n  __int64 v28; // [rsp+38h] [rbp-D8h]\n  char *v29; // [rsp+40h] [rbp-D0h]\n  const char *v30; // [rsp+48h] [rbp-C8h]\n  char *filename; // [rsp+50h] [rbp-C0h]\n  const char *v32; // [rsp+58h] [rbp-B8h]\n  __int64 v33; // [rsp+60h] [rbp-B0h] BYREF\n  __int64 v34; // [rsp+68h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+70h] [rbp-A0h] BYREF\n\n  v27 = 0LL;\n  v28 = 0LL;\n  v21 = 0;\n  v29 = 0LL;\n  v30 = 0LL;\n  filename = 0LL;\n  sub_40A1EC(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_40CBE0(sub_402D12);\n  while ( 1 )\n  {\n    v25 = getopt_long(a1, a2, \"d:f:I::r:Rs:u\", &longopts, 0LL);\n    if ( v25 == -1 )\n    {\n      v26 = (v30 != 0LL) + (v27 != 0LL) + (filename != 0LL);\n      if ( v26 > 1 )\n      {\n        v6 = gettext(\"the options to specify dates for printing are mutually exclusive\");\n        error(0, 0, v6);\n        sub_401B80(1);\n      }\n      if ( v21 && v26 )\n      {\n        v7 = gettext(\"the options to print and set the time may not be used together\");\n        error(0, 0, v7);\n        sub_401B80(1);\n      }\n      if ( optind < a1 )\n      {\n        if ( optind + 1 < a1 )\n        {\n          v8 = sub_40A2F7(a2[optind + 1]);\n          v9 = gettext(\"extra operand %s\");\n          error(0, 0, v9, v8);\n          sub_401B80(1);\n        }\n        if ( *a2[optind] == 43 )\n        {\n          if ( v29 )\n          {\n            v10 = gettext(\"multiple output formats specified\");\n            error(1, 0, v10);\n          }\n          v11 = optind++;\n          v29 = a2[v11] + 1;\n        }\n        else if ( v21 || v26 )\n        {\n          v12 = sub_40A2F7(a2[optind]);\n          v13 = gettext(\n                  \"the argument %s lacks a leading `+';\\n\"\n                  \"when using an option to specify date(s), any non-option\\n\"\n                  \"argument must be a format string beginning with `+'\");\n          error(0, 0, v13, v12);\n          sub_401B80(1);\n        }\n      }\n      if ( !v29 )\n      {\n        v29 = nl_langinfo(131180);\n        if ( !*v29 )\n          v29 = \"%a %b %e %H:%M:%S %Z %Y\";\n      }\n      if ( v30 )\n      {\n        v22 = sub_401E15(v30, (__int64)v29);\n      }\n      else\n      {\n        v24 = 1;\n        v23 = 1;\n        if ( v26 || v21 == 1 )\n        {\n          if ( filename )\n          {\n            if ( (unsigned int)sub_40CC00(filename, &stat_buf) )\n            {\n              v14 = __errno_location();\n              error(1, *v14, \"%s\", filename);\n            }\n            v33 = sub_401B6A((__int64)&stat_buf);\n            v34 = v15;\n          }\n          else\n          {\n            if ( v28 )\n              v27 = (char *)v28;\n            v24 = sub_408BFC(&v33, v27, 0LL);\n          }\n        }\n        else if ( optind >= a1 )\n        {\n          sub_405AC6(&v33);\n        }\n        else\n        {\n          v21 = 1;\n          v27 = a2[optind];\n          v24 = sub_409FCC(&v33, v27, 14LL);\n          v34 = 0LL;\n        }\n        if ( v24 != 1 )\n        {\n          v16 = sub_40A2F7(v27);\n          v17 = gettext(\"invalid date %s\");\n          error(1, 0, v17, v16);\n        }\n        if ( v21 )\n        {\n          if ( (unsigned int)sub_40BA8F(&v33) )\n          {\n            v18 = gettext(\"cannot set date\");\n            v19 = __errno_location();\n            error(0, *v19, v18);\n            v23 = 0;\n          }\n        }\n        v22 = (unsigned __int8)(v23 & sub_4027CC(v29, v33, v34)) != 0;\n      }\n      exit(!v22);\n    }\n    v32 = 0LL;\n    if ( v25 == 100 )\n    {\n      v27 = (char *)optarg;\n    }\n    else if ( v25 > 100 )\n    {\n      if ( v25 == 115 )\n      {\n        v28 = optarg;\n        v21 = 1;\n      }\n      else if ( v25 > 115 )\n      {\n        if ( v25 == 117 )\n        {\n          v4 = (char *)sub_401B5C((__int64)\"TZ=UTC0\");\n          if ( putenv(v4) )\n            sub_40C62D();\n        }\n        else\n        {\n          if ( v25 != 128 )\n            goto LABEL_34;\n          v32 = (const char *)(32LL\n                             * (unsigned int)dword_40CDF0[sub_402BD6(\n                                                            \"--rfc-3339\",\n                                                            optarg,\n                                                            off_40CDD0,\n                                                            &unk_40CDF8,\n                                                            4LL,\n                                                            off_611248)\n                                                        + 2]\n                             + 4252256);\n        }\n      }\n      else if ( v25 == 102 )\n      {\n        v30 = (const char *)optarg;\n      }\n      else\n      {\n        if ( v25 != 114 )\n          goto LABEL_34;\n        filename = (char *)optarg;\n      }\n    }\n    else\n    {\n      if ( v25 == -130 )\n        sub_401B80(0);\n      if ( v25 <= -130 )\n      {\n        if ( v25 == -131 )\n        {\n          sub_40C243(\n            (_DWORD)stdout,\n            (unsigned int)\"date\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_611240,\n            (unsigned int)\"David MacKenzie\",\n            0,\n            (char)a2);\n          exit(0);\n        }\nLABEL_34:\n        sub_401B80(1);\n      }\n      if ( v25 == 73 )\n      {\n        if ( optarg )\n          v3 = dword_40CDF0[sub_402BD6(\"--iso-8601\", optarg, off_40CDC0, dword_40CDF0, 4LL, off_611248)];\n        else\n          v3 = 0;\n        v32 = (const char *)(32LL * v3 + 4252352);\n      }\n      else\n      {\n        if ( v25 != 82 )\n          goto LABEL_34;\n        v32 = \"%a, %d %b %Y %H:%M:%S %z\";\n      }\n    }\n    if ( v32 )\n    {\n      if ( v29 )\n      {\n        v5 = gettext(\"multiple output formats specified\");\n        error(1, 0, v5);\n      }\n      v29 = (char *)v32;\n    }\n  }\n}\n"], [4204492, "sub_4027CC", "__int64 __fastcall sub_4027CC(char *a1, time_t a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  __int64 result; // rax\n  time_t timer; // [rsp+0h] [rbp-60h] BYREF\n  __int64 v7; // [rsp+8h] [rbp-58h]\n  char *v8; // [rsp+18h] [rbp-48h]\n  struct tm *v9; // [rsp+28h] [rbp-38h]\n  char v10[24]; // [rsp+30h] [rbp-30h] BYREF\n  unsigned __int64 v11; // [rsp+48h] [rbp-18h]\n\n  v8 = a1;\n  timer = a2;\n  v7 = a3;\n  v11 = __readfsqword(0x28u);\n  v9 = localtime(&timer);\n  if ( v9 )\n  {\n    if ( v8 == \"%a, %d %b %Y %H:%M:%S %z\" )\n      setlocale(2, \"C\");\n    sub_405A84(stdout, v8, v9, 0LL, (unsigned int)v7);\n    fputc_unlocked(10, stdout);\n    if ( v8 == \"%a, %d %b %Y %H:%M:%S %z\" )\n      setlocale(2, locale);\n    result = 1LL;\n  }\n  else\n  {\n    v3 = sub_401B37(timer, (__int64)v10);\n    v4 = gettext(\"time %s is out of range\");\n    error(0, 0, v4, v3);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4204764, "sub_4028DC", "void __noreturn sub_4028DC()\n{\n  sub_401B80(1);\n}\n"], [4204780, "sub_4028EC", "__int64 __fastcall sub_4028EC(const char *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 result; // rax\n  char v7; // [rsp+27h] [rbp-19h]\n  __int64 i; // [rsp+28h] [rbp-18h]\n  __int64 v9; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v7 = 0;\n  n = strlen(a1);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !strncmp(*(const char **)(8 * i + a2), a1, n) )\n    {\n      if ( strlen(*(const char **)(8 * i + a2)) == n )\n        return i;\n      if ( v9 == -1 )\n      {\n        v9 = i;\n      }\n      else if ( !a3 || memcmp((const void *)(a4 * v9 + a3), (const void *)(i * a4 + a3), a4) )\n      {\n        v7 = 1;\n      }\n    }\n  }\n  if ( v7 )\n    result = -2LL;\n  else\n    result = v9;\n  return result;\n}\n"], [4205083, "sub_402A1B", "void __fastcall sub_402A1B(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  __int64 v5; // rax\n  char *format; // [rsp+28h] [rbp-18h]\n\n  if ( a3 == -1 )\n    v3 = gettext(\"invalid argument %s for %s\");\n  else\n    v3 = gettext(\"ambiguous argument %s for %s\");\n  format = v3;\n  v4 = sub_40A2D3(1LL, a1);\n  v5 = sub_40B782(0LL, 6LL, a2);\n  error(0, 0, format, v5, v4);\n}\n"], [4205222, "sub_402AA6", "int __fastcall sub_402AA6(__int64 a1, __int64 a2, size_t a3)\n{\n  char *v3; // rax\n  __int64 i; // [rsp+20h] [rbp-10h]\n  void *s1; // [rsp+28h] [rbp-8h]\n\n  s1 = 0LL;\n  v3 = gettext(\"Valid arguments are:\");\n  fprintf(stderr, v3);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a1); ++i )\n  {\n    if ( i && !memcmp(s1, (const void *)(i * a3 + a2), a3) )\n    {\n      fprintf(stderr, \", `%s'\", *(const char **)(8 * i + a1));\n    }\n    else\n    {\n      fprintf(stderr, \"\\n  - `%s'\", *(const char **)(8 * i + a1));\n      s1 = (void *)(i * a3 + a2);\n    }\n  }\n  return putc_unlocked(10, stderr);\n}\n"], [4205526, "sub_402BD6", "__int64 __fastcall sub_402BD6(__int64 a1, const char *a2, __int64 a3, __int64 a4, size_t a5, void (*a6)(void))\n{\n  __int64 v11; // [rsp+38h] [rbp-8h]\n\n  v11 = sub_4028EC(a2, a3, a4, a5);\n  if ( v11 >= 0 )\n    return v11;\n  sub_402A1B(a1, (__int64)a2, v11);\n  sub_402AA6(a3, a4, a5);\n  a6();\n  return -1LL;\n}\n"], [4205660, "sub_402C5C", "__int64 __fastcall sub_402C5C(const void *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 i; // [rsp+28h] [rbp-8h]\n\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !memcmp(a1, (const void *)(i * a4 + a3), a4) )\n      return *(_QWORD *)(8 * i + a2);\n  }\n  return 0LL;\n}\n"], [4205800, "sub_402CE8", "__int64 __fastcall sub_402CE8(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_611300 = a1;\n  return result;\n}\n"], [4205821, "sub_402CFD", "__int64 __fastcall sub_402CFD(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_611308 = a1;\n  return result;\n}\n"], [4205842, "sub_402D12", "__int64 sub_402D12()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40CAD5(stdout) && (byte_611308 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_611300 )\n    {\n      v0 = (const char *)sub_40B910(qword_611300);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40CAD5(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4206077, "sub_402DFD", "_BYTE *__fastcall sub_402DFD(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4206182, "sub_402E66", "size_t __fastcall sub_402E66(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4206260, "sub_402EB4", "__int64 __fastcall sub_402EB4(FILE *a1, unsigned __int8 *a2, __int64 a3)\n{\n  int v3; // eax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = a3--;\n    if ( !result )\n      break;\n    v3 = tolower(*a2);\n    fputc(v3, a1);\n    ++a2;\n  }\n  return result;\n}\n"], [4206337, "sub_402F01", "__int64 __fastcall sub_402F01(FILE *a1, unsigned __int8 *a2, __int64 a3)\n{\n  int v3; // eax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = a3--;\n    if ( !result )\n      break;\n    v3 = toupper(*a2);\n    fputc(v3, a1);\n    ++a2;\n  }\n  return result;\n}\n"], [4206414, "sub_402F4E", "__int64 __fastcall sub_402F4E(int a1, int a2)\n{\n  return (unsigned int)(a1 - (a1 - a2 + 382) % 7 + 3);\n}\n"], [4206495, "sub_402F9F", "__int64 __fastcall sub_402F9F(unsigned __int8 a1, FILE *a2, char *a3, const struct tm *a4, unsigned int a5, unsigned int a6)\n{\n  __int64 result; // rax\n  int v7; // eax\n  int v8; // eax\n  char *v9; // rax\n  unsigned __int64 v10; // rax\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  _BOOL4 v13; // eax\n  char v14; // al\n  unsigned __int64 v15; // rax\n  int v16; // eax\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // rax\n  unsigned __int8 v22; // al\n  unsigned __int64 v23; // rax\n  int v24; // eax\n  _BOOL4 v25; // eax\n  _BOOL4 v26; // eax\n  int v27; // eax\n  int v28; // eax\n  int v29; // eax\n  unsigned __int64 v30; // rax\n  unsigned __int64 v31; // rax\n  bool v35; // [rsp+3Ah] [rbp-7D6h]\n  char v36; // [rsp+3Bh] [rbp-7D5h]\n  char v37; // [rsp+3Ch] [rbp-7D4h]\n  unsigned __int8 v38; // [rsp+3Dh] [rbp-7D3h]\n  char v39; // [rsp+3Eh] [rbp-7D2h]\n  char v40; // [rsp+3Fh] [rbp-7D1h]\n  int v41; // [rsp+40h] [rbp-7D0h]\n  int v42; // [rsp+44h] [rbp-7CCh]\n  int v43; // [rsp+48h] [rbp-7C8h]\n  int v44; // [rsp+4Ch] [rbp-7C4h]\n  int v45; // [rsp+50h] [rbp-7C0h]\n  unsigned int v46; // [rsp+54h] [rbp-7BCh]\n  int v47; // [rsp+58h] [rbp-7B8h]\n  int v48; // [rsp+5Ch] [rbp-7B4h]\n  int v49; // [rsp+60h] [rbp-7B0h]\n  int ll; // [rsp+64h] [rbp-7ACh]\n  int v51; // [rsp+68h] [rbp-7A8h]\n  int v52; // [rsp+6Ch] [rbp-7A4h]\n  int v53; // [rsp+70h] [rbp-7A0h]\n  int ii; // [rsp+74h] [rbp-79Ch]\n  int v55; // [rsp+78h] [rbp-798h]\n  int v56; // [rsp+7Ch] [rbp-794h]\n  int v57; // [rsp+80h] [rbp-790h]\n  int v58; // [rsp+84h] [rbp-78Ch]\n  int v59; // [rsp+88h] [rbp-788h]\n  int v60; // [rsp+8Ch] [rbp-784h]\n  int v61; // [rsp+90h] [rbp-780h]\n  int v62; // [rsp+94h] [rbp-77Ch]\n  int v63; // [rsp+98h] [rbp-778h]\n  int v64; // [rsp+9Ch] [rbp-774h]\n  char *v65; // [rsp+A0h] [rbp-770h]\n  __int64 v66; // [rsp+A8h] [rbp-768h]\n  const char *v68; // [rsp+B8h] [rbp-758h]\n  unsigned __int8 *ptr; // [rsp+C0h] [rbp-750h]\n  __int64 i5; // [rsp+C8h] [rbp-748h]\n  unsigned __int64 i1; // [rsp+E0h] [rbp-730h]\n  unsigned __int64 i2; // [rsp+E8h] [rbp-728h]\n  unsigned __int64 mm; // [rsp+F0h] [rbp-720h]\n  unsigned __int64 nn; // [rsp+F8h] [rbp-718h]\n  char *v75; // [rsp+100h] [rbp-710h]\n  unsigned __int64 i3; // [rsp+108h] [rbp-708h]\n  unsigned __int64 i4; // [rsp+110h] [rbp-700h]\n  unsigned __int64 i6; // [rsp+120h] [rbp-6F0h]\n  unsigned __int64 i14; // [rsp+128h] [rbp-6E8h]\n  unsigned __int64 i15; // [rsp+138h] [rbp-6D8h]\n  unsigned __int64 i11; // [rsp+140h] [rbp-6D0h]\n  unsigned __int64 i12; // [rsp+148h] [rbp-6C8h]\n  unsigned __int64 i13; // [rsp+150h] [rbp-6C0h]\n  unsigned __int64 i9; // [rsp+158h] [rbp-6B8h]\n  unsigned __int64 i10; // [rsp+160h] [rbp-6B0h]\n  unsigned __int64 i7; // [rsp+168h] [rbp-6A8h]\n  unsigned __int64 i8; // [rsp+170h] [rbp-6A0h]\n  unsigned __int64 k; // [rsp+178h] [rbp-698h]\n  unsigned __int64 l; // [rsp+180h] [rbp-690h]\n  time_t v90; // [rsp+188h] [rbp-688h]\n  unsigned __int64 i; // [rsp+190h] [rbp-680h]\n  unsigned __int64 j; // [rsp+198h] [rbp-678h]\n  unsigned __int64 m; // [rsp+1A0h] [rbp-670h]\n  unsigned __int64 n; // [rsp+1A8h] [rbp-668h]\n  unsigned __int64 jj; // [rsp+1B0h] [rbp-660h]\n  unsigned __int64 kk; // [rsp+1B8h] [rbp-658h]\n  unsigned __int64 v97; // [rsp+1F8h] [rbp-618h]\n  unsigned __int64 v98; // [rsp+200h] [rbp-610h]\n  unsigned __int64 v99; // [rsp+208h] [rbp-608h]\n  unsigned __int64 v100; // [rsp+218h] [rbp-5F8h]\n  unsigned __int64 v101; // [rsp+220h] [rbp-5F0h]\n  unsigned __int64 v102; // [rsp+228h] [rbp-5E8h]\n  unsigned __int64 v103; // [rsp+238h] [rbp-5D8h]\n  unsigned __int64 v104; // [rsp+240h] [rbp-5D0h]\n  unsigned __int64 v105; // [rsp+248h] [rbp-5C8h]\n  unsigned __int64 v106; // [rsp+250h] [rbp-5C0h]\n  unsigned __int64 v107; // [rsp+260h] [rbp-5B0h]\n  unsigned __int64 v108; // [rsp+268h] [rbp-5A8h]\n  unsigned __int64 v109; // [rsp+270h] [rbp-5A0h]\n  unsigned __int64 v110; // [rsp+278h] [rbp-598h]\n  unsigned __int64 v111; // [rsp+280h] [rbp-590h]\n  unsigned __int64 v112; // [rsp+288h] [rbp-588h]\n  unsigned __int64 v113; // [rsp+290h] [rbp-580h]\n  unsigned __int64 v114; // [rsp+2A8h] [rbp-568h]\n  unsigned __int64 v115; // [rsp+2B0h] [rbp-560h]\n  unsigned __int64 v116; // [rsp+2C8h] [rbp-548h]\n  unsigned __int64 v117; // [rsp+2D0h] [rbp-540h]\n  unsigned __int64 v118; // [rsp+2E8h] [rbp-528h]\n  unsigned __int64 v119; // [rsp+2F0h] [rbp-520h]\n  unsigned __int64 v120; // [rsp+2F8h] [rbp-518h]\n  unsigned __int64 v121; // [rsp+308h] [rbp-508h]\n  unsigned __int64 v122; // [rsp+310h] [rbp-500h]\n  unsigned __int64 v123; // [rsp+318h] [rbp-4F8h]\n  _BYTE *v124; // [rsp+320h] [rbp-4F0h]\n  unsigned __int64 v125; // [rsp+328h] [rbp-4E8h]\n  unsigned __int64 v126; // [rsp+330h] [rbp-4E0h]\n  unsigned __int64 v127; // [rsp+338h] [rbp-4D8h]\n  size_t v128; // [rsp+348h] [rbp-4C8h]\n  unsigned __int64 size; // [rsp+350h] [rbp-4C0h]\n  unsigned __int64 v130; // [rsp+358h] [rbp-4B8h]\n  unsigned __int64 v131; // [rsp+360h] [rbp-4B0h]\n  unsigned __int64 v132; // [rsp+368h] [rbp-4A8h]\n  unsigned __int64 v133; // [rsp+380h] [rbp-490h]\n  unsigned __int64 v134; // [rsp+388h] [rbp-488h]\n  unsigned __int64 v135; // [rsp+390h] [rbp-480h]\n  struct tm v136; // [rsp+3A0h] [rbp-470h] BYREF\n  char format[2]; // [rsp+3E0h] [rbp-430h] BYREF\n  char v138; // [rsp+3E2h] [rbp-42Eh] BYREF\n  _BYTE v139[5]; // [rsp+3E3h] [rbp-42Dh] BYREF\n  char s; // [rsp+3F0h] [rbp-420h] BYREF\n  unsigned __int8 v141[22]; // [rsp+3F1h] [rbp-41Fh] BYREF\n  _BYTE v142[1033]; // [rsp+407h] [rbp-409h] BYREF\n  __int64 savedregs; // [rsp+810h] [rbp+0h] BYREF\n\n  *(_QWORD *)&v142[1009] = __readfsqword(0x28u);\n  v41 = a4->tm_hour;\n  v66 = 0LL;\n  v65 = (char *)a4->tm_zone;\n  if ( v41 <= 12 )\n  {\n    if ( !v41 )\n      v41 = 12;\n  }\n  else\n  {\n    v41 -= 12;\n  }\n  while ( 2 )\n  {\n    if ( !*a3 )\n      return v66;\n    v42 = 0;\n    v44 = 0;\n    v48 = -1;\n    v37 = 0;\n    v38 = a1;\n    v39 = 0;\n    if ( *a3 != 37 )\n    {\n      if ( (unsigned __int64)(-1 - v66) <= 1 )\n        return 0LL;\n      if ( a2 )\n        fputc(*a3, a2);\n      ++v66;\n      goto LABEL_521;\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v7 = *++a3;\n        if ( v7 == 48 )\n          goto LABEL_19;\n        if ( v7 > 48 )\n          break;\n        if ( v7 == 35 )\n        {\n          v39 = 1;\n        }\n        else\n        {\n          if ( v7 != 45 )\n            goto LABEL_22;\nLABEL_19:\n          v42 = *a3;\n        }\n      }\n      if ( v7 != 94 )\n        break;\n      v38 = 1;\n    }\n    if ( v7 == 95 )\n      goto LABEL_19;\nLABEL_22:\n    if ( (unsigned int)(*a3 - 48) <= 9 )\n    {\n      v48 = 0;\n      do\n      {\n        if ( v48 > 214748364 || v48 == 214748364 && *a3 - 48 > 7 )\n          v48 = 0x7FFFFFFF;\n        else\n          v48 = *a3 - 48 + 10 * v48;\n        ++a3;\n      }\n      while ( (unsigned int)(*a3 - 48) <= 9 );\n    }\n    v8 = *a3;\n    if ( v8 == 69 || v8 == 79 )\n    {\n      v9 = a3++;\n      v43 = *v9;\n    }\n    else\n    {\n      v43 = 0;\n    }\n    v49 = *a3;\n    if ( v49 == 89 )\n    {\n      if ( v43 == 69 )\n        goto LABEL_160;\n      if ( v43 == 79 )\n        goto LABEL_498;\n      v44 = 4;\n      v35 = a4->tm_year < -1900;\n      v46 = a4->tm_year + 1900;\n      goto LABEL_207;\n    }\n    if ( v49 > 89 )\n    {\n      if ( v49 == 108 )\n      {\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = v41;\n      }\n      else\n      {\n        if ( v49 > 108 )\n        {\n          if ( v49 == 116 )\n          {\n            LODWORD(v23) = 0;\n            if ( v48 >= 0 )\n              LODWORD(v23) = v48;\n            v107 = (int)v23;\n            v23 = (int)v23;\n            if ( (unsigned __int64)(int)v23 <= 1 )\n              v23 = 1LL;\n            v108 = v23;\n            if ( -1 - v66 > v23 )\n            {\n              if ( a2 )\n              {\n                if ( v107 > 1 )\n                {\n                  v109 = v48 - 1LL;\n                  if ( v42 == 48 )\n                  {\n                    for ( i = 0LL; i < v109; ++i )\n                      fputc(48, a2);\n                  }\n                  else\n                  {\n                    for ( j = 0LL; j < v109; ++j )\n                      fputc(32, a2);\n                  }\n                }\n                fputc(9, a2);\n              }\n              v66 += v108;\n              goto LABEL_521;\n            }\n            return 0LL;\n          }\n          if ( v49 > 116 )\n          {\n            if ( v49 == 120 )\n            {\n              if ( v43 == 79 )\n                goto LABEL_498;\n              goto LABEL_160;\n            }\n            if ( v49 > 120 )\n            {\n              if ( v49 != 121 )\n              {\n                if ( v49 != 122 )\n                  goto LABEL_498;\n                i5 = 0LL;\n                goto LABEL_485;\n              }\n              if ( v43 == 69 )\n                goto LABEL_160;\n              v53 = a4->tm_year % 100;\n              if ( v53 < 0 )\n              {\n                if ( a4->tm_year >= -1900 )\n                  v29 = v53 + 100;\n                else\n                  v29 = -v53;\n                v53 = v29;\n              }\n              v44 = 2;\n              v45 = v53;\n            }\n            else if ( v49 == 117 )\n            {\n              v44 = 1;\n              v45 = (a4->tm_wday + 6) % 7 + 1;\n            }\n            else\n            {\n              if ( v49 != 119 || v43 == 69 )\n                goto LABEL_498;\n              v44 = 1;\n              v45 = a4->tm_wday;\n            }\n            goto LABEL_206;\n          }\n          if ( v49 != 112 )\n          {\n            if ( v49 > 112 )\n            {\n              if ( v49 == 114 )\n                goto LABEL_160;\n              if ( v49 != 115 )\n                goto LABEL_498;\n              v136 = *a4;\n              v90 = mktime(&v136);\n              ptr = v142;\n              v35 = v90 < 0;\n              do\n              {\n                v56 = (int)v90 % 10;\n                v90 /= 10LL;\n                --ptr;\n                if ( v35 )\n                  v22 = 48 - v56;\n                else\n                  v22 = v56 + 48;\n                *ptr = v22;\n              }\n              while ( v90 );\n              v44 = 1;\n              v36 = 0;\n              goto LABEL_216;\n            }\n            if ( v49 != 109 )\n            {\n              if ( v49 != 110 )\n                goto LABEL_498;\n              LODWORD(v21) = 0;\n              if ( v48 >= 0 )\n                LODWORD(v21) = v48;\n              v100 = (int)v21;\n              v21 = (int)v21;\n              if ( (unsigned __int64)(int)v21 <= 1 )\n                v21 = 1LL;\n              v101 = v21;\n              if ( -1 - v66 > v21 )\n              {\n                if ( a2 )\n                {\n                  if ( v100 > 1 )\n                  {\n                    v102 = v48 - 1LL;\n                    if ( v42 == 48 )\n                    {\n                      for ( k = 0LL; k < v102; ++k )\n                        fputc(48, a2);\n                    }\n                    else\n                    {\n                      for ( l = 0LL; l < v102; ++l )\n                        fputc(32, a2);\n                    }\n                  }\n                  fputc(10, a2);\n                }\n                v66 += v101;\n                goto LABEL_521;\n              }\n              return 0LL;\n            }\n            if ( v43 == 69 )\n              goto LABEL_498;\n            v44 = 2;\n            v35 = a4->tm_mon < -1;\n            v46 = a4->tm_mon + 1;\n            goto LABEL_207;\n          }\n          goto LABEL_375;\n        }\n        if ( v49 == 100 )\n        {\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_mday;\n          goto LABEL_206;\n        }\n        if ( v49 <= 100 )\n        {\n          if ( v49 == 97 )\n          {\n            if ( v43 )\n              goto LABEL_498;\n            if ( v39 )\n            {\n              v38 = 1;\n              v37 = 0;\n            }\n            goto LABEL_160;\n          }\n          if ( v49 <= 97 )\n          {\n            if ( v49 != 90 )\n              goto LABEL_498;\n            if ( v39 )\n            {\n              v38 = 0;\n              v37 = 1;\n            }\n            if ( !v65 )\n              v65 = (char *)&unk_40E3FA;\n            v110 = strlen(v65);\n            LODWORD(v30) = 0;\n            if ( v48 >= 0 )\n              LODWORD(v30) = v48;\n            v111 = (int)v30;\n            v30 = (int)v30;\n            if ( v110 >= (int)v30 )\n              v30 = v110;\n            v112 = v30;\n            if ( -1 - v66 > v30 )\n            {\n              if ( a2 )\n              {\n                if ( v110 < v111 )\n                {\n                  v113 = v48 - v110;\n                  if ( v42 == 48 )\n                  {\n                    for ( m = 0LL; m < v113; ++m )\n                      fputc(48, a2);\n                  }\n                  else\n                  {\n                    for ( n = 0LL; n < v113; ++n )\n                      fputc(32, a2);\n                  }\n                }\n                if ( v37 )\n                {\n                  sub_402EB4(a2, (unsigned __int8 *)v65, v110);\n                }\n                else if ( v38 )\n                {\n                  sub_402F01(a2, (unsigned __int8 *)v65, v110);\n                }\n                else\n                {\n                  fwrite(v65, v110, 1uLL, a2);\n                }\n              }\n              v66 += v112;\n              goto LABEL_521;\n            }\n            return 0LL;\n          }\n          if ( v49 != 98 )\n          {\n            if ( v43 == 79 )\n              goto LABEL_498;\n            goto LABEL_160;\n          }\nLABEL_132:\n          if ( v39 )\n          {\n            v38 = 1;\n            v37 = 0;\n          }\n          if ( !v43 )\n            goto LABEL_160;\nLABEL_498:\n          for ( ii = 1; a3[1 - ii] != 37; ++ii )\n            ;\n          LODWORD(v31) = 0;\n          if ( v48 >= 0 )\n            LODWORD(v31) = v48;\n          v133 = (int)v31;\n          v31 = (int)v31;\n          if ( ii >= (unsigned __int64)(int)v31 )\n            v31 = ii;\n          v134 = v31;\n          if ( -1 - v66 > v31 )\n          {\n            if ( a2 )\n            {\n              if ( ii < v133 )\n              {\n                v135 = v48 - (__int64)ii;\n                if ( v42 == 48 )\n                {\n                  for ( jj = 0LL; jj < v135; ++jj )\n                    fputc(48, a2);\n                }\n                else\n                {\n                  for ( kk = 0LL; kk < v135; ++kk )\n                    fputc(32, a2);\n                }\n              }\n              if ( v38 )\n                sub_402F01(a2, (unsigned __int8 *)&a3[1 - ii], ii);\n              else\n                fwrite(&a3[1 - ii], ii, 1uLL, a2);\n            }\n            v66 += v134;\n            goto LABEL_521;\n          }\n          return 0LL;\n        }\n        if ( v49 == 104 )\n          goto LABEL_132;\n        if ( v49 > 104 )\n        {\n          if ( v49 == 106 )\n          {\n            if ( v43 == 69 )\n              goto LABEL_498;\n            v44 = 3;\n            v35 = a4->tm_yday < -1;\n            v46 = a4->tm_yday + 1;\n            goto LABEL_207;\n          }\n          if ( v49 != 107 || v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_hour;\n        }\n        else\n        {\n          if ( v49 != 101 )\n          {\n            if ( v49 != 103 )\n              goto LABEL_498;\n            goto LABEL_411;\n          }\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_mday;\n        }\n      }\n      if ( v42 != 48 && v42 != 45 )\n        v42 = 95;\n      goto LABEL_206;\n    }\n    if ( v49 == 73 )\n    {\n      if ( v43 == 69 )\n        goto LABEL_498;\n      v44 = 2;\n      v45 = v41;\n      goto LABEL_206;\n    }\n    if ( v49 > 73 )\n    {\n      if ( v49 == 83 )\n      {\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = a4->tm_sec;\n      }\n      else if ( v49 > 83 )\n      {\n        if ( v49 == 86 )\n          goto LABEL_411;\n        if ( v49 > 86 )\n        {\n          if ( v49 != 87 )\n          {\n            if ( v43 == 79 )\n              goto LABEL_498;\n            goto LABEL_160;\n          }\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = (a4->tm_yday - (a4->tm_wday + 6) % 7 + 7) / 7;\n          goto LABEL_206;\n        }\n        if ( v49 == 84 )\n        {\n          v68 = \"%H:%M:%S\";\n          v11 = sub_402F9F(v38, 0LL, \"%H:%M:%S\", a4, a5, a6);\n          goto LABEL_142;\n        }\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = (a4->tm_yday - a4->tm_wday + 7) / 7;\n      }\n      else\n      {\n        if ( v49 != 78 )\n        {\n          if ( v49 <= 78 )\n          {\n            if ( v49 != 77 || v43 == 69 )\n              goto LABEL_498;\n            v44 = 2;\n            v45 = a4->tm_min;\n            goto LABEL_206;\n          }\n          if ( v49 != 80 )\n          {\n            if ( v49 != 82 )\n              goto LABEL_498;\n            v68 = \"%H:%M\";\n            v11 = sub_402F9F(v38, 0LL, \"%H:%M\", a4, a5, a6);\n            goto LABEL_142;\n          }\n          v37 = 1;\n          LOBYTE(v49) = 112;\nLABEL_375:\n          if ( v39 )\n          {\n            v38 = 0;\n            v37 = 1;\n          }\n          goto LABEL_160;\n        }\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v45 = a6;\n        if ( v48 == -1 )\n        {\n          v48 = 9;\n        }\n        else\n        {\n          for ( ll = v48; ll <= 8; ++ll )\n            v45 /= 10;\n        }\n        v44 = v48;\n      }\nLABEL_206:\n      v35 = v45 < 0;\n      v46 = v45;\n      goto LABEL_207;\n    }\n    if ( v49 == 66 )\n    {\n      if ( v43 )\n        goto LABEL_498;\n      if ( v39 )\n      {\n        v38 = 1;\n        v37 = 0;\n      }\n      goto LABEL_160;\n    }\n    if ( v49 > 66 )\n    {\n      if ( v49 != 70 )\n      {\n        if ( v49 <= 70 )\n        {\n          if ( v49 != 67 )\n          {\n            if ( v49 != 68 || v43 )\n              goto LABEL_498;\n            v68 = \"%m/%d/%y\";\n            v11 = sub_402F9F(v38, 0LL, \"%m/%d/%y\", a4, a5, a6);\n            goto LABEL_142;\n          }\n          if ( v43 == 79 )\n            goto LABEL_498;\n          if ( v43 == 69 )\n            goto LABEL_160;\n          v55 = a4->tm_year / 100 + 19;\n          v13 = a4->tm_year % 100 < 0 && v55 > 0;\n          v44 = 2;\n          v35 = a4->tm_year < -1900;\n          v46 = v55 - v13;\nLABEL_207:\n          v36 = 0;\n          v47 = 0;\n          goto LABEL_208;\n        }\n        if ( v49 != 71 )\n        {\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_hour;\n          goto LABEL_206;\n        }\nLABEL_411:\n        if ( v43 == 69 )\n          goto LABEL_498;\n        if ( a4->tm_year >= 0 )\n          v24 = -100;\n        else\n          v24 = 300;\n        v57 = a4->tm_year + v24;\n        v51 = 0;\n        v52 = sub_402F4E(a4->tm_yday, a4->tm_wday);\n        if ( v52 >= 0 )\n        {\n          v26 = (v57 & 3) == 0 && (v57 % 100 || !(v57 % 400));\n          v58 = sub_402F4E(a4->tm_yday + -365 - v26, a4->tm_wday);\n          if ( v58 >= 0 )\n          {\n            v51 = 1;\n            v52 = v58;\n          }\n        }\n        else\n        {\n          v51 = -1;\n          v25 = (((_BYTE)v57 - 1) & 3) == 0 && ((v57 - 1) % 100 || !((v57 - 1) % 400));\n          v52 = sub_402F4E(a4->tm_yday + v25 + 365, a4->tm_wday);\n        }\n        v27 = *a3;\n        if ( v27 == 71 )\n        {\n          v44 = 4;\n          v35 = a4->tm_year < -1900 - v51;\n          v46 = a4->tm_year + v51 + 1900;\n          goto LABEL_207;\n        }\n        if ( v27 == 103 )\n        {\n          v59 = (a4->tm_year % 100 + v51) % 100;\n          v44 = 2;\n          if ( v59 >= 0 )\n          {\n            v28 = (a4->tm_year % 100 + v51) % 100;\n          }\n          else if ( a4->tm_year >= -1900 - v51 )\n          {\n            v28 = v59 + 100;\n          }\n          else\n          {\n            v28 = -v59;\n          }\n          v45 = v28;\n        }\n        else\n        {\n          v44 = 2;\n          v45 = v52 / 7 + 1;\n        }\n        goto LABEL_206;\n      }\n      if ( v43 )\n        goto LABEL_498;\n      v68 = \"%Y-%m-%d\";\n      v11 = sub_402F9F(v38, 0LL, \"%Y-%m-%d\", a4, a5, a6);\nLABEL_142:\n      v103 = v11;\n      LODWORD(v11) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v11) = v48;\n      v104 = (int)v11;\n      v11 = (int)v11;\n      if ( v103 >= (int)v11 )\n        v11 = v103;\n      v105 = v11;\n      if ( -1 - v66 <= v11 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v103 < v104 )\n        {\n          v106 = v48 - v103;\n          if ( v42 == 48 )\n          {\n            for ( mm = 0LL; mm < v106; ++mm )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( nn = 0LL; nn < v106; ++nn )\n              fputc(32, a2);\n          }\n        }\n        sub_402F9F(v38, a2, v68, a4, a5, a6);\n      }\n      v66 += v105;\n      goto LABEL_521;\n    }\n    if ( v49 == 37 )\n    {\n      if ( v43 )\n        goto LABEL_498;\n      LODWORD(v10) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v10) = v48;\n      v97 = (int)v10;\n      v10 = (int)v10;\n      if ( (unsigned __int64)(int)v10 <= 1 )\n        v10 = 1LL;\n      v98 = v10;\n      if ( -1 - v66 <= v10 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v97 > 1 )\n        {\n          v99 = v48 - 1LL;\n          if ( v42 == 48 )\n          {\n            for ( i1 = 0LL; i1 < v99; ++i1 )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( i2 = 0LL; i2 < v99; ++i2 )\n              fputc(32, a2);\n          }\n        }\n        fputc(*a3, a2);\n      }\n      v66 += v98;\n      goto LABEL_521;\n    }\n    if ( v49 <= 37 )\n    {\n      if ( !*a3 )\n        --a3;\n      goto LABEL_498;\n    }\n    if ( v49 != 58 )\n    {\n      if ( v49 != 65 || v43 )\n        goto LABEL_498;\n      if ( v39 )\n      {\n        v38 = 1;\n        v37 = 0;\n      }\nLABEL_160:\n      format[0] = 32;\n      v75 = &v138;\n      format[1] = 37;\n      if ( v43 )\n      {\n        v75 = v139;\n        v138 = v43;\n      }\n      *v75 = v49;\n      v75[1] = 0;\n      v128 = strftime(&s, 0x400uLL, format, a4);\n      if ( v128 )\n      {\n        size = v128 - 1;\n        LODWORD(v12) = 0;\n        if ( v48 >= 0 )\n          LODWORD(v12) = v48;\n        v130 = (int)v12;\n        v12 = (int)v12;\n        if ( size >= (int)v12 )\n          v12 = v128 - 1;\n        v131 = v12;\n        if ( -1 - v66 <= v12 )\n          return 0LL;\n        if ( a2 )\n        {\n          if ( !v44 && size < v130 )\n          {\n            v132 = v48 - size;\n            if ( v42 == 48 )\n            {\n              for ( i3 = 0LL; i3 < v132; ++i3 )\n                fputc(48, a2);\n            }\n            else\n            {\n              for ( i4 = 0LL; i4 < v132; ++i4 )\n                fputc(32, a2);\n            }\n          }\n          if ( v37 )\n          {\n            sub_402EB4(a2, v141, size);\n          }\n          else if ( v38 )\n          {\n            sub_402F01(a2, v141, size);\n          }\n          else\n          {\n            fwrite(v141, size, 1uLL, a2);\n          }\n        }\n        v66 += v131;\n      }\nLABEL_521:\n      ++a3;\n      continue;\n    }\n    break;\n  }\n  for ( i5 = 1LL; a3[i5] == 58; ++i5 )\n    ;\n  if ( a3[i5] != 122 )\n    goto LABEL_498;\n  a3 += i5;\nLABEL_485:\n  if ( a4->tm_isdst < 0 )\n    goto LABEL_521;\n  v60 = a4->tm_gmtoff;\n  v61 = v60 / 3600;\n  v62 = v60 / 60 % 60;\n  v63 = v60 % 60;\n  switch ( i5 )\n  {\n    case 1LL:\n      goto LABEL_492;\n    case 0LL:\n      v44 = 5;\n      v35 = v60 < 0;\n      v47 = 0;\n      v46 = 100 * v61 + v62;\n      goto LABEL_202;\n    case 2LL:\n      goto LABEL_493;\n  }\n  if ( i5 != 3 )\n    goto LABEL_498;\n  if ( v63 )\n  {\nLABEL_493:\n    v44 = 9;\n    v35 = v60 < 0;\n    v47 = 20;\n    v46 = 100 * v62 + 10000 * v61 + v63;\n    goto LABEL_202;\n  }\n  if ( v62 )\n  {\nLABEL_492:\n    v44 = 6;\n    v35 = v60 < 0;\n    v47 = 4;\n    v46 = 100 * v61 + v62;\n    goto LABEL_202;\n  }\n  v44 = 3;\n  v35 = v60 < 0;\n  v47 = 0;\n  v46 = v60 / 3600;\nLABEL_202:\n  v36 = 1;\nLABEL_208:\n  if ( v43 == 79 && !v35 )\n    goto LABEL_160;\n  ptr = v142;\n  if ( v35 )\n    v46 = -v46;\n  do\n  {\n    if ( (v47 & 1) != 0 )\n      *--ptr = 58;\n    v47 >>= 1;\n    *--ptr = v46 % 0xA + 48;\n    v46 /= 0xAu;\n  }\n  while ( v46 || v47 );\nLABEL_216:\n  if ( v44 < v48 )\n    v44 = v48;\n  if ( v35 )\n  {\n    v14 = 45;\n  }\n  else if ( v36 )\n  {\n    v14 = 43;\n  }\n  else\n  {\n    v14 = 0;\n  }\n  v40 = v14;\n  if ( v42 == 45 )\n  {\n    if ( v14 )\n    {\n      LODWORD(v15) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v15) = v48;\n      v114 = (int)v15;\n      v15 = (int)v15;\n      if ( (unsigned __int64)(int)v15 <= 1 )\n        v15 = 1LL;\n      v115 = v15;\n      if ( -1 - v66 <= v15 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( !v44 && v114 > 1 )\n        {\n          for ( i6 = 0LL; i6 < v48 - 1LL; ++i6 )\n            fputc(32, a2);\n        }\n        fputc(v40, a2);\n      }\n      v66 += v115;\n    }\nLABEL_312:\n    v124 = (_BYTE *)(v142 - ptr);\n    LODWORD(v20) = 0;\n    if ( v48 >= 0 )\n      LODWORD(v20) = v48;\n    v125 = (int)v20;\n    v20 = (int)v20;\n    if ( (unsigned __int64)v124 >= (int)v20 )\n      v20 = v142 - ptr;\n    v126 = v20;\n    if ( -1 - v66 > v20 )\n    {\n      if ( a2 )\n      {\n        if ( !v44 && (unsigned __int64)v124 < v125 )\n        {\n          v127 = v48 - (_QWORD)v124;\n          if ( v42 == 48 )\n          {\n            for ( i7 = 0LL; i7 < v127; ++i7 )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( i8 = 0LL; i8 < v127; ++i8 )\n              fputc(32, a2);\n          }\n        }\n        if ( v38 )\n          sub_402F01(a2, ptr, (__int64)v124);\n        else\n          fwrite(ptr, (size_t)v124, 1uLL, a2);\n      }\n      v66 += v126;\n      goto LABEL_521;\n    }\n    result = 0LL;\n  }\n  else\n  {\n    v64 = v44 + (_DWORD)ptr - ((unsigned int)&savedregs - 1056 + 23) - (v14 != 0);\n    if ( v64 <= 0 )\n    {\n      if ( !v14 )\n        goto LABEL_312;\n      LODWORD(v19) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v19) = v48;\n      v121 = (int)v19;\n      v19 = (int)v19;\n      if ( (unsigned __int64)(int)v19 <= 1 )\n        v19 = 1LL;\n      v122 = v19;\n      if ( -1 - v66 > v19 )\n      {\n        if ( a2 )\n        {\n          if ( !v44 && v121 > 1 )\n          {\n            v123 = v48 - 1LL;\n            if ( v42 == 48 )\n            {\n              for ( i9 = 0LL; i9 < v123; ++i9 )\n                fputc(48, a2);\n            }\n            else\n            {\n              for ( i10 = 0LL; i10 < v123; ++i10 )\n                fputc(32, a2);\n            }\n          }\n          fputc(v40, a2);\n        }\n        v66 += v122;\n        goto LABEL_312;\n      }\n      result = 0LL;\n    }\n    else\n    {\n      if ( v42 != 95 )\n      {\n        if ( v44 >= (unsigned __int64)(-1 - v66) )\n          return 0LL;\n        if ( v14 )\n        {\n          LODWORD(v18) = 0;\n          if ( v48 >= 0 )\n            LODWORD(v18) = v48;\n          v118 = (int)v18;\n          v18 = (int)v18;\n          if ( (unsigned __int64)(int)v18 <= 1 )\n            v18 = 1LL;\n          v119 = v18;\n          if ( -1 - v66 <= v18 )\n            return 0LL;\n          if ( a2 )\n          {\n            if ( !v44 && v118 > 1 )\n            {\n              v120 = v48 - 1LL;\n              if ( v42 == 48 )\n              {\n                for ( i11 = 0LL; i11 < v120; ++i11 )\n                  fputc(48, a2);\n              }\n              else\n              {\n                for ( i12 = 0LL; i12 < v120; ++i12 )\n                  fputc(32, a2);\n              }\n            }\n            fputc(v40, a2);\n          }\n          v66 += v119;\n        }\n        if ( a2 )\n        {\n          for ( i13 = 0LL; v64 > i13; ++i13 )\n            fputc(48, a2);\n        }\n        v66 += v64;\n        v48 = 0;\n        goto LABEL_312;\n      }\n      if ( v64 < (unsigned __int64)(-1 - v66) )\n      {\n        if ( a2 )\n        {\n          for ( i14 = 0LL; v64 > i14; ++i14 )\n            fputc(32, a2);\n        }\n        v66 += v64;\n        if ( v48 <= v64 )\n          v16 = 0;\n        else\n          v16 = v48 - v64;\n        v48 = v16;\n        if ( !v40 )\n          goto LABEL_312;\n        LODWORD(v17) = 0;\n        if ( v48 >= 0 )\n          LODWORD(v17) = v48;\n        v116 = (int)v17;\n        v17 = (int)v17;\n        if ( (unsigned __int64)(int)v17 <= 1 )\n          v17 = 1LL;\n        v117 = v17;\n        if ( -1 - v66 > v17 )\n        {\n          if ( a2 )\n          {\n            if ( !v44 && v116 > 1 )\n            {\n              for ( i15 = 0LL; i15 < v48 - 1LL; ++i15 )\n                fputc(32, a2);\n            }\n            fputc(v40, a2);\n          }\n          v66 += v117;\n          goto LABEL_312;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n"], [4217476, "sub_405A84", "__int64 __fastcall sub_405A84(FILE *a1, char *a2, const struct tm *a3, unsigned int a4, unsigned int a5)\n{\n  return sub_402F9F(0, a1, a2, a3, a4, a5);\n}\n"], [4217542, "sub_405AC6", "int __fastcall sub_405AC6(struct timespec *a1)\n{\n  int result; // eax\n  struct timeval tv; // [rsp+10h] [rbp-10h] BYREF\n\n  result = clock_gettime(0, a1);\n  if ( result )\n  {\n    gettimeofday(&tv, 0LL);\n    a1->tv_sec = tv.tv_sec;\n    result = (int)a1;\n    a1->tv_nsec = 1000 * tv.tv_usec;\n  }\n  return result;\n}\n"], [4217626, "sub_405B1A", "__int64 __fastcall sub_405B1A(__int64 a1, __int64 a2)\n{\n  __int64 v3; // [rsp+8h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = a1;\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  if ( a1 >= 0 )\n  {\n    do\n    {\n      *(_BYTE *)--v4 = (char)v3 % 10 + 48;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n  }\n  else\n  {\n    do\n    {\n      *(_BYTE *)--v4 = 48 - (char)v3 % 10;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n    *(_BYTE *)--v4 = 45;\n  }\n  return v4;\n}\n"], [4217932, "sub_405C4C", "__int64 __fastcall sub_405C4C(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, unsigned __int64 a9)\n{\n  __int64 result; // rax\n\n  if ( *(_QWORD *)(a1 + 176) && !*(_QWORD *)(a1 + 56) && *(_BYTE *)(a1 + 169) != 1 && (*(_QWORD *)(a1 + 208) || a9 > 2) )\n  {\n    result = a1;\n    *(_QWORD *)(a1 + 40) = a7;\n    *(_QWORD *)(a1 + 48) = a8;\n    *(_QWORD *)(a1 + 56) = a9;\n  }\n  else if ( a9 <= 4 )\n  {\n    ++*(_QWORD *)(a1 + 208);\n    if ( a9 > 2 )\n    {\n      *(_QWORD *)(a1 + 80) = a8 / 100;\n      *(_QWORD *)(a1 + 88) = a8 % 100;\n    }\n    else\n    {\n      *(_QWORD *)(a1 + 80) = a8;\n      *(_QWORD *)(a1 + 88) = 0LL;\n    }\n    *(_QWORD *)(a1 + 96) = 0LL;\n    *(_QWORD *)(a1 + 104) = 0LL;\n    result = a1;\n    *(_DWORD *)(a1 + 32) = 2;\n  }\n  else\n  {\n    ++*(_QWORD *)(a1 + 176);\n    *(_QWORD *)(a1 + 72) = a8 % 100;\n    *(_QWORD *)(a1 + 64) = a8 / 100 % 100;\n    *(_QWORD *)(a1 + 48) = a8 / 10000;\n    result = a1;\n    *(_QWORD *)(a1 + 56) = a9 - 4;\n  }\n  return result;\n}\n"], [4218580, "sub_405ED4", "__int64 __fastcall sub_405ED4(__int64 a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10, __int64 a11, __int64 a12, __int64 a13)\n{\n  __int64 result; // rax\n\n  *(_QWORD *)(a1 + 160) += a2 * a13;\n  *(_QWORD *)(a1 + 152) += a2 * a12;\n  *(_QWORD *)(a1 + 144) += a2 * a11;\n  *(_QWORD *)(a1 + 136) += a2 * a10;\n  *(_QWORD *)(a1 + 128) += a2 * a9;\n  *(_QWORD *)(a1 + 120) += a2 * a8;\n  *(_QWORD *)(a1 + 112) += a2 * a7;\n  result = a1;\n  *(_BYTE *)(a1 + 169) = 1;\n  return result;\n}\n"], [4218865, "sub_405FF1", "_QWORD *__fastcall sub_405FF1(_QWORD *a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  _QWORD *result; // rax\n\n  a1[10] = a2;\n  a1[11] = a3;\n  a1[12] = a4;\n  result = a1;\n  a1[13] = a5;\n  return result;\n}\n"], [4218939, "sub_40603B", "void sub_40603B()\n{\n  ;\n}\n"], [4218976, "sub_406060", "__int64 __fastcall sub_406060(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6)\n{\n  int v6; // eax\n  __int64 *v7; // rax\n  __int64 *v8; // rax\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  __int64 v11; // rbx\n  __int64 *v12; // rdx\n  __int64 *v13; // rdx\n  __int64 *v14; // rdx\n  __int64 *v15; // rdx\n  __int64 *v16; // rdx\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __int64 *v19; // rax\n  unsigned int v20; // eax\n  __int64 *v21; // rax\n  unsigned int v22; // eax\n  int v24; // [rsp+40h] [rbp-590h]\n  int v25; // [rsp+44h] [rbp-58Ch]\n  int v26; // [rsp+48h] [rbp-588h]\n  int v27; // [rsp+48h] [rbp-588h]\n  int v28; // [rsp+4Ch] [rbp-584h]\n  int v29; // [rsp+50h] [rbp-580h]\n  unsigned int v30; // [rsp+54h] [rbp-57Ch]\n  unsigned int v31; // [rsp+58h] [rbp-578h]\n  int v32; // [rsp+5Ch] [rbp-574h]\n  void *src; // [rsp+60h] [rbp-570h]\n  char *v34; // [rsp+68h] [rbp-568h]\n  void *v35; // [rsp+70h] [rbp-560h]\n  __int64 *v36; // [rsp+78h] [rbp-558h]\n  unsigned __int64 v37; // [rsp+80h] [rbp-550h]\n  __int64 v38; // [rsp+88h] [rbp-548h]\n  void *ptr; // [rsp+90h] [rbp-540h]\n  void *dest; // [rsp+98h] [rbp-538h]\n  unsigned __int64 v41; // [rsp+A0h] [rbp-530h]\n  unsigned __int64 v42; // [rsp+A8h] [rbp-528h]\n  char v43[48]; // [rsp+B0h] [rbp-520h] BYREF\n  __int64 v44; // [rsp+E0h] [rbp-4F0h] BYREF\n  __int64 v45; // [rsp+E8h] [rbp-4E8h]\n  __int64 v46; // [rsp+F0h] [rbp-4E0h]\n  __int64 v47; // [rsp+F8h] [rbp-4D8h]\n  __int64 v48; // [rsp+100h] [rbp-4D0h]\n  __int64 v49; // [rsp+108h] [rbp-4C8h]\n  __int64 v50; // [rsp+110h] [rbp-4C0h]\n  __int64 v51[8]; // [rsp+120h] [rbp-4B0h] BYREF\n  char v52[1136]; // [rsp+160h] [rbp-470h] BYREF\n\n  v32 = 0;\n  v31 = 0;\n  src = v43;\n  v35 = v52;\n  v37 = 20LL;\n  v26 = 0;\n  v28 = 0;\n  v25 = 0;\n  v24 = -2;\n  v34 = v43;\n  v36 = (__int64 *)v52;\n  while ( 1 )\n  {\n    *(_WORD *)v34 = v26;\n    if ( (char *)src + 2 * v37 - 2 > v34 )\n      goto LABEL_11;\n    v38 = ((v34 - (_BYTE *)src) >> 1) + 1;\n    if ( v37 > 0x13 )\n      break;\n    v37 *= 2LL;\n    if ( v37 > 0x14 )\n      v37 = 20LL;\n    ptr = src;\n    dest = malloc(58 * v37 + 55);\n    if ( !dest )\n      break;\n    memcpy(dest, src, 2 * v38);\n    src = dest;\n    v41 = 2 * v37 + 55;\n    dest = (char *)dest + 56 * (v41 / 0x38);\n    a2 = (__int64)v35;\n    memcpy(dest, v35, 56 * v38);\n    v35 = dest;\n    v42 = 56 * v37 + 55;\n    dest = (char *)dest + 56 * (v42 / 0x38);\n    if ( ptr != v43 )\n      free(ptr);\n    v34 = (char *)src + 2 * v38 - 2;\n    v36 = (__int64 *)((char *)v35 + 56 * v38 - 56);\n    if ( (char *)src + 2 * v37 - 2 <= v34 )\n    {\nLABEL_224:\n      v30 = 1;\n      goto LABEL_226;\n    }\nLABEL_11:\n    if ( v26 == 12 )\n    {\n      v30 = 0;\n      goto LABEL_226;\n    }\n    v29 = byte_40E520[v26];\n    if ( v29 == -93 )\n      goto LABEL_30;\n    if ( v24 == -2 )\n    {\n      a2 = a1;\n      v24 = sub_40856F(&v44, a1);\n    }\n    if ( v24 > 0 )\n    {\n      v6 = (unsigned int)v24 > 0x115 ? 2 : (unsigned __int8)byte_40E400[v24];\n      v31 = v6;\n    }\n    else\n    {\n      v31 = 0;\n      v24 = 0;\n    }\n    v29 += v31;\n    if ( v29 < 0 || v29 > 112 || byte_40E6E0[v29] != v31 )\n    {\nLABEL_30:\n      v29 = (unsigned __int8)byte_40E5A0[v26];\n      if ( v29 )\n        goto LABEL_33;\n      if ( v24 == -2 )\n      {\n        v20 = -2;\n      }\n      else if ( (unsigned int)v24 > 0x115 )\n      {\n        v20 = 2;\n      }\n      else\n      {\n        v20 = (unsigned __int8)byte_40E400[v24];\n      }\n      v31 = v20;\n      if ( !v28 )\n      {\n        ++v25;\n        a2 = (__int64)\"syntax error\";\n        sub_408ACA(a1, \"syntax error\");\n      }\n      if ( v28 == 3 )\n      {\n        if ( v24 > 0 )\n        {\n          a2 = v31;\n          sub_40603B();\n          v24 = -2;\n        }\n        else if ( !v24 )\n        {\n          goto LABEL_224;\n        }\n      }\n      v28 = 3;\n      while ( 1 )\n      {\n        v29 = byte_40E520[v26];\n        if ( v29 != -93 && ++v29 >= 0 && v29 <= 112 && byte_40E6E0[v29] == 1 )\n        {\n          v29 = (unsigned __int8)byte_40E660[v29];\n          if ( v29 > 0 )\n            break;\n        }\n        if ( v34 == src )\n          goto LABEL_224;\n        a2 = (unsigned __int8)byte_40E760[v26];\n        sub_40603B();\n        v36 -= 7;\n        v34 -= 2;\n        v26 = *(__int16 *)v34;\n      }\n      v36 += 7;\n      v21 = v36;\n      *v36 = v44;\n      v21[1] = v45;\n      v21[2] = v46;\n      v21[3] = v47;\n      v21[4] = v48;\n      v21[5] = v49;\n      v21[6] = v50;\n      v26 = v29;\n    }\n    else\n    {\n      v29 = (unsigned __int8)byte_40E660[v29];\n      if ( v29 <= 0 )\n      {\n        v29 = -v29;\nLABEL_33:\n        v32 = (unsigned __int8)byte_40E840[v29];\n        v8 = &v36[7 * (1 - v32)];\n        v51[0] = *v8;\n        v51[1] = v8[1];\n        v51[2] = v8[2];\n        v51[3] = v8[3];\n        v51[4] = v8[4];\n        v51[5] = v8[5];\n        v51[6] = v8[6];\n        if ( v29 == 50 )\n        {\n          v16 = v36 - 14;\n          *(_QWORD *)(a1 + 40) = *(v36 - 14);\n          *(_QWORD *)(a1 + 48) = v16[1];\n          *(_QWORD *)(a1 + 56) = v16[2];\n          *(_QWORD *)(a1 + 64) = -*(v36 - 6);\n          *(_QWORD *)(a1 + 72) = -v36[1];\n          goto LABEL_199;\n        }\n        if ( v29 <= 50 )\n        {\n          if ( v29 == 31 )\n          {\n            *(_QWORD *)(a1 + 24) = 420LL;\n          }\n          else if ( v29 > 31 )\n          {\n            if ( v29 == 40 )\n            {\n              *(_QWORD *)(a1 + 8) = *(v36 - 6);\n              *(_DWORD *)(a1 + 16) = *v36;\n            }\n            else if ( v29 > 40 )\n            {\n              if ( v29 == 44 )\n              {\n                *(_QWORD *)(a1 + 64) = *(v36 - 14);\n                *(_QWORD *)(a1 + 72) = -*(v36 - 6);\n                *(_QWORD *)(a1 + 48) = -v36[1];\n                *(_QWORD *)(a1 + 56) = v36[2];\n              }\n              else if ( v29 > 44 )\n              {\n                if ( v29 == 46 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 21);\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  v14 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v14[1];\n                  *(_QWORD *)(a1 + 56) = v14[2];\n                }\n                else if ( v29 < 46 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                  *(_QWORD *)(a1 + 72) = v36[1];\n                }\n                else if ( v29 == 47 )\n                {\n                  *(_QWORD *)(a1 + 72) = *(v36 - 6);\n                  *(_QWORD *)(a1 + 64) = *v36;\n                }\n                else if ( v29 == 48 )\n                {\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                  v15 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v15[1];\n                  *(_QWORD *)(a1 + 56) = v15[2];\n                }\n              }\n              else if ( v29 == 42 )\n              {\n                if ( (unsigned __int64)*(v36 - 26) <= 3 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 27);\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  v13 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v13[1];\n                  *(_QWORD *)(a1 + 56) = v13[2];\n                }\n                else\n                {\n                  v12 = v36 - 28;\n                  *(_QWORD *)(a1 + 40) = *(v36 - 28);\n                  *(_QWORD *)(a1 + 48) = v12[1];\n                  *(_QWORD *)(a1 + 56) = v12[2];\n                  *(_QWORD *)(a1 + 64) = *(v36 - 13);\n                  *(_QWORD *)(a1 + 72) = v36[1];\n                }\n              }\n              else if ( v29 > 42 )\n              {\n                *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                *(_QWORD *)(a1 + 48) = -v36[1];\n                *(_QWORD *)(a1 + 56) = v36[2];\n              }\n              else\n              {\n                *(_QWORD *)(a1 + 64) = *(v36 - 13);\n                *(_QWORD *)(a1 + 72) = v36[1];\n              }\n            }\n            else if ( v29 == 35 )\n            {\n              *(_QWORD *)(a1 + 24) = *v36 + 60;\n            }\n            else if ( v29 > 35 )\n            {\n              if ( v29 == 37 )\n              {\n                *(_QWORD *)(a1 + 8) = 0LL;\n                *(_DWORD *)(a1 + 16) = *v36;\n              }\n              else if ( v29 < 37 )\n              {\n                *(_QWORD *)(a1 + 24) = *(v36 - 7) + 60;\n              }\n              else if ( v29 == 38 )\n              {\n                *(_QWORD *)(a1 + 8) = 0LL;\n                *(_DWORD *)(a1 + 16) = *(v36 - 7);\n              }\n              else\n              {\n                *(_QWORD *)(a1 + 8) = *(v36 - 7);\n                *(_DWORD *)(a1 + 16) = *v36;\n              }\n            }\n            else if ( v29 == 33 )\n            {\n              *(_QWORD *)(a1 + 24) = 420LL;\n              a2 = 1LL;\n              sub_405ED4(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n            else if ( v29 > 33 )\n            {\n              v11 = *(v36 - 14);\n              a2 = *v36;\n              *(_QWORD *)(a1 + 24) = v11 + sub_407F7A(a1, *v36, a1, *v36, a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n            }\n            else\n            {\n              *(_QWORD *)(a1 + 24) = *(v36 - 7);\n              a2 = 1LL;\n              sub_405ED4(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n          }\n          else if ( v29 == 19 )\n          {\n            a2 = *(v36 - 20);\n            sub_405FF1((_QWORD *)a1, a2, *(v36 - 6), 0LL, 0LL);\n            *(_DWORD *)(a1 + 32) = *v36;\n          }\n          else if ( v29 > 19 )\n          {\n            if ( v29 == 24 )\n            {\n              a2 = *(v36 - 34);\n              sub_405FF1((_QWORD *)a1, a2, *(v36 - 20), *(v36 - 7), *(v36 - 6));\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 > 24 )\n            {\n              if ( v29 == 28 )\n              {\n                *(_DWORD *)(a1 + 20) = *v36;\n                *(_QWORD *)(a1 + 200) += *v36 > 0;\n              }\n              else if ( v29 > 28 )\n              {\n                if ( v29 == 29 )\n                {\n                  *(_DWORD *)(a1 + 20) = 1;\n                  if ( *(v36 - 7) <= 0 )\n                    v10 = 1LL;\n                  else\n                    v10 = 2LL;\n                  *(_QWORD *)(a1 + 200) += v10;\n                }\n                else\n                {\n                  *(_QWORD *)(a1 + 24) = *v36;\n                }\n              }\n              else if ( v29 == 27 )\n              {\n                ++*(_QWORD *)(a1 + 216);\n                a2 = *v36;\n                *(_QWORD *)(a1 + 24) = sub_407F7A(a1, *v36, a1, *v36, a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n              }\n            }\n            else if ( v29 == 22 )\n            {\n              a2 = *(v36 - 6);\n              sub_405FF1((_QWORD *)a1, a2, 0LL, 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 > 22 )\n            {\n              a2 = *(v36 - 20);\n              sub_405FF1((_QWORD *)a1, a2, *(v36 - 6), 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 == 20 )\n            {\n              a2 = *(v36 - 34);\n              sub_405FF1((_QWORD *)a1, a2, *(v36 - 20), *(v36 - 7), *(v36 - 6));\n              *(_DWORD *)(a1 + 32) = *v36;\n            }\n          }\n          else if ( v29 == 9 )\n          {\n            ++*(_QWORD *)(a1 + 192);\n          }\n          else if ( v29 > 9 )\n          {\n            if ( v29 == 11 )\n            {\n              ++*(_QWORD *)(a1 + 176);\n            }\n            else if ( v29 < 11 )\n            {\n              ++*(_QWORD *)(a1 + 216);\n            }\n            else if ( v29 == 12 )\n            {\n              ++*(_QWORD *)(a1 + 184);\n            }\n            else if ( v29 == 18 )\n            {\n              a2 = *(v36 - 6);\n              sub_405FF1((_QWORD *)a1, a2, 0LL, 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = *v36;\n            }\n          }\n          else if ( v29 == 7 )\n          {\n            ++*(_QWORD *)(a1 + 208);\n            ++*(_QWORD *)(a1 + 176);\n          }\n          else if ( v29 > 7 )\n          {\n            ++*(_QWORD *)(a1 + 208);\n          }\n          else if ( v29 == 4 )\n          {\n            v9 = v36[1];\n            *(_QWORD *)(a1 + 96) = *v36;\n            *(_QWORD *)(a1 + 104) = v9;\n            *(_BYTE *)(a1 + 168) = 1;\n          }\n          goto LABEL_199;\n        }\n        if ( v29 == 68 )\n        {\n          a2 = (__int64)v51;\n          memset(v51, 0, 0x38uLL);\n          v51[4] = 1LL;\n          goto LABEL_199;\n        }\n        if ( v29 <= 68 )\n        {\n          if ( v29 == 59 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[1] = 1LL;\n            goto LABEL_199;\n          }\n          if ( v29 <= 59 )\n          {\n            if ( v29 == 54 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[0] = *(v36 - 7);\n              goto LABEL_199;\n            }\n            if ( v29 <= 54 )\n            {\n              if ( v29 == 52 || v29 > 52 )\n              {\n                a2 = 1LL;\n                sub_405ED4(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n              }\n              else\n              {\n                a2 = 0xFFFFFFFFLL;\n                sub_405ED4(\n                  a1,\n                  -1,\n                  a1,\n                  *(v36 - 2),\n                  a5,\n                  a6,\n                  *(v36 - 7),\n                  *(v36 - 6),\n                  *(v36 - 5),\n                  *(v36 - 4),\n                  *(v36 - 3),\n                  *(v36 - 2),\n                  *(v36 - 1));\n              }\n              goto LABEL_199;\n            }\n            if ( v29 == 56 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[0] = 1LL;\n              goto LABEL_199;\n            }\n            if ( v29 >= 56 )\n            {\n              if ( v29 != 57 )\n              {\nLABEL_173:\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[1] = *(v36 - 6);\n                goto LABEL_199;\n              }\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[1] = *(v36 - 7);\nLABEL_199:\n              v36 -= 7 * v32;\n              v34 -= 2 * v32;\n              v32 = 0;\n              v36 += 7;\n              v19 = v36;\n              *v36 = v51[0];\n              v19[1] = v51[1];\n              v19[2] = v51[2];\n              v19[3] = v51[3];\n              v19[4] = v51[4];\n              v19[5] = v51[5];\n              v19[6] = v51[6];\n              v29 = (unsigned __int8)byte_40E7E0[v29];\n              v27 = byte_40E620[v29 - 28] + *(__int16 *)v34;\n              if ( v27 >= 0 && v27 <= 112 && byte_40E6E0[v27] == *(_WORD *)v34 )\n                v26 = (unsigned __int8)byte_40E660[v27];\n              else\n                v26 = byte_40E640[v29 - 28];\n              goto LABEL_2;\n            }\nLABEL_170:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[0] = *(v36 - 6);\n            goto LABEL_199;\n          }\n          if ( v29 == 63 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[3] = *(v36 - 7);\n            goto LABEL_199;\n          }\n          if ( v29 <= 63 )\n          {\n            if ( v29 != 61 )\n            {\n              if ( v29 <= 61 )\n              {\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[2] = *(v36 - 7) * *v36;\n                goto LABEL_199;\n              }\nLABEL_176:\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[2] = *v36;\n              goto LABEL_199;\n            }\nLABEL_175:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[2] = *(v36 - 6) * *v36;\n            goto LABEL_199;\n          }\n          if ( v29 == 65 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[3] = 1LL;\n            goto LABEL_199;\n          }\n          if ( v29 >= 65 )\n          {\n            if ( v29 == 66 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[4] = *(v36 - 7);\n              goto LABEL_199;\n            }\n            goto LABEL_181;\n          }\nLABEL_178:\n          a2 = (__int64)v51;\n          memset(v51, 0, 0x38uLL);\n          v51[3] = *(v36 - 6);\n          goto LABEL_199;\n        }\n        if ( v29 == 78 )\n          goto LABEL_178;\n        if ( v29 > 78 )\n        {\n          if ( v29 == 87 )\n          {\n            v51[0] = v36[1];\n            v51[1] = 0LL;\n            goto LABEL_199;\n          }\n          if ( v29 > 87 )\n          {\n            if ( v29 == 89 )\n            {\n              sub_405C4C(a1, a2, a1, *(v36 - 6), a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n              a2 = 1LL;\n              sub_405ED4(a1, 1, a1, v36[5], v17, v18, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n            else if ( v29 < 89 )\n            {\n              sub_405C4C(a1, a2, a1, v36[1], a5, a6, *v36, v36[1], v36[2]);\n            }\n            else if ( v29 == 90 )\n            {\n              v51[0] = -1LL;\n            }\n            else if ( v29 == 91 )\n            {\n              v51[0] = v36[1];\n            }\n            goto LABEL_199;\n          }\n          if ( v29 != 80 )\n          {\n            if ( v29 >= 80 )\n            {\n              if ( v29 != 81 )\n              {\n                if ( v29 == 85 )\n                {\n                  v51[0] = v36[1];\n                  v51[1] = 0LL;\n                }\n                goto LABEL_199;\n              }\n              goto LABEL_176;\n            }\nLABEL_181:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[4] = *(v36 - 6);\n            goto LABEL_199;\n          }\n        }\n        else\n        {\n          if ( v29 == 72 )\n            goto LABEL_184;\n          if ( v29 > 72 )\n          {\n            if ( v29 == 75 )\n              goto LABEL_170;\n            if ( v29 <= 75 )\n            {\n              if ( v29 == 73 )\n              {\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[5] = 1LL;\n              }\n              goto LABEL_199;\n            }\n            if ( v29 == 76 )\n              goto LABEL_173;\n            goto LABEL_175;\n          }\n          if ( v29 != 70 )\n          {\n            if ( v29 <= 70 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[5] = *(v36 - 7);\n              goto LABEL_199;\n            }\nLABEL_184:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[5] = *(v36 - 7);\n            v51[6] = *(v36 - 6);\n            goto LABEL_199;\n          }\n        }\n        a2 = (__int64)v51;\n        memset(v51, 0, 0x38uLL);\n        v51[5] = *(v36 - 6);\n        goto LABEL_199;\n      }\n      if ( v28 )\n        --v28;\n      v24 = -2;\n      v26 = v29;\n      v36 += 7;\n      v7 = v36;\n      *v36 = v44;\n      v7[1] = v45;\n      v7[2] = v46;\n      v7[3] = v47;\n      v7[4] = v48;\n      v7[5] = v49;\n      v7[6] = v50;\n    }\nLABEL_2:\n    v34 += 2;\n  }\n  sub_408ACA(a1, \"memory exhausted\");\n  v30 = 2;\nLABEL_226:\n  if ( v24 != -2 )\n  {\n    if ( (unsigned int)v24 > 0x115 )\n      v22 = 2;\n    else\n      v22 = (unsigned __int8)byte_40E400[v24];\n    v31 = v22;\n    sub_40603B();\n  }\n  v36 -= 7 * v32;\n  for ( v34 -= 2 * v32; v34 != src; v34 -= 2 )\n  {\n    sub_40603B();\n    v36 -= 7;\n  }\n  if ( src != v43 )\n    free(src);\n  return v30;\n}\n"], [4226938, "sub_407F7A", "__int64 __fastcall sub_407F7A(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, char a7, __int64 a8, unsigned __int64 a9)\n{\n  __int64 v9; // rax\n  __int64 v11; // [rsp+18h] [rbp-8h]\n\n  if ( a9 <= 2 && a2 < 0 )\n    a8 *= 100LL;\n  if ( a2 >= 0 )\n  {\n    if ( a7 )\n      v9 = -a2;\n    else\n      v9 = a2;\n    v11 = 60 * a8 + v9;\n  }\n  else\n  {\n    v11 = 60 * (a8 / 100) + a8 % 100;\n  }\n  if ( (int)abs32(v11) > 1440 )\n    ++*(_QWORD *)(a1 + 216);\n  return v11;\n}\n"], [4227248, "sub_4080B0", "__int64 __fastcall sub_4080B0(__int64 a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( a2 )\n  {\n    if ( a2 == 1 )\n    {\n      if ( a1 <= 0 || a1 > 11 )\n      {\n        if ( a1 == 12 )\n          result = 12LL;\n        else\n          result = 0xFFFFFFFFLL;\n      }\n      else\n      {\n        result = (unsigned int)(a1 + 12);\n      }\n    }\n    else if ( a1 < 0 || a1 > 23 )\n    {\n      result = 0xFFFFFFFFLL;\n    }\n    else\n    {\n      result = a1;\n    }\n  }\n  else if ( a1 > 0 && a1 <= 11 )\n  {\n    result = a1;\n  }\n  else if ( a1 == 12 )\n  {\n    result = 0LL;\n  }\n  else\n  {\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4227383, "sub_408137", "__int64 __fastcall sub_408137(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, int a7, __int64 a8, __int64 a9)\n{\n  __int64 v9; // rax\n  __int64 v11; // [rsp+0h] [rbp-8h]\n\n  v11 = a8;\n  if ( a8 < 0 )\n    return -a8;\n  if ( a9 == 2 )\n  {\n    if ( a8 > 68 )\n      v9 = 1900LL;\n    else\n      v9 = 2000LL;\n    v11 = v9 + a8;\n  }\n  return v11;\n}\n"], [4227447, "sub_408177", "const char **__fastcall sub_408177(__int64 a1, const char *a2)\n{\n  const char **i; // [rsp+18h] [rbp-8h]\n  const char **j; // [rsp+18h] [rbp-8h]\n  const char **k; // [rsp+18h] [rbp-8h]\n\n  for ( i = (const char **)&off_40EEE0; *i; i += 2 )\n  {\n    if ( !strcmp(a2, *i) )\n      return i;\n  }\n  for ( j = (const char **)(a1 + 224); *j; j += 2 )\n  {\n    if ( !strcmp(a2, *j) )\n      return j;\n  }\n  for ( k = (const char **)&off_40F000; *k; k += 2 )\n  {\n    if ( !strcmp(a2, *k) )\n      return k;\n  }\n  return 0LL;\n}\n"], [4227656, "sub_408248", "char **__fastcall sub_408248(__int64 a1, _BYTE *a2)\n{\n  char **result; // rax\n  bool v3; // al\n  bool v4; // al\n  char v5; // [rsp+1Dh] [rbp-23h]\n  bool v6; // [rsp+1Fh] [rbp-21h]\n  _BYTE *i; // [rsp+20h] [rbp-20h]\n  _BYTE *v8; // [rsp+20h] [rbp-20h]\n  _BYTE *v9; // [rsp+28h] [rbp-18h]\n  const char **j; // [rsp+30h] [rbp-10h]\n  const char **k; // [rsp+30h] [rbp-10h]\n  const char **v12; // [rsp+30h] [rbp-10h]\n  const char **l; // [rsp+30h] [rbp-10h]\n  const char **m; // [rsp+30h] [rbp-10h]\n  const char **n; // [rsp+30h] [rbp-10h]\n  __int16 **ii; // [rsp+30h] [rbp-10h]\n  const char **v17; // [rsp+30h] [rbp-10h]\n  size_t v18; // [rsp+38h] [rbp-8h]\n\n  for ( i = a2; *i; ++i )\n    *i = sub_40CAB5((unsigned __int8)*i);\n  for ( j = (const char **)&off_40E940; *j; j += 2 )\n  {\n    if ( !strcmp(a2, *j) )\n      return (char **)j;\n  }\n  v18 = strlen(a2);\n  v3 = v18 == 3 || v18 == 4 && a2[3] == 46;\n  v6 = v3;\n  for ( k = (const char **)&off_40EA60; *k; k += 2 )\n  {\n    if ( v6 )\n      v4 = strncmp(a2, *k, 3uLL) == 0;\n    else\n      v4 = strcmp(a2, *k) == 0;\n    if ( v4 )\n      return (char **)k;\n  }\n  v12 = sub_408177(a1, a2);\n  if ( v12 )\n    return (char **)v12;\n  if ( !strcmp(a2, \"DST\") )\n    return &off_40E9A0;\n  for ( l = (const char **)&off_40EC40; *l; l += 2 )\n  {\n    if ( !strcmp(a2, *l) )\n      return (char **)l;\n  }\n  if ( a2[v18 - 1] == 83 )\n  {\n    a2[v18 - 1] = 0;\n    for ( m = (const char **)&off_40EC40; *m; m += 2 )\n    {\n      if ( !strcmp(a2, *m) )\n        return (char **)m;\n    }\n    a2[v18 - 1] = 83;\n  }\n  for ( n = (const char **)&off_40ED80; *n; n += 2 )\n  {\n    if ( !strcmp(a2, *n) )\n      return (char **)n;\n  }\n  if ( v18 == 1 )\n  {\n    for ( ii = &off_40F340; *ii; ii += 2 )\n    {\n      if ( *a2 == *(_BYTE *)*ii )\n        return (char **)ii;\n    }\n  }\n  v5 = 0;\n  v9 = a2;\n  v8 = a2;\n  while ( 1 )\n  {\n    *v8 = *v9;\n    if ( !*v8 )\n      break;\n    if ( *v9 == 46 )\n      v5 = 1;\n    else\n      ++v8;\n    ++v9;\n  }\n  if ( v5 && (v17 = sub_408177(a1, a2)) != 0LL )\n    result = (char **)v17;\n  else\n    result = 0LL;\n  return result;\n}\n"], [4228463, "sub_40856F", "__int64 __fastcall sub_40856F(__int64 *a1, unsigned __int8 **a2)\n{\n  int v2; // eax\n  __int64 v3; // rdx\n  __int64 result; // rax\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  char *v8; // rax\n  unsigned __int8 *v9; // rax\n  unsigned __int8 v10; // [rsp+13h] [rbp-7Dh]\n  unsigned __int8 v11; // [rsp+13h] [rbp-7Dh]\n  int v12; // [rsp+14h] [rbp-7Ch]\n  int v13; // [rsp+18h] [rbp-78h]\n  int j; // [rsp+1Ch] [rbp-74h]\n  __int64 v15; // [rsp+20h] [rbp-70h]\n  unsigned __int8 *v16; // [rsp+28h] [rbp-68h]\n  unsigned __int8 *v17; // [rsp+28h] [rbp-68h]\n  unsigned __int64 i; // [rsp+30h] [rbp-60h]\n  __int64 v19; // [rsp+38h] [rbp-58h]\n  __int64 v20; // [rsp+40h] [rbp-50h]\n  char *v21; // [rsp+48h] [rbp-48h]\n  char **v22; // [rsp+50h] [rbp-40h]\n  __int64 v23; // [rsp+58h] [rbp-38h]\n  char v24[24]; // [rsp+60h] [rbp-30h] BYREF\n  unsigned __int64 v25; // [rsp+78h] [rbp-18h]\n\n  v25 = __readfsqword(0x28u);\n  while ( 1 )\n  {\nLABEL_3:\n    while ( 1 )\n    {\n      v10 = **a2;\n      if ( !(unsigned __int8)sub_40C9FB(v10) )\n        break;\n      ++*a2;\n    }\n    if ( (unsigned int)v10 - 48 > 9 && v10 != 45 && v10 != 43 )\n    {\n      if ( (unsigned __int8)sub_40C8AB(v10) )\n      {\n        v21 = v24;\n        do\n        {\n          if ( (unsigned __int64)(v21 - v24) <= 0x12 )\n          {\n            v7 = v21++;\n            *v7 = v10;\n          }\n          v10 = *++*a2;\n        }\n        while ( (unsigned __int8)sub_40C8AB(v10) || v10 == 46 );\n        *v21 = 0;\n        v22 = sub_408248((__int64)a2, v24);\n        if ( v22 )\n        {\n          *a1 = *((int *)v22 + 3);\n          result = *((unsigned int *)v22 + 2);\n        }\n        else\n        {\n          result = 63LL;\n        }\n      }\n      else if ( v10 == 40 )\n      {\n        v15 = 0LL;\n        while ( 1 )\n        {\n          v9 = (*a2)++;\n          v11 = *v9;\n          if ( !*v9 )\n            break;\n          if ( v11 == 40 )\n          {\n            ++v15;\n          }\n          else if ( v11 == 41 )\n          {\n            --v15;\n          }\n          if ( !v15 )\n            goto LABEL_3;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        v8 = (char *)(*a2)++;\n        result = (unsigned int)*v8;\n      }\n      return result;\n    }\n    if ( v10 != 45 && v10 != 43 )\n      break;\n    if ( v10 == 45 )\n      v2 = -1;\n    else\n      v2 = 1;\n    v12 = v2;\n    do\n      v10 = *++*a2;\n    while ( (unsigned __int8)sub_40C9FB(v10) );\n    if ( (unsigned int)v10 - 48 <= 9 )\n      goto LABEL_17;\n  }\n  v12 = 0;\nLABEL_17:\n  v16 = *a2;\n  for ( i = 0LL; ; i = 10 * v23 )\n  {\n    v3 = v10 - 48;\n    v23 = v3 + i;\n    if ( v3 + i < i )\n      return 63LL;\n    v10 = *++v16;\n    if ( (unsigned int)*v16 - 48 > 9 )\n      break;\n    if ( (unsigned __int64)v23 > 0x1999999999999999LL )\n      return 63LL;\n  }\n  if ( (v10 == 46 || v10 == 44) && (unsigned int)((char)v16[1] - 48) <= 9 )\n  {\n    if ( v12 >= 0 )\n    {\n      v19 = v3 + i;\n      if ( v23 < 0 )\n        return 63LL;\n      v20 = v3 + i;\n    }\n    else\n    {\n      v19 = -v23;\n      if ( -v23 >= 0 && v23 != 0 )\n        return 63LL;\n      v20 = v3 + i;\n    }\n    if ( v23 != v20 )\n      return 63LL;\n    v5 = (char *)(v16 + 1);\n    v17 = v16 + 2;\n    v13 = *v5 - 48;\n    for ( j = 2; j <= 9; ++j )\n    {\n      v13 *= 10;\n      if ( (unsigned int)((char)*v17 - 48) <= 9 )\n      {\n        v6 = (char *)v17++;\n        v13 += *v6 - 48;\n      }\n    }\n    if ( v12 < 0 )\n    {\n      while ( (unsigned int)((char)*v17 - 48) <= 9 )\n      {\n        if ( *v17 != 48 )\n        {\n          ++v13;\n          break;\n        }\n        ++v17;\n      }\n    }\n    while ( (unsigned int)((char)*v17 - 48) <= 9 )\n      ++v17;\n    if ( v12 < 0 && v13 )\n    {\n      if ( --v19 >= 0 )\n        return 63LL;\n      v13 = 1000000000 - v13;\n    }\n    *a1 = v19;\n    a1[1] = v13;\n    *a2 = v17;\n    if ( v12 )\n      result = 276LL;\n    else\n      result = 277LL;\n  }\n  else\n  {\n    *(_BYTE *)a1 = v12 < 0;\n    if ( v12 >= 0 )\n    {\n      a1[1] = v23;\n      if ( a1[1] < 0 )\n        return 63LL;\n    }\n    else\n    {\n      a1[1] = -v23;\n      if ( a1[1] > 0 )\n        return 63LL;\n    }\n    a1[2] = v16 - *a2;\n    *a2 = v16;\n    if ( v12 )\n      result = 274LL;\n    else\n      result = 275LL;\n  }\n  return result;\n}\n"], [4229834, "sub_408ACA", "__int64 sub_408ACA()\n{\n  return 0LL;\n}\n"], [4229853, "sub_408ADD", "bool __fastcall sub_408ADD(_DWORD *a1, struct tm *a2, time_t a3)\n{\n  bool result; // al\n  time_t timer; // [rsp+8h] [rbp-18h] BYREF\n  struct tm *v5; // [rsp+10h] [rbp-10h]\n  _DWORD *v6; // [rsp+18h] [rbp-8h]\n\n  v6 = a1;\n  v5 = a2;\n  timer = a3;\n  if ( a3 != -1 || (v5 = localtime(&timer)) != 0LL )\n    result = (v6[4] ^ v5->tm_mon | v6[3] ^ v5->tm_mday | v6[2] ^ v5->tm_hour | v6[1] ^ v5->tm_min | v5->tm_sec ^ *v6 | v6[5] ^ v5->tm_year) == 0;\n  else\n    result = 0;\n  return result;\n}\n"], [4230026, "sub_408B8A", "const char *__fastcall sub_408B8A(void *a1)\n{\n  const char *v1; // rax\n  const char *s; // [rsp+10h] [rbp-10h]\n  size_t n; // [rsp+18h] [rbp-8h]\n\n  s = getenv(\"TZ\");\n  if ( s )\n  {\n    n = strlen(s) + 1;\n    if ( n > 0x64 )\n      v1 = (const char *)sub_40C5CF(s, n);\n    else\n      v1 = (const char *)memcpy(a1, s, n);\n    s = v1;\n  }\n  return s;\n}\n"], [4230140, "sub_408BFC", "_BOOL8 __fastcall sub_408BFC(_QWORD *a1, const char *a2, struct timespec *a3)\n{\n  __int64 v4; // r8\n  __int64 v5; // r9\n  char *v6; // rax\n  char *v7; // rax\n  char *v8; // rsi\n  __int64 v9; // rdx\n  __int64 v10; // rcx\n  __int64 v11; // r8\n  __int64 v12; // r9\n  __int64 v13; // rdx\n  __int64 v14; // rcx\n  const char *v15; // rax\n  _BOOL4 v16; // eax\n  bool v17; // al\n  struct timespec *timer; // [rsp+18h] [rbp-3A8h]\n  char v20; // [rsp+3Fh] [rbp-381h]\n  bool v21; // [rsp+40h] [rbp-380h]\n  bool v22; // [rsp+43h] [rbp-37Dh]\n  int j; // [rsp+44h] [rbp-37Ch]\n  time_t v24; // [rsp+58h] [rbp-368h]\n  time_t v25; // [rsp+58h] [rbp-368h]\n  char *ptr; // [rsp+60h] [rbp-360h]\n  unsigned __int64 v27; // [rsp+68h] [rbp-358h]\n  const char *i; // [rsp+70h] [rbp-350h]\n  const char *v29; // [rsp+70h] [rbp-350h]\n  char *v30; // [rsp+78h] [rbp-348h]\n  __int64 v31; // [rsp+80h] [rbp-340h]\n  struct tm *v32; // [rsp+88h] [rbp-338h]\n  const char *v33; // [rsp+90h] [rbp-330h]\n  char *value; // [rsp+98h] [rbp-328h]\n  struct tm *v35; // [rsp+A0h] [rbp-320h]\n  __int64 v36; // [rsp+A8h] [rbp-318h]\n  signed __int64 v37; // [rsp+B0h] [rbp-310h]\n  __int64 v38; // [rsp+D8h] [rbp-2E8h]\n  __int64 v39; // [rsp+118h] [rbp-2A8h]\n  struct timespec v40; // [rsp+130h] [rbp-290h] BYREF\n  struct tm tp; // [rsp+140h] [rbp-280h] BYREF\n  struct tm v42; // [rsp+180h] [rbp-240h] BYREF\n  const char *v43; // [rsp+1C0h] [rbp-200h] BYREF\n  __int64 v44; // [rsp+1C8h] [rbp-1F8h]\n  int v45; // [rsp+1D0h] [rbp-1F0h]\n  int v46; // [rsp+1D4h] [rbp-1ECh]\n  __int64 v47; // [rsp+1D8h] [rbp-1E8h]\n  int v48; // [rsp+1E0h] [rbp-1E0h]\n  __int64 v49; // [rsp+1E8h] [rbp-1D8h]\n  __int64 v50; // [rsp+1F0h] [rbp-1D0h]\n  __int64 v51; // [rsp+1F8h] [rbp-1C8h]\n  __int64 v52; // [rsp+200h] [rbp-1C0h]\n  __int64 v53; // [rsp+208h] [rbp-1B8h]\n  __int64 v54; // [rsp+210h] [rbp-1B0h]\n  __int64 v55; // [rsp+218h] [rbp-1A8h]\n  __int64 v56; // [rsp+220h] [rbp-1A0h]\n  __int64 v57; // [rsp+228h] [rbp-198h]\n  __int64 v58[7]; // [rsp+230h] [rbp-190h] BYREF\n  char v59; // [rsp+268h] [rbp-158h]\n  char v60; // [rsp+269h] [rbp-157h]\n  __int64 v61; // [rsp+270h] [rbp-150h]\n  __int64 v62; // [rsp+278h] [rbp-148h]\n  __int64 v63; // [rsp+280h] [rbp-140h]\n  __int64 v64; // [rsp+288h] [rbp-138h]\n  __int64 v65; // [rsp+290h] [rbp-130h]\n  __int64 v66; // [rsp+298h] [rbp-128h]\n  char *v67; // [rsp+2A0h] [rbp-120h]\n  int v68; // [rsp+2A8h] [rbp-118h]\n  int v69; // [rsp+2ACh] [rbp-114h]\n  char *s2; // [rsp+2B0h] [rbp-110h]\n  int v71; // [rsp+2B8h] [rbp-108h]\n  int v72; // [rsp+2BCh] [rbp-104h]\n  __int64 v73; // [rsp+2C0h] [rbp-100h]\n  char v74[112]; // [rsp+2D0h] [rbp-F0h] BYREF\n  char s[104]; // [rsp+340h] [rbp-80h] BYREF\n  unsigned __int64 v76; // [rsp+3A8h] [rbp-18h]\n\n  timer = a3;\n  v76 = __readfsqword(0x28u);\n  v20 = 0;\n  ptr = 0LL;\n  v21 = 1;\n  if ( !a3 )\n  {\n    sub_405AC6(&v40);\n    timer = &v40;\n  }\n  v24 = timer->tv_sec;\n  v31 = timer->tv_nsec;\n  v32 = localtime(&timer->tv_sec);\n  if ( !v32 )\n    return 0LL;\n  while ( (unsigned __int8)sub_40C9FB(*(unsigned __int8 *)a2) )\n    ++a2;\n  if ( !strncmp(a2, \"TZ=\\\"\", 4uLL) )\n  {\n    v33 = a2 + 4;\n    v27 = 1LL;\n    for ( i = a2 + 4; *i; ++i )\n    {\n      if ( *i == 92 )\n      {\n        if ( *++i != 92 && *i != 34 )\n          break;\n      }\n      else if ( *i == 34 )\n      {\n        free(ptr);\n        ptr = (char *)sub_408B8A(v74);\n        if ( v27 <= 0x64 )\n          v6 = s;\n        else\n          v6 = (char *)sub_40C4AB(v27);\n        value = v6;\n        v30 = v6;\n        for ( i = v33; *i != 34; i = v29 + 1 )\n        {\n          v7 = v30++;\n          v29 = &i[*i == 92];\n          *v7 = *v29;\n        }\n        *v30 = 0;\n        v22 = setenv(\"TZ\", value, 1) == 0;\n        if ( v27 > 0x64 )\n          free(value);\n        if ( !v22 )\n          goto LABEL_79;\n        v20 = 1;\n        a2 = i + 1;\n      }\n      ++v27;\n    }\n  }\n  if ( !*a2 )\n    a2 = \"0\";\n  v43 = a2;\n  v50 = v32->tm_year;\n  v50 += 1900LL;\n  v51 = 0LL;\n  v52 = v32->tm_mon + 1;\n  v53 = v32->tm_mday;\n  v54 = v32->tm_hour;\n  v55 = v32->tm_min;\n  v56 = v32->tm_sec;\n  v57 = v31;\n  tp.tm_isdst = v32->tm_isdst;\n  v48 = 2;\n  v8 = (char *)v58;\n  v9 = 7LL;\n  memset(v58, 0, sizeof(v58));\n  v10 = 0LL;\n  v59 = 0;\n  v60 = 0;\n  v61 = 0LL;\n  v62 = 0LL;\n  v65 = 0LL;\n  v63 = 0LL;\n  v64 = 0LL;\n  v66 = 0LL;\n  v67 = (char *)v32->tm_zone;\n  v68 = 269;\n  v69 = v32->tm_isdst;\n  s2 = 0LL;\n  for ( j = 1; j <= 3; ++j )\n  {\n    *(_QWORD *)&v42.tm_sec = 7776000 * j + v24;\n    v35 = localtime((const time_t *)&v42.tm_sec);\n    if ( v35 )\n    {\n      if ( v35->tm_zone )\n      {\n        v9 = (unsigned int)v35->tm_isdst;\n        if ( (_DWORD)v9 != v69 )\n        {\n          s2 = (char *)v35->tm_zone;\n          v71 = 269;\n          v72 = v35->tm_isdst;\n          v73 = 0LL;\n          break;\n        }\n      }\n    }\n  }\n  if ( v67 )\n  {\n    if ( s2 )\n    {\n      v8 = s2;\n      if ( !strcmp(v67, s2) )\n      {\n        v69 = -1;\n        s2 = 0LL;\n      }\n    }\n  }\n  if ( (unsigned int)sub_406060((__int64)&v43, (__int64)v8, v9, v10, v4, v5) )\n    goto LABEL_79;\n  if ( !v59 )\n  {\n    v14 = v64 | v62 | v61 | v65;\n    if ( (v14 | (unsigned __int64)(v63 + v66)) <= 1 )\n    {\n      tp.tm_year = sub_408137((__int64)&v43, (__int64)v8, v63, v14, v11, v12, v49, v50, v51) - 1900;\n      tp.tm_mon = v52 - 1;\n      tp.tm_mday = v53;\n      if ( !v65 && (!v60 || v61 || v62) )\n      {\n        tp.tm_sec = 0;\n        tp.tm_min = 0;\n        tp.tm_hour = 0;\n        v57 = 0LL;\n      }\n      else\n      {\n        tp.tm_hour = sub_4080B0(v54, v48);\n        if ( tp.tm_hour < 0 )\n          goto LABEL_79;\n        tp.tm_min = v55;\n        tp.tm_sec = v56;\n      }\n      if ( v62 | v61 | v65 )\n        tp.tm_isdst = -1;\n      if ( v63 )\n        tp.tm_isdst = v46;\n      v42 = tp;\n      v25 = mktime(&tp);\n      if ( !sub_408ADD(&v42, &tp, v25) )\n      {\n        if ( !v66 )\n          goto LABEL_79;\n        v36 = v47;\n        v37 = abs64(v47);\n        if ( v20 != 1 )\n          ptr = (char *)sub_408B8A(v74);\n        v15 = v36 >= 0 ? \"-\" : \"\";\n        sprintf(s, \"XXX%s%ld:%02d\", v15, v37 / 60, (unsigned int)(v37 % 60));\n        if ( setenv(\"TZ\", s, 1) )\n          goto LABEL_79;\n        v20 = 1;\n        tp = v42;\n        v25 = mktime(&tp);\n        if ( !sub_408ADD(&v42, &tp, v25) )\n          goto LABEL_79;\n      }\n      if ( v62 && !v61 )\n      {\n        v16 = v44 > 0 && tp.tm_wday != v45;\n        tp.tm_mday += (v45 - tp.tm_wday + 7) % 7 + 7 * (v44 - v16);\n        tp.tm_isdst = -1;\n        v25 = mktime(&tp);\n        if ( v25 == -1 )\n          goto LABEL_79;\n      }\n      if ( v58[1] | v58[0] | v58[2] )\n      {\n        if ( (tp.tm_mon > tp.tm_mon + LODWORD(v58[1])) ^ (v58[1] < 0) | (v58[0] < 0) ^ (tp.tm_year > tp.tm_year + LODWORD(v58[0])) | (tp.tm_mday > tp.tm_mday + LODWORD(v58[2])) ^ (v58[2] < 0) )\n          goto LABEL_79;\n        tp.tm_year += LODWORD(v58[0]);\n        tp.tm_mon += LODWORD(v58[1]);\n        tp.tm_mday += LODWORD(v58[2]);\n        tp.tm_hour = v42.tm_hour;\n        *(_QWORD *)&tp.tm_sec = *(_QWORD *)&v42.tm_sec;\n        tp.tm_isdst = v42.tm_isdst;\n        v25 = mktime(&tp);\n        if ( v25 == -1 )\n          goto LABEL_79;\n      }\n      if ( v66 )\n      {\n        if ( v25 < v25 - (60 * v47 - tp.tm_gmtoff) != 60 * v47 - tp.tm_gmtoff < 0 )\n          goto LABEL_79;\n        v25 -= 60 * v47 - tp.tm_gmtoff;\n      }\n      v38 = ((v57 + v58[6]) % 1000000000 + 1000000000) % 1000000000;\n      v39 = (v57 + v58[6] - v38) / 1000000000;\n      if ( !((v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] + v39 < v25 + 3600 * v58[3] + 60 * v58[4] + v58[5]) ^ (unsigned int)(v39 < 0) | (v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] < v25 + 3600 * v58[3] + 60 * v58[4]) ^ (unsigned int)(v58[5] < 0) | (v25 + 3600 * v58[3] + 60 * v58[4] < v25 + 3600 * v58[3]) ^ (unsigned int)(60 * v58[4] < 0) | (v25 + 3600 * v58[3] < v25) ^ (unsigned int)(3600 * v58[3] < 0) | (60 * v58[4] / 60) ^ v58[4] | v58[3] ^ (3600 * v58[3] / 3600)) )\n      {\n        *a1 = v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] + v39;\n        a1[1] = v38;\n        goto LABEL_80;\n      }\n    }\nLABEL_79:\n    v21 = 0;\n    goto LABEL_80;\n  }\n  v13 = v57;\n  *a1 = v56;\n  a1[1] = v13;\nLABEL_80:\n  if ( v20 )\n  {\n    if ( ptr )\n      v17 = setenv(\"TZ\", ptr, 1) == 0;\n    else\n      v17 = unsetenv(\"TZ\") == 0;\n    v21 = v21 && v17;\n  }\n  if ( ptr != v74 )\n    free(ptr);\n  return v21;\n}\n"], [4234249, "sub_409C09", "__int64 __fastcall sub_409C09(__int64 a1, _DWORD *a2, __int64 a3, char a4)\n{\n  time_t timer; // [rsp+20h] [rbp-10h] BYREF\n  struct tm *v6; // [rsp+28h] [rbp-8h]\n\n  if ( a3 == 1 )\n  {\n    *(_DWORD *)(a1 + 20) = *a2;\n    if ( (int)*a2 <= 68 )\n    {\n      if ( (a4 & 0x10) != 0 )\n        return 1LL;\n      *(_DWORD *)(a1 + 20) += 100;\n    }\n  }\n  else if ( a3 )\n  {\n    if ( a3 != 2 )\n      abort();\n    if ( (a4 & 4) == 0 )\n      return 1LL;\n    *(_DWORD *)(a1 + 20) = 100 * *a2 + a2[1] - 1900;\n  }\n  else\n  {\n    time(&timer);\n    v6 = localtime(&timer);\n    if ( !v6 )\n      return 1LL;\n    *(_DWORD *)(a1 + 20) = v6->tm_year;\n  }\n  return 0LL;\n}\n"], [4234491, "sub_409CFB", "__int64 __fastcall sub_409CFB(_DWORD *a1, const char *a2, char a3)\n{\n  size_t v3; // rax\n  _DWORD *v5; // rax\n  char *v7; // [rsp+28h] [rbp-48h]\n  char *v8; // [rsp+28h] [rbp-48h]\n  int *v9; // [rsp+30h] [rbp-40h]\n  _DWORD *v10; // [rsp+30h] [rbp-40h]\n  unsigned __int64 i; // [rsp+38h] [rbp-38h]\n  unsigned __int64 j; // [rsp+38h] [rbp-38h]\n  unsigned __int64 v13; // [rsp+40h] [rbp-30h]\n  size_t v14; // [rsp+48h] [rbp-28h]\n  int v15[8]; // [rsp+50h] [rbp-20h] BYREF\n\n  v7 = 0LL;\n  v14 = strlen(a2);\n  if ( (a3 & 8) != 0 && (v7 = strchr(a2, 46)) != 0LL )\n    v3 = v7 - a2;\n  else\n    v3 = v14;\n  v13 = v3;\n  if ( v3 != 8 && v13 != 10 && v13 != 12 )\n    return 1LL;\n  if ( v7 )\n  {\n    if ( (a3 & 8) == 0 )\n      return 1LL;\n    if ( v14 - v13 != 3 )\n      return 1LL;\n  }\n  for ( i = 0LL; i < v13; ++i )\n  {\n    if ( (unsigned int)(a2[i] - 48) > 9 )\n      return 1LL;\n  }\n  v13 >>= 1;\n  for ( j = 0LL; j < v13; ++j )\n    v15[j] = 10 * (a2[2 * j] - 48) + a2[2 * j + 1] - 48;\n  v9 = v15;\n  if ( (a3 & 1) != 0 )\n  {\n    if ( (unsigned int)sub_409C09((__int64)a1, v15, v13 - 4, a3) )\n      return 1LL;\n    v9 = &v15[v13 - 4];\n    v13 = 4LL;\n  }\n  a1[4] = *v9 - 1;\n  a1[3] = v9[1];\n  a1[2] = v9[2];\n  v5 = v9 + 3;\n  v10 = v9 + 4;\n  a1[1] = *v5;\n  v13 -= 4LL;\n  if ( (a3 & 2) != 0 && (unsigned int)sub_409C09((__int64)a1, v10, v13, a3) )\n    return 1LL;\n  if ( v7 )\n  {\n    v8 = v7 + 1;\n    if ( (unsigned int)(*v8 - 48) > 9 || (unsigned int)(v8[1] - 48) > 9 )\n      return 1LL;\n    *a1 = 10 * (*v8 - 48) + v8[1] - 48;\n  }\n  else\n  {\n    *a1 = 0;\n  }\n  return 0LL;\n}\n"], [4235212, "sub_409FCC", "__int64 __fastcall sub_409FCC(time_t *a1, const char *a2, unsigned int a3)\n{\n  time_t timer; // [rsp+20h] [rbp-D0h] BYREF\n  char v6[8]; // [rsp+28h] [rbp-C8h] BYREF\n  struct tm *v7; // [rsp+30h] [rbp-C0h]\n  char *v8; // [rsp+38h] [rbp-B8h]\n  __int64 v9; // [rsp+40h] [rbp-B0h] BYREF\n  __int64 v10; // [rsp+48h] [rbp-A8h]\n  __int64 v11; // [rsp+50h] [rbp-A0h]\n  __int64 v12; // [rsp+58h] [rbp-98h]\n  __int64 v13; // [rsp+60h] [rbp-90h]\n  __int64 v14; // [rsp+68h] [rbp-88h]\n  const char *v15; // [rsp+70h] [rbp-80h]\n  struct tm tp; // [rsp+80h] [rbp-70h] BYREF\n  char dest[24]; // [rsp+C0h] [rbp-30h] BYREF\n  unsigned __int64 v18; // [rsp+D8h] [rbp-18h]\n\n  v18 = __readfsqword(0x28u);\n  if ( (unsigned int)sub_409CFB(&v9, a2, a3) )\n    return 0LL;\n  *(_QWORD *)&tp.tm_sec = v9;\n  *(_QWORD *)&tp.tm_hour = v10;\n  *(_QWORD *)&tp.tm_mon = v11;\n  *(_QWORD *)&tp.tm_wday = v12;\n  *(&tp.tm_isdst + 1) = HIDWORD(v13);\n  tp.tm_gmtoff = v14;\n  tp.tm_zone = v15;\n  tp.tm_isdst = -1;\n  timer = mktime(&tp);\n  if ( timer == -1 )\n  {\n    v7 = localtime(&timer);\n    if ( !v7 )\n      return 0LL;\n  }\n  else\n  {\n    v7 = &tp;\n  }\n  if ( !(HIDWORD(v9) ^ v7->tm_min | (unsigned int)v10 ^ v7->tm_hour | HIDWORD(v10) ^ v7->tm_mday | (unsigned int)v11 ^ v7->tm_mon | v7->tm_year ^ HIDWORD(v11) | (unsigned int)v9 ^ v7->tm_sec) )\n    goto LABEL_12;\n  if ( (_DWORD)v9 != 60 )\n    return 0LL;\n  v8 = stpcpy(dest, a2);\n  strcpy(v8 - 2, \"59\");\n  if ( (unsigned __int8)sub_409FCC(v6, dest, a3) != 1 )\n    return 0LL;\nLABEL_12:\n  *a1 = timer;\n  return 1LL;\n}\n"], [4235756, "sub_40A1EC", "char *__fastcall sub_40A1EC(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_611310 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4235987, "sub_40A2D3", "__int64 __fastcall sub_40A2D3(unsigned int a1, __int64 a2)\n{\n  return sub_40B782(a1, 6LL, a2);\n}\n"], [4236023, "sub_40A2F7", "__int64 __fastcall sub_40A2F7(__int64 a1)\n{\n  return sub_40A2D3(0, a1);\n}\n"], [4236054, "sub_40A316", "__int64 __fastcall sub_40A316(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_611320;\n  v4 = sub_40C5CF(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4236127, "sub_40A35F", "__int64 __fastcall sub_40A35F(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_611320;\n  return *(unsigned int *)v1;\n}\n"], [4236157, "sub_40A37D", "__int64 *__fastcall sub_40A37D(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_611320;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4236193, "sub_40A3A1", "__int64 __fastcall sub_40A3A1(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_611320;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4236329, "sub_40A429", "__int64 __fastcall sub_40A429(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_611320;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4236380, "sub_40A45C", "__int64 *__fastcall sub_40A45C(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_611320;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4236470, "sub_40A4B6", "_QWORD *__fastcall sub_40A4B6(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4236590, "sub_40A52E", "char *__fastcall sub_40A52E(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4236651, "sub_40A56B", "unsigned __int64 __fastcall sub_40A56B(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_40A52E((const char *)L\"`'\", a5);\n        a9 = sub_40A52E((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_40A56B(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4239798, "sub_40B1B6", "unsigned __int64 __fastcall sub_40B1B6(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_611320;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_40A56B(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4239958, "sub_40B256", "__int64 __fastcall sub_40B256(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40B288(a1, a2, 0LL, a3);\n}\n"], [4240008, "sub_40B288", "__int64 __fastcall sub_40B288(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_611320;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_40A56B(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_40C491(v10);\n  sub_40A56B(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4240308, "sub_40B3B4", "void sub_40B3B4()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_611280;\n  for ( i = 1; i < dword_611260; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_611360 )\n  {\n    free(ptr[1]);\n    qword_611270 = 256LL;\n    off_611278 = &unk_611360;\n  }\n  if ( ptr != (void **)&qword_611270 )\n  {\n    free(ptr);\n    off_611280 = &qword_611270;\n  }\n  dword_611260 = 1;\n}\n"], [4240479, "sub_40B45F", "void *__fastcall sub_40B45F(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_611280;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_611260 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_611280 == &qword_611270;\n    if ( off_611280 == &qword_611270 )\n      v4 = 0LL;\n    else\n      v4 = off_611280;\n    v12 = (__int64 *)sub_40C4E0(v4, 16 * v14);\n    off_611280 = v12;\n    if ( v9 )\n    {\n      v5 = off_611278;\n      *v12 = qword_611270;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_611260], 0, 16 * (v14 - (unsigned int)dword_611260));\n    dword_611260 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_40A56B((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_611360 )\n      free(ptr);\n    ptr = (void *)sub_40C491(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_40A56B((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4241125, "sub_40B6E5", "void *__fastcall sub_40B6E5(int a1, __int64 a2)\n{\n  return sub_40B45F(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_611320);\n}\n"], [4241168, "sub_40B710", "void *__fastcall sub_40B710(int a1, __int64 a2, size_t a3)\n{\n  return sub_40B45F(a1, a2, a3, (__int64)&qword_611320);\n}\n"], [4241212, "sub_40B73C", "void *__fastcall sub_40B73C(__int64 a1)\n{\n  return sub_40B6E5(0, a1);\n}\n"], [4241243, "sub_40B75B", "void *__fastcall sub_40B75B(__int64 a1, size_t a2)\n{\n  return sub_40B710(0, a1, a2);\n}\n"], [4241282, "sub_40B782", "void *__fastcall sub_40B782(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_40A4B6(v5, a2);\n  return sub_40B45F(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4241347, "sub_40B7C3", "void *__fastcall sub_40B7C3(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_40A4B6(v7, a2);\n  return sub_40B45F(a1, a3, a4, (__int64)v7);\n}\n"], [4241410, "sub_40B802", "void *__fastcall sub_40B802(int a1, __int64 a2)\n{\n  return sub_40B782(0, a1, a2);\n}\n"], [4241446, "sub_40B826", "void *__fastcall sub_40B826(int a1, __int64 a2, size_t a3)\n{\n  return sub_40B7C3(0, a1, a2, a3);\n}\n"], [4241490, "sub_40B852", "void *__fastcall sub_40B852(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_611320;\n  v4[1] = qword_611328;\n  v4[2] = qword_611330;\n  v4[3] = qword_611338;\n  v4[4] = qword_611340;\n  v4[5] = qword_611348;\n  v4[6] = qword_611350;\n  sub_40A3A1(v4, a3, 1);\n  return sub_40B45F(0, a1, a2, (__int64)v4);\n}\n"], [4241638, "sub_40B8E6", "void *__fastcall sub_40B8E6(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40B852(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4241680, "sub_40B910", "void *__fastcall sub_40B910(__int64 a1)\n{\n  return sub_40B8E6(a1, 0x3Au);\n}\n"], [4241711, "sub_40B92F", "void *__fastcall sub_40B92F(__int64 a1, size_t a2)\n{\n  return sub_40B852(a1, a2, 0x3Au);\n}\n"], [4241753, "sub_40B959", "__int64 __fastcall sub_40B959(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_40B98F(a1, a2, a3, a4, -1LL);\n}\n"], [4241807, "sub_40B98F", "void *__fastcall sub_40B98F(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_611320;\n  v8[1] = qword_611328;\n  v8[2] = qword_611330;\n  v8[3] = qword_611338;\n  v8[4] = qword_611340;\n  v8[5] = qword_611348;\n  v8[6] = qword_611350;\n  sub_40A45C(v8, a2, a3);\n  return sub_40B45F(a1, a4, a5, (__int64)v8);\n}\n"], [4241958, "sub_40BA26", "__int64 __fastcall sub_40BA26(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40B959(0, a1, a2, a3);\n}\n"], [4242005, "sub_40BA55", "void *__fastcall sub_40BA55(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_40B98F(0, a1, a2, a3, a4);\n}\n"], [4242063, "sub_40BA8F", "int __fastcall sub_40BA8F(const struct timespec *a1)\n{\n  int v2; // [rsp+1Ch] [rbp-14h]\n  struct timeval tv; // [rsp+20h] [rbp-10h] BYREF\n\n  v2 = clock_settime(0, a1);\n  if ( !v2 || *__errno_location() == 1 )\n    return v2;\n  tv.tv_sec = a1->tv_sec;\n  tv.tv_usec = a1->tv_nsec / 1000;\n  return settimeofday(&tv, 0LL);\n}\n"], [4242193, "sub_40BB11", "int __fastcall sub_40BB11(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4243708, "sub_40C0FC", "int __fastcall sub_40C0FC(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_40BB11(a1, a2, a3, a4, a5, i);\n}\n"], [4243818, "sub_40C16A", "int __fastcall sub_40C16A(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_40BB11(a1, a2, a3, a4, v8, i);\n}\n"], [4244035, "sub_40C243", "int sub_40C243(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40C16A(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4244217, "sub_40C2F9", "int sub_40C2F9()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4244322, "sub_40C362", "__int64 __fastcall sub_40C362(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_40C62D(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_40C4AB(a2 * a1);\n}\n"], [4244384, "sub_40C3A0", "__int64 __fastcall sub_40C3A0(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_40C62D(a1, a2, v4);\n  return sub_40C4E0(a1, a3 * a2);\n}\n"], [4244460, "sub_40C3EC", "__int64 __fastcall sub_40C3EC(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_40C62D(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40C4E0(a1, a3 * v6);\n}\n"], [4244625, "sub_40C491", "__int64 __fastcall sub_40C491(__int64 a1)\n{\n  return sub_40C4AB(a1);\n}\n"], [4244651, "sub_40C4AB", "void *__fastcall sub_40C4AB(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_40C62D(a1, a2, v2);\n  return v4;\n}\n"], [4244704, "sub_40C4E0", "void *__fastcall sub_40C4E0(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_40C62D(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4244801, "sub_40C541", "__int64 __fastcall sub_40C541(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_40C3EC(a1, a2, 1uLL);\n}\n"], [4244843, "sub_40C56B", "void *__fastcall sub_40C56B(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40C4AB(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4244886, "sub_40C596", "void *__fastcall sub_40C596(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_40C62D(a1, a2, v2);\n  return v4;\n}\n"], [4244943, "sub_40C5CF", "void *__fastcall sub_40C5CF(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40C4AB(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4244992, "sub_40C600", "void *__fastcall sub_40C600(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40C5CF(a1, v1 + 1);\n}\n"], [4245037, "sub_40C62D", "void __noreturn sub_40C62D()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4245090, "sub_40C662", "int __fastcall sub_40C662(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40C74A(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4245271, "sub_40C717", "__int64 __fastcall sub_40C717(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_40C795(a1, 0LL, 1LL);\n  return result;\n}\n"], [4245322, "sub_40C74A", "int __fastcall sub_40C74A(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40C717(a1);\n  return fflush(a1);\n}\n"], [4245397, "sub_40C795", "int __fastcall sub_40C795(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4245581, "sub_40C84D", "_BOOL8 __fastcall sub_40C84D(int a1)\n{\n  return a1 >= 0 && a1 <= 127;\n}\n"], [4245617, "sub_40C871", "_BOOL8 __fastcall sub_40C871(int a1)\n{\n  return a1 > 47 && a1 <= 57 || (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 90;\n}\n"], [4245675, "sub_40C8AB", "_BOOL8 __fastcall sub_40C8AB(int a1)\n{\n  return (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 90;\n}\n"], [4245721, "sub_40C8D9", "_BOOL8 __fastcall sub_40C8D9(int a1)\n{\n  return a1 == 32 || a1 == 9;\n}\n"], [4245757, "sub_40C8FD", "_BOOL8 __fastcall sub_40C8FD(int a1)\n{\n  return (a1 & 0xFFFFFFE0) == 0 || a1 == 127;\n}\n"], [4245797, "sub_40C925", "_BOOL8 __fastcall sub_40C925(int a1)\n{\n  return a1 > 47 && a1 <= 57;\n}\n"], [4245833, "sub_40C949", "_BOOL8 __fastcall sub_40C949(int a1)\n{\n  return a1 > 96 && a1 <= 122;\n}\n"], [4245869, "sub_40C96D", "_BOOL8 __fastcall sub_40C96D(int a1)\n{\n  return a1 > 32 && a1 <= 126;\n}\n"], [4245905, "sub_40C991", "_BOOL8 __fastcall sub_40C991(int a1)\n{\n  return a1 > 31 && a1 <= 126;\n}\n"], [4245941, "sub_40C9B5", "_BOOL8 __fastcall sub_40C9B5(int a1)\n{\n  return a1 > 32 && a1 <= 126 && (a1 <= 47 || a1 > 57) && ((int)(a1 & 0xFFFFFFDF) <= 64 || (int)(a1 & 0xFFFFFFDF) > 90);\n}\n"], [4246011, "sub_40C9FB", "_BOOL8 __fastcall sub_40C9FB(int a1)\n{\n  return a1 == 32 || a1 == 9 || a1 == 10 || a1 == 11 || a1 == 12 || a1 == 13;\n}\n"], [4246071, "sub_40CA37", "_BOOL8 __fastcall sub_40CA37(int a1)\n{\n  return a1 > 64 && a1 <= 90;\n}\n"], [4246107, "sub_40CA5B", "_BOOL8 __fastcall sub_40CA5B(int a1)\n{\n  return a1 > 47 && a1 <= 57 || (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 70;\n}\n"], [4246165, "sub_40CA95", "__int64 __fastcall sub_40CA95(int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 <= 64 || a1 > 90 )\n    result = (unsigned int)a1;\n  else\n    result = (unsigned int)(a1 + 32);\n  return result;\n}\n"], [4246197, "sub_40CAB5", "__int64 __fastcall sub_40CAB5(int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 <= 96 || a1 > 122 )\n    result = (unsigned int)a1;\n  else\n    result = (unsigned int)(a1 - 32);\n  return result;\n}\n"], [4246229, "sub_40CAD5", "__int64 __fastcall sub_40CAD5(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_40C662(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4246368, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_610E18 - off_610E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_610E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4246480, "fini", "void fini(void)\n{\n  ;\n}\n"], [4246496, "sub_40CBE0", "int __fastcall sub_40CBE0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_611238 )\n    v1 = (void *)qword_611238;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4246528, "sub_40CC00", "int __fastcall sub_40CC00(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4246544, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]