[[4198616, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4198656, "sub_401100", "__int64 sub_401100()\n{\n  return qword_607010();\n}\n"], [4198672, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198688, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198704, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198720, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198736, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198752, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198768, ".getc_unlocked", "// attributes: thunk\nint getc_unlocked(FILE *stream)\n{\n  return getc_unlocked(stream);\n}\n"], [4198784, ".clearerr_unlocked", "// attributes: thunk\nvoid clearerr_unlocked(FILE *stream)\n{\n  clearerr_unlocked(stream);\n}\n"], [4198800, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4198816, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4198832, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4198848, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4198864, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4198880, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4198896, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4198912, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4198928, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4198944, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4198960, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4198976, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4198992, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199008, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199024, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199040, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199056, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199072, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199088, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199104, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199120, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199136, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199152, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199168, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199184, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199200, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199216, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199232, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199248, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199264, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199280, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199296, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199312, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199328, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4199344, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199360, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199376, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199392, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199408, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199424, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199440, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4199488, "sub_401440", "signed __int64 sub_401440()\n{\n  signed __int64 result; // rax\n\n  result = &unk_6071EF - &unk_6071E8;\n  if ( (unsigned __int64)(&unk_6071EF - &unk_6071E8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199536, "sub_401470", "__int64 sub_401470()\n{\n  return 0LL;\n}\n"], [4199600, "sub_4014B0", "signed __int64 sub_4014B0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_607258 )\n  {\n    result = sub_401440();\n    byte_607258 = 1;\n  }\n  return result;\n}\n"], [4199632, "sub_4014D0", "__int64 sub_4014D0()\n{\n  return sub_401470();\n}\n"], [4199677, "sub_4014FD", "int sub_4014FD()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402453(qword_607288);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402453(qword_607288);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402453(qword_607288);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4199943, "sub_401607", "__int64 __fastcall sub_401607(__int64 a1)\n{\n  return a1;\n}\n"], [4199957, "sub_401615", "__int64 __fastcall sub_401615(char *a1)\n{\n  char *v1; // rax\n  char *v2; // rdx\n  int v3; // eax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  char *v8; // rax\n  char *v9; // rax\n  char *v10; // rax\n  char *v11; // rax\n  char *v12; // rax\n  char *v14; // [rsp+8h] [rbp-18h]\n  char *v15; // [rsp+8h] [rbp-18h]\n  unsigned __int8 v16; // [rsp+17h] [rbp-9h]\n  char *v17; // [rsp+18h] [rbp-8h]\n\n  v14 = a1;\n  v17 = (char *)sub_4048C3(a1);\n  v16 = 0;\n  ptr = v17;\n  while ( *v14 )\n  {\n    if ( *v14 == 92 )\n    {\n      v15 = v14 + 1;\n      v3 = *v15;\n      if ( v3 == 102 )\n      {\n        v6 = v17++;\n        *v6 = 12;\n        goto LABEL_30;\n      }\n      if ( v3 > 102 )\n      {\n        if ( v3 == 114 )\n        {\n          v8 = v17++;\n          *v8 = 13;\n          goto LABEL_30;\n        }\n        if ( v3 > 114 )\n        {\n          if ( v3 == 116 )\n          {\n            v9 = v17++;\n            *v9 = 9;\n            goto LABEL_30;\n          }\n          if ( v3 == 118 )\n          {\n            v10 = v17++;\n            *v10 = 11;\n            goto LABEL_30;\n          }\n        }\n        else if ( v3 == 110 )\n        {\n          v7 = v17++;\n          *v7 = 10;\n          goto LABEL_30;\n        }\n      }\n      else\n      {\n        if ( v3 == 48 )\n        {\n          v4 = v17++;\n          *v4 = 0;\n          goto LABEL_30;\n        }\n        if ( v3 > 48 )\n        {\n          if ( v3 == 92 )\n          {\n            v11 = v17++;\n            *v11 = 92;\n            goto LABEL_30;\n          }\n          if ( v3 == 98 )\n          {\n            v5 = v17++;\n            *v5 = 8;\n            goto LABEL_30;\n          }\n        }\n        else if ( !*v15 )\n        {\n          v16 = 1;\n          break;\n        }\n      }\n      v12 = v17++;\n      *v12 = *v15;\nLABEL_30:\n      v14 = v15 + 1;\n    }\n    else\n    {\n      v1 = v17++;\n      v2 = v14++;\n      *v1 = *v2;\n    }\n  }\n  qword_607270 = (__int64)v17;\n  return v16;\n}\n"], [4200359, "sub_4017A7", "void __noreturn sub_4017A7()\n{\n  char *v0; // rbx\n  int *v1; // rax\n\n  v0 = gettext(\"write error\");\n  v1 = __errno_location();\n  error(1, *v1, v0);\n  abort();\n}\n"], [4200413, "sub_4017DD", "int __fastcall sub_4017DD(char a1)\n{\n  int result; // eax\n\n  result = putchar_unlocked(a1);\n  if ( result < 0 )\n    sub_4017A7();\n  return result;\n}\n"], [4200448, "sub_401800", "__int64 __fastcall sub_401800(unsigned __int64 a1, __int64 a2)\n{\n  const char *v2; // rbx\n  int *v3; // rax\n  char *v4; // rax\n  const char *v5; // rbx\n  int *v6; // rax\n  size_t v7; // rax\n  char v8; // al\n  unsigned __int8 v10; // [rsp+1Ch] [rbp-54h]\n  char v11; // [rsp+1Dh] [rbp-53h]\n  char v12; // [rsp+1Eh] [rbp-52h]\n  int v13; // [rsp+20h] [rbp-50h]\n  int errnum; // [rsp+24h] [rbp-4Ch]\n  unsigned __int64 i; // [rsp+28h] [rbp-48h]\n  char *v16; // [rsp+30h] [rbp-40h]\n  size_t n; // [rsp+38h] [rbp-38h]\n  unsigned __int64 j; // [rsp+40h] [rbp-30h]\n  __int64 v19; // [rsp+48h] [rbp-28h]\n  void *ptr; // [rsp+50h] [rbp-20h]\n  _QWORD *v21; // [rsp+58h] [rbp-18h]\n\n  v10 = 1;\n  ptr = (void *)sub_40476E(a1 + 2);\n  v21 = (_QWORD *)sub_404625(a1 + 1, 8LL);\n  v11 = 0;\n  for ( i = 0LL; i < a1; ++i )\n  {\n    if ( !strcmp(*(const char **)(8 * i + a2), \"-\") )\n    {\n      byte_607260 = 1;\n      v21[i] = stdin;\n    }\n    else\n    {\n      v21[i] = fopen(*(const char **)(8 * i + a2), \"r\");\n      if ( v21[i] )\n      {\n        if ( !fileno((FILE *)v21[i]) )\n          v11 = 1;\n      }\n      else\n      {\n        v2 = *(const char **)(8 * i + a2);\n        v3 = __errno_location();\n        error(1, *v3, \"%s\", v2);\n      }\n      sub_40253A(v21[i], 2LL);\n    }\n  }\n  if ( v11 && byte_607260 )\n  {\n    v4 = gettext(\"standard input is closed\");\n    error(1, 0, v4);\n  }\n  while ( i )\n  {\n    v12 = 0;\n    v16 = (char *)::ptr;\n    n = 0LL;\n    for ( j = 0LL; j < a1 && i; ++j )\n    {\n      v19 = 0LL;\n      if ( v21[j] )\n      {\n        v13 = getc_unlocked((FILE *)v21[j]);\n        errnum = *__errno_location();\n        if ( v13 != -1 && n )\n        {\n          if ( fwrite_unlocked(ptr, 1uLL, n, stdout) != n )\n            sub_4017A7();\n          n = 0LL;\n        }\n        while ( v13 != -1 )\n        {\n          ++v19;\n          if ( v13 == 10 )\n            break;\n          sub_4017DD(v13);\n          v13 = getc_unlocked((FILE *)v21[j]);\n          errnum = *__errno_location();\n        }\n      }\n      if ( v19 )\n      {\n        v12 = 1;\n        if ( j + 1 == a1 )\n        {\n          if ( v13 == -1 )\n            v8 = 10;\n          else\n            v8 = v13;\n          sub_4017DD(v8);\n        }\n        else\n        {\n          if ( v13 != 10 && v13 != -1 )\n            sub_4017DD(v13);\n          if ( *v16 )\n            sub_4017DD(*v16);\n          if ( ++v16 == (char *)qword_607270 )\n            v16 = (char *)::ptr;\n        }\n      }\n      else\n      {\n        if ( v21[j] )\n        {\n          if ( ferror_unlocked((FILE *)v21[j]) )\n          {\n            error(0, errnum, \"%s\", *(const char **)(8 * j + a2));\n            v10 = 0;\n          }\n          if ( v21[j] == stdin )\n          {\n            clearerr_unlocked((FILE *)v21[j]);\n          }\n          else if ( (unsigned int)sub_404925(v21[j]) == -1 )\n          {\n            v5 = *(const char **)(8 * j + a2);\n            v6 = __errno_location();\n            error(0, *v6, \"%s\", v5);\n            v10 = 0;\n          }\n          v21[j] = 0LL;\n          --i;\n        }\n        if ( j + 1 == a1 )\n        {\n          if ( v12 )\n          {\n            if ( n )\n            {\n              if ( fwrite_unlocked(ptr, 1uLL, n, stdout) != n )\n                sub_4017A7();\n              n = 0LL;\n            }\n            sub_4017DD(10);\n          }\n        }\n        else\n        {\n          if ( *v16 )\n          {\n            v7 = n++;\n            *((_BYTE *)ptr + v7) = *v16;\n          }\n          if ( ++v16 == (char *)qword_607270 )\n            v16 = (char *)::ptr;\n        }\n      }\n    }\n  }\n  free(v21);\n  free(ptr);\n  return v10;\n}\n"], [4201856, "sub_401D80", "__int64 __fastcall sub_401D80(__int64 a1, const char **a2)\n{\n  int v2; // eax\n  const char *v3; // rbx\n  int *v4; // rax\n  unsigned __int8 v8; // [rsp+12h] [rbp-2Eh]\n  bool v9; // [rsp+13h] [rbp-2Dh]\n  int v10; // [rsp+14h] [rbp-2Ch]\n  int errnum; // [rsp+18h] [rbp-28h]\n  int v12; // [rsp+1Ch] [rbp-24h]\n  char *v13; // [rsp+20h] [rbp-20h]\n  FILE *stream; // [rsp+28h] [rbp-18h]\n\n  v8 = 1;\n  while ( a1 )\n  {\n    v2 = strcmp(*a2, \"-\");\n    v9 = v2 == 0;\n    if ( v2 )\n    {\n      stream = fopen(*a2, \"r\");\n      if ( !stream )\n        goto LABEL_24;\n      sub_40253A(stream, 2LL);\n    }\n    else\n    {\n      byte_607260 = 1;\n      stream = (FILE *)stdin;\n    }\n    v13 = (char *)ptr;\n    v10 = getc_unlocked(stream);\n    errnum = *__errno_location();\n    if ( v10 != -1 )\n    {\n      while ( 1 )\n      {\n        v12 = getc_unlocked(stream);\n        if ( v12 == -1 )\n          break;\n        if ( v10 == 10 )\n        {\n          if ( *v13 )\n            sub_4017DD(*v13);\n          if ( ++v13 == (char *)qword_607270 )\n            v13 = (char *)ptr;\n        }\n        else\n        {\n          sub_4017DD(v10);\n        }\n        v10 = v12;\n      }\n      errnum = *__errno_location();\n      sub_4017DD(v10);\n    }\n    if ( v10 != 10 )\n      sub_4017DD(10);\n    if ( ferror_unlocked(stream) )\n    {\n      error(0, errnum, \"%s\", *a2);\n      v8 = 0;\n    }\n    if ( v9 )\n    {\n      clearerr_unlocked(stream);\n      goto LABEL_25;\n    }\n    if ( (unsigned int)sub_404925(stream) == -1 )\n    {\nLABEL_24:\n      v3 = *a2;\n      v4 = __errno_location();\n      error(0, *v4, \"%s\", v3);\n      v8 = 0;\n    }\nLABEL_25:\n    --a1;\n    ++a2;\n  }\n  return v8;\n}\n"], [4202391, "sub_401F97", "void __fastcall __noreturn sub_401F97(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n\n  v1 = qword_607288;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Write lines consisting of the sequentially corresponding lines from\\n\"\n           \"each FILE, separated by TABs, to standard output.\\n\"\n           \"With no FILE, or when FILE is -, read standard input.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -d, --delimiters=LIST   reuse characters from LIST instead of TABs\\n\"\n           \"  -s, --serial            paste one file at a time instead of in parallel\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v13, v12);\n    sub_4014FD();\n  }\n  exit(a1);\n}\n"], [4202648, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  const char *v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  int *v6; // rax\n  int argc; // [rsp+1Ch] [rbp-24h]\n  char v8; // [rsp+23h] [rbp-1Dh]\n  int v9; // [rsp+24h] [rbp-1Ch]\n  char *v10; // [rsp+28h] [rbp-18h]\n\n  argc = a1;\n  v10 = \"\\t\";\n  sub_402574(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_404C20(sub_402368);\n  byte_607260 = 0;\n  byte_607261 = 0;\n  while ( 1 )\n  {\n    v9 = getopt_long(a1, a2, \"d:s\", &longopts, 0LL);\n    if ( v9 == -1 )\n    {\n      if ( optind == a1 )\n      {\n        argc = a1 + 1;\n        a2[a1] = (char *)sub_401607((__int64)\"-\");\n      }\n      if ( (unsigned int)sub_401615(v10) )\n      {\n        sub_4026C2(0LL, 5LL);\n        v4 = sub_403C55(v10);\n        v5 = gettext(\"delimiter list ends with an unescaped backslash: %s\");\n        error(1, 0, v5, v4);\n      }\n      if ( byte_607261 != 1 )\n        v8 = sub_401800(argc - optind, (__int64)&a2[optind]);\n      else\n        v8 = sub_401D80(argc - optind, (const char **)&a2[optind]);\n      free(ptr);\n      if ( byte_607260 )\n      {\n        if ( (unsigned int)sub_404925(stdin) == -1 )\n        {\n          v6 = __errno_location();\n          error(1, *v6, \"-\");\n        }\n      }\n      exit(v8 == 0);\n    }\n    if ( v9 == -130 )\n      sub_401F97(0);\n    if ( v9 <= -130 )\n      break;\n    if ( v9 == 100 )\n    {\n      if ( *(_BYTE *)optarg )\n        v3 = (const char *)optarg;\n      else\n        v3 = \"\\\\0\";\n      v10 = (char *)v3;\n    }\n    else\n    {\n      if ( v9 != 115 )\n        goto LABEL_16;\n      byte_607261 = 1;\n    }\n  }\n  if ( v9 == -131 )\n  {\n    sub_404506(\n      (_DWORD)stdout,\n      (unsigned int)\"paste\",\n      (unsigned int)\"GNU coreutils\",\n      (_DWORD)off_6071B0,\n      (unsigned int)\"David M. Ihnat\",\n      (unsigned int)\"David MacKenzie\",\n      0);\n    exit(0);\n  }\nLABEL_16:\n  sub_401F97(1);\n}\n"], [4203347, "sub_402353", "__int64 __fastcall sub_402353(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_607280 = a1;\n  return result;\n}\n"], [4203368, "sub_402368", "__int64 sub_402368()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_404B10(stdout) && (byte_607280 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_607278 )\n    {\n      v0 = (const char *)sub_403C55(qword_607278);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_404B10(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4203603, "sub_402453", "_BYTE *__fastcall sub_402453(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4203708, "sub_4024BC", "size_t __fastcall sub_4024BC(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4203786, "sub_40250A", "int __fastcall sub_40250A(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4203834, "sub_40253A", "void __fastcall sub_40253A(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_40250A(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4203892, "sub_402574", "char *__fastcall sub_402574(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_607288 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4204123, "sub_40265B", "__int64 __fastcall sub_40265B(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6072A0;\n  v4 = sub_404892(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4204196, "sub_4026A4", "__int64 __fastcall sub_4026A4(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6072A0;\n  return *(unsigned int *)v1;\n}\n"], [4204226, "sub_4026C2", "__int64 *__fastcall sub_4026C2(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6072A0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4204262, "sub_4026E6", "__int64 __fastcall sub_4026E6(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6072A0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4204398, "sub_40276E", "__int64 __fastcall sub_40276E(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6072A0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4204449, "sub_4027A1", "__int64 *__fastcall sub_4027A1(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6072A0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4204539, "sub_4027FB", "_QWORD *__fastcall sub_4027FB(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4204659, "sub_402873", "char *__fastcall sub_402873(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4204720, "sub_4028B0", "unsigned __int64 __fastcall sub_4028B0(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_402873((const char *)L\"`'\", a5);\n        a9 = sub_402873((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4028B0(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4207867, "sub_4034FB", "unsigned __int64 __fastcall sub_4034FB(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6072A0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4028B0(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4208027, "sub_40359B", "__int64 __fastcall sub_40359B(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4035CD(a1, a2, 0LL, a3);\n}\n"], [4208077, "sub_4035CD", "__int64 __fastcall sub_4035CD(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6072A0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4028B0(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_404754(v10);\n  sub_4028B0(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4208377, "sub_4036F9", "void sub_4036F9()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_6071E0;\n  for ( i = 1; i < dword_6071C0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6072E0 )\n  {\n    free(ptr[1]);\n    qword_6071D0 = 256LL;\n    off_6071D8 = &unk_6072E0;\n  }\n  if ( ptr != (void **)&qword_6071D0 )\n  {\n    free(ptr);\n    off_6071E0 = &qword_6071D0;\n  }\n  dword_6071C0 = 1;\n}\n"], [4208548, "sub_4037A4", "void *__fastcall sub_4037A4(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_6071E0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6071C0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_6071E0 == &qword_6071D0;\n    if ( off_6071E0 == &qword_6071D0 )\n      v4 = 0LL;\n    else\n      v4 = off_6071E0;\n    v12 = (__int64 *)sub_4047A3(v4, 16 * v14);\n    off_6071E0 = v12;\n    if ( v9 )\n    {\n      v5 = off_6071D8;\n      *v12 = qword_6071D0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6071C0], 0, 16 * (v14 - (unsigned int)dword_6071C0));\n    dword_6071C0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4028B0((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6072E0 )\n      free(ptr);\n    ptr = (void *)sub_404754(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_4028B0((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4209194, "sub_403A2A", "void *__fastcall sub_403A2A(int a1, __int64 a2)\n{\n  return sub_4037A4(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6072A0);\n}\n"], [4209237, "sub_403A55", "void *__fastcall sub_403A55(int a1, __int64 a2, size_t a3)\n{\n  return sub_4037A4(a1, a2, a3, (__int64)&qword_6072A0);\n}\n"], [4209281, "sub_403A81", "void *__fastcall sub_403A81(__int64 a1)\n{\n  return sub_403A2A(0, a1);\n}\n"], [4209312, "sub_403AA0", "void *__fastcall sub_403AA0(__int64 a1, size_t a2)\n{\n  return sub_403A55(0, a1, a2);\n}\n"], [4209351, "sub_403AC7", "void *__fastcall sub_403AC7(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_4027FB(v5, a2);\n  return sub_4037A4(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4209416, "sub_403B08", "void *__fastcall sub_403B08(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_4027FB(v7, a2);\n  return sub_4037A4(a1, a3, a4, (__int64)v7);\n}\n"], [4209479, "sub_403B47", "void *__fastcall sub_403B47(int a1, __int64 a2)\n{\n  return sub_403AC7(0, a1, a2);\n}\n"], [4209515, "sub_403B6B", "void *__fastcall sub_403B6B(int a1, __int64 a2, size_t a3)\n{\n  return sub_403B08(0, a1, a2, a3);\n}\n"], [4209559, "sub_403B97", "void *__fastcall sub_403B97(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6072A0;\n  v4[1] = qword_6072A8;\n  v4[2] = qword_6072B0;\n  v4[3] = qword_6072B8;\n  v4[4] = qword_6072C0;\n  v4[5] = qword_6072C8;\n  v4[6] = qword_6072D0;\n  sub_4026E6(v4, a3, 1);\n  return sub_4037A4(0, a1, a2, (__int64)v4);\n}\n"], [4209707, "sub_403C2B", "void *__fastcall sub_403C2B(__int64 a1, unsigned __int8 a2)\n{\n  return sub_403B97(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4209749, "sub_403C55", "void *__fastcall sub_403C55(__int64 a1)\n{\n  return sub_403C2B(a1, 0x3Au);\n}\n"], [4209780, "sub_403C74", "void *__fastcall sub_403C74(__int64 a1, size_t a2)\n{\n  return sub_403B97(a1, a2, 0x3Au);\n}\n"], [4209822, "sub_403C9E", "__int64 __fastcall sub_403C9E(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_403CD4(a1, a2, a3, a4, -1LL);\n}\n"], [4209876, "sub_403CD4", "void *__fastcall sub_403CD4(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6072A0;\n  v8[1] = qword_6072A8;\n  v8[2] = qword_6072B0;\n  v8[3] = qword_6072B8;\n  v8[4] = qword_6072C0;\n  v8[5] = qword_6072C8;\n  v8[6] = qword_6072D0;\n  sub_4027A1(v8, a2, a3);\n  return sub_4037A4(a1, a4, a5, (__int64)v8);\n}\n"], [4210027, "sub_403D6B", "__int64 __fastcall sub_403D6B(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403C9E(0, a1, a2, a3);\n}\n"], [4210074, "sub_403D9A", "void *__fastcall sub_403D9A(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_403CD4(0, a1, a2, a3, a4);\n}\n"], [4210132, "sub_403DD4", "int __fastcall sub_403DD4(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4211647, "sub_4043BF", "int __fastcall sub_4043BF(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_403DD4(a1, a2, a3, a4, a5, i);\n}\n"], [4211757, "sub_40442D", "int __fastcall sub_40442D(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_403DD4(a1, a2, a3, a4, v8, i);\n}\n"], [4211974, "sub_404506", "int sub_404506(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40442D(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4212156, "sub_4045BC", "int sub_4045BC()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4212261, "sub_404625", "__int64 __fastcall sub_404625(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4048F0(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_40476E(a2 * a1);\n}\n"], [4212323, "sub_404663", "__int64 __fastcall sub_404663(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4048F0(a1, a2, v4);\n  return sub_4047A3(a1, a3 * a2);\n}\n"], [4212399, "sub_4046AF", "__int64 __fastcall sub_4046AF(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4048F0(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_4047A3(a1, a3 * v6);\n}\n"], [4212564, "sub_404754", "__int64 __fastcall sub_404754(__int64 a1)\n{\n  return sub_40476E(a1);\n}\n"], [4212590, "sub_40476E", "void *__fastcall sub_40476E(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4048F0(a1, a2, v2);\n  return v4;\n}\n"], [4212643, "sub_4047A3", "void *__fastcall sub_4047A3(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4048F0(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4212740, "sub_404804", "__int64 __fastcall sub_404804(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_4046AF(a1, a2, 1uLL);\n}\n"], [4212782, "sub_40482E", "void *__fastcall sub_40482E(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40476E(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4212825, "sub_404859", "void *__fastcall sub_404859(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4048F0(a1, a2, v2);\n  return v4;\n}\n"], [4212882, "sub_404892", "void *__fastcall sub_404892(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40476E(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4212931, "sub_4048C3", "void *__fastcall sub_4048C3(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_404892(a1, v1 + 1);\n}\n"], [4212976, "sub_4048F0", "void __noreturn sub_4048F0()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4213029, "sub_404925", "int __fastcall sub_404925(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_404A0D(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4213210, "sub_4049DA", "__int64 __fastcall sub_4049DA(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_404A58(a1, 0LL, 1LL);\n  return result;\n}\n"], [4213261, "sub_404A0D", "int __fastcall sub_404A0D(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_4049DA(a1);\n  return fflush(a1);\n}\n"], [4213336, "sub_404A58", "int __fastcall sub_404A58(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4213520, "sub_404B10", "__int64 __fastcall sub_404B10(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_404925(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4213664, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_606E18 - off_606E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_606E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4213776, "fini", "void fini(void)\n{\n  ;\n}\n"], [4213792, "sub_404C20", "int __fastcall sub_404C20(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6071A8 )\n    v1 = (void *)qword_6071A8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4213820, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]