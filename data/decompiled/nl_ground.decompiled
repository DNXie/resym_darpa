[[4199232, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199264, "sub_401360", "__int64 sub_401360()\n{\n  return qword_609010();\n}\n"], [4199280, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199296, ".strtoimax", "// attributes: thunk\nintmax_t strtoimax(const char *nptr, char **endptr, int base)\n{\n  return strtoimax(nptr, endptr, base);\n}\n"], [4199312, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199328, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199344, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199360, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199376, ".strcpy", "// attributes: thunk\nchar *strcpy(char *dest, const char *src)\n{\n  return strcpy(dest, src);\n}\n"], [4199392, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199408, ".getc_unlocked", "// attributes: thunk\nint getc_unlocked(FILE *stream)\n{\n  return getc_unlocked(stream);\n}\n"], [4199424, ".clearerr_unlocked", "// attributes: thunk\nvoid clearerr_unlocked(FILE *stream)\n{\n  clearerr_unlocked(stream);\n}\n"], [4199440, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199456, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199472, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199488, ".stpcpy", "// attributes: thunk\nchar *stpcpy(char *dest, const char *src)\n{\n  return stpcpy(dest, src);\n}\n"], [4199504, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199520, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199536, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199552, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199568, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199584, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199600, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199616, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199632, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199648, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199664, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199680, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199696, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199712, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199728, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199744, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199760, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199776, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199792, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199808, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199824, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199840, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4199856, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199872, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199888, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199904, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199920, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199936, ".re_search", "// attributes: thunk\nint re_search(struct re_pattern_buffer *buffer, const char *string, int length, int start, int range, struct re_registers *regs)\n{\n  return re_search(buffer, string, length, start, range, regs);\n}\n"], [4199952, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199968, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199984, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200000, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200016, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200032, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200048, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200064, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200080, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200096, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200112, ".re_compile_pattern", "// attributes: thunk\nconst char *re_compile_pattern(const char *pattern, size_t length, struct re_pattern_buffer *buffer)\n{\n  return re_compile_pattern(pattern, length, buffer);\n}\n"], [4200128, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200144, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200160, ".feof_unlocked", "// attributes: thunk\nint feof_unlocked(FILE *stream)\n{\n  return feof_unlocked(stream);\n}\n"], [4200176, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200192, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200240, "sub_401730", "signed __int64 sub_401730()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60928F - &unk_609288;\n  if ( (unsigned __int64)(&unk_60928F - &unk_609288) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200288, "sub_401760", "__int64 sub_401760()\n{\n  return 0LL;\n}\n"], [4200352, "sub_4017A0", "signed __int64 sub_4017A0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_6092F8 )\n  {\n    result = sub_401730();\n    byte_6092F8 = 1;\n  }\n  return result;\n}\n"], [4200384, "sub_4017C0", "__int64 sub_4017C0()\n{\n  return sub_401760();\n}\n"], [4200429, "sub_4017ED", "int sub_4017ED()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402A18(qword_609768);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402A18(qword_609768);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402A18(qword_609768);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200695, "sub_4018F7", "void __fastcall __noreturn sub_4018F7(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n\n  v1 = qword_609768;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Write each FILE to standard output, with line numbers added.\\n\"\n           \"With no FILE, or when FILE is -, read standard input.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -b, --body-numbering=STYLE      use STYLE for numbering body lines\\n\"\n           \"  -d, --section-delimiter=CC      use CC for separating logical pages\\n\"\n           \"  -f, --footer-numbering=STYLE    use STYLE for numbering footer lines\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -h, --header-numbering=STYLE    use STYLE for numbering header lines\\n\"\n            \"  -i, --line-increment=NUMBER     line number increment at each line\\n\"\n            \"  -l, --join-blank-lines=NUMBER   group of NUMBER empty lines counted as one\\n\"\n            \"  -n, --number-format=FORMAT      insert line numbers according to FORMAT\\n\"\n            \"  -p, --no-renumber               do not reset line numbers at logical pages\\n\"\n            \"  -s, --number-separator=STRING   add STRING after (possible) line number\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"  -v, --starting-line-number=NUMBER  first line number on each logical page\\n\"\n            \"  -w, --number-width=NUMBER       use NUMBER columns for line numbers\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"\\n\"\n            \"By default, selects -v1 -i1 -l1 -sTAB -w6 -nrn -hn -bt -fn.  CC are\\n\"\n            \"two delimiter characters for separating logical pages, a missing\\n\"\n            \"second character implies :.  Type \\\\\\\\ for \\\\.  STYLE is one of:\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\n            \"\\n\"\n            \"  a         number all lines\\n\"\n            \"  t         number only nonempty lines\\n\"\n            \"  n         number no lines\\n\"\n            \"  pBRE      number only lines that contain a match for the basic regular\\n\"\n            \"            expression, BRE\\n\"\n            \"\\n\"\n            \"FORMAT is one of:\\n\"\n            \"\\n\"\n            \"  ln   left justified, no leading zeros\\n\"\n            \"  rn   right justified, no leading zeros\\n\"\n            \"  rz   right justified, leading zeros\\n\"\n            \"\\n\");\n    fputs_unlocked(v21, v20);\n    sub_4017ED();\n  }\n  exit(a1);\n}\n"], [4201064, "sub_401A68", "__int64 __fastcall sub_401A68(char **a1, struct re_pattern_buffer *a2, char *a3)\n{\n  int v3; // eax\n  char *v4; // rax\n  size_t v5; // rax\n  unsigned __int8 v7; // [rsp+27h] [rbp-9h]\n  const char *v8; // [rsp+28h] [rbp-8h]\n\n  v7 = 1;\n  v3 = *optarg;\n  if ( v3 == 110 )\n  {\nLABEL_7:\n    *a1 = optarg;\n    return v7;\n  }\n  if ( v3 <= 110 )\n  {\n    if ( v3 != 97 )\n      return 0;\n    goto LABEL_7;\n  }\n  if ( v3 != 112 )\n  {\n    if ( v3 != 116 )\n      return 0;\n    goto LABEL_7;\n  }\n  v4 = optarg++;\n  *a1 = v4;\n  a2->buffer = 0LL;\n  a2->allocated = 0LL;\n  a2->fastmap = a3;\n  a2->translate = 0LL;\n  re_syntax_options = 710LL;\n  v5 = strlen(optarg);\n  v8 = re_compile_pattern(optarg, v5, a2);\n  if ( v8 )\n    error(1, 0, \"%s\", v8);\n  return v7;\n}\n"], [4201335, "sub_401B77", "__int64 sub_401B77()\n{\n  char *v0; // rax\n  __int64 result; // rax\n  __int64 v2; // [rsp+8h] [rbp-8h]\n\n  printf(off_609240, (unsigned int)dword_609238, qword_609740, off_609208);\n  v2 = qword_609740 + qword_609220;\n  if ( qword_609740 + qword_609220 < qword_609740 )\n  {\n    v0 = gettext(\"line number overflow\");\n    error(1, 0, v0);\n  }\n  result = v2;\n  qword_609740 = v2;\n  return result;\n}\n"], [4201463, "sub_401BF7", "int sub_401BF7()\n{\n  qword_609300 = (__int64)off_6091F8[0];\n  buffer = (struct re_pattern_buffer *)&unk_609360;\n  if ( byte_609228 )\n    qword_609740 = qword_609218;\n  return putchar_unlocked(10);\n}\n"], [4201529, "sub_401C39", "int sub_401C39()\n{\n  qword_609300 = (__int64)off_6091F0[0];\n  buffer = (struct re_pattern_buffer *)&unk_609320;\n  return putchar_unlocked(10);\n}\n"], [4201570, "sub_401C62", "int sub_401C62()\n{\n  qword_609300 = (__int64)off_609200[0];\n  buffer = (struct re_pattern_buffer *)&unk_6093A0;\n  return putchar_unlocked(10);\n}\n"], [4201611, "sub_401C8B", "size_t sub_401C8B()\n{\n  int v0; // eax\n  int v1; // eax\n  char *v2; // rbx\n  int *v3; // rax\n\n  v0 = *(char *)qword_609300;\n  if ( v0 == 110 )\n    goto LABEL_21;\n  if ( v0 > 110 )\n  {\n    if ( v0 != 112 )\n    {\n      if ( v0 != 116 )\n        return fwrite_unlocked(s1, 1uLL, n, stdout);\n      if ( n <= 1 )\n        goto LABEL_21;\nLABEL_19:\n      sub_401B77();\n      return fwrite_unlocked(s1, 1uLL, n, stdout);\n    }\n    v1 = re_search(buffer, s1, n - 1, 0, n - 1, 0LL);\n    if ( v1 == -2 )\n    {\n      v2 = gettext(\"error in regular expression search\");\n      v3 = __errno_location();\n      error(1, *v3, v2);\n    }\n    else if ( v1 != -1 )\n    {\n      goto LABEL_19;\n    }\nLABEL_21:\n    fputs_unlocked(s, stdout);\n    return fwrite_unlocked(s1, 1uLL, n, stdout);\n  }\n  if ( v0 != 97 )\n    return fwrite_unlocked(s1, 1uLL, n, stdout);\n  if ( qword_609230 <= 1 )\n    goto LABEL_19;\n  if ( n <= 1 && ++qword_609750 != qword_609230 )\n    goto LABEL_21;\n  sub_401B77();\n  qword_609750 = 0LL;\n  return fwrite_unlocked(s1, 1uLL, n, stdout);\n}\n"], [4202072, "sub_401E58", "__int64 sub_401E58()\n{\n  size_t v1; // [rsp+8h] [rbp-8h]\n\n  v1 = n - 1;\n  if ( n - 1 <= 1 || memcmp(s1, src, 2uLL) )\n    return 3LL;\n  if ( v1 == qword_6096F0 && !memcmp(s1, dest, qword_6096F0) )\n    return 0LL;\n  if ( v1 == qword_609700 && !memcmp(s1, qword_6096F8, qword_609700) )\n    return 1LL;\n  if ( v1 == qword_609710 && !memcmp(s1, qword_609708, qword_609710) )\n    return 2LL;\n  return 3LL;\n}\n"], [4202321, "sub_401F51", "__int64 __fastcall sub_401F51(__int64 a1)\n{\n  int v1; // eax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = sub_402B5D(&unk_609720, a1);\n    if ( !result )\n      break;\n    v1 = sub_401E58();\n    if ( v1 == 1 )\n    {\n      sub_401C39();\n    }\n    else if ( v1 )\n    {\n      if ( v1 == 2 )\n      {\n        sub_401C62();\n      }\n      else if ( v1 == 3 )\n      {\n        sub_401C8B();\n      }\n    }\n    else\n    {\n      sub_401BF7();\n    }\n  }\n  return result;\n}\n"], [4202413, "sub_401FAD", "__int64 __fastcall sub_401FAD(const char *a1)\n{\n  int *v1; // rax\n  FILE *stream; // [rsp+18h] [rbp-8h]\n\n  if ( !strcmp(a1, \"-\") )\n  {\n    byte_609748 = 1;\n    stream = (FILE *)stdin;\n    sub_402AFF(stdin, 2LL);\n  }\n  else\n  {\n    stream = fopen(a1, \"r\");\n    if ( !stream )\n      goto LABEL_10;\n    sub_402AFF(stream, 2LL);\n  }\n  sub_401F51((__int64)stream);\n  if ( ferror_unlocked(stream) )\n    goto LABEL_10;\n  if ( strcmp(a1, \"-\") )\n  {\n    if ( (unsigned int)sub_405ACC(stream) != -1 )\n      return 1LL;\nLABEL_10:\n    v1 = __errno_location();\n    error(0, *v1, \"%s\", a1);\n    return 0LL;\n  }\n  clearerr_unlocked(stream);\n  return 1LL;\n}\n"], [4202730, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  __int64 v9; // rbx\n  char *v10; // rax\n  char *v11; // rax\n  __int64 v12; // rbx\n  char *v13; // rax\n  __int64 v14; // rbx\n  char *v15; // rax\n  __int64 v16; // rbx\n  char *v17; // rax\n  __int64 v18; // rbx\n  char *v19; // rax\n  const char *v20; // rbx\n  const char *v21; // r12\n  char *v22; // rax\n  char *v23; // rax\n  const char *v24; // rbx\n  char *v25; // rax\n  int *v26; // rax\n  char v27; // [rsp+2Bh] [rbp-25h]\n  int v28; // [rsp+2Ch] [rbp-24h]\n  __int64 v29; // [rsp+30h] [rbp-20h] BYREF\n  size_t v30; // [rsp+38h] [rbp-18h]\n\n  v27 = 1;\n  sub_402CE6(*a2, a2, a3);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_405DD0(sub_40292D);\n  byte_609748 = 0;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v28 = getopt_long(a1, a2, \"h:b:f:v:i:pl:s:w:n:d:\", &longopts, 0LL);\n      if ( v28 == -1 )\n      {\n        if ( v27 != 1 )\n          sub_4018F7(1);\n        v30 = strlen(src);\n        qword_6096F0 = 3 * v30;\n        dest = (char *)sub_404F23(3 * v30 + 1);\n        v20 = src;\n        v21 = src;\n        v22 = stpcpy(dest, src);\n        v23 = stpcpy(v22, v21);\n        strcpy(v23, v20);\n        qword_609700 = 2 * v30;\n        qword_6096F8 = (char *)sub_404F23(2 * v30 + 1);\n        v24 = src;\n        v25 = stpcpy(qword_6096F8, src);\n        strcpy(v25, v24);\n        qword_609710 = v30;\n        qword_609708 = (char *)sub_404F23(v30 + 1);\n        strcpy(qword_609708, src);\n        sub_402B39(&unk_609720);\n        v30 = strlen(off_609208);\n        s = (char *)sub_404F23(dword_609238 + v30 + 1);\n        memset(s, 32, v30 + dword_609238);\n        s[dword_609238 + v30] = 0;\n        qword_609740 = qword_609218;\n        qword_609300 = (__int64)off_6091F0[0];\n        buffer = &stru_609320;\n        if ( optind == a1 )\n        {\n          v27 = sub_401FAD(\"-\");\n        }\n        else\n        {\n          while ( optind < a1 )\n          {\n            v27 = (unsigned __int8)(v27 & sub_401FAD(a2[optind])) != 0;\n            ++optind;\n          }\n        }\n        if ( byte_609748 )\n        {\n          if ( (unsigned int)sub_405ACC(stdin) == -1 )\n          {\n            v26 = __errno_location();\n            error(1, *v26, \"-\");\n          }\n        }\n        exit(v27 == 0);\n      }\n      if ( v28 != 105 )\n        break;\nLABEL_36:\n      if ( (unsigned int)sub_4051BB(optarg, 0LL, 10LL, &qword_609220, &locale) || qword_609220 <= 0 )\n      {\n        v12 = sub_402DF1(optarg);\n        v13 = gettext(\"invalid line number increment: %s\");\n        error(0, 0, v13, v12);\n        v27 = 0;\n      }\n    }\n    if ( v28 > 105 )\n    {\n      if ( v28 == 115 )\n      {\n        off_609208 = optarg;\n      }\n      else if ( v28 > 115 )\n      {\n        switch ( v28 )\n        {\n          case 119:\n            if ( (unsigned int)sub_4056B4(optarg, 0LL, 10LL, &v29, &locale) || v29 <= 0 || v29 > 0x7FFFFFFF )\n            {\n              v16 = sub_402DF1(optarg);\n              v17 = gettext(\"invalid line number field width: %s\");\n              error(0, 0, v17, v16);\n              v27 = 0;\n            }\n            else\n            {\n              dword_609238 = v29;\n            }\n            break;\n          case 128:\n            v11 = gettext(\"WARNING: --page-increment is deprecated; use --line-increment instead\");\n            error(0, 0, v11);\n            goto LABEL_36;\n          case 118:\n            if ( (unsigned int)sub_4051BB(optarg, 0LL, 10LL, &qword_609218, &locale) )\n            {\n              v9 = sub_402DF1(optarg);\n              v10 = gettext(\"invalid starting line number: %s\");\n              error(0, 0, v10, v9);\n              v27 = 0;\n            }\n            break;\n          default:\n            goto LABEL_61;\n        }\n      }\n      else\n      {\n        switch ( v28 )\n        {\n          case 'n':\n            if ( !strcmp(optarg, \"ln\") )\n            {\n              off_609240 = \"%-*ld%s\";\n            }\n            else if ( !strcmp(optarg, \"rn\") )\n            {\n              off_609240 = \"%*ld%s\";\n            }\n            else if ( !strcmp(optarg, \"rz\") )\n            {\n              off_609240 = \"%0*ld%s\";\n            }\n            else\n            {\n              v18 = sub_402DF1(optarg);\n              v19 = gettext(\"invalid line numbering format: %s\");\n              error(0, 0, v19, v18);\n              v27 = 0;\n            }\n            break;\n          case 'p':\n            byte_609228 = 0;\n            break;\n          case 'l':\n            if ( (unsigned int)sub_4051BB(optarg, 0LL, 10LL, &qword_609230, &locale) || qword_609230 <= 0 )\n            {\n              v14 = sub_402DF1(optarg);\n              v15 = gettext(\"invalid number of blank lines: %s\");\n              error(0, 0, v15, v14);\n              v27 = 0;\n            }\n            break;\n          default:\n            goto LABEL_61;\n        }\n      }\n    }\n    else if ( v28 == 98 )\n    {\n      if ( (unsigned __int8)sub_401A68(off_6091F0, &stru_609320, byte_6093E0) != 1 )\n      {\n        v5 = sub_402DF1(optarg);\n        v6 = gettext(\"invalid body numbering style: %s\");\n        error(0, 0, v6, v5);\n        v27 = 0;\n      }\n    }\n    else if ( v28 > 98 )\n    {\n      switch ( v28 )\n      {\n        case 'f':\n          if ( (unsigned __int8)sub_401A68(off_609200, &stru_6093A0, byte_6095E0) != 1 )\n          {\n            v7 = sub_402DF1(optarg);\n            v8 = gettext(\"invalid footer numbering style: %s\");\n            error(0, 0, v8, v7);\n            v27 = 0;\n          }\n          break;\n        case 'h':\n          if ( (unsigned __int8)sub_401A68(off_6091F8, &stru_609360, byte_6094E0) != 1 )\n          {\n            v3 = sub_402DF1(optarg);\n            v4 = gettext(\"invalid header numbering style: %s\");\n            error(0, 0, v4, v3);\n            v27 = 0;\n          }\n          break;\n        case 'd':\n          src = optarg;\n          break;\n        default:\n          goto LABEL_61;\n      }\n    }\n    else\n    {\n      if ( v28 == -131 )\n      {\n        sub_404CBB(\n          (_DWORD)stdout,\n          (unsigned int)\"nl\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_609248,\n          (unsigned int)\"Scott Bartram\",\n          (unsigned int)\"David MacKenzie\",\n          0);\n        exit(0);\n      }\n      if ( v28 == -130 )\n        sub_4018F7(0);\nLABEL_61:\n      v27 = 0;\n    }\n  }\n}\n"], [4204824, "sub_402918", "__int64 __fastcall sub_402918(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_609760 = a1;\n  return result;\n}\n"], [4204845, "sub_40292D", "__int64 sub_40292D()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_405CB7(stdout) && (byte_609760 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_609758 )\n    {\n      v0 = (const char *)sub_40440A(qword_609758);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_405CB7(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4205080, "sub_402A18", "_BYTE *__fastcall sub_402A18(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4205185, "sub_402A81", "size_t __fastcall sub_402A81(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4205263, "sub_402ACF", "int __fastcall sub_402ACF(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4205311, "sub_402AFF", "void __fastcall sub_402AFF(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_402ACF(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4205369, "sub_402B39", "void *__fastcall sub_402B39(void *a1)\n{\n  return memset(a1, 0, 0x18uLL);\n}\n"], [4205405, "sub_402B5D", "__int64 __fastcall sub_402B5D(__int64 a1, __int64 a2)\n{\n  return sub_402B87(a1, a2, 10LL);\n}\n"], [4205447, "sub_402B87", "__int64 *__fastcall sub_402B87(__int64 *a1, FILE *a2, char a3)\n{\n  _BYTE *v4; // rax\n  int v6; // [rsp+2Ch] [rbp-24h]\n  __int64 v7; // [rsp+30h] [rbp-20h]\n  _BYTE *v8; // [rsp+38h] [rbp-18h]\n  __int64 v9; // [rsp+40h] [rbp-10h]\n  __int64 v10; // [rsp+48h] [rbp-8h]\n\n  v7 = a1[2];\n  v8 = (_BYTE *)v7;\n  v9 = *a1 + v7;\n  if ( feof_unlocked(a2) )\n    return 0LL;\n  while ( 1 )\n  {\n    v6 = getc_unlocked(a2);\n    if ( v6 == -1 )\n      break;\nLABEL_9:\n    if ( v8 == (_BYTE *)v9 )\n    {\n      v10 = *a1;\n      v7 = sub_404FB9(v7, a1);\n      v8 = (_BYTE *)(v7 + v10);\n      a1[2] = v7;\n      v9 = *a1 + v7;\n    }\n    v4 = v8++;\n    *v4 = v6;\n    if ( a3 == v6 )\n      goto LABEL_12;\n  }\n  if ( v8 == (_BYTE *)v7 || ferror_unlocked(a2) )\n    return 0LL;\n  if ( *(v8 - 1) != a3 )\n  {\n    v6 = a3;\n    goto LABEL_9;\n  }\nLABEL_12:\n  a1[1] = (__int64)&v8[-v7];\n  return a1;\n}\n"], [4205768, "sub_402CC8", "void __fastcall sub_402CC8(__int64 a1)\n{\n  free(*(void **)(a1 + 16));\n}\n"], [4205798, "sub_402CE6", "char *__fastcall sub_402CE6(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_609768 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4206029, "sub_402DCD", "__int64 __fastcall sub_402DCD(unsigned int a1, __int64 a2)\n{\n  return sub_40427C(a1, 6LL, a2);\n}\n"], [4206065, "sub_402DF1", "__int64 __fastcall sub_402DF1(__int64 a1)\n{\n  return sub_402DCD(0, a1);\n}\n"], [4206096, "sub_402E10", "__int64 __fastcall sub_402E10(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609780;\n  v4 = sub_405047(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4206169, "sub_402E59", "__int64 __fastcall sub_402E59(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609780;\n  return *(unsigned int *)v1;\n}\n"], [4206199, "sub_402E77", "__int64 *__fastcall sub_402E77(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_609780;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4206235, "sub_402E9B", "__int64 __fastcall sub_402E9B(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_609780;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4206371, "sub_402F23", "__int64 __fastcall sub_402F23(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_609780;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4206422, "sub_402F56", "__int64 *__fastcall sub_402F56(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_609780;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4206512, "sub_402FB0", "_QWORD *__fastcall sub_402FB0(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4206632, "sub_403028", "char *__fastcall sub_403028(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4206693, "sub_403065", "unsigned __int64 __fastcall sub_403065(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_403028((const char *)L\"`'\", a5);\n        a9 = sub_403028((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403065(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4209840, "sub_403CB0", "unsigned __int64 __fastcall sub_403CB0(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_609780;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403065(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4210000, "sub_403D50", "__int64 __fastcall sub_403D50(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403D82(a1, a2, 0LL, a3);\n}\n"], [4210050, "sub_403D82", "__int64 __fastcall sub_403D82(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_609780;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_403065(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_404F09(v10);\n  sub_403065(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4210350, "sub_403EAE", "void sub_403EAE()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_609280;\n  for ( i = 1; i < dword_609260; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6097C0 )\n  {\n    free(ptr[1]);\n    qword_609270 = 256LL;\n    off_609278 = &unk_6097C0;\n  }\n  if ( ptr != (void **)&qword_609270 )\n  {\n    free(ptr);\n    off_609280 = &qword_609270;\n  }\n  dword_609260 = 1;\n}\n"], [4210521, "sub_403F59", "void *__fastcall sub_403F59(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_609280;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_609260 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_609280 == &qword_609270;\n    if ( off_609280 == &qword_609270 )\n      v4 = 0LL;\n    else\n      v4 = off_609280;\n    v12 = (__int64 *)sub_404F58(v4, 16 * v14);\n    off_609280 = v12;\n    if ( v9 )\n    {\n      v5 = off_609278;\n      *v12 = qword_609270;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_609260], 0, 16 * (v14 - (unsigned int)dword_609260));\n    dword_609260 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_403065((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6097C0 )\n      free(ptr);\n    ptr = (void *)sub_404F09(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_403065((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4211167, "sub_4041DF", "void *__fastcall sub_4041DF(int a1, __int64 a2)\n{\n  return sub_403F59(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_609780);\n}\n"], [4211210, "sub_40420A", "void *__fastcall sub_40420A(int a1, __int64 a2, size_t a3)\n{\n  return sub_403F59(a1, a2, a3, (__int64)&qword_609780);\n}\n"], [4211254, "sub_404236", "void *__fastcall sub_404236(__int64 a1)\n{\n  return sub_4041DF(0, a1);\n}\n"], [4211285, "sub_404255", "void *__fastcall sub_404255(__int64 a1, size_t a2)\n{\n  return sub_40420A(0, a1, a2);\n}\n"], [4211324, "sub_40427C", "void *__fastcall sub_40427C(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_402FB0(v5, a2);\n  return sub_403F59(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4211389, "sub_4042BD", "void *__fastcall sub_4042BD(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_402FB0(v7, a2);\n  return sub_403F59(a1, a3, a4, (__int64)v7);\n}\n"], [4211452, "sub_4042FC", "void *__fastcall sub_4042FC(int a1, __int64 a2)\n{\n  return sub_40427C(0, a1, a2);\n}\n"], [4211488, "sub_404320", "void *__fastcall sub_404320(int a1, __int64 a2, size_t a3)\n{\n  return sub_4042BD(0, a1, a2, a3);\n}\n"], [4211532, "sub_40434C", "void *__fastcall sub_40434C(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_609780;\n  v4[1] = qword_609788;\n  v4[2] = qword_609790;\n  v4[3] = qword_609798;\n  v4[4] = qword_6097A0;\n  v4[5] = qword_6097A8;\n  v4[6] = qword_6097B0;\n  sub_402E9B(v4, a3, 1);\n  return sub_403F59(0, a1, a2, (__int64)v4);\n}\n"], [4211680, "sub_4043E0", "void *__fastcall sub_4043E0(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40434C(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4211722, "sub_40440A", "void *__fastcall sub_40440A(__int64 a1)\n{\n  return sub_4043E0(a1, 0x3Au);\n}\n"], [4211753, "sub_404429", "void *__fastcall sub_404429(__int64 a1, size_t a2)\n{\n  return sub_40434C(a1, a2, 0x3Au);\n}\n"], [4211795, "sub_404453", "__int64 __fastcall sub_404453(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_404489(a1, a2, a3, a4, -1LL);\n}\n"], [4211849, "sub_404489", "void *__fastcall sub_404489(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_609780;\n  v8[1] = qword_609788;\n  v8[2] = qword_609790;\n  v8[3] = qword_609798;\n  v8[4] = qword_6097A0;\n  v8[5] = qword_6097A8;\n  v8[6] = qword_6097B0;\n  sub_402F56(v8, a2, a3);\n  return sub_403F59(a1, a4, a5, (__int64)v8);\n}\n"], [4212000, "sub_404520", "__int64 __fastcall sub_404520(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404453(0, a1, a2, a3);\n}\n"], [4212047, "sub_40454F", "void *__fastcall sub_40454F(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_404489(0, a1, a2, a3, a4);\n}\n"], [4212105, "sub_404589", "int __fastcall sub_404589(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4213620, "sub_404B74", "int __fastcall sub_404B74(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_404589(a1, a2, a3, a4, a5, i);\n}\n"], [4213730, "sub_404BE2", "int __fastcall sub_404BE2(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_404589(a1, a2, a3, a4, v8, i);\n}\n"], [4213947, "sub_404CBB", "int sub_404CBB(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_404BE2(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4214129, "sub_404D71", "int sub_404D71()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4214234, "sub_404DDA", "__int64 __fastcall sub_404DDA(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4050A5(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_404F23(a2 * a1);\n}\n"], [4214296, "sub_404E18", "__int64 __fastcall sub_404E18(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4050A5(a1, a2, v4);\n  return sub_404F58(a1, a3 * a2);\n}\n"], [4214372, "sub_404E64", "__int64 __fastcall sub_404E64(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4050A5(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_404F58(a1, a3 * v6);\n}\n"], [4214537, "sub_404F09", "__int64 __fastcall sub_404F09(__int64 a1)\n{\n  return sub_404F23(a1);\n}\n"], [4214563, "sub_404F23", "void *__fastcall sub_404F23(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4050A5(a1, a2, v2);\n  return v4;\n}\n"], [4214616, "sub_404F58", "void *__fastcall sub_404F58(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4050A5(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4214713, "sub_404FB9", "__int64 __fastcall sub_404FB9(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_404E64(a1, a2, 1uLL);\n}\n"], [4214755, "sub_404FE3", "void *__fastcall sub_404FE3(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_404F23(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4214798, "sub_40500E", "void *__fastcall sub_40500E(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4050A5(a1, a2, v2);\n  return v4;\n}\n"], [4214855, "sub_405047", "void *__fastcall sub_405047(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_404F23(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4214904, "sub_405078", "void *__fastcall sub_405078(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_405047(a1, v1 + 1);\n}\n"], [4214949, "sub_4050A5", "void __noreturn sub_4050A5()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4215002, "sub_4050DA", "__int64 __fastcall sub_4050DA(__int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( *a1 >= (__int64)0x8000000000000000LL / a2 )\n  {\n    if ( 0x7FFFFFFFFFFFFFFFLL / a2 >= *a1 )\n    {\n      *a1 *= a2;\n      result = 0LL;\n    }\n    else\n    {\n      *a1 = 0x7FFFFFFFFFFFFFFFLL;\n      result = 1LL;\n    }\n  }\n  else\n  {\n    *a1 = 0x8000000000000000LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4215162, "sub_40517A", "__int64 __fastcall sub_40517A(__int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_4050DA(a1, a2) )\n    ;\n  return i;\n}\n"], [4215227, "sub_4051BB", "__int64 __fastcall sub_4051BB(const char *a1, char **a2, int a3, intmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned int v12; // [rsp+38h] [rbp-28h]\n  int v13; // [rsp+3Ch] [rbp-24h]\n  int v14; // [rsp+40h] [rbp-20h]\n  int v15; // [rsp+44h] [rbp-1Ch]\n  char v16; // [rsp+48h] [rbp-18h] BYREF\n  intmax_t v17; // [rsp+50h] [rbp-10h] BYREF\n  char **endptr; // [rsp+58h] [rbp-8h]\n\n  v12 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoimax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v16;\n  endptr = v5;\n  *__errno_location() = 0;\n  v17 = strtoimax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v17 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v12 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v17;\n    return v12;\n  }\n  if ( !**endptr )\n    goto LABEL_71;\n  v13 = 1024;\n  v14 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v17;\n    return v12 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_30;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_31;\nLABEL_30:\n      v13 = 1000;\n      v14 = 2;\n      goto LABEL_31;\n    }\n    if ( (*endptr)[2] == 66 )\n      v14 = 3;\n  }\nLABEL_31:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_60:\n        v15 = sub_40517A(&v17, v13, 3);\n        goto LABEL_69;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v15 = sub_4050DA(&v17, 512);\n            break;\n          case 'c':\n            v15 = 0;\n            break;\n          case 'Z':\n            v15 = sub_40517A(&v17, v13, 7);\n            break;\n          default:\n            goto LABEL_68;\n        }\n        goto LABEL_69;\n      }\n      if ( v8 == 109 )\n        goto LABEL_62;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_68;\n          v15 = sub_4050DA(&v17, 2);\n          goto LABEL_69;\n        }\nLABEL_64:\n        v15 = sub_40517A(&v17, v13, 4);\n        goto LABEL_69;\n      }\n      if ( v8 != 107 )\n        goto LABEL_68;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v15 = sub_40517A(&v17, v13, 6);\n          goto LABEL_69;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_68:\n            *a4 = v17;\n            return v12 | 2;\n          }\n          v15 = sub_4050DA(&v17, 1024);\n          goto LABEL_69;\n        }\n        goto LABEL_60;\n      }\n      if ( v8 == 80 )\n      {\n        v15 = sub_40517A(&v17, v13, 5);\n        goto LABEL_69;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_68;\nLABEL_62:\n        v15 = sub_40517A(&v17, v13, 2);\n        goto LABEL_69;\n      }\n      goto LABEL_64;\n    }\n    v15 = sub_40517A(&v17, v13, 1);\n    goto LABEL_69;\n  }\n  v15 = sub_40517A(&v17, v13, 8);\nLABEL_69:\n  v12 |= v15;\n  *endptr += v14;\n  if ( **endptr )\n    v12 |= 2u;\nLABEL_71:\n  *a4 = v17;\n  return v12;\n}\n"], [4216275, "sub_4055D3", "__int64 __fastcall sub_4055D3(__int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( *a1 >= (__int64)0x8000000000000000LL / a2 )\n  {\n    if ( 0x7FFFFFFFFFFFFFFFLL / a2 >= *a1 )\n    {\n      *a1 *= a2;\n      result = 0LL;\n    }\n    else\n    {\n      *a1 = 0x7FFFFFFFFFFFFFFFLL;\n      result = 1LL;\n    }\n  }\n  else\n  {\n    *a1 = 0x8000000000000000LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4216435, "sub_405673", "__int64 __fastcall sub_405673(__int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_4055D3(a1, a2) )\n    ;\n  return i;\n}\n"], [4216500, "sub_4056B4", "__int64 __fastcall sub_4056B4(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned int v12; // [rsp+38h] [rbp-28h]\n  int v13; // [rsp+3Ch] [rbp-24h]\n  int v14; // [rsp+40h] [rbp-20h]\n  int v15; // [rsp+44h] [rbp-1Ch]\n  char v16; // [rsp+48h] [rbp-18h] BYREF\n  __int64 v17; // [rsp+50h] [rbp-10h] BYREF\n  char **endptr; // [rsp+58h] [rbp-8h]\n\n  v12 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtol\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v16;\n  endptr = v5;\n  *__errno_location() = 0;\n  v17 = strtol(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v17 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v12 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v17;\n    return v12;\n  }\n  if ( !**endptr )\n    goto LABEL_71;\n  v13 = 1024;\n  v14 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v17;\n    return v12 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_30;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_31;\nLABEL_30:\n      v13 = 1000;\n      v14 = 2;\n      goto LABEL_31;\n    }\n    if ( (*endptr)[2] == 66 )\n      v14 = 3;\n  }\nLABEL_31:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_60:\n        v15 = sub_405673(&v17, v13, 3);\n        goto LABEL_69;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v15 = sub_4055D3(&v17, 512);\n            break;\n          case 'c':\n            v15 = 0;\n            break;\n          case 'Z':\n            v15 = sub_405673(&v17, v13, 7);\n            break;\n          default:\n            goto LABEL_68;\n        }\n        goto LABEL_69;\n      }\n      if ( v8 == 109 )\n        goto LABEL_62;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_68;\n          v15 = sub_4055D3(&v17, 2);\n          goto LABEL_69;\n        }\nLABEL_64:\n        v15 = sub_405673(&v17, v13, 4);\n        goto LABEL_69;\n      }\n      if ( v8 != 107 )\n        goto LABEL_68;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v15 = sub_405673(&v17, v13, 6);\n          goto LABEL_69;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_68:\n            *a4 = v17;\n            return v12 | 2;\n          }\n          v15 = sub_4055D3(&v17, 1024);\n          goto LABEL_69;\n        }\n        goto LABEL_60;\n      }\n      if ( v8 == 80 )\n      {\n        v15 = sub_405673(&v17, v13, 5);\n        goto LABEL_69;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_68;\nLABEL_62:\n        v15 = sub_405673(&v17, v13, 2);\n        goto LABEL_69;\n      }\n      goto LABEL_64;\n    }\n    v15 = sub_405673(&v17, v13, 1);\n    goto LABEL_69;\n  }\n  v15 = sub_405673(&v17, v13, 8);\nLABEL_69:\n  v12 |= v15;\n  *endptr += v14;\n  if ( **endptr )\n    v12 |= 2u;\nLABEL_71:\n  *a4 = v17;\n  return v12;\n}\n"], [4217548, "sub_405ACC", "int __fastcall sub_405ACC(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_405BB4(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4217729, "sub_405B81", "__int64 __fastcall sub_405B81(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_405BFF(a1, 0LL, 1LL);\n  return result;\n}\n"], [4217780, "sub_405BB4", "int __fastcall sub_405BB4(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_405B81(a1);\n  return fflush(a1);\n}\n"], [4217855, "sub_405BFF", "int __fastcall sub_405BFF(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4218039, "sub_405CB7", "__int64 __fastcall sub_405CB7(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_405ACC(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4218192, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4218304, "fini", "void fini(void)\n{\n  ;\n}\n"], [4218320, "sub_405DD0", "int __fastcall sub_405DD0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6091E8 )\n    v1 = (void *)qword_6091E8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4218348, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]