[[4200976, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4201008, "sub_401A30", "__int64 sub_401A30()\n{\n  return qword_616010();\n}\n"], [4201024, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4201040, ".endmntent", "// attributes: thunk\nint endmntent(FILE *stream)\n{\n  return endmntent(stream);\n}\n"], [4201056, ".localtime", "// attributes: thunk\nstruct tm *localtime(const time_t *timer)\n{\n  return localtime(timer);\n}\n"], [4201072, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4201088, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4201104, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4201120, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4201136, ".strcpy", "// attributes: thunk\nchar *strcpy(char *dest, const char *src)\n{\n  return strcpy(dest, src);\n}\n"], [4201152, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4201168, ".toupper", "// attributes: thunk\nint toupper(int c)\n{\n  return toupper(c);\n}\n"], [4201184, ".localeconv", "// attributes: thunk\nstruct lconv *localeconv(void)\n{\n  return localeconv();\n}\n"], [4201200, ".readlink", "// attributes: thunk\nssize_t readlink(const char *path, char *buf, size_t len)\n{\n  return readlink(path, buf, len);\n}\n"], [4201216, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4201232, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4201248, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4201264, ".getpwuid", "// attributes: thunk\nstruct passwd *getpwuid(__uid_t uid)\n{\n  return getpwuid(uid);\n}\n"], [4201280, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4201296, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4201312, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4201328, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4201344, ".openat", "// attributes: thunk\nint openat(int fd, const char *file, int oflag, ...)\n{\n  return openat(fd, file, oflag);\n}\n"], [4201360, ".chdir", "// attributes: thunk\nint chdir(const char *path)\n{\n  return chdir(path);\n}\n"], [4201376, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4201392, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4201408, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4201424, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4201440, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4201456, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4201472, ".setgrent", "// attributes: thunk\nvoid setgrent(void)\n{\n  setgrent();\n}\n"], [4201488, ".getgrgid", "// attributes: thunk\nstruct group *getgrgid(__gid_t gid)\n{\n  return getgrgid(gid);\n}\n"], [4201504, ".__fxstatat", "// attributes: thunk\nint __fxstatat(int ver, int fildes, const char *filename, struct stat *stat_buf, int flag)\n{\n  return _fxstatat(ver, fildes, filename, stat_buf, flag);\n}\n"], [4201520, ".snprintf", "// attributes: thunk\nint snprintf(char *s, size_t maxlen, const char *format, ...)\n{\n  return snprintf(s, maxlen, format);\n}\n"], [4201536, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4201552, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4201568, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4201584, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4201600, ".getcwd", "// attributes: thunk\nchar *getcwd(char *buf, size_t size)\n{\n  return getcwd(buf, size);\n}\n"], [4201616, ".canonicalize_file_name", "// attributes: thunk\nchar *canonicalize_file_name(const char *name)\n{\n  return canonicalize_file_name(name);\n}\n"], [4201632, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4201648, ".rewinddir", "// attributes: thunk\nvoid rewinddir(DIR *dirp)\n{\n  rewinddir(dirp);\n}\n"], [4201664, ".strspn", "// attributes: thunk\nsize_t strspn(const char *s, const char *accept)\n{\n  return strspn(s, accept);\n}\n"], [4201680, ".closedir", "// attributes: thunk\nint closedir(DIR *dirp)\n{\n  return closedir(dirp);\n}\n"], [4201696, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4201712, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4201728, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4201744, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4201760, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4201776, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4201792, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4201808, ".fputc_unlocked", "// attributes: thunk\nint fputc_unlocked(int c, FILE *stream)\n{\n  return fputc_unlocked(c, stream);\n}\n"], [4201824, ".setpwent", "// attributes: thunk\nvoid setpwent(void)\n{\n  setpwent();\n}\n"], [4201840, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4201856, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4201872, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4201888, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4201904, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4201920, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4201936, ".statfs", "// attributes: thunk\nint statfs(const char *file, struct statfs *buf)\n{\n  return statfs(file, buf);\n}\n"], [4201952, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4201968, ".readdir", "// attributes: thunk\nstruct dirent *readdir(DIR *dirp)\n{\n  return readdir(dirp);\n}\n"], [4201984, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4202000, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4202016, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4202032, ".getmntent", "// attributes: thunk\nstruct mntent *getmntent(FILE *stream)\n{\n  return getmntent(stream);\n}\n"], [4202048, ".setmntent", "// attributes: thunk\nFILE *setmntent(const char *file, const char *mode)\n{\n  return setmntent(file, mode);\n}\n"], [4202064, ".nl_langinfo", "// attributes: thunk\nchar *nl_langinfo(nl_item item)\n{\n  return nl_langinfo(item);\n}\n"], [4202080, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4202096, ".mktime", "// attributes: thunk\ntime_t mktime(struct tm *tp)\n{\n  return mktime(tp);\n}\n"], [4202112, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4202128, ".fchdir", "// attributes: thunk\nint fchdir(int fd)\n{\n  return fchdir(fd);\n}\n"], [4202144, ".gnu_dev_major", "// attributes: thunk\nunsigned int gnu_dev_major(unsigned __int64 dev)\n{\n  return gnu_dev_major(dev);\n}\n"], [4202160, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4202176, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4202192, ".strftime", "// attributes: thunk\nsize_t strftime(char *s, size_t maxsize, const char *format, const struct tm *tp)\n{\n  return strftime(s, maxsize, format, tp);\n}\n"], [4202208, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4202224, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4202240, ".memrchr", "// attributes: thunk\nvoid *memrchr(const void *s, int c, size_t n)\n{\n  return memrchr(s, c, n);\n}\n"], [4202256, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4202272, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4202288, ".fdopendir", "// attributes: thunk\nDIR *fdopendir(int fd)\n{\n  return fdopendir(fd);\n}\n"], [4202304, ".gnu_dev_minor", "// attributes: thunk\nunsigned int gnu_dev_minor(unsigned __int64 dev)\n{\n  return gnu_dev_minor(dev);\n}\n"], [4202320, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4202336, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4202352, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4202368, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4202384, ".strdup", "// attributes: thunk\nchar *strdup(const char *s)\n{\n  return strdup(s);\n}\n"], [4202400, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4202416, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4202432, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4202448, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4202496, "sub_402000", "signed __int64 sub_402000()\n{\n  signed __int64 result; // rax\n\n  result = &unk_61633F - &unk_616338;\n  if ( (unsigned __int64)(&unk_61633F - &unk_616338) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4202544, "sub_402030", "__int64 sub_402030()\n{\n  return 0LL;\n}\n"], [4202608, "sub_402070", "signed __int64 sub_402070()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_616398 )\n  {\n    result = sub_402000();\n    byte_616398 = 1;\n  }\n  return result;\n}\n"], [4202640, "sub_402090", "__int64 sub_402090()\n{\n  return sub_402030();\n}\n"], [4202685, "sub_4020BD", "void sub_4020BD()\n{\n  ;\n}\n"], [4202695, "sub_4020C7", "__int64 sub_4020C7()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4202729, "sub_4020E9", "__int64 sub_4020E9()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4202763, "sub_40210B", "__int64 __fastcall sub_40210B(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4202778, "sub_40211A", "int sub_40211A()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_405733(qword_616448);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_405733(qword_616448);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_405733(qword_616448);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4203044, "sub_402224", "__int64 __fastcall sub_402224(__int64 a1, __int64 a2)\n{\n  return sub_405B96(a1, a2);\n}\n"], [4203081, "sub_402249", "__int64 __fastcall sub_402249(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4203103, "sub_40225F", "__int64 __fastcall sub_40225F(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 104);\n}\n"], [4203125, "sub_402275", "__int64 __fastcall sub_402275(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4203147, "sub_40228B", "__int64 sub_40228B()\n{\n  return -1LL;\n}\n"], [4203181, "sub_4022AD", "const char *__fastcall sub_4022AD(__int64 *a1)\n{\n  __int64 v1; // rax\n\n  v1 = *a1;\n  if ( *a1 == 19920822 )\n    return \"sysv2\";\n  if ( v1 > 19920822 )\n  {\n    if ( v1 == 1481003842 )\n      return \"xfs\";\n    if ( v1 > 1481003842 )\n    {\n      if ( v1 == 1936814952 )\n        return \"squashfs\";\n      if ( v1 > 1936814952 )\n      {\n        if ( v1 == 2508478710LL )\n          return \"hugetlbfs\";\n        if ( v1 > 2508478710LL )\n        {\n          if ( v1 == 4185718668LL )\n            return \"selinux\";\n          if ( v1 > 4185718668LL )\n          {\n            if ( v1 == 4187351113LL )\n              return \"hpfs\";\n            if ( v1 == 4283649346LL )\n              return \"cifs\";\n          }\n          else\n          {\n            if ( v1 == 2768370933LL )\n              return \"vxfs\";\n            if ( v1 == 2881100148LL )\n              return \"xenfs\";\n          }\n        }\n        else\n        {\n          if ( v1 == 1952539503 )\n            return \"ocfs2\";\n          if ( v1 > 1952539503 )\n          {\n            if ( v1 == 2240043254LL )\n              return \"ramfs\";\n            if ( v1 == 2435016766LL )\n              return \"btrfs\";\n          }\n          else if ( v1 == 1937076805 )\n          {\n            return \"coda\";\n          }\n        }\n      }\n      else\n      {\n        if ( v1 == 1702057286 )\n          return \"fuseblk\";\n        if ( v1 > 1702057286 )\n        {\n          if ( v1 == 1799439955 )\n            return \"k-afs\";\n          if ( v1 > 1799439955 )\n          {\n            if ( v1 == 1852207972 )\n              return \"nfsd\";\n            if ( v1 == 1935894131 )\n              return \"securityfs\";\n          }\n          else if ( v1 == 1733912937 )\n          {\n            return \"rpc_pipefs\";\n          }\n        }\n        else\n        {\n          if ( v1 == 1650812274 )\n            return \"sysfs\";\n          if ( v1 > 1650812274 )\n          {\n            if ( v1 == 1684170528 )\n              return \"debugfs\";\n            if ( v1 == 1702057283 )\n              return \"fusectl\";\n          }\n          else if ( v1 == 1634035564 )\n          {\n            return \"pstorefs\";\n          }\n        }\n      }\n    }\n    else\n    {\n      if ( v1 == 827541066 )\n        return \"jfs\";\n      if ( v1 > 827541066 )\n      {\n        if ( v1 == 1382369651 )\n          return \"reiserfs\";\n        if ( v1 > 1382369651 )\n        {\n          if ( v1 == 1397118030 )\n            return \"ntfs\";\n          if ( v1 > 1397118030 )\n          {\n            if ( v1 == 1397703499 )\n              return \"sockfs\";\n            if ( v1 == 1410924800 )\n              return \"ufs\";\n          }\n          else if ( v1 == 1397113167 )\n          {\n            return \"afs\";\n          }\n        }\n        else\n        {\n          if ( v1 == 1112100429 )\n            return \"binfmt_misc\";\n          if ( v1 > 1112100429 )\n          {\n            if ( v1 == 1161678120 )\n              return \"cramfs-wend\";\n            if ( v1 == 1196443219 )\n              return \"gpfs\";\n          }\n          else if ( v1 == 1111905073 )\n          {\n            return \"befs\";\n          }\n        }\n      }\n      else\n      {\n        if ( v1 == 352400198 )\n          return \"udf\";\n        if ( v1 > 352400198 )\n        {\n          if ( v1 == 464386766 )\n            return \"bfs\";\n          if ( v1 > 464386766 )\n          {\n            if ( v1 == 684539205 )\n              return \"cramfs\";\n            if ( v1 == 732765674 )\n              return \"inotifyfs\";\n          }\n          else if ( v1 == 427819522 )\n          {\n            return \"mqueue\";\n          }\n        }\n        else\n        {\n          if ( v1 == 151263540 )\n            return \"anon-inode FS\";\n          if ( v1 > 151263540 )\n          {\n            if ( v1 == 195894762 )\n              return \"futexfs\";\n            if ( v1 == 198183888 )\n              return \"lustre\";\n          }\n          else if ( v1 == 19920823 )\n          {\n            return \"coh\";\n          }\n        }\n      }\n    }\n  }\n  else\n  {\n    if ( v1 == 26985 )\n      return \"nfs\";\n    if ( v1 > 26985 )\n    {\n      if ( v1 == 61267 )\n        return \"ext2/ext3\";\n      if ( v1 > 61267 )\n      {\n        if ( v1 == 16914836 )\n          return \"tmpfs\";\n        if ( v1 > 16914836 )\n        {\n          if ( v1 == 19911021 )\n            return \"xia\";\n          if ( v1 > 19911021 )\n          {\n            if ( v1 == 19920820 )\n              return \"xenix\";\n            if ( v1 == 19920821 )\n              return \"sysv4\";\n          }\n          else\n          {\n            if ( v1 == 16914839 )\n              return \"v9fs\";\n            if ( v1 == 18225520 )\n              return \"gfs/gfs2\";\n          }\n        }\n        else\n        {\n          if ( v1 == 72020 )\n            return \"ufs\";\n          if ( v1 > 72020 )\n          {\n            if ( v1 == 2613483 )\n              return \"cgroupfs\";\n            if ( (_UNKNOWN *)v1 == &unk_414A53 )\n              return \"efs\";\n          }\n          else if ( v1 == 61791 )\n          {\n            return \"ecryptfs\";\n          }\n        }\n      }\n      else\n      {\n        if ( v1 == 40865 )\n          return \"openprom\";\n        if ( v1 > 40865 )\n        {\n          if ( v1 == 44533 )\n            return \"adfs\";\n          if ( v1 > 44533 )\n          {\n            if ( v1 == 44543 )\n              return \"affs\";\n            if ( v1 == 61265 )\n              return \"ext2\";\n          }\n          else if ( v1 == 40866 )\n          {\n            return \"usbdevfs\";\n          }\n        }\n        else\n        {\n          if ( v1 == 29366 )\n            return \"jffs2\";\n          if ( v1 > 29366 )\n          {\n            if ( v1 == 38496 )\n              return \"isofs\";\n            if ( v1 == 40864 )\n              return \"proc\";\n          }\n          else if ( v1 == 29301 )\n          {\n            return \"romfs\";\n          }\n        }\n      }\n    }\n    else\n    {\n      if ( v1 == 9336 )\n        return \"minix v2 (30 char.)\";\n      if ( v1 > 9336 )\n      {\n        if ( v1 == 16964 )\n          return \"hfs\";\n        if ( v1 > 16964 )\n        {\n          if ( v1 == 19802 )\n            return \"minix3\";\n          if ( v1 > 19802 )\n          {\n            if ( v1 == 20859 )\n              return \"smb\";\n            if ( v1 == 22092 )\n              return \"novell\";\n          }\n          else if ( v1 == 19780 )\n          {\n            return \"msdos\";\n          }\n        }\n        else\n        {\n          if ( v1 == 0x4000 )\n            return \"isofs\";\n          if ( v1 > 0x4000 )\n          {\n            if ( v1 == 16388 )\n              return \"isofs\";\n            if ( v1 == 16390 )\n              return \"fat\";\n          }\n          else if ( v1 == 13364 )\n          {\n            return \"nilfs\";\n          }\n        }\n      }\n      else\n      {\n        if ( v1 == 4989 )\n          return \"ext\";\n        if ( v1 > 4989 )\n        {\n          if ( v1 == 5007 )\n            return \"minix (30 char.)\";\n          if ( v1 > 5007 )\n          {\n            if ( v1 == 7377 )\n              return \"devpts\";\n            if ( v1 == 9320 )\n              return \"minix v2\";\n          }\n          else if ( v1 == 4991 )\n          {\n            return \"minix\";\n          }\n        }\n        else\n        {\n          if ( v1 == 391 )\n            return \"autofs\";\n          if ( v1 > 391 )\n          {\n            if ( v1 == 1984 )\n              return \"jffs\";\n            if ( v1 == 4979 )\n              return \"devfs\";\n          }\n          else if ( v1 == 47 )\n          {\n            return \"qnx4\";\n          }\n        }\n      }\n    }\n  }\n  sprintf(s, \"UNKNOWN (0x%lx)\", *a1);\n  return s;\n}\n"], [4205438, "sub_402B7E", "void *__fastcall sub_402B7E(__int64 a1)\n{\n  sub_405B6F(a1, &unk_6163DD);\n  byte_6163E7 = 0;\n  return &unk_6163DD;\n}\n"], [4205481, "sub_402BA9", "void *__fastcall sub_402BA9(time_t a1, __int64 a2)\n{\n  time_t timer; // [rsp+0h] [rbp-20h] BYREF\n  __int64 v4; // [rsp+8h] [rbp-18h]\n  struct tm *v5; // [rsp+18h] [rbp-8h]\n\n  timer = a1;\n  v4 = a2;\n  v5 = localtime(&timer);\n  if ( !v5 )\n    return (void *)sub_402224(timer, (__int64)&unk_616400);\n  sub_40A0C0(&unk_616400, 44LL, \"%Y-%m-%d %H:%M:%S.%N %z\", v5, 0LL, (unsigned int)v4);\n  return &unk_616400;\n}\n"], [4205597, "sub_402C1D", "char *__fastcall sub_402C1D(__int64 a1, __int64 a2, const char *a3, const char *a4)\n{\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rdx\n  char *dest; // [rsp+28h] [rbp-18h]\n  char *i; // [rsp+30h] [rbp-10h]\n  unsigned __int64 v12; // [rsp+38h] [rbp-8h]\n\n  dest = (char *)(a1 + 1);\n  v12 = a1 + a2;\n  for ( i = (char *)(a1 + 1); (unsigned __int64)i < v12 && strchr(\"'-+ #0I\", *i); ++i )\n  {\n    if ( strchr(a3, *i) )\n    {\n      v4 = dest++;\n      *v4 = *i;\n    }\n  }\n  while ( (unsigned __int64)i < v12 )\n  {\n    v5 = dest++;\n    v6 = i++;\n    *v5 = *v6;\n  }\n  return strcpy(dest, a4);\n}\n"], [4205812, "sub_402CF4", "int __fastcall sub_402CF4(const char *a1, __int64 a2, __int64 a3)\n{\n  sub_402C1D((__int64)a1, a2, \"-\", \"s\");\n  return printf(a1, a3);\n}\n"], [4205884, "sub_402D3C", "int __fastcall sub_402D3C(const char *a1, __int64 a2, __int64 a3)\n{\n  sub_402C1D((__int64)a1, a2, \"'-+ 0\", \"ld\");\n  return printf(a1, a3);\n}\n"], [4205956, "sub_402D84", "int __fastcall sub_402D84(const char *a1, __int64 a2, __int64 a3)\n{\n  sub_402C1D((__int64)a1, a2, \"'-0\", \"lu\");\n  return printf(a1, a3);\n}\n"], [4206028, "sub_402DCC", "int __fastcall sub_402DCC(const char *a1, __int64 a2, __int64 a3)\n{\n  sub_402C1D((__int64)a1, a2, \"-#0\", \"lo\");\n  return printf(a1, a3);\n}\n"], [4206100, "sub_402E14", "int __fastcall sub_402E14(const char *a1, __int64 a2, __int64 a3)\n{\n  sub_402C1D((__int64)a1, a2, \"-#0\", \"lx\");\n  return printf(a1, a3);\n}\n"], [4206172, "sub_402E5C", "int __fastcall sub_402E5C(const char *a1, __int64 a2)\n{\n  sub_402C1D((__int64)a1, a2, \"'-+ 0\", \".0f\");\n  return printf(a1, -0.25);\n}\n"], [4206252, "sub_402EAC", "int __fastcall sub_402EAC(void *a1, size_t a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  int v5; // eax\n  int v6; // eax\n  int v7; // eax\n  char *v8; // rax\n  __int64 v9; // rax\n  int result; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  char v16; // [rsp+42h] [rbp-7Eh]\n  bool v17; // [rsp+43h] [rbp-7Dh]\n  int v18; // [rsp+44h] [rbp-7Ch]\n  int v19; // [rsp+48h] [rbp-78h]\n  int v20; // [rsp+4Ch] [rbp-74h]\n  int j; // [rsp+50h] [rbp-70h]\n  unsigned int v22; // [rsp+54h] [rbp-6Ch]\n  unsigned int v23; // [rsp+5Ch] [rbp-64h]\n  int v24; // [rsp+64h] [rbp-5Ch]\n  int v25; // [rsp+68h] [rbp-58h]\n  int v26; // [rsp+6Ch] [rbp-54h]\n  __int64 v27; // [rsp+78h] [rbp-48h]\n  char *nptr; // [rsp+80h] [rbp-40h]\n  char *nptra; // [rsp+80h] [rbp-40h]\n  char *v30; // [rsp+88h] [rbp-38h]\n  char *i; // [rsp+90h] [rbp-30h]\n  char *v32; // [rsp+98h] [rbp-28h]\n  __int64 v33; // [rsp+A0h] [rbp-20h]\n  __int64 v34; // [rsp+A8h] [rbp-18h]\n\n  v32 = (char *)memchr(a1, 46, a2);\n  v27 = a2;\n  v18 = 0;\n  v19 = 0;\n  v16 = 0;\n  if ( v32 )\n  {\n    v27 = v32 - (_BYTE *)a1;\n    *((_BYTE *)a1 + a2) = 0;\n    if ( (unsigned int)(v32[1] - 48) > 9 )\n    {\n      v19 = 9;\n    }\n    else\n    {\n      v33 = strtol(v32 + 1, 0LL, 10);\n      v5 = 0x7FFFFFFF;\n      if ( v33 <= 0x7FFFFFFF )\n        v5 = v33;\n      v19 = v5;\n    }\n    if ( v19 && (unsigned int)(*(v32 - 1) - 48) <= 9 )\n    {\n      nptr = v32;\n      *v32 = 0;\n      do\n        --nptr;\n      while ( (unsigned int)(*(nptr - 1) - 48) <= 9 );\n      v34 = strtol(nptr, 0LL, 10);\n      v6 = 0x7FFFFFFF;\n      if ( v34 <= 0x7FFFFFFF )\n        v6 = v34;\n      v18 = v6;\n      if ( v6 > 1 )\n      {\n        nptra = &nptr[*nptr == 48];\n        v27 = nptra - (_BYTE *)a1;\n        v7 = v6 <= (unsigned __int64)qword_6163B0 ? 0 : v6 - qword_6163B0;\n        if ( v7 > 1 )\n        {\n          v23 = v7 - v19;\n          if ( v7 - v19 > 1 )\n          {\n            v30 = (char *)a1;\n            for ( i = (char *)a1; i < nptra; ++i )\n            {\n              if ( *i == 45 )\n              {\n                v16 = 1;\n              }\n              else\n              {\n                v8 = v30++;\n                *v8 = *i;\n              }\n            }\n            if ( v16 != 1 )\n              v9 = sprintf(v30, \"%d\", v23);\n            else\n              v9 = 0LL;\n            v27 = v30 - (_BYTE *)a1 + v9;\n          }\n        }\n      }\n    }\n  }\n  v20 = 1;\n  for ( j = v19; j <= 8; ++j )\n    v20 *= 10;\n  v22 = a5 / v20;\n  v17 = 0;\n  if ( a4 < 0 && a5 )\n  {\n    v22 = 1000000000 / v20 - v22 - (a5 % v20 != 0);\n    a4 += v22 != 0;\n    v17 = a4 == 0;\n  }\n  if ( v17 )\n    result = sub_402E5C((const char *)a1, v27);\n  else\n    result = sub_402D3C((const char *)a1, v27, a4);\n  v24 = result;\n  if ( v19 )\n  {\n    v11 = 9;\n    if ( v19 <= 9 )\n      v11 = v19;\n    v25 = v11;\n    v26 = v19 - v11;\n    v12 = 0;\n    if ( v24 >= 0 )\n      v12 = v24;\n    if ( v12 >= v18 || v18 - v12 <= (unsigned __int64)qword_6163B0 )\n      v13 = 0;\n    else\n      v13 = v18 - v12 - qword_6163B0 - v25;\n    result = printf(\"%s%.*d%-*.*d\", qword_6163A8, v25, v22, v13, v26, 0);\n  }\n  return result;\n}\n"], [4207334, "sub_4032E6", "__int64 __fastcall sub_4032E6(const char *a1, __int64 a2, __int64 a3)\n{\n  unsigned int v3; // eax\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  const char *v7; // rax\n  unsigned __int8 v10; // [rsp+27h] [rbp-19h]\n  __int64 v11[3]; // [rsp+28h] [rbp-18h] BYREF\n\n  v10 = 0;\n  if ( byte_6163A0 )\n    v3 = (unsigned int)sub_4020C7(a3, v11) >> 31;\n  else\n    v3 = (unsigned int)sub_4020E9(a3, v11) >> 31;\n  if ( (_BYTE)v3 )\n  {\n    v4 = sub_405DD3(a3);\n    v5 = gettext(\"failed to get security context of %s\");\n    v6 = __errno_location();\n    error(0, *v6, v5, v4);\n    v11[0] = 0LL;\n    v10 = 1;\n  }\n  *(_WORD *)&a1[a2] = 115;\n  if ( v11[0] )\n    v7 = (const char *)v11[0];\n  else\n    v7 = \"?\";\n  printf(a1, v7);\n  if ( v11[0] )\n    sub_4020BD();\n  return v10;\n}\n"], [4207582, "sub_4033DE", "__int64 __fastcall sub_4033DE(const char *a1, __int64 a2, unsigned int a3, __int64 a4, __int64 *a5)\n{\n  const char *v5; // rax\n  int i; // [rsp+40h] [rbp-30h]\n  __int64 v8; // [rsp+48h] [rbp-28h]\n\n  if ( a3 == 100 )\n  {\n    sub_402D3C(a1, a2, a5[6]);\n    return 0LL;\n  }\n  if ( a3 <= 0x64 )\n  {\n    if ( a3 == 97 )\n    {\n      sub_402D3C(a1, a2, a5[4]);\n      return 0LL;\n    }\n    if ( a3 > 0x61 )\n    {\n      if ( a3 == 98 )\n        sub_402D3C(a1, a2, a5[2]);\n      else\n        sub_402D84(a1, a2, a5[5]);\n      return 0LL;\n    }\n    if ( a3 != 83 )\n    {\n      if ( a3 != 84 )\n        goto LABEL_33;\n      v5 = sub_4022AD(a5);\n      sub_402CF4(a1, a2, (__int64)v5);\n      return 0LL;\n    }\nLABEL_30:\n    sub_402D84(a1, a2, a5[1]);\n    return 0LL;\n  }\n  if ( a3 == 108 )\n  {\n    sub_402D84(a1, a2, a5[8]);\n    return 0LL;\n  }\n  if ( a3 <= 0x6C )\n  {\n    if ( a3 == 102 )\n    {\n      sub_402D3C(a1, a2, a5[3]);\n    }\n    else\n    {\n      if ( a3 != 105 )\n        goto LABEL_33;\n      v8 = 0LL;\n      for ( i = 0; i < 2 && (unsigned __int64)(4LL * i) <= 7; ++i )\n        v8 |= (unsigned __int64)*((unsigned int *)a5 + 1 - i + 14) << (32 * (unsigned __int8)i);\n      sub_402E14(a1, a2, v8);\n    }\n    return 0LL;\n  }\n  switch ( a3 )\n  {\n    case 's':\n      goto LABEL_30;\n    case 't':\n      sub_402E14(a1, a2, *a5);\n      break;\n    case 'n':\n      sub_402CF4(a1, a2, a4);\n      break;\n    default:\nLABEL_33:\n      fputc_unlocked(63, stdout);\n      return 0LL;\n  }\n  return 0LL;\n}\n"], [4208321, "sub_4036C1", "char *__fastcall sub_4036C1(char *a1)\n{\n  char *v1; // rbx\n  int *v2; // rax\n  __int64 v4; // [rsp+10h] [rbp-140h]\n  char **i; // [rsp+18h] [rbp-138h]\n  struct stat stat_buf; // [rsp+20h] [rbp-130h] BYREF\n  struct stat v7; // [rsp+B0h] [rbp-A0h] BYREF\n\n  v4 = 0LL;\n  if ( byte_61642C != 1 )\n  {\n    qword_616430 = sub_40B8E8(0LL);\n    if ( !qword_616430 )\n    {\n      v1 = gettext(\"cannot read table of mounted file systems\");\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v1);\n    }\n    byte_61642C = 1;\n  }\n  for ( i = (char **)qword_616430; i; i = (char **)i[5] )\n  {\n    if ( ((_BYTE)i[4] & 1) != 0\n      && **i == 47\n      && !strcmp(i[1], a1)\n      && !(unsigned int)sub_411E90(a1, &stat_buf)\n      && !(unsigned int)sub_411E90(*i, &v7)\n      && stat_buf.st_ino == v7.st_ino\n      && stat_buf.st_dev == v7.st_dev )\n    {\n      return *i;\n    }\n  }\n  return (char *)v4;\n}\n"], [4208708, "sub_403844", "__int64 __fastcall sub_403844(const char *a1, const char *a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  const char *v7; // rax\n  unsigned __int8 v11; // [rsp+2Fh] [rbp-31h]\n  char *v12; // [rsp+30h] [rbp-30h]\n  char *v13; // [rsp+38h] [rbp-28h]\n  char *ptr; // [rsp+48h] [rbp-18h]\n\n  v12 = 0LL;\n  v13 = 0LL;\n  v11 = 1;\n  if ( !byte_6163A0 && (*(_DWORD *)(a4 + 24) & 0xF000) == 40960 )\n    goto LABEL_7;\n  ptr = canonicalize_file_name(a1);\n  if ( !ptr )\n  {\n    v4 = sub_405DD3(a1);\n    v5 = gettext(\"failed to canonicalize %s\");\n    v6 = __errno_location();\n    error(0, *v6, v5, v4);\n    goto LABEL_9;\n  }\n  v12 = sub_4036C1(ptr);\n  free(ptr);\n  if ( v12 )\n  {\n    v11 = 0;\n  }\n  else\n  {\nLABEL_7:\n    v13 = (char *)sub_404FB4(a1, a4);\n    if ( v13 )\n    {\n      v12 = sub_4036C1(v13);\n      v11 = 0;\n    }\n  }\nLABEL_9:\n  if ( v12 )\n  {\n    v7 = v12;\n  }\n  else if ( v13 )\n  {\n    v7 = v13;\n  }\n  else\n  {\n    v7 = \"?\";\n  }\n  sub_402CF4(a2, a3, (__int64)v7);\n  free(v13);\n  return v11;\n}\n"], [4209041, "sub_403991", "__int64 __fastcall sub_403991(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a2 < 0 )\n    result = 0LL;\n  else\n    result = a1;\n  return result;\n}\n"], [4209107, "sub_4039D3", "__int64 __fastcall sub_4039D3(char *a1, size_t a2, unsigned int a3, const char *a4, __int64 a5)\n{\n  __int64 v5; // rax\n  __int64 v6; // r12\n  char *v7; // rbx\n  int *v8; // rax\n  __int64 v10; // rax\n  void *v11; // rax\n  __int64 v12; // rax\n  const char *v13; // rax\n  unsigned int v14; // eax\n  unsigned int v15; // eax\n  __int64 v16; // rax\n  __int64 v17; // rdx\n  void *v18; // rax\n  __int64 v19; // rax\n  __int64 v20; // rdx\n  __int64 v21; // rax\n  __int64 v22; // rdx\n  __int64 v23; // rax\n  __int64 v24; // rdx\n  void *v25; // rax\n  __int64 v26; // rax\n  __int64 v27; // rdx\n  __int64 v28; // rax\n  __int64 v29; // rdx\n  void *v30; // rax\n  __int64 v31; // rax\n  __int64 v32; // rdx\n  __int64 v33; // rax\n  __int64 v34; // rdx\n  void *v35; // rax\n  __int64 v36; // rax\n  __int64 v37; // rdx\n  bool v39; // [rsp+3Fh] [rbp-41h]\n  void *ptr; // [rsp+48h] [rbp-38h]\n  struct passwd *v42; // [rsp+50h] [rbp-30h]\n  struct group *v43; // [rsp+58h] [rbp-28h]\n  time_t v44; // [rsp+60h] [rbp-20h]\n\n  v39 = 0;\n  if ( a3 == 98 )\n  {\n    sub_402D84(a1, a2, *(_QWORD *)(a5 + 64));\n    return v39;\n  }\n  if ( a3 > 0x62 )\n  {\n    if ( a3 == 111 )\n    {\n      if ( *(__int64 *)(a5 + 56) <= 0 || *(_QWORD *)(a5 + 56) > 0x2000000000000000uLL )\n        v16 = 512LL;\n      else\n        v16 = *(_QWORD *)(a5 + 56);\n      sub_402D84(a1, a2, v16);\n      return v39;\n    }\n    if ( a3 > 0x6F )\n    {\n      if ( a3 == 119 )\n      {\n        v44 = sub_40228B(a5);\n        if ( v17 >= 0 )\n        {\n          v18 = sub_402BA9(v44, v17);\n          sub_402CF4(a1, a2, (__int64)v18);\n        }\n        else\n        {\n          sub_402CF4(a1, a2, (__int64)\"-\");\n        }\n        return v39;\n      }\n      if ( a3 > 0x77 )\n      {\n        if ( a3 == 121 )\n        {\n          v28 = sub_402275(a5);\n          v30 = sub_402BA9(v28, v29);\n          sub_402CF4(a1, a2, (__int64)v30);\n        }\n        else if ( a3 < 0x79 )\n        {\n          v23 = sub_402249(a5);\n          v25 = sub_402BA9(v23, v24);\n          sub_402CF4(a1, a2, (__int64)v25);\n        }\n        else\n        {\n          if ( a3 != 122 )\n            goto LABEL_91;\n          v33 = sub_40225F(a5);\n          v35 = sub_402BA9(v33, v34);\n          sub_402CF4(a1, a2, (__int64)v35);\n        }\n      }\n      else\n      {\n        switch ( a3 )\n        {\n          case 't':\n            v14 = gnu_dev_major(*(_QWORD *)(a5 + 40));\n            sub_402E14(a1, a2, v14);\n            break;\n          case 'u':\n            sub_402D84(a1, a2, *(unsigned int *)(a5 + 28));\n            break;\n          case 's':\n            sub_402D84(a1, a2, *(_QWORD *)(a5 + 48));\n            break;\n          default:\n            goto LABEL_91;\n        }\n      }\n    }\n    else if ( a3 == 104 )\n    {\n      sub_402D84(a1, a2, *(_QWORD *)(a5 + 16));\n    }\n    else if ( a3 > 0x68 )\n    {\n      if ( a3 == 109 )\n      {\n        v39 = (unsigned __int8)sub_403844(a4, a1, a2, a5) != 0;\n      }\n      else if ( a3 > 0x6D )\n      {\n        sub_402CF4(a1, a2, (__int64)a4);\n      }\n      else\n      {\n        if ( a3 != 105 )\n          goto LABEL_91;\n        sub_402D84(a1, a2, *(_QWORD *)(a5 + 8));\n      }\n    }\n    else if ( a3 == 102 )\n    {\n      sub_402E14(a1, a2, *(unsigned int *)(a5 + 24));\n    }\n    else if ( a3 > 0x66 )\n    {\n      sub_402D84(a1, a2, *(unsigned int *)(a5 + 32));\n    }\n    else\n    {\n      if ( a3 != 100 )\n        goto LABEL_91;\n      sub_402D84(a1, a2, *(_QWORD *)a5);\n    }\n    return v39;\n  }\n  if ( a3 == 78 )\n  {\n    v5 = sub_405DD3(a4);\n    sub_402CF4(a1, a2, v5);\n    if ( (*(_DWORD *)(a5 + 24) & 0xF000) == 40960 )\n    {\n      ptr = (void *)sub_405381(a4, *(_QWORD *)(a5 + 48));\n      if ( !ptr )\n      {\n        v6 = sub_405DD3(a4);\n        v7 = gettext(\"cannot read symbolic link %s\");\n        v8 = __errno_location();\n        error(0, *v8, v7, v6);\n        return 1LL;\n      }\n      printf(\" -> \");\n      v10 = sub_405DD3(ptr);\n      sub_402CF4(a1, a2, v10);\n      free(ptr);\n    }\n    return v39;\n  }\n  if ( a3 > 0x4E )\n  {\n    if ( a3 == 88 )\n    {\n      v26 = sub_402249(a5);\n      sub_402EAC(a1, a2, a5, v26, v27);\n      return v39;\n    }\n    if ( a3 > 0x58 )\n    {\n      if ( a3 == 90 )\n      {\n        v36 = sub_40225F(a5);\n        sub_402EAC(a1, a2, a5, v36, v37);\n      }\n      else if ( a3 < 0x5A )\n      {\n        v31 = sub_402275(a5);\n        sub_402EAC(a1, a2, a5, v31, v32);\n      }\n      else\n      {\n        if ( a3 != 97 )\n          goto LABEL_91;\n        sub_402DCC(a1, a2, *(_DWORD *)(a5 + 24) & 0xFFF);\n      }\n      return v39;\n    }\n    if ( a3 != 85 )\n    {\n      if ( a3 == 87 )\n      {\n        v19 = sub_40228B(a5);\n        v21 = sub_403991(v19, v20);\n        sub_402EAC(a1, a2, a5, v21, v22);\n      }\n      else\n      {\n        if ( a3 != 84 )\n          goto LABEL_91;\n        v15 = gnu_dev_minor(*(_QWORD *)(a5 + 40));\n        sub_402E14(a1, a2, v15);\n      }\n      return v39;\n    }\n    setpwent();\n    v42 = getpwuid(*(_DWORD *)(a5 + 28));\n    if ( v42 )\n      v13 = v42->pw_name;\n    else\n      v13 = \"UNKNOWN\";\n    goto LABEL_64;\n  }\n  if ( a3 == 67 )\n    return (unsigned __int8)sub_4032E6(a1, a2, (__int64)a4) != 0;\n  if ( a3 > 0x43 )\n  {\n    if ( a3 == 70 )\n    {\n      v12 = sub_4057EA(a5);\n      sub_402CF4(a1, a2, v12);\n      return v39;\n    }\n    if ( a3 != 71 )\n    {\n      if ( a3 != 68 )\n        goto LABEL_91;\n      sub_402E14(a1, a2, *(_QWORD *)a5);\n      return v39;\n    }\n    setgrent();\n    v43 = getgrgid(*(_DWORD *)(a5 + 32));\n    if ( v43 )\n      v13 = v43->gr_name;\n    else\n      v13 = \"UNKNOWN\";\nLABEL_64:\n    sub_402CF4(a1, a2, (__int64)v13);\n    return v39;\n  }\n  if ( a3 == 65 )\n  {\n    v11 = sub_402B7E(a5);\n    sub_402CF4(a1, a2, (__int64)v11);\n  }\n  else\n  {\n    if ( a3 != 66 )\n    {\nLABEL_91:\n      fputc_unlocked(63, stdout);\n      return v39;\n    }\n    sub_402D84(a1, a2, 512LL);\n  }\n  return v39;\n}\n"], [4211112, "sub_4041A8", "int __fastcall sub_4041A8(char a1)\n{\n  char *v1; // rax\n  char v3; // [rsp+Ch] [rbp-14h]\n\n  v3 = a1;\n  if ( a1 == 101 )\n  {\n    v3 = 27;\n  }\n  else if ( a1 > 101 )\n  {\n    if ( a1 == 114 )\n    {\n      v3 = 13;\n    }\n    else if ( a1 > 114 )\n    {\n      if ( a1 == 116 )\n      {\n        v3 = 9;\n      }\n      else\n      {\n        if ( a1 != 118 )\n          goto LABEL_26;\n        v3 = 11;\n      }\n    }\n    else if ( a1 == 102 )\n    {\n      v3 = 12;\n    }\n    else\n    {\n      if ( a1 != 110 )\n        goto LABEL_26;\n      v3 = 10;\n    }\n  }\n  else if ( a1 != 92 )\n  {\n    if ( a1 > 92 )\n    {\n      if ( a1 == 97 )\n      {\n        v3 = 7;\n      }\n      else\n      {\n        if ( a1 != 98 )\n          goto LABEL_26;\n        v3 = 8;\n      }\n    }\n    else if ( a1 != 34 )\n    {\nLABEL_26:\n      v1 = gettext(\"warning: unrecognized escape `\\\\%c'\");\n      error(0, 0, v1, (unsigned int)a1);\n      return putchar_unlocked(v3);\n    }\n  }\n  return putchar_unlocked(v3);\n}\n"], [4211319, "sub_404277", "_BOOL8 __fastcall sub_404277(const char *a1, __int64 a2, unsigned __int8 (__fastcall *a3)(void *, signed __int64, _QWORD, __int64, __int64), __int64 a4)\n{\n  int v4; // eax\n  __int64 v5; // rbx\n  char *v6; // rax\n  const unsigned __int16 *v7; // rbx\n  int v8; // eax\n  const unsigned __int16 *v9; // rbx\n  int v10; // eax\n  char *v11; // rax\n  bool v15; // [rsp+27h] [rbp-49h]\n  int c; // [rsp+28h] [rbp-48h]\n  int v17; // [rsp+2Ch] [rbp-44h]\n  int v18; // [rsp+30h] [rbp-40h]\n  unsigned int v19; // [rsp+34h] [rbp-3Ch]\n  char *src; // [rsp+38h] [rbp-38h]\n  char *srca; // [rsp+38h] [rbp-38h]\n  char *v22; // [rsp+40h] [rbp-30h]\n  char *v23; // [rsp+40h] [rbp-30h]\n  size_t v24; // [rsp+48h] [rbp-28h]\n  void *dest; // [rsp+50h] [rbp-20h]\n  signed __int64 v26; // [rsp+58h] [rbp-18h]\n\n  v15 = 0;\n  v24 = strlen(a1) + 3;\n  dest = (void *)sub_40AAA9(v24);\n  for ( src = (char *)a1; *src; ++src )\n  {\n    v4 = *src;\n    if ( v4 == 37 )\n    {\n      v22 = &src[strspn(src + 1, \"'-+ #0I\") + 1];\n      v23 = &v22[strspn(v22, \"0123456789\")];\n      if ( *v23 == 46 )\n        v23 += strspn(v23 + 1, \"0123456789\") + 1;\n      v26 = v23 - (src + 1);\n      v19 = *v23;\n      memcpy(dest, src, v23 - src);\n      src = v23;\n      if ( v19 )\n      {\n        if ( v19 != 37 )\n        {\n          v15 = (v15 | a3(dest, v26 + 1, v19, a2, a4)) != 0;\n          continue;\n        }\n      }\n      else\n      {\n        src = v23 - 1;\n      }\n      if ( v26 )\n      {\n        *((_BYTE *)dest + v26 + 1) = *v23;\n        *((_BYTE *)dest + v26 + 2) = 0;\n        v5 = sub_4073EC(dest);\n        v6 = gettext(\"%s: invalid directive\");\n        error(1, 0, v6, v5);\n      }\n      putchar_unlocked(37);\n    }\n    else if ( v4 == 92 )\n    {\n      if ( byte_6163A1 != 1 )\n      {\n        putchar_unlocked(92);\n      }\n      else if ( *++src <= 47 || *src > 55 )\n      {\n        if ( *src == 120 && (v7 = *__ctype_b_loc(), (v7[(unsigned __int8)sub_40210B(src[1])] & 0x1000) != 0) )\n        {\n          if ( src[1] <= 96 || src[1] > 102 )\n          {\n            if ( src[1] <= 64 || src[1] > 70 )\n              v8 = src[1] - 48;\n            else\n              v8 = src[1] - 55;\n          }\n          else\n          {\n            v8 = src[1] - 87;\n          }\n          v18 = v8;\n          ++src;\n          v9 = *__ctype_b_loc();\n          if ( (v9[(unsigned __int8)sub_40210B(src[1])] & 0x1000) != 0 )\n          {\n            if ( *++src <= 96 || *src > 102 )\n            {\n              if ( *src <= 64 || *src > 70 )\n                v10 = *src - 48;\n              else\n                v10 = *src - 55;\n            }\n            else\n            {\n              v10 = *src - 87;\n            }\n            v18 = 16 * v18 + v10;\n          }\n          putchar_unlocked(v18);\n        }\n        else if ( *src )\n        {\n          sub_4041A8(*src);\n        }\n        else\n        {\n          v11 = gettext(\"warning: backslash at end of format\");\n          error(0, 0, v11);\n          putchar_unlocked(92);\n          --src;\n        }\n      }\n      else\n      {\n        c = *src - 48;\n        v17 = 1;\n        for ( srca = src + 1; v17 <= 2 && *srca > 47 && *srca <= 55; ++srca )\n        {\n          c = 8 * c + *srca - 48;\n          ++v17;\n        }\n        putchar_unlocked(c);\n        src = srca - 1;\n      }\n    }\n    else\n    {\n      putchar_unlocked(*src);\n    }\n  }\n  free(dest);\n  fputs_unlocked(off_6162F0, stdout);\n  return v15;\n}\n"], [4212488, "sub_404708", "_BOOL8 __fastcall sub_404708(const char *a1, __int64 a2, const char *a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  _BOOL8 result; // rax\n  __int64 v6; // r12\n  char *v7; // rbx\n  int *v8; // rax\n  struct statfs v10; // [rsp+30h] [rbp-90h] BYREF\n\n  if ( !strcmp(a1, \"-\") )\n  {\n    v3 = sub_405DD3(a1);\n    v4 = gettext(\"using %s to denote standard input does not work in file system mode\");\n    error(0, 0, v4, v3);\n    result = 0LL;\n  }\n  else if ( statfs(a1, &v10) )\n  {\n    v6 = sub_405DD3(a1);\n    v7 = gettext(\"cannot read file system information for %s\");\n    v8 = __errno_location();\n    error(0, *v8, v7, v6);\n    result = 0LL;\n  }\n  else\n  {\n    result = !sub_404277(\n                a3,\n                (__int64)a1,\n                (unsigned __int8 (__fastcall *)(void *, signed __int64, _QWORD, __int64, __int64))sub_4033DE,\n                (__int64)&v10);\n  }\n  return result;\n}\n"], [4212785, "sub_404831", "_BOOL8 __fastcall sub_404831(char *a1, __int64 a2, const char *a3, const char *a4)\n{\n  char *v4; // rbx\n  int *v5; // rax\n  bool v7; // al\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  struct stat stat_buf; // [rsp+30h] [rbp-A0h] BYREF\n\n  if ( !strcmp(a1, \"-\") )\n  {\n    if ( (unsigned int)sub_411EA0(0, &stat_buf) )\n    {\n      v4 = gettext(\"cannot stat standard input\");\n      v5 = __errno_location();\n      error(0, *v5, v4);\n      return 0LL;\n    }\n  }\n  else\n  {\n    if ( byte_6163A0 )\n      v7 = (unsigned int)sub_411E90(a1, &stat_buf) != 0;\n    else\n      v7 = (unsigned int)sub_411EB0(a1, &stat_buf) != 0;\n    if ( v7 )\n    {\n      v8 = sub_405DD3(a1);\n      v9 = gettext(\"cannot stat %s\");\n      v10 = __errno_location();\n      error(0, *v10, v9, v8);\n      return 0LL;\n    }\n  }\n  if ( (stat_buf.st_mode & 0xF000) == 24576 || (stat_buf.st_mode & 0xF000) == 0x2000 )\n    a3 = a4;\n  return !sub_404277(\n            a3,\n            (__int64)a1,\n            (unsigned __int8 (__fastcall *)(void *, signed __int64, _QWORD, __int64, __int64))sub_4039D3,\n            (__int64)&stat_buf);\n}\n"], [4213201, "sub_4049D1", "__int64 __fastcall sub_4049D1(char a1, char a2, char a3)\n{\n  char *v3; // rax\n  char *v4; // rax\n  unsigned int v5; // eax\n  int v6; // ecx\n  int v7; // er8\n  int v8; // er9\n  unsigned int v9; // eax\n  int v10; // ecx\n  int v11; // er8\n  int v12; // er9\n  unsigned int v13; // eax\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  __int64 v19; // [rsp+10h] [rbp-10h]\n  __int64 v20; // [rsp+10h] [rbp-10h]\n  __int64 v21; // [rsp+10h] [rbp-10h]\n  __int64 v22; // [rsp+10h] [rbp-10h]\n  void *ptr; // [rsp+18h] [rbp-8h]\n  void *ptra; // [rsp+18h] [rbp-8h]\n  void *ptrb; // [rsp+18h] [rbp-8h]\n\n  if ( a1 )\n  {\n    if ( a2 )\n    {\n      v19 = sub_40ABFE(\"%n %i %l %t %s %S %b %f %a %c %d\\n\");\n    }\n    else\n    {\n      v3 = gettext(\n             \"  File: \\\"%n\\\"\\n\"\n             \"    ID: %-8i Namelen: %-7l Type: %T\\n\"\n             \"Block size: %-10s Fundamental block size: %S\\n\"\n             \"Blocks: Total: %-10b Free: %-10f Available: %a\\n\"\n             \"Inodes: Total: %-10c Free: %d\\n\");\n      v19 = sub_40ABFE(v3);\n    }\n  }\n  else if ( a2 )\n  {\n    v19 = sub_40ABFE(\"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\\n\");\n  }\n  else\n  {\n    v4 = gettext(\"  File: %N\\n  Size: %-10s\\tBlocks: %-10b IO Block: %-6o %F\\n\");\n    v20 = sub_40ABFE(v4);\n    ptr = (void *)v20;\n    if ( a3 )\n      v5 = (unsigned int)gettext(\"Device: %Dh/%dd\\tInode: %-10i  Links: %-5h Device type: %t,%T\\n\");\n    else\n      v5 = (unsigned int)gettext(\"Device: %Dh/%dd\\tInode: %-10i  Links: %h\\n\");\n    v21 = sub_40AC99((unsigned int)\"%s%s\", v20, v5, v6, v7, v8);\n    free(ptr);\n    ptra = (void *)v21;\n    v9 = (unsigned int)gettext(\"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\\n\");\n    v22 = sub_40AC99((unsigned int)\"%s%s\", v21, v9, v10, v11, v12);\n    free(ptra);\n    ptrb = (void *)v22;\n    v13 = (unsigned int)gettext(\"Access: %x\\nModify: %y\\nChange: %z\\n Birth: %w\\n\");\n    v19 = sub_40AC99((unsigned int)\"%s%s\", v22, v13, v14, v15, v16);\n    free(ptrb);\n  }\n  return v19;\n}\n"], [4213558, "sub_404B36", "void __fastcall __noreturn sub_404B36(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n  FILE *v22; // rbx\n  char *v23; // rax\n  char *v24; // rax\n\n  v1 = qword_616448;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... FILE...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Display file or file system status.\\n\"\n           \"\\n\"\n           \"  -L, --dereference     follow links\\n\"\n           \"  -f, --file-system     display file system status instead of file status\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\n           \"  -c  --format=FORMAT   use the specified FORMAT instead of the default;\\n\"\n           \"                          output a newline after each use of FORMAT\\n\"\n           \"      --printf=FORMAT   like --format, but interpret backslash escapes,\\n\"\n           \"                          and do not output a mandatory trailing newline.\\n\"\n           \"                          If you want a newline, include \\\\n in FORMAT\\n\"\n           \"  -t, --terse           print the information in terse form\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"\\n\"\n            \"The valid format sequences for files (without --file-system):\\n\"\n            \"\\n\"\n            \"  %a   Access rights in octal\\n\"\n            \"  %A   Access rights in human readable form\\n\"\n            \"  %b   Number of blocks allocated (see %B)\\n\"\n            \"  %B   The size in bytes of each block reported by %b\\n\"\n            \"  %C   SELinux security context string\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\n            \"  %d   Device number in decimal\\n\"\n            \"  %D   Device number in hex\\n\"\n            \"  %f   Raw mode in hex\\n\"\n            \"  %F   File type\\n\"\n            \"  %g   Group ID of owner\\n\"\n            \"  %G   Group name of owner\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"  %h   Number of hard links\\n\"\n            \"  %i   Inode number\\n\"\n            \"  %m   Mount point\\n\"\n            \"  %n   File name\\n\"\n            \"  %N   Quoted file name with dereference if symbolic link\\n\"\n            \"  %o   I/O block size\\n\"\n            \"  %s   Total size, in bytes\\n\"\n            \"  %t   Major device type in hex\\n\"\n            \"  %T   Minor device type in hex\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"  %u   User ID of owner\\n\"\n            \"  %U   User name of owner\\n\"\n            \"  %w   Time of file birth, human-readable; - if unknown\\n\"\n            \"  %W   Time of file birth, seconds since Epoch; 0 if unknown\\n\"\n            \"  %x   Time of last access, human-readable\\n\"\n            \"  %X   Time of last access, seconds since Epoch\\n\"\n            \"  %y   Time of last modification, human-readable\\n\"\n            \"  %Y   Time of last modification, seconds since Epoch\\n\"\n            \"  %z   Time of last change, human-readable\\n\"\n            \"  %Z   Time of last change, seconds since Epoch\\n\"\n            \"\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\n            \"Valid format sequences for file systems:\\n\"\n            \"\\n\"\n            \"  %a   Free blocks available to non-superuser\\n\"\n            \"  %b   Total data blocks in file system\\n\"\n            \"  %c   Total file nodes in file system\\n\"\n            \"  %d   Free file nodes in file system\\n\"\n            \"  %f   Free blocks in file system\\n\");\n    fputs_unlocked(v21, v20);\n    v22 = stdout;\n    v23 = gettext(\n            \"  %i   File System ID in hex\\n\"\n            \"  %l   Maximum length of filenames\\n\"\n            \"  %n   File name\\n\"\n            \"  %s   Block size (for faster transfers)\\n\"\n            \"  %S   Fundamental block size (for block counts)\\n\"\n            \"  %t   Type in hex\\n\"\n            \"  %T   Type in human readable form\\n\");\n    fputs_unlocked(v23, v22);\n    v24 = gettext(\n            \"\\n\"\n            \"NOTE: your shell may have its own version of %s, which usually supersedes\\n\"\n            \"the version described here.  Please refer to your shell's documentation\\n\"\n            \"for details about the options it supports.\\n\");\n    printf(v24, \"stat\");\n    sub_40211A();\n  }\n  exit(a1);\n}\n"], [4213983, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  char *v4; // rax\n  bool v5; // al\n  char v6; // [rsp+1Dh] [rbp-33h]\n  unsigned __int8 v7; // [rsp+1Eh] [rbp-32h]\n  bool v8; // [rsp+1Fh] [rbp-31h]\n  int i; // [rsp+20h] [rbp-30h]\n  int v10; // [rsp+24h] [rbp-2Ch]\n  const char *v11; // [rsp+28h] [rbp-28h]\n  const char *v12; // [rsp+30h] [rbp-20h]\n  struct lconv *v13; // [rsp+38h] [rbp-18h]\n\n  v6 = 0;\n  v7 = 0;\n  v11 = 0LL;\n  v8 = 1;\n  sub_405CC8(*a2, a2, a3);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  v13 = localeconv();\n  if ( *v13->decimal_point )\n    v3 = v13->decimal_point;\n  else\n    v3 = \".\";\n  qword_6163A8 = v3;\n  qword_6163B0 = strlen(v3);\n  sub_411E70(sub_4054FA);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v10 = getopt_long(a1, a2, \"c:fLt\", &longopts, 0LL);\n        if ( v10 == -1 )\n        {\n          if ( a1 == optind )\n          {\n            v4 = gettext(\"missing operand\");\n            error(0, 0, v4);\n            sub_404B36(1);\n          }\n          if ( v11 )\n          {\n            v12 = v11;\n          }\n          else\n          {\n            v11 = (const char *)sub_4049D1(v6, v7, 0);\n            v12 = (const char *)sub_4049D1(v6, v7, 1);\n          }\n          for ( i = optind; i < a1; ++i )\n          {\n            if ( v6 )\n              v5 = sub_404708(a2[i], v7, v11);\n            else\n              v5 = sub_404831(a2[i], v7, v11, v12);\n            v8 = v8 && v5;\n          }\n          exit(!v8);\n        }\n        if ( v10 != 99 )\n          break;\n        v11 = (const char *)optarg;\n        byte_6163A1 = 0;\n        off_6162F0 = \"\\n\";\n      }\n      if ( v10 <= 99 )\n        break;\n      switch ( v10 )\n      {\n        case 116:\n          v7 = 1;\n          break;\n        case 128:\n          v11 = (const char *)optarg;\n          byte_6163A1 = 1;\n          off_6162F0 = (char *)&locale;\n          break;\n        case 102:\n          v6 = 1;\n          break;\n        default:\n          goto LABEL_22;\n      }\n    }\n    if ( v10 == -130 )\n      sub_404B36(0);\n    if ( v10 != 76 )\n    {\n      if ( v10 == -131 )\n      {\n        sub_40A841(\n          (_DWORD)stdout,\n          (unsigned int)\"stat\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_6162F8,\n          (unsigned int)\"Michael Meskes\",\n          0,\n          (char)a2);\n        exit(0);\n      }\nLABEL_22:\n      sub_404B36(1);\n    }\n    byte_6163A0 = 1;\n  }\n}\n"], [4214708, "sub_404FB4", "__int64 __fastcall sub_404FB4(char *a1, _DWORD *a2)\n{\n  char *v2; // rbx\n  int *v3; // rax\n  __int64 result; // rax\n  __int64 v5; // r12\n  char *v6; // rbx\n  int *v7; // rax\n  size_t v8; // rax\n  void *v9; // rsp\n  __int64 v10; // r12\n  char *v11; // rbx\n  int *v12; // rax\n  __int64 v13; // r12\n  char *v14; // rbx\n  int *v15; // rax\n  __int64 v16; // r12\n  char *v17; // rbx\n  int *v18; // rax\n  __int64 v19; // r12\n  char *v20; // rbx\n  int *v21; // rax\n  char *v22; // rbx\n  int *v23; // rax\n  char *path; // [rsp+8h] [rbp-188h] BYREF\n  int v25; // [rsp+1Ch] [rbp-174h]\n  __int64 v26; // [rsp+20h] [rbp-170h]\n  void *ptr; // [rsp+28h] [rbp-168h]\n  char *s; // [rsp+30h] [rbp-160h]\n  size_t n; // [rsp+38h] [rbp-158h]\n  void *dest; // [rsp+40h] [rbp-150h]\n  char *v31; // [rsp+48h] [rbp-148h]\n  char v32[16]; // [rsp+50h] [rbp-140h] BYREF\n  struct stat stat_buf; // [rsp+60h] [rbp-130h] BYREF\n  struct stat v34; // [rsp+F0h] [rbp-A0h] BYREF\n\n  path = a1;\n  v26 = 0LL;\n  if ( (unsigned int)sub_40756B(v32) )\n  {\n    v2 = gettext(\"cannot get current directory\");\n    v3 = __errno_location();\n    error(0, *v3, v2);\n    result = 0LL;\n  }\n  else if ( (a2[6] & 0xF000) == 0x4000 )\n  {\n    qmemcpy(&stat_buf, a2, sizeof(stat_buf));\n    if ( chdir(path) >= 0 )\n      goto LABEL_10;\n    v5 = sub_405DD3(path);\n    v6 = gettext(\"cannot change to directory %s\");\n    v7 = __errno_location();\n    error(0, *v7, v6, v5);\n    result = 0LL;\n  }\n  else\n  {\n    ptr = (void *)sub_4055E5(path);\n    s = (char *)ptr;\n    v8 = strlen((const char *)ptr);\n    n = v8 + 1;\n    v9 = alloca(16 * ((v8 + 31) / 0x10));\n    dest = (void *)(16 * (((unsigned __int64)&path + 7) >> 4));\n    v31 = (char *)memcpy(dest, ptr, v8 + 1);\n    free(ptr);\n    if ( chdir(v31) >= 0 )\n    {\n      if ( (int)sub_411E90(\".\", &stat_buf) >= 0 )\n      {\n        while ( 1 )\n        {\nLABEL_10:\n          if ( (int)sub_411E90(\"..\", &v34) < 0 )\n          {\n            v16 = sub_405DD3(\"..\");\n            v17 = gettext(\"cannot stat %s\");\n            v18 = __errno_location();\n            error(0, *v18, v17, v16);\n            goto LABEL_18;\n          }\n          if ( v34.st_dev != stat_buf.st_dev || v34.st_ino == stat_buf.st_ino )\n            break;\n          if ( chdir(\"..\") < 0 )\n          {\n            v19 = sub_405DD3(\"..\");\n            v20 = gettext(\"cannot change to directory %s\");\n            v21 = __errno_location();\n            error(0, *v21, v20, v19);\n            goto LABEL_18;\n          }\n          qmemcpy(&stat_buf, &v34, sizeof(stat_buf));\n        }\n        v26 = sub_40AC60();\n      }\n      else\n      {\n        v13 = sub_405DD3(v31);\n        v14 = gettext(\"cannot stat current directory (now %s)\");\n        v15 = __errno_location();\n        error(0, *v15, v14, v13);\n      }\nLABEL_18:\n      v25 = *__errno_location();\n      if ( (unsigned int)sub_4075F2(v32) )\n      {\n        v22 = gettext(\"failed to return to initial working directory\");\n        v23 = __errno_location();\n        error(1, *v23, v22);\n      }\n      sub_407629(v32);\n      *__errno_location() = v25;\n      result = v26;\n    }\n    else\n    {\n      v10 = sub_405DD3(v31);\n      v11 = gettext(\"cannot change to directory %s\");\n      v12 = __errno_location();\n      error(0, *v12, v11, v10);\n      result = 0LL;\n    }\n  }\n  return result;\n}\n"], [4215681, "sub_405381", "char *__fastcall sub_405381(const char *a1, unsigned __int64 a2)\n{\n  __int64 v2; // rax\n  char *i; // rax\n  int v5; // [rsp+14h] [rbp-3Ch]\n  size_t size; // [rsp+18h] [rbp-38h]\n  char *buf; // [rsp+38h] [rbp-18h]\n  ssize_t v8; // [rsp+48h] [rbp-8h]\n\n  if ( a2 >= 0x401 )\n    v2 = 1025LL;\n  else\n    v2 = a2 + 1;\n  size = v2;\nLABEL_5:\n  for ( i = (char *)malloc(size); ; i = (char *)malloc(0x7FFFFFFFFFFFFFFFuLL) )\n  {\n    buf = i;\n    if ( !i )\n      return 0LL;\n    v8 = readlink(a1, i, size);\n    if ( v8 < 0 && *__errno_location() != 34 )\n    {\n      v5 = *__errno_location();\n      free(buf);\n      *__errno_location() = v5;\n      return 0LL;\n    }\n    if ( v8 < size )\n    {\n      buf[v8] = 0;\n      return buf;\n    }\n    free(buf);\n    if ( size <= 0x3FFFFFFFFFFFFFFFLL )\n    {\n      size *= 2LL;\n      goto LABEL_5;\n    }\n    if ( size > 0x7FFFFFFFFFFFFFFELL )\n      break;\n    size = 0x7FFFFFFFFFFFFFFFLL;\n  }\n  *__errno_location() = 12;\n  return 0LL;\n}\n"], [4216016, "sub_4054D0", "__int64 __fastcall sub_4054D0(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_616438 = a1;\n  return result;\n}\n"], [4216037, "sub_4054E5", "__int64 __fastcall sub_4054E5(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_616440 = a1;\n  return result;\n}\n"], [4216058, "sub_4054FA", "__int64 sub_4054FA()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40BC85(stdout) && (byte_616440 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_616438 )\n    {\n      v0 = (const char *)sub_4073EC(qword_616438);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40BC85(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4216293, "sub_4055E5", "__int64 __fastcall sub_4055E5(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  v2 = sub_40569C(a1);\n  if ( !v2 )\n    sub_40AC2B();\n  return v2;\n}\n"], [4216339, "sub_405613", "unsigned __int64 __fastcall sub_405613(_BYTE *a1)\n{\n  unsigned __int64 i; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = *a1 == 47;\n  for ( i = sub_405733(a1) - (_QWORD)a1; v3 < i && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4216476, "sub_40569C", "_BYTE *__fastcall sub_40569C(_BYTE *a1)\n{\n  unsigned __int64 n; // [rsp+20h] [rbp-10h]\n  _BYTE *dest; // [rsp+28h] [rbp-8h]\n\n  n = sub_405613(a1);\n  dest = malloc((n == 0) + n + 1);\n  if ( !dest )\n    return 0LL;\n  memcpy(dest, a1, n);\n  if ( !n )\n  {\n    n = 1LL;\n    *dest = 46;\n  }\n  dest[n] = 0;\n  return dest;\n}\n"], [4216627, "sub_405733", "_BYTE *__fastcall sub_405733(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4216732, "sub_40579C", "size_t __fastcall sub_40579C(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4216810, "sub_4057EA", "char *__fastcall sub_4057EA(__int64 a1)\n{\n  char *result; // rax\n\n  switch ( *(_DWORD *)(a1 + 24) & 0xF000 )\n  {\n    case 32768:\n      if ( *(_QWORD *)(a1 + 48) )\n        result = gettext(\"regular file\");\n      else\n        result = gettext(\"regular empty file\");\n      break;\n    case 16384:\n      result = gettext(\"directory\");\n      break;\n    case 24576:\n      result = gettext(\"block special file\");\n      break;\n    case 8192:\n      result = gettext(\"character special file\");\n      break;\n    case 4096:\n      result = gettext(\"fifo\");\n      break;\n    case 40960:\n      result = gettext(\"symbolic link\");\n      break;\n    case 49152:\n      result = gettext(\"socket\");\n      break;\n    default:\n      result = gettext(\"weird file\");\n      break;\n  }\n  return result;\n}\n"], [4217085, "sub_4058FD", "__int64 __fastcall sub_4058FD(__int16 a1)\n{\n  switch ( a1 & 0xF000 )\n  {\n    case 32768:\n      return 45LL;\n    case 16384:\n      return 100LL;\n    case 24576:\n      return 98LL;\n    case 8192:\n      return 99LL;\n    case 40960:\n      return 108LL;\n    case 4096:\n      return 112LL;\n    case 49152:\n      return 115LL;\n  }\n  return 63LL;\n}\n"], [4217256, "sub_4059A8", "_BYTE *__fastcall sub_4059A8(__int16 a1, _BYTE *a2)\n{\n  char v2; // al\n  char v3; // al\n  char v4; // al\n  char v5; // al\n  char v6; // al\n  char v7; // al\n  char v8; // al\n  char v9; // al\n  char v10; // al\n  _BYTE *result; // rax\n\n  *a2 = sub_4058FD(a1);\n  if ( (a1 & 0x100) != 0 )\n    v2 = 114;\n  else\n    v2 = 45;\n  a2[1] = v2;\n  if ( (a1 & 0x80) != 0 )\n    v3 = 119;\n  else\n    v3 = 45;\n  a2[2] = v3;\n  if ( (a1 & 0x800) != 0 )\n  {\n    if ( (a1 & 0x40) != 0 )\n      v4 = 115;\n    else\n      v4 = 83;\n  }\n  else if ( (a1 & 0x40) != 0 )\n  {\n    v4 = 120;\n  }\n  else\n  {\n    v4 = 45;\n  }\n  a2[3] = v4;\n  if ( (a1 & 0x20) != 0 )\n    v5 = 114;\n  else\n    v5 = 45;\n  a2[4] = v5;\n  if ( (a1 & 0x10) != 0 )\n    v6 = 119;\n  else\n    v6 = 45;\n  a2[5] = v6;\n  if ( (a1 & 0x400) != 0 )\n  {\n    if ( (a1 & 8) != 0 )\n      v7 = 115;\n    else\n      v7 = 83;\n  }\n  else if ( (a1 & 8) != 0 )\n  {\n    v7 = 120;\n  }\n  else\n  {\n    v7 = 45;\n  }\n  a2[6] = v7;\n  if ( (a1 & 4) != 0 )\n    v8 = 114;\n  else\n    v8 = 45;\n  a2[7] = v8;\n  if ( (a1 & 2) != 0 )\n    v9 = 119;\n  else\n    v9 = 45;\n  a2[8] = v9;\n  if ( (a1 & 0x200) != 0 )\n  {\n    if ( (a1 & 1) != 0 )\n      v10 = 116;\n    else\n      v10 = 84;\n  }\n  else if ( (a1 & 1) != 0 )\n  {\n    v10 = 120;\n  }\n  else\n  {\n    v10 = 45;\n  }\n  a2[9] = v10;\n  a2[10] = 32;\n  result = a2 + 11;\n  a2[11] = 0;\n  return result;\n}\n"], [4217711, "sub_405B6F", "_BYTE *__fastcall sub_405B6F(__int64 a1, _BYTE *a2)\n{\n  return sub_4059A8(*(_DWORD *)(a1 + 24), a2);\n}\n"], [4217750, "sub_405B96", "__int64 __fastcall sub_405B96(__int64 a1, __int64 a2)\n{\n  __int64 v3; // [rsp+8h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = a1;\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  if ( a1 >= 0 )\n  {\n    do\n    {\n      *(_BYTE *)--v4 = (char)v3 % 10 + 48;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n  }\n  else\n  {\n    do\n    {\n      *(_BYTE *)--v4 = 48 - (char)v3 % 10;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n    *(_BYTE *)--v4 = 45;\n  }\n  return v4;\n}\n"], [4218056, "sub_405CC8", "char *__fastcall sub_405CC8(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_616448 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4218287, "sub_405DAF", "__int64 __fastcall sub_405DAF(unsigned int a1, __int64 a2)\n{\n  return sub_40725E(a1, 6LL, a2);\n}\n"], [4218323, "sub_405DD3", "__int64 __fastcall sub_405DD3(__int64 a1)\n{\n  return sub_405DAF(0, a1);\n}\n"], [4218354, "sub_405DF2", "__int64 __fastcall sub_405DF2(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_616460;\n  v4 = sub_40ABCD(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4218427, "sub_405E3B", "__int64 __fastcall sub_405E3B(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_616460;\n  return *(unsigned int *)v1;\n}\n"], [4218457, "sub_405E59", "__int64 *__fastcall sub_405E59(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_616460;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4218493, "sub_405E7D", "__int64 __fastcall sub_405E7D(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_616460;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4218629, "sub_405F05", "__int64 __fastcall sub_405F05(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_616460;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4218680, "sub_405F38", "__int64 *__fastcall sub_405F38(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_616460;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4218770, "sub_405F92", "_QWORD *__fastcall sub_405F92(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4218890, "sub_40600A", "char *__fastcall sub_40600A(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)asc_413520;\n  return v3;\n}\n"], [4218951, "sub_406047", "unsigned __int64 __fastcall sub_406047(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_40600A((const char *)&asc_413520[1], a5);\n        a9 = sub_40600A((const char *)&asc_413520[2], a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)asc_413520;\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(asc_413520 + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_406047(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4222098, "sub_406C92", "unsigned __int64 __fastcall sub_406C92(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_616460;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_406047(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4222258, "sub_406D32", "__int64 __fastcall sub_406D32(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_406D64(a1, a2, 0LL, a3);\n}\n"], [4222308, "sub_406D64", "__int64 __fastcall sub_406D64(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_616460;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_406047(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_40AA8F(v10);\n  sub_406047(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4222608, "sub_406E90", "void sub_406E90()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_616330;\n  for ( i = 1; i < dword_616310; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6164A0 )\n  {\n    free(ptr[1]);\n    qword_616320 = 256LL;\n    off_616328 = &unk_6164A0;\n  }\n  if ( ptr != (void **)&qword_616320 )\n  {\n    free(ptr);\n    off_616330 = &qword_616320;\n  }\n  dword_616310 = 1;\n}\n"], [4222779, "sub_406F3B", "void *__fastcall sub_406F3B(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_616330;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_616310 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_616330 == &qword_616320;\n    if ( off_616330 == &qword_616320 )\n      v4 = 0LL;\n    else\n      v4 = off_616330;\n    v12 = (__int64 *)sub_40AADE(v4, 16 * v14);\n    off_616330 = v12;\n    if ( v9 )\n    {\n      v5 = off_616328;\n      *v12 = qword_616320;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_616310], 0, 16 * (v14 - (unsigned int)dword_616310));\n    dword_616310 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_406047((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6164A0 )\n      free(ptr);\n    ptr = (void *)sub_40AA8F(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_406047((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4223425, "sub_4071C1", "void *__fastcall sub_4071C1(int a1, __int64 a2)\n{\n  return sub_406F3B(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_616460);\n}\n"], [4223468, "sub_4071EC", "void *__fastcall sub_4071EC(int a1, __int64 a2, size_t a3)\n{\n  return sub_406F3B(a1, a2, a3, (__int64)&qword_616460);\n}\n"], [4223512, "sub_407218", "void *__fastcall sub_407218(__int64 a1)\n{\n  return sub_4071C1(0, a1);\n}\n"], [4223543, "sub_407237", "void *__fastcall sub_407237(__int64 a1, size_t a2)\n{\n  return sub_4071EC(0, a1, a2);\n}\n"], [4223582, "sub_40725E", "void *__fastcall sub_40725E(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_405F92(v5, a2);\n  return sub_406F3B(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4223647, "sub_40729F", "void *__fastcall sub_40729F(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_405F92(v7, a2);\n  return sub_406F3B(a1, a3, a4, (__int64)v7);\n}\n"], [4223710, "sub_4072DE", "void *__fastcall sub_4072DE(int a1, __int64 a2)\n{\n  return sub_40725E(0, a1, a2);\n}\n"], [4223746, "sub_407302", "void *__fastcall sub_407302(int a1, __int64 a2, size_t a3)\n{\n  return sub_40729F(0, a1, a2, a3);\n}\n"], [4223790, "sub_40732E", "void *__fastcall sub_40732E(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_616460;\n  v4[1] = qword_616468;\n  v4[2] = qword_616470;\n  v4[3] = qword_616478;\n  v4[4] = qword_616480;\n  v4[5] = qword_616488;\n  v4[6] = qword_616490;\n  sub_405E7D(v4, a3, 1);\n  return sub_406F3B(0, a1, a2, (__int64)v4);\n}\n"], [4223938, "sub_4073C2", "void *__fastcall sub_4073C2(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40732E(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4223980, "sub_4073EC", "void *__fastcall sub_4073EC(__int64 a1)\n{\n  return sub_4073C2(a1, 0x3Au);\n}\n"], [4224011, "sub_40740B", "void *__fastcall sub_40740B(__int64 a1, size_t a2)\n{\n  return sub_40732E(a1, a2, 0x3Au);\n}\n"], [4224053, "sub_407435", "__int64 __fastcall sub_407435(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_40746B(a1, a2, a3, a4, -1LL);\n}\n"], [4224107, "sub_40746B", "void *__fastcall sub_40746B(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_616460;\n  v8[1] = qword_616468;\n  v8[2] = qword_616470;\n  v8[3] = qword_616478;\n  v8[4] = qword_616480;\n  v8[5] = qword_616488;\n  v8[6] = qword_616490;\n  sub_405F38(v8, a2, a3);\n  return sub_406F3B(a1, a4, a5, (__int64)v8);\n}\n"], [4224258, "sub_407502", "__int64 __fastcall sub_407502(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_407435(0, a1, a2, a3);\n}\n"], [4224305, "sub_407531", "void *__fastcall sub_407531(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_40746B(0, a1, a2, a3, a4);\n}\n"], [4224363, "sub_40756B", "__int64 __fastcall sub_40756B(unsigned int *a1, __int64 a2, int a3, int a4, int a5, int a6)\n{\n  __int64 result; // rax\n\n  *((_QWORD *)a1 + 1) = 0LL;\n  *a1 = sub_40BD10(4273446, 0, a3, a4, a5, a6);\n  if ( (*a1 & 0x80000000) == 0 )\n  {\n    sub_40BBE4(*a1, 1LL);\n    result = 0LL;\n  }\n  else\n  {\n    *((_QWORD *)a1 + 1) = sub_40B145(0LL, 0LL);\n    if ( *((_QWORD *)a1 + 1) )\n      result = 0LL;\n    else\n      result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4224498, "sub_4075F2", "int __fastcall sub_4075F2(__int64 a1)\n{\n  int result; // eax\n\n  if ( *(int *)a1 < 0 )\n    result = sub_40AE50(*(_QWORD *)(a1 + 8));\n  else\n    result = fchdir(*(_DWORD *)a1);\n  return result;\n}\n"], [4224553, "sub_407629", "void __fastcall sub_407629(__int64 a1)\n{\n  if ( *(int *)a1 >= 0 )\n    close(*(_DWORD *)a1);\n  free(*(void **)(a1 + 8));\n}\n"], [4224606, "sub_40765E", "__int64 __fastcall sub_40765E(__int64 a1, __int64 a2, __int64 a3)\n{\n  while ( a3-- )\n    *(_BYTE *)(a1 + a3) = tolower(*(unsigned __int8 *)(a2 + a3));\n  return a1;\n}\n"], [4224695, "sub_4076B7", "__int64 __fastcall sub_4076B7(__int64 a1, __int64 a2, __int64 a3)\n{\n  while ( a3-- )\n    *(_BYTE *)(a1 + a3) = toupper(*(unsigned __int8 *)(a2 + a3));\n  return a1;\n}\n"], [4224784, "sub_407710", "__int64 __fastcall sub_407710(int a1, int a2)\n{\n  return (unsigned int)(a1 - (a1 - a2 + 382) % 7 + 3);\n}\n"], [4224865, "sub_407761", "__int64 __fastcall sub_407761(unsigned __int8 a1, char *a2, __int64 a3, char *a4, const struct tm *a5, int a6, int a7)\n{\n  __int64 result; // rax\n  int v8; // eax\n  int v9; // eax\n  char *v10; // rax\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  size_t v13; // rax\n  _BOOL4 v14; // eax\n  char v15; // al\n  unsigned __int64 v16; // rax\n  int v17; // eax\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  char v23; // al\n  unsigned __int64 v24; // rax\n  int v25; // eax\n  _BOOL4 v26; // eax\n  _BOOL4 v27; // eax\n  int v28; // eax\n  int v29; // eax\n  int v30; // eax\n  unsigned __int64 v31; // rax\n  unsigned __int64 v32; // rax\n  bool v36; // [rsp+32h] [rbp-6CEh]\n  char v37; // [rsp+33h] [rbp-6CDh]\n  char v38; // [rsp+34h] [rbp-6CCh]\n  unsigned __int8 v39; // [rsp+35h] [rbp-6CBh]\n  char v40; // [rsp+36h] [rbp-6CAh]\n  char v41; // [rsp+37h] [rbp-6C9h]\n  int v42; // [rsp+38h] [rbp-6C8h]\n  int v43; // [rsp+3Ch] [rbp-6C4h]\n  int v44; // [rsp+40h] [rbp-6C0h]\n  int v45; // [rsp+44h] [rbp-6BCh]\n  int v46; // [rsp+48h] [rbp-6B8h]\n  unsigned int v47; // [rsp+4Ch] [rbp-6B4h]\n  int v48; // [rsp+50h] [rbp-6B0h]\n  int v49; // [rsp+54h] [rbp-6ACh]\n  int v50; // [rsp+58h] [rbp-6A8h]\n  int j; // [rsp+5Ch] [rbp-6A4h]\n  int v52; // [rsp+60h] [rbp-6A0h]\n  int v53; // [rsp+64h] [rbp-69Ch]\n  int v54; // [rsp+68h] [rbp-698h]\n  int i; // [rsp+6Ch] [rbp-694h]\n  int v56; // [rsp+70h] [rbp-690h]\n  int v57; // [rsp+74h] [rbp-68Ch]\n  int v58; // [rsp+78h] [rbp-688h]\n  int v59; // [rsp+7Ch] [rbp-684h]\n  int v60; // [rsp+80h] [rbp-680h]\n  int v61; // [rsp+84h] [rbp-67Ch]\n  int v62; // [rsp+88h] [rbp-678h]\n  int v63; // [rsp+8Ch] [rbp-674h]\n  int v64; // [rsp+90h] [rbp-670h]\n  int v65; // [rsp+94h] [rbp-66Ch]\n  char *v66; // [rsp+98h] [rbp-668h]\n  __int64 v67; // [rsp+A0h] [rbp-660h]\n  const char *v70; // [rsp+B8h] [rbp-648h]\n  __int64 src; // [rsp+C0h] [rbp-640h]\n  __int64 k; // [rsp+C8h] [rbp-638h]\n  char *v73; // [rsp+D0h] [rbp-630h]\n  time_t v74; // [rsp+D8h] [rbp-628h]\n  unsigned __int64 v75; // [rsp+108h] [rbp-5F8h]\n  unsigned __int64 v76; // [rsp+110h] [rbp-5F0h]\n  __int64 v77; // [rsp+118h] [rbp-5E8h]\n  unsigned __int64 v78; // [rsp+128h] [rbp-5D8h]\n  unsigned __int64 v79; // [rsp+130h] [rbp-5D0h]\n  __int64 v80; // [rsp+138h] [rbp-5C8h]\n  unsigned __int64 v81; // [rsp+148h] [rbp-5B8h]\n  unsigned __int64 v82; // [rsp+150h] [rbp-5B0h]\n  unsigned __int64 v83; // [rsp+158h] [rbp-5A8h]\n  size_t v84; // [rsp+160h] [rbp-5A0h]\n  unsigned __int64 v85; // [rsp+170h] [rbp-590h]\n  unsigned __int64 v86; // [rsp+178h] [rbp-588h]\n  __int64 v87; // [rsp+180h] [rbp-580h]\n  unsigned __int64 v88; // [rsp+188h] [rbp-578h]\n  unsigned __int64 v89; // [rsp+190h] [rbp-570h]\n  unsigned __int64 v90; // [rsp+198h] [rbp-568h]\n  size_t v91; // [rsp+1A0h] [rbp-560h]\n  unsigned __int64 v92; // [rsp+1B0h] [rbp-550h]\n  unsigned __int64 v93; // [rsp+1B8h] [rbp-548h]\n  __int64 v94; // [rsp+1C0h] [rbp-540h]\n  unsigned __int64 v95; // [rsp+1D0h] [rbp-530h]\n  unsigned __int64 v96; // [rsp+1D8h] [rbp-528h]\n  __int64 v97; // [rsp+1E0h] [rbp-520h]\n  unsigned __int64 v98; // [rsp+1F0h] [rbp-510h]\n  unsigned __int64 v99; // [rsp+1F8h] [rbp-508h]\n  __int64 v100; // [rsp+200h] [rbp-500h]\n  unsigned __int64 v101; // [rsp+210h] [rbp-4F0h]\n  unsigned __int64 v102; // [rsp+218h] [rbp-4E8h]\n  __int64 v103; // [rsp+220h] [rbp-4E0h]\n  unsigned __int64 v104; // [rsp+228h] [rbp-4D8h]\n  unsigned __int64 v105; // [rsp+230h] [rbp-4D0h]\n  unsigned __int64 v106; // [rsp+238h] [rbp-4C8h]\n  size_t v107; // [rsp+240h] [rbp-4C0h]\n  size_t v108; // [rsp+248h] [rbp-4B8h]\n  unsigned __int64 v109; // [rsp+250h] [rbp-4B0h]\n  unsigned __int64 v110; // [rsp+258h] [rbp-4A8h]\n  size_t v111; // [rsp+260h] [rbp-4A0h]\n  size_t v112; // [rsp+268h] [rbp-498h]\n  unsigned __int64 v113; // [rsp+278h] [rbp-488h]\n  unsigned __int64 v114; // [rsp+280h] [rbp-480h]\n  __int64 v115; // [rsp+288h] [rbp-478h]\n  struct tm v116; // [rsp+290h] [rbp-470h] BYREF\n  char format[2]; // [rsp+2D0h] [rbp-430h] BYREF\n  char v118; // [rsp+2D2h] [rbp-42Eh] BYREF\n  _BYTE v119[5]; // [rsp+2D3h] [rbp-42Dh] BYREF\n  char v120; // [rsp+2E0h] [rbp-420h] BYREF\n  _BYTE v121[22]; // [rsp+2E1h] [rbp-41Fh] BYREF\n  _BYTE v122[1033]; // [rsp+2F7h] [rbp-409h] BYREF\n  __int64 savedregs; // [rsp+700h] [rbp+0h] BYREF\n\n  *(_QWORD *)&v122[1009] = __readfsqword(0x28u);\n  v42 = a5->tm_hour;\n  v67 = 0LL;\n  v66 = (char *)a5->tm_zone;\n  if ( v42 <= 12 )\n  {\n    if ( !v42 )\n      v42 = 12;\n  }\n  else\n  {\n    v42 -= 12;\n  }\n  while ( 2 )\n  {\n    if ( !*a4 )\n    {\n      if ( a2 )\n      {\n        if ( a3 )\n          *a2 = 0;\n      }\n      return v67;\n    }\n    v43 = 0;\n    v45 = 0;\n    v49 = -1;\n    v38 = 0;\n    v39 = a1;\n    v40 = 0;\n    if ( *a4 != 37 )\n    {\n      if ( (unsigned __int64)(a3 - v67) <= 1 )\n        return 0LL;\n      if ( a2 )\n        *a2++ = *a4;\n      ++v67;\n      goto LABEL_477;\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v8 = *++a4;\n        if ( v8 == 48 )\n          goto LABEL_19;\n        if ( v8 > 48 )\n          break;\n        if ( v8 == 35 )\n        {\n          v40 = 1;\n        }\n        else\n        {\n          if ( v8 != 45 )\n            goto LABEL_22;\nLABEL_19:\n          v43 = *a4;\n        }\n      }\n      if ( v8 != 94 )\n        break;\n      v39 = 1;\n    }\n    if ( v8 == 95 )\n      goto LABEL_19;\nLABEL_22:\n    if ( (unsigned int)(*a4 - 48) <= 9 )\n    {\n      v49 = 0;\n      do\n      {\n        if ( v49 > 214748364 || v49 == 214748364 && *a4 - 48 > 7 )\n          v49 = 0x7FFFFFFF;\n        else\n          v49 = *a4 - 48 + 10 * v49;\n        ++a4;\n      }\n      while ( (unsigned int)(*a4 - 48) <= 9 );\n    }\n    v9 = *a4;\n    if ( v9 == 69 || v9 == 79 )\n    {\n      v10 = a4++;\n      v44 = *v10;\n    }\n    else\n    {\n      v44 = 0;\n    }\n    v50 = *a4;\n    if ( v50 == 89 )\n    {\n      if ( v44 == 69 )\n        goto LABEL_152;\n      if ( v44 == 79 )\n        goto LABEL_457;\n      v45 = 4;\n      v36 = a5->tm_year < -1900;\n      v47 = a5->tm_year + 1900;\n      goto LABEL_196;\n    }\n    if ( v50 > 89 )\n    {\n      if ( v50 == 108 )\n      {\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = v42;\n      }\n      else\n      {\n        if ( v50 > 108 )\n        {\n          if ( v50 == 116 )\n          {\n            LODWORD(v24) = 0;\n            if ( v49 >= 0 )\n              LODWORD(v24) = v49;\n            v85 = (int)v24;\n            v24 = (int)v24;\n            if ( (unsigned __int64)(int)v24 <= 1 )\n              v24 = 1LL;\n            v86 = v24;\n            if ( a3 - v67 > v24 )\n            {\n              if ( a2 )\n              {\n                if ( v85 > 1 )\n                {\n                  v87 = v49 - 1LL;\n                  if ( v43 == 48 )\n                    memset(a2, 48, v87);\n                  else\n                    memset(a2, 32, v87);\n                  a2 += v87;\n                }\n                *a2++ = 9;\n              }\n              v67 += v86;\n              goto LABEL_477;\n            }\n            return 0LL;\n          }\n          if ( v50 > 116 )\n          {\n            if ( v50 == 120 )\n            {\n              if ( v44 == 79 )\n                goto LABEL_457;\n              goto LABEL_152;\n            }\n            if ( v50 > 120 )\n            {\n              if ( v50 != 121 )\n              {\n                if ( v50 != 122 )\n                  goto LABEL_457;\n                k = 0LL;\n                goto LABEL_444;\n              }\n              if ( v44 == 69 )\n                goto LABEL_152;\n              v54 = a5->tm_year % 100;\n              if ( v54 < 0 )\n              {\n                if ( a5->tm_year >= -1900 )\n                  v30 = v54 + 100;\n                else\n                  v30 = -v54;\n                v54 = v30;\n              }\n              v45 = 2;\n              v46 = v54;\n            }\n            else if ( v50 == 117 )\n            {\n              v45 = 1;\n              v46 = (a5->tm_wday + 6) % 7 + 1;\n            }\n            else\n            {\n              if ( v50 != 119 || v44 == 69 )\n                goto LABEL_457;\n              v45 = 1;\n              v46 = a5->tm_wday;\n            }\n            goto LABEL_195;\n          }\n          if ( v50 != 112 )\n          {\n            if ( v50 > 112 )\n            {\n              if ( v50 == 114 )\n                goto LABEL_152;\n              if ( v50 != 115 )\n                goto LABEL_457;\n              v116 = *a5;\n              v74 = mktime(&v116);\n              src = (__int64)v122;\n              v36 = v74 < 0;\n              do\n              {\n                v57 = (int)v74 % 10;\n                v74 /= 10LL;\n                --src;\n                if ( v36 )\n                  v23 = 48 - v57;\n                else\n                  v23 = v57 + 48;\n                *(_BYTE *)src = v23;\n              }\n              while ( v74 );\n              v45 = 1;\n              v37 = 0;\n              goto LABEL_205;\n            }\n            if ( v50 != 109 )\n            {\n              if ( v50 != 110 )\n                goto LABEL_457;\n              LODWORD(v22) = 0;\n              if ( v49 >= 0 )\n                LODWORD(v22) = v49;\n              v78 = (int)v22;\n              v22 = (int)v22;\n              if ( (unsigned __int64)(int)v22 <= 1 )\n                v22 = 1LL;\n              v79 = v22;\n              if ( a3 - v67 > v22 )\n              {\n                if ( a2 )\n                {\n                  if ( v78 > 1 )\n                  {\n                    v80 = v49 - 1LL;\n                    if ( v43 == 48 )\n                      memset(a2, 48, v80);\n                    else\n                      memset(a2, 32, v80);\n                    a2 += v80;\n                  }\n                  *a2++ = 10;\n                }\n                v67 += v79;\n                goto LABEL_477;\n              }\n              return 0LL;\n            }\n            if ( v44 == 69 )\n              goto LABEL_457;\n            v45 = 2;\n            v36 = a5->tm_mon < -1;\n            v47 = a5->tm_mon + 1;\n            goto LABEL_196;\n          }\n          goto LABEL_341;\n        }\n        if ( v50 == 100 )\n        {\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_mday;\n          goto LABEL_195;\n        }\n        if ( v50 <= 100 )\n        {\n          if ( v50 == 97 )\n          {\n            if ( v44 )\n              goto LABEL_457;\n            if ( v40 )\n            {\n              v39 = 1;\n              v38 = 0;\n            }\n            goto LABEL_152;\n          }\n          if ( v50 <= 97 )\n          {\n            if ( v50 != 90 )\n              goto LABEL_457;\n            if ( v40 )\n            {\n              v39 = 0;\n              v38 = 1;\n            }\n            if ( !v66 )\n              v66 = (char *)&unk_413549;\n            v88 = strlen(v66);\n            LODWORD(v31) = 0;\n            if ( v49 >= 0 )\n              LODWORD(v31) = v49;\n            v89 = (int)v31;\n            v31 = (int)v31;\n            if ( v88 >= (int)v31 )\n              v31 = v88;\n            v90 = v31;\n            if ( a3 - v67 > v31 )\n            {\n              if ( a2 )\n              {\n                if ( v88 < v89 )\n                {\n                  v91 = v49 - v88;\n                  if ( v43 == 48 )\n                    memset(a2, 48, v91);\n                  else\n                    memset(a2, 32, v91);\n                  a2 += v91;\n                }\n                if ( v38 )\n                {\n                  sub_40765E((__int64)a2, (__int64)v66, v88);\n                }\n                else if ( v39 )\n                {\n                  sub_4076B7((__int64)a2, (__int64)v66, v88);\n                }\n                else\n                {\n                  memcpy(a2, v66, v88);\n                }\n                a2 += v88;\n              }\n              v67 += v90;\n              goto LABEL_477;\n            }\n            return 0LL;\n          }\n          if ( v50 != 98 )\n          {\n            if ( v44 == 79 )\n              goto LABEL_457;\n            goto LABEL_152;\n          }\nLABEL_128:\n          if ( v40 )\n          {\n            v39 = 1;\n            v38 = 0;\n          }\n          if ( !v44 )\n            goto LABEL_152;\nLABEL_457:\n          for ( i = 1; a4[1 - i] != 37; ++i )\n            ;\n          LODWORD(v32) = 0;\n          if ( v49 >= 0 )\n            LODWORD(v32) = v49;\n          v113 = (int)v32;\n          v32 = (int)v32;\n          if ( i >= (unsigned __int64)(int)v32 )\n            v32 = i;\n          v114 = v32;\n          if ( a3 - v67 > v32 )\n          {\n            if ( a2 )\n            {\n              if ( i < v113 )\n              {\n                v115 = v49 - (__int64)i;\n                if ( v43 == 48 )\n                  memset(a2, 48, v115);\n                else\n                  memset(a2, 32, v115);\n                a2 += v115;\n              }\n              if ( v39 )\n                sub_4076B7((__int64)a2, (__int64)&a4[1 - i], i);\n              else\n                memcpy(a2, &a4[1 - i], i);\n              a2 += i;\n            }\n            v67 += v114;\n            goto LABEL_477;\n          }\n          return 0LL;\n        }\n        if ( v50 == 104 )\n          goto LABEL_128;\n        if ( v50 > 104 )\n        {\n          if ( v50 == 106 )\n          {\n            if ( v44 == 69 )\n              goto LABEL_457;\n            v45 = 3;\n            v36 = a5->tm_yday < -1;\n            v47 = a5->tm_yday + 1;\n            goto LABEL_196;\n          }\n          if ( v50 != 107 || v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_hour;\n        }\n        else\n        {\n          if ( v50 != 101 )\n          {\n            if ( v50 != 103 )\n              goto LABEL_457;\n            goto LABEL_373;\n          }\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_mday;\n        }\n      }\n      if ( v43 != 48 && v43 != 45 )\n        v43 = 95;\n      goto LABEL_195;\n    }\n    if ( v50 == 73 )\n    {\n      if ( v44 == 69 )\n        goto LABEL_457;\n      v45 = 2;\n      v46 = v42;\n      goto LABEL_195;\n    }\n    if ( v50 > 73 )\n    {\n      if ( v50 == 83 )\n      {\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = a5->tm_sec;\n      }\n      else if ( v50 > 83 )\n      {\n        if ( v50 == 86 )\n          goto LABEL_373;\n        if ( v50 > 86 )\n        {\n          if ( v50 != 87 )\n          {\n            if ( v44 == 79 )\n              goto LABEL_457;\n            goto LABEL_152;\n          }\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = (a5->tm_yday - (a5->tm_wday + 6) % 7 + 7) / 7;\n          goto LABEL_195;\n        }\n        if ( v50 == 84 )\n        {\n          v70 = \"%H:%M:%S\";\n          v12 = sub_407761(v39, 0, -1, (unsigned int)\"%H:%M:%S\", (_DWORD)a5, a6, a7);\n          goto LABEL_138;\n        }\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = (a5->tm_yday - a5->tm_wday + 7) / 7;\n      }\n      else\n      {\n        if ( v50 != 78 )\n        {\n          if ( v50 <= 78 )\n          {\n            if ( v50 != 77 || v44 == 69 )\n              goto LABEL_457;\n            v45 = 2;\n            v46 = a5->tm_min;\n            goto LABEL_195;\n          }\n          if ( v50 != 80 )\n          {\n            if ( v50 != 82 )\n              goto LABEL_457;\n            v70 = \"%H:%M\";\n            v12 = sub_407761(v39, 0, -1, (unsigned int)\"%H:%M\", (_DWORD)a5, a6, a7);\n            goto LABEL_138;\n          }\n          v38 = 1;\n          LOBYTE(v50) = 112;\nLABEL_341:\n          if ( v40 )\n          {\n            v39 = 0;\n            v38 = 1;\n          }\n          goto LABEL_152;\n        }\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v46 = a7;\n        if ( v49 == -1 )\n        {\n          v49 = 9;\n        }\n        else\n        {\n          for ( j = v49; j <= 8; ++j )\n            v46 /= 10;\n        }\n        v45 = v49;\n      }\nLABEL_195:\n      v36 = v46 < 0;\n      v47 = v46;\n      goto LABEL_196;\n    }\n    if ( v50 == 66 )\n    {\n      if ( v44 )\n        goto LABEL_457;\n      if ( v40 )\n      {\n        v39 = 1;\n        v38 = 0;\n      }\n      goto LABEL_152;\n    }\n    if ( v50 > 66 )\n    {\n      if ( v50 != 70 )\n      {\n        if ( v50 <= 70 )\n        {\n          if ( v50 != 67 )\n          {\n            if ( v50 != 68 || v44 )\n              goto LABEL_457;\n            v70 = \"%m/%d/%y\";\n            v12 = sub_407761(v39, 0, -1, (unsigned int)\"%m/%d/%y\", (_DWORD)a5, a6, a7);\n            goto LABEL_138;\n          }\n          if ( v44 == 79 )\n            goto LABEL_457;\n          if ( v44 == 69 )\n            goto LABEL_152;\n          v56 = a5->tm_year / 100 + 19;\n          v14 = a5->tm_year % 100 < 0 && v56 > 0;\n          v45 = 2;\n          v36 = a5->tm_year < -1900;\n          v47 = v56 - v14;\nLABEL_196:\n          v37 = 0;\n          v48 = 0;\n          goto LABEL_197;\n        }\n        if ( v50 != 71 )\n        {\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_hour;\n          goto LABEL_195;\n        }\nLABEL_373:\n        if ( v44 == 69 )\n          goto LABEL_457;\n        if ( a5->tm_year >= 0 )\n          v25 = -100;\n        else\n          v25 = 300;\n        v58 = a5->tm_year + v25;\n        v52 = 0;\n        v53 = sub_407710(a5->tm_yday, a5->tm_wday);\n        if ( v53 >= 0 )\n        {\n          v27 = (v58 & 3) == 0 && (v58 % 100 || !(v58 % 400));\n          v59 = sub_407710(a5->tm_yday + -365 - v27, a5->tm_wday);\n          if ( v59 >= 0 )\n          {\n            v52 = 1;\n            v53 = v59;\n          }\n        }\n        else\n        {\n          v52 = -1;\n          v26 = (((_BYTE)v58 - 1) & 3) == 0 && ((v58 - 1) % 100 || !((v58 - 1) % 400));\n          v53 = sub_407710(a5->tm_yday + v26 + 365, a5->tm_wday);\n        }\n        v28 = *a4;\n        if ( v28 == 71 )\n        {\n          v45 = 4;\n          v36 = a5->tm_year < -1900 - v52;\n          v47 = a5->tm_year + v52 + 1900;\n          goto LABEL_196;\n        }\n        if ( v28 == 103 )\n        {\n          v60 = (a5->tm_year % 100 + v52) % 100;\n          v45 = 2;\n          if ( v60 >= 0 )\n          {\n            v29 = (a5->tm_year % 100 + v52) % 100;\n          }\n          else if ( a5->tm_year >= -1900 - v52 )\n          {\n            v29 = v60 + 100;\n          }\n          else\n          {\n            v29 = -v60;\n          }\n          v46 = v29;\n        }\n        else\n        {\n          v45 = 2;\n          v46 = v53 / 7 + 1;\n        }\n        goto LABEL_195;\n      }\n      if ( v44 )\n        goto LABEL_457;\n      v70 = \"%Y-%m-%d\";\n      v12 = sub_407761(v39, 0, -1, (unsigned int)\"%Y-%m-%d\", (_DWORD)a5, a6, a7);\nLABEL_138:\n      v81 = v12;\n      LODWORD(v12) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v12) = v49;\n      v82 = (int)v12;\n      v12 = (int)v12;\n      if ( v81 >= (int)v12 )\n        v12 = v81;\n      v83 = v12;\n      if ( a3 - v67 <= v12 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v81 < v82 )\n        {\n          v84 = v49 - v81;\n          if ( v43 == 48 )\n            memset(a2, 48, v84);\n          else\n            memset(a2, 32, v84);\n          a2 += v84;\n        }\n        sub_407761(v39, (_DWORD)a2, a3 - v67, (_DWORD)v70, (_DWORD)a5, a6, a7);\n        a2 += v81;\n      }\n      v67 += v83;\n      goto LABEL_477;\n    }\n    if ( v50 == 37 )\n    {\n      if ( v44 )\n        goto LABEL_457;\n      LODWORD(v11) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v11) = v49;\n      v75 = (int)v11;\n      v11 = (int)v11;\n      if ( (unsigned __int64)(int)v11 <= 1 )\n        v11 = 1LL;\n      v76 = v11;\n      if ( a3 - v67 <= v11 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v75 > 1 )\n        {\n          v77 = v49 - 1LL;\n          if ( v43 == 48 )\n            memset(a2, 48, v77);\n          else\n            memset(a2, 32, v77);\n          a2 += v77;\n        }\n        *a2++ = *a4;\n      }\n      v67 += v76;\n      goto LABEL_477;\n    }\n    if ( v50 <= 37 )\n    {\n      if ( !*a4 )\n        --a4;\n      goto LABEL_457;\n    }\n    if ( v50 != 58 )\n    {\n      if ( v50 != 65 || v44 )\n        goto LABEL_457;\n      if ( v40 )\n      {\n        v39 = 1;\n        v38 = 0;\n      }\nLABEL_152:\n      format[0] = 32;\n      v73 = &v118;\n      format[1] = 37;\n      if ( v44 )\n      {\n        v73 = v119;\n        v118 = v44;\n      }\n      *v73 = v50;\n      v73[1] = 0;\n      v108 = strftime(&v120, 0x400uLL, format, a5);\n      if ( v108 )\n      {\n        v109 = v108 - 1;\n        LODWORD(v13) = 0;\n        if ( v49 >= 0 )\n          LODWORD(v13) = v49;\n        v110 = (int)v13;\n        v13 = (int)v13;\n        if ( v109 >= (int)v13 )\n          v13 = v108 - 1;\n        v111 = v13;\n        if ( a3 - v67 <= v13 )\n          return 0LL;\n        if ( a2 )\n        {\n          if ( !v45 && v109 < v110 )\n          {\n            v112 = v49 - v109;\n            if ( v43 == 48 )\n              memset(a2, 48, v112);\n            else\n              memset(a2, 32, v112);\n            a2 += v112;\n          }\n          if ( v38 )\n          {\n            sub_40765E((__int64)a2, (__int64)v121, v109);\n          }\n          else if ( v39 )\n          {\n            sub_4076B7((__int64)a2, (__int64)v121, v109);\n          }\n          else\n          {\n            memcpy(a2, v121, v109);\n          }\n          a2 += v109;\n        }\n        v67 += v111;\n      }\nLABEL_477:\n      ++a4;\n      continue;\n    }\n    break;\n  }\n  for ( k = 1LL; a4[k] == 58; ++k )\n    ;\n  if ( a4[k] != 122 )\n    goto LABEL_457;\n  a4 += k;\nLABEL_444:\n  if ( a5->tm_isdst < 0 )\n    goto LABEL_477;\n  v61 = a5->tm_gmtoff;\n  v62 = v61 / 3600;\n  v63 = v61 / 60 % 60;\n  v64 = v61 % 60;\n  switch ( k )\n  {\n    case 1LL:\n      goto LABEL_451;\n    case 0LL:\n      v45 = 5;\n      v36 = v61 < 0;\n      v48 = 0;\n      v47 = 100 * v62 + v63;\n      goto LABEL_191;\n    case 2LL:\n      goto LABEL_452;\n  }\n  if ( k != 3 )\n    goto LABEL_457;\n  if ( v64 )\n  {\nLABEL_452:\n    v45 = 9;\n    v36 = v61 < 0;\n    v48 = 20;\n    v47 = 100 * v63 + 10000 * v62 + v64;\n    goto LABEL_191;\n  }\n  if ( v63 )\n  {\nLABEL_451:\n    v45 = 6;\n    v36 = v61 < 0;\n    v48 = 4;\n    v47 = 100 * v62 + v63;\n    goto LABEL_191;\n  }\n  v45 = 3;\n  v36 = v61 < 0;\n  v48 = 0;\n  v47 = v61 / 3600;\nLABEL_191:\n  v37 = 1;\nLABEL_197:\n  if ( v44 == 79 && !v36 )\n    goto LABEL_152;\n  src = (__int64)v122;\n  if ( v36 )\n    v47 = -v47;\n  do\n  {\n    if ( (v48 & 1) != 0 )\n      *(_BYTE *)--src = 58;\n    v48 >>= 1;\n    *(_BYTE *)--src = v47 % 0xA + 48;\n    v47 /= 0xAu;\n  }\n  while ( v47 || v48 );\nLABEL_205:\n  if ( v45 < v49 )\n    v45 = v49;\n  if ( v36 )\n  {\n    v15 = 45;\n  }\n  else if ( v37 )\n  {\n    v15 = 43;\n  }\n  else\n  {\n    v15 = 0;\n  }\n  v41 = v15;\n  if ( v43 == 45 )\n  {\n    if ( v15 )\n    {\n      LODWORD(v16) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v16) = v49;\n      v92 = (int)v16;\n      v16 = (int)v16;\n      if ( (unsigned __int64)(int)v16 <= 1 )\n        v16 = 1LL;\n      v93 = v16;\n      if ( a3 - v67 <= v16 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( !v45 && v92 > 1 )\n        {\n          v94 = v49 - 1LL;\n          memset(a2, 32, v94);\n          a2 += v94;\n        }\n        *a2++ = v41;\n      }\n      v67 += v93;\n    }\nLABEL_285:\n    v104 = (unsigned __int64)&v122[-src];\n    LODWORD(v21) = 0;\n    if ( v49 >= 0 )\n      LODWORD(v21) = v49;\n    v105 = (int)v21;\n    v21 = (int)v21;\n    if ( v104 >= (int)v21 )\n      v21 = (unsigned __int64)&v122[-src];\n    v106 = v21;\n    if ( a3 - v67 > v21 )\n    {\n      if ( a2 )\n      {\n        if ( !v45 && v104 < v105 )\n        {\n          v107 = v49 - v104;\n          if ( v43 == 48 )\n            memset(a2, 48, v107);\n          else\n            memset(a2, 32, v107);\n          a2 += v107;\n        }\n        if ( v39 )\n          sub_4076B7((__int64)a2, src, v104);\n        else\n          memcpy(a2, (const void *)src, v104);\n        a2 += v104;\n      }\n      v67 += v106;\n      goto LABEL_477;\n    }\n    result = 0LL;\n  }\n  else\n  {\n    v65 = v45 + src - ((unsigned int)&savedregs - 1056 + 23) - (v15 != 0);\n    if ( v65 <= 0 )\n    {\n      if ( !v15 )\n        goto LABEL_285;\n      LODWORD(v20) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v20) = v49;\n      v101 = (int)v20;\n      v20 = (int)v20;\n      if ( (unsigned __int64)(int)v20 <= 1 )\n        v20 = 1LL;\n      v102 = v20;\n      if ( a3 - v67 > v20 )\n      {\n        if ( a2 )\n        {\n          if ( !v45 && v101 > 1 )\n          {\n            v103 = v49 - 1LL;\n            if ( v43 == 48 )\n              memset(a2, 48, v103);\n            else\n              memset(a2, 32, v103);\n            a2 += v103;\n          }\n          *a2++ = v41;\n        }\n        v67 += v102;\n        goto LABEL_285;\n      }\n      result = 0LL;\n    }\n    else\n    {\n      if ( v43 != 95 )\n      {\n        if ( v45 >= (unsigned __int64)(a3 - v67) )\n          return 0LL;\n        if ( v15 )\n        {\n          LODWORD(v19) = 0;\n          if ( v49 >= 0 )\n            LODWORD(v19) = v49;\n          v98 = (int)v19;\n          v19 = (int)v19;\n          if ( (unsigned __int64)(int)v19 <= 1 )\n            v19 = 1LL;\n          v99 = v19;\n          if ( a3 - v67 <= v19 )\n            return 0LL;\n          if ( a2 )\n          {\n            if ( !v45 && v98 > 1 )\n            {\n              v100 = v49 - 1LL;\n              if ( v43 == 48 )\n                memset(a2, 48, v100);\n              else\n                memset(a2, 32, v100);\n              a2 += v100;\n            }\n            *a2++ = v41;\n          }\n          v67 += v99;\n        }\n        if ( a2 )\n        {\n          memset(a2, 48, v65);\n          a2 += v65;\n        }\n        v67 += v65;\n        v49 = 0;\n        goto LABEL_285;\n      }\n      if ( v65 < (unsigned __int64)(a3 - v67) )\n      {\n        if ( a2 )\n        {\n          memset(a2, 32, v65);\n          a2 += v65;\n        }\n        v67 += v65;\n        if ( v49 <= v65 )\n          v17 = 0;\n        else\n          v17 = v49 - v65;\n        v49 = v17;\n        if ( !v41 )\n          goto LABEL_285;\n        LODWORD(v18) = 0;\n        if ( v49 >= 0 )\n          LODWORD(v18) = v49;\n        v95 = (int)v18;\n        v18 = (int)v18;\n        if ( (unsigned __int64)(int)v18 <= 1 )\n          v18 = 1LL;\n        v96 = v18;\n        if ( a3 - v67 > v18 )\n        {\n          if ( a2 )\n          {\n            if ( !v45 && v95 > 1 )\n            {\n              v97 = v49 - 1LL;\n              memset(a2, 32, v97);\n              a2 += v97;\n            }\n            *a2++ = v41;\n          }\n          v67 += v96;\n          goto LABEL_285;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n"], [4235456, "sub_40A0C0", "__int64 __fastcall sub_40A0C0(char *a1, __int64 a2, const char *a3, const struct tm *a4, int a5, int a6)\n{\n  return sub_407761(0, a1, a2, (char *)a3, a4, a5, a6);\n}\n"], [4235535, "sub_40A10F", "int __fastcall sub_40A10F(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4237050, "sub_40A6FA", "int __fastcall sub_40A6FA(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_40A10F(a1, a2, a3, a4, a5, i);\n}\n"], [4237160, "sub_40A768", "int __fastcall sub_40A768(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_40A10F(a1, a2, a3, a4, v8, i);\n}\n"], [4237377, "sub_40A841", "int sub_40A841(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40A768(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4237559, "sub_40A8F7", "int sub_40A8F7()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4237664, "sub_40A960", "__int64 __fastcall sub_40A960(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_40AC2B(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_40AAA9(a2 * a1);\n}\n"], [4237726, "sub_40A99E", "__int64 __fastcall sub_40A99E(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_40AC2B(a1, a2, v4);\n  return sub_40AADE(a1, a3 * a2);\n}\n"], [4237802, "sub_40A9EA", "__int64 __fastcall sub_40A9EA(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_40AC2B(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40AADE(a1, a3 * v6);\n}\n"], [4237967, "sub_40AA8F", "__int64 __fastcall sub_40AA8F(__int64 a1)\n{\n  return sub_40AAA9(a1);\n}\n"], [4237993, "sub_40AAA9", "void *__fastcall sub_40AAA9(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_40AC2B(a1, a2, v2);\n  return v4;\n}\n"], [4238046, "sub_40AADE", "void *__fastcall sub_40AADE(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_40AC2B(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4238143, "sub_40AB3F", "__int64 __fastcall sub_40AB3F(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_40A9EA(a1, a2, 1uLL);\n}\n"], [4238185, "sub_40AB69", "void *__fastcall sub_40AB69(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40AAA9(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4238228, "sub_40AB94", "void *__fastcall sub_40AB94(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_40AC2B(a1, a2, v2);\n  return v4;\n}\n"], [4238285, "sub_40ABCD", "void *__fastcall sub_40ABCD(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40AAA9(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4238334, "sub_40ABFE", "void *__fastcall sub_40ABFE(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40ABCD(a1, v1 + 1);\n}\n"], [4238379, "sub_40AC2B", "void __noreturn sub_40AC2B()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4238432, "sub_40AC60", "__int64 sub_40AC60()\n{\n  __int64 v1; // [rsp+8h] [rbp-8h]\n\n  v1 = sub_40B145(0LL, 0LL);\n  if ( !v1 && *__errno_location() == 12 )\n    sub_40AC2B();\n  return v1;\n}\n"], [4238489, "sub_40AC99", "__int64 sub_40AC99(__int64 a1, ...)\n{\n  gcc_va_list va; // [rsp+18h] [rbp-C8h] BYREF\n\n  va_start(va, a1);\n  return sub_40C02E(a1, va);\n}\n"], [4238664, "sub_40AD48", "_DWORD *__fastcall sub_40AD48(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = -100;\n  return result;\n}\n"], [4238684, "sub_40AD5C", "int __fastcall sub_40AD5C(int *a1)\n{\n  return fchdir(*a1);\n}\n"], [4238711, "sub_40AD77", "__int64 __fastcall sub_40AD77(int *a1)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)*a1;\n  if ( (int)result >= 0 )\n  {\n    result = close(*a1) == 0;\n    if ( !(_BYTE)result )\n      __assert_fail(\"! close_fail\", \"../../src/lib/chdir-long.c\", 0x3Fu, \"cdb_free\");\n  }\n  return result;\n}\n"], [4238792, "sub_40ADC8", "__int64 __fastcall sub_40ADC8(int *a1, const char *a2)\n{\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v3 = openat(*a1, a2, 67840);\n  if ( v3 < 0 )\n    return 0xFFFFFFFFLL;\n  sub_40AD77(a1);\n  *a1 = v3;\n  return 0LL;\n}\n"], [4238882, "sub_40AE22", "const char *__fastcall sub_40AE22(const char *a1)\n{\n  return &a1[strspn(a1, \"/\")];\n}\n"], [4238928, "sub_40AE50", "__int64 __fastcall sub_40AE50(const char *a1)\n{\n  char *path; // [rsp+8h] [rbp-48h]\n  int v3; // [rsp+10h] [rbp-40h] BYREF\n  unsigned int v4; // [rsp+18h] [rbp-38h]\n  int v5; // [rsp+1Ch] [rbp-34h]\n  int v6; // [rsp+20h] [rbp-30h]\n  int v7; // [rsp+24h] [rbp-2Ch]\n  size_t v8; // [rsp+28h] [rbp-28h]\n  unsigned __int64 v9; // [rsp+30h] [rbp-20h]\n  size_t v10; // [rsp+38h] [rbp-18h]\n  char *v11; // [rsp+40h] [rbp-10h]\n  void *v12; // [rsp+48h] [rbp-8h]\n\n  path = (char *)a1;\n  v4 = chdir(a1);\n  if ( !v4 || *__errno_location() != 36 )\n    return v4;\n  v8 = strlen(a1);\n  v9 = (unsigned __int64)&a1[v8];\n  sub_40AD48(&v3);\n  if ( !v8 )\n    __assert_fail(\"0 < len\", \"../../src/lib/chdir-long.c\", 0x7Du, \"chdir_long\");\n  if ( v8 <= 0xFFF )\n    __assert_fail(\"4096 <= len\", \"../../src/lib/chdir-long.c\", 0x7Eu, \"chdir_long\");\n  v10 = strspn(a1, \"/\");\n  if ( v10 == 2 )\n  {\n    v11 = (char *)memchr(a1 + 3, 47, v9 - (_QWORD)(a1 + 3));\n    if ( !v11 )\n    {\nLABEL_10:\n      *__errno_location() = 36;\n      return 0xFFFFFFFFLL;\n    }\n    *v11 = 0;\n    v5 = sub_40ADC8(&v3, a1);\n    *v11 = 47;\n    if ( v5 )\n      goto LABEL_31;\n    path = (char *)sub_40AE22(v11 + 1);\n  }\n  else if ( v10 )\n  {\n    if ( (unsigned int)sub_40ADC8(&v3, \"/\") )\n      goto LABEL_31;\n    path = (char *)&a1[v10];\n  }\n  if ( *path == 47 )\n    __assert_fail(\"*dir != '/'\", \"../../src/lib/chdir-long.c\", 0xA1u, \"chdir_long\");\n  if ( (unsigned __int64)path > v9 )\n    __assert_fail(\"dir <= dir_end\", \"../../src/lib/chdir-long.c\", 0xA2u, \"chdir_long\");\n  while ( (__int64)(v9 - (_QWORD)path) > 4095 )\n  {\n    v12 = memrchr(path, 47, 0x1000uLL);\n    if ( !v12 )\n      goto LABEL_10;\n    *(_BYTE *)v12 = 0;\n    if ( (_BYTE *)v12 - path > 4095 )\n      __assert_fail(\"slash - dir < 4096\", \"../../src/lib/chdir-long.c\", 0xB2u, \"chdir_long\");\n    v6 = sub_40ADC8(&v3, path);\n    *(_BYTE *)v12 = 47;\n    if ( v6 )\n      goto LABEL_31;\n    path = (char *)sub_40AE22((const char *)v12 + 1);\n  }\n  if ( ((unsigned __int64)path >= v9 || !(unsigned int)sub_40ADC8(&v3, path)) && !sub_40AD5C(&v3) )\n  {\n    sub_40AD77(&v3);\n    return 0LL;\n  }\nLABEL_31:\n  v7 = *__errno_location();\n  sub_40AD77(&v3);\n  *__errno_location() = v7;\n  return 0xFFFFFFFFLL;\n}\n"], [4239685, "sub_40B145", "char *__fastcall sub_40B145(char *a1, size_t a2)\n{\n  char *v3; // rbx\n  char v4; // al\n  size_t v5; // rax\n  char *v6; // rbx\n  char *buf; // [rsp+8h] [rbp-1148h]\n  char v8; // [rsp+14h] [rbp-113Ch]\n  char v9; // [rsp+15h] [rbp-113Bh]\n  bool v10; // [rsp+16h] [rbp-113Ah]\n  int fd; // [rsp+18h] [rbp-1138h]\n  int v12; // [rsp+24h] [rbp-112Ch]\n  DIR *dirp; // [rsp+28h] [rbp-1128h]\n  __dev_t v14; // [rsp+30h] [rbp-1120h]\n  __ino_t v15; // [rsp+38h] [rbp-1118h]\n  char *s; // [rsp+40h] [rbp-1110h]\n  const char *sa; // [rsp+40h] [rbp-1110h]\n  char *sb; // [rsp+40h] [rbp-1110h]\n  size_t v19; // [rsp+48h] [rbp-1108h]\n  struct dirent *v20; // [rsp+50h] [rbp-1100h]\n  __dev_t v21; // [rsp+58h] [rbp-10F8h]\n  __ino_t v22; // [rsp+60h] [rbp-10F0h]\n  __dev_t v23; // [rsp+70h] [rbp-10E0h]\n  __ino_t v24; // [rsp+78h] [rbp-10D8h]\n  size_t n; // [rsp+88h] [rbp-10C8h]\n  size_t v26; // [rsp+90h] [rbp-10C0h]\n  char *v27; // [rsp+98h] [rbp-10B8h]\n  struct stat stat_buf; // [rsp+A0h] [rbp-10B0h] BYREF\n  char v29[4104]; // [rsp+130h] [rbp-1020h] BYREF\n  unsigned __int64 v30; // [rsp+1138h] [rbp-18h]\n\n  buf = a1;\n  v30 = __readfsqword(0x28u);\n  fd = -100;\n  v8 = 0;\n  dirp = 0LL;\n  v19 = a2;\n  s = getcwd(a1, a2);\n  if ( s || a2 && *__errno_location() == 34 )\n    return s;\n  if ( *__errno_location() == 22 && !a1 && !a2 )\n  {\n    sa = getcwd(v29, 0x1000uLL);\n    if ( sa )\n      return strdup(sa);\n  }\n  if ( !a2 )\n  {\n    if ( a1 )\n    {\n      *__errno_location() = 22;\n      return 0LL;\n    }\n    v19 = 4096LL;\n  }\n  if ( a1 )\n  {\n    sb = a1;\n  }\n  else\n  {\n    sb = (char *)malloc(v19);\n    if ( !sb )\n      return 0LL;\n  }\n  v3 = &sb[v19 - 1];\n  *v3 = 0;\n  if ( (int)sub_411EB0(\".\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v14 = stat_buf.st_dev;\n  v15 = stat_buf.st_ino;\n  if ( (int)sub_411EB0(\"/\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v21 = stat_buf.st_dev;\n  v22 = stat_buf.st_ino;\n  while ( 2 )\n  {\n    if ( v14 != v21 || v15 != v22 )\n    {\n      v9 = 1;\n      fd = openat(fd, \"..\", 0);\n      if ( fd >= 0 )\n      {\n        v8 = 1;\n        if ( !(unsigned int)sub_411EA0(fd, &stat_buf) )\n        {\n          if ( dirp && closedir(dirp) )\n          {\n            dirp = 0LL;\n          }\n          else\n          {\n            v23 = stat_buf.st_dev;\n            v24 = stat_buf.st_ino;\n            v10 = stat_buf.st_dev != v14;\n            dirp = fdopendir(fd);\n            if ( dirp )\n            {\n              v8 = 0;\n              while ( 1 )\n              {\n                *__errno_location() = 0;\n                v20 = readdir(dirp);\n                if ( !v20 && !*__errno_location() && v9 )\n                {\n                  v9 = 0;\n                  rewinddir(dirp);\n                  v20 = readdir(dirp);\n                }\n                if ( !v20 )\n                {\n                  if ( !*__errno_location() )\n                    *__errno_location() = 2;\n                  goto LABEL_75;\n                }\n                if ( v20->d_name[0] != 46 || v20->d_name[1] && (v20->d_name[1] != 46 || v20->d_name[2]) )\n                {\n                  if ( !v9 || (v20->d_ino != v15 && !v10 ? (v4 = 0) : (v4 = 1), (v4 & 1) != 0) )\n                  {\n                    if ( !(unsigned int)sub_411EC0(fd, v20->d_name, &stat_buf, 256)\n                      && (stat_buf.st_mode & 0xF000) == 0x4000\n                      && stat_buf.st_dev == v14\n                      && stat_buf.st_ino == v15 )\n                    {\n                      break;\n                    }\n                  }\n                }\n              }\n              n = strlen(v20->d_name);\n              if ( v3 - sb > n )\n              {\nLABEL_61:\n                v6 = &v3[-n];\n                memcpy(v6, v20->d_name, n);\n                v3 = v6 - 1;\n                *v3 = 47;\n                v14 = v23;\n                v15 = v24;\n                continue;\n              }\n              if ( a2 )\n              {\n                *__errno_location() = 34;\n                goto LABEL_75;\n              }\n              v26 = v19;\n              v5 = n;\n              if ( v19 >= n )\n                v5 = v19;\n              v19 += v5;\n              if ( v19 >= v26 )\n              {\n                v27 = (char *)realloc(sb, v19);\n                if ( v27 )\n                {\n                  v3 = (char *)memcpy(&v27[v19 + v3 - sb - v26], &v27[v3 - sb], v26 - (v3 - sb));\n                  sb = v27;\n                  goto LABEL_61;\n                }\n              }\n              *__errno_location() = 12;\n            }\n          }\n        }\n      }\n      goto LABEL_75;\n    }\n    break;\n  }\n  if ( dirp && closedir(dirp) )\n  {\n    dirp = 0LL;\nLABEL_75:\n    v12 = *__errno_location();\n    if ( dirp )\n      closedir(dirp);\n    if ( v8 )\n      close(fd);\n    if ( !a1 )\n      free(sb);\n    *__errno_location() = v12;\n    return 0LL;\n  }\n  if ( &sb[v19 - 1] == v3 )\n    *--v3 = 47;\n  memmove(sb, v3, &sb[v19] - v3);\n  if ( !a2 )\n    buf = (char *)realloc(sb, &sb[v19] - v3);\n  if ( !buf )\n    buf = sb;\n  return buf;\n}\n"], [4241623, "sub_40B8D7", "__int64 sub_40B8D7()\n{\n  return -1LL;\n}\n"], [4241640, "sub_40B8E8", "void *sub_40B8E8()\n{\n  __int64 v0; // rsi\n  void *result; // rax\n  void *v2; // rax\n  void *v3; // rax\n  void *v4; // rax\n  bool v5; // al\n  bool v6; // al\n  __int64 v7; // rax\n  int v8; // [rsp+1Ch] [rbp-34h]\n  void *ptr; // [rsp+20h] [rbp-30h] BYREF\n  void **v10; // [rsp+28h] [rbp-28h]\n  char *file; // [rsp+30h] [rbp-20h]\n  FILE *stream; // [rsp+38h] [rbp-18h]\n  struct mntent *v13; // [rsp+40h] [rbp-10h]\n  char *v14; // [rsp+48h] [rbp-8h]\n\n  v10 = &ptr;\n  file = \"/etc/mtab\";\n  v0 = (__int64)\"r\";\n  stream = setmntent(\"/etc/mtab\", \"r\");\n  if ( !stream )\n    return 0LL;\n  while ( 1 )\n  {\n    v13 = getmntent(stream);\n    if ( !v13 )\n      break;\n    v14 = (char *)sub_40AAA9(0x30uLL, v0);\n    v2 = sub_40ABFE(v13->mnt_fsname);\n    *(_QWORD *)v14 = v2;\n    v3 = sub_40ABFE(v13->mnt_dir);\n    *((_QWORD *)v14 + 1) = v3;\n    v4 = sub_40ABFE(v13->mnt_type);\n    *((_QWORD *)v14 + 2) = v4;\n    v14[32] |= 4u;\n    v5 = !strcmp(*((const char **)v14 + 2), \"autofs\")\n      || !strcmp(*((const char **)v14 + 2), \"none\")\n      || !strcmp(*((const char **)v14 + 2), \"proc\")\n      || !strcmp(*((const char **)v14 + 2), \"subfs\")\n      || !strcmp(*((const char **)v14 + 2), \"kernfs\")\n      || !strcmp(*((const char **)v14 + 2), \"ignore\");\n    v14[32] = v5 | v14[32] & 0xFE;\n    v0 = 58LL;\n    v6 = 1;\n    if ( !strchr(*(const char **)v14, 58) )\n    {\n      if ( **(_BYTE **)v14 != 47\n        || *(_BYTE *)(*(_QWORD *)v14 + 1LL) != 47\n        || (v0 = (__int64)\"smbfs\", strcmp(*((const char **)v14 + 2), \"smbfs\"))\n        && (v0 = (__int64)\"cifs\", strcmp(*((const char **)v14 + 2), \"cifs\")) )\n      {\n        v6 = 0;\n      }\n    }\n    v14[32] = (2 * v6) | v14[32] & 0xFD;\n    v7 = sub_40B8D7(v13->mnt_opts);\n    *((_QWORD *)v14 + 3) = v7;\n    *v10 = v14;\n    v10 = (void **)(v14 + 40);\n  }\n  if ( endmntent(stream) )\n  {\n    *v10 = 0LL;\n    result = ptr;\n  }\n  else\n  {\n    v8 = *__errno_location();\n    *v10 = 0LL;\n    while ( ptr )\n    {\n      v14 = (char *)*((_QWORD *)ptr + 5);\n      free(*(void **)ptr);\n      free(*((void **)ptr + 1));\n      if ( (*((_BYTE *)ptr + 32) & 4) != 0 )\n        free(*((void **)ptr + 2));\n      free(ptr);\n      ptr = v14;\n    }\n    *__errno_location() = v8;\n    result = 0LL;\n  }\n  return result;\n}\n"], [4242404, "sub_40BBE4", "__int64 __fastcall sub_40BBE4(int a1, char a2, __int64 a3, int a4, int a5, int a6)\n{\n  int v6; // ecx\n  int v7; // er8\n  int v8; // er9\n  unsigned int v9; // eax\n  __int64 result; // rax\n  int v11; // [rsp+18h] [rbp-8h]\n\n  v11 = sub_40C187(a1, 1, 0, a4, a5, a6);\n  if ( v11 < 0\n    || (!a2 ? (v9 = v11 & 0xFFFFFFFE) : (v9 = v11 | 1),\n        v11 != v9 && (unsigned int)sub_40C187(a1, 2, v9, v6, v7, v8) == -1) )\n  {\n    result = 0xFFFFFFFFLL;\n  }\n  else\n  {\n    result = 0LL;\n  }\n  return result;\n}\n"], [4242527, "sub_40BC5F", "__int64 __fastcall sub_40BC5F(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_40C187(a1, 1030, 0, a4, a5, a6);\n}\n"], [4242565, "sub_40BC85", "__int64 __fastcall sub_40BC85(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_40C0D2(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4242704, "sub_40BD10", "__int64 __fastcall sub_40BD10(const char *a1, char a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  unsigned int v5; // [rsp+14h] [rbp-CCh]\n\n  v5 = 0;\n  if ( (a2 & 0x40) != 0 )\n    v5 = a3;\n  v3 = open(a1, a2, v5);\n  return sub_40BE22(v3);\n}\n"], [4242978, "sub_40BE22", "__int64 __fastcall sub_40BE22(int a1)\n{\n  unsigned int fd; // [rsp+Ch] [rbp-14h]\n  unsigned int v3; // [rsp+18h] [rbp-8h]\n  int v4; // [rsp+1Ch] [rbp-4h]\n\n  fd = a1;\n  if ( a1 >= 0 && a1 <= 2 )\n  {\n    v3 = sub_40C5F1((unsigned int)a1);\n    v4 = *__errno_location();\n    close(a1);\n    *__errno_location() = v4;\n    fd = v3;\n  }\n  return fd;\n}\n"], [4243055, "sub_40BE6F", "__int64 __fastcall sub_40BE6F(unsigned __int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a1 + a2 < a1 )\n    result = -1LL;\n  else\n    result = a1 + a2;\n  return result;\n}\n"], [4243107, "sub_40BEA3", "_BYTE *__fastcall sub_40BEA3(__int64 a1, unsigned int *a2)\n{\n  const char **v2; // rax\n  _BYTE *result; // rax\n  const char **v4; // rax\n  unsigned int *v5; // [rsp+0h] [rbp-60h]\n  unsigned __int64 v6; // [rsp+10h] [rbp-50h]\n  __int64 i; // [rsp+18h] [rbp-48h]\n  __int64 j; // [rsp+18h] [rbp-48h]\n  _BYTE *dest; // [rsp+20h] [rbp-40h]\n  _BYTE *v10; // [rsp+30h] [rbp-30h]\n  char *v11; // [rsp+38h] [rbp-28h]\n  size_t n; // [rsp+40h] [rbp-20h]\n  __int64 v13; // [rsp+48h] [rbp-18h]\n  const char **v14; // [rsp+50h] [rbp-10h]\n  __int64 v15; // [rsp+58h] [rbp-8h]\n\n  v5 = a2;\n  v6 = 0LL;\n  v13 = *(_QWORD *)a2;\n  v14 = (const char **)*((_QWORD *)a2 + 1);\n  v15 = *((_QWORD *)a2 + 2);\n  for ( i = a1; i; --i )\n  {\n    if ( (unsigned int)v13 >= 0x30 )\n    {\n      v2 = v14++;\n    }\n    else\n    {\n      v2 = (const char **)(v15 + (unsigned int)v13);\n      LODWORD(v13) = v13 + 8;\n    }\n    a2 = (unsigned int *)strlen(*v2);\n    v6 = sub_40BE6F(v6, (__int64)a2);\n  }\n  if ( v6 == -1LL || v6 > 0x7FFFFFFF )\n  {\n    *__errno_location() = 75;\n    result = 0LL;\n  }\n  else\n  {\n    v10 = sub_40AAA9(v6 + 1, (__int64)a2);\n    dest = v10;\n    for ( j = a1; j; --j )\n    {\n      if ( *v5 >= 0x30 )\n      {\n        v4 = (const char **)*((_QWORD *)v5 + 1);\n        *((_QWORD *)v5 + 1) = v4 + 1;\n      }\n      else\n      {\n        v4 = (const char **)(*((_QWORD *)v5 + 2) + *v5);\n        *v5 += 8;\n      }\n      v11 = (char *)*v4;\n      n = strlen(*v4);\n      memcpy(dest, v11, n);\n      dest += n;\n    }\n    *dest = 0;\n    result = v10;\n  }\n  return result;\n}\n"], [4243502, "sub_40C02E", "_BYTE *__fastcall sub_40C02E(_BYTE *a1, unsigned int *a2)\n{\n  __int64 v3; // [rsp+18h] [rbp-18h] BYREF\n  __int64 v4; // [rsp+20h] [rbp-10h]\n  _BYTE *v5; // [rsp+28h] [rbp-8h]\n\n  v4 = 0LL;\n  v5 = a1;\n  while ( 1 )\n  {\n    if ( !*v5 )\n      return sub_40BEA3(v4, a2);\n    if ( *v5 != 37 )\n      break;\n    if ( *++v5 != 115 )\n      break;\n    ++v5;\n    ++v4;\n  }\n  if ( (int)sub_40C577(&v3, a1, a2) >= 0 )\n    return (_BYTE *)v3;\n  if ( *__errno_location() == 12 )\n    sub_40AC2B();\n  return 0LL;\n}\n"], [4243666, "sub_40C0D2", "int __fastcall sub_40C0D2(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40C474(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4243847, "sub_40C187", "__int64 __fastcall sub_40C187(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_6165A0 < 0 )\n  {\n    v18 = sub_40C187(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_40C187(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_6165A0 = -1;\n    }\n    else\n    {\n      dword_6165A0 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_6165A0 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4244545, "sub_40C441", "__int64 __fastcall sub_40C441(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_40C4BF(a1, 0LL, 1LL);\n  return result;\n}\n"], [4244596, "sub_40C474", "int __fastcall sub_40C474(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40C441(a1);\n  return fflush(a1);\n}\n"], [4244671, "sub_40C4BF", "int __fastcall sub_40C4BF(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4244855, "sub_40C577", "unsigned __int64 __fastcall sub_40C577(void **a1, __int64 a2, __int64 a3)\n{\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // [rsp+20h] [rbp-10h] BYREF\n  void *ptr; // [rsp+28h] [rbp-8h]\n\n  ptr = (void *)sub_40C727(0LL, &v4, a2, a3);\n  if ( !ptr )\n    return 0xFFFFFFFFLL;\n  if ( v4 <= 0x7FFFFFFF )\n  {\n    *a1 = ptr;\n    result = v4;\n  }\n  else\n  {\n    free(ptr);\n    *__errno_location() = 75;\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4244977, "sub_40C5F1", "__int64 __fastcall sub_40C5F1(int a1, __m128 a2, __m128 a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __int64 a10, __int64 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  return sub_40C187(a1, 0, 3LL, a12, a13, a14, a2, a3, a4, a5, a6, a7, a8, a9);\n}\n"], [4245015, "sub_40C617", "__int64 __fastcall sub_40C617(unsigned __int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a1 + a2 < a1 )\n    result = -1LL;\n  else\n    result = a1 + a2;\n  return result;\n}\n"], [4245067, "sub_40C64B", "__int64 __fastcall sub_40C64B(unsigned __int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // rax\n  __int64 v5; // rax\n\n  v4 = sub_40C617(a1, a2);\n  v5 = sub_40C617(v4, a3);\n  return sub_40C617(v5, a4);\n}\n"], [4245142, "sub_40C696", "unsigned __int64 __fastcall sub_40C696(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 result; // rax\n\n  result = a2;\n  if ( a1 >= a2 )\n    result = a1;\n  return result;\n}\n"], [4245169, "sub_40C6B1", "__int64 sub_40C6B1()\n{\n  __int64 result; // rax\n  char *v1; // [rsp+8h] [rbp-8h]\n\n  v1 = nl_langinfo(0x10000);\n  if ( *v1 )\n    result = (unsigned __int8)*v1;\n  else\n    result = 46LL;\n  return result;\n}\n"], [4245218, "sub_40C6E2", "_BOOL8 __fastcall sub_40C6E2(int a1, int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, __int64 a11, int a12, int a13, int a14, long double a15)\n{\n  return (unsigned int)sub_40FEE2(a1, a2, DWORD2(a15), a12, a13, a14, *(__int64 *)&a15, DWORD2(a15)) || a15 == a15 + a15;\n}\n"], [4245287, "sub_40C727", "void *__fastcall sub_40C727(void *a1, unsigned __int64 *a2, void *a3, __int64 a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)\n{\n  int v13; // esi\n  int v14; // edi\n  int v15; // ecx\n  int v16; // er8\n  int v17; // er9\n  double v18; // xmm4_8\n  double v19; // xmm5_8\n  void *v20; // rsp\n  unsigned __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  unsigned __int64 v23; // rax\n  unsigned int v24; // eax\n  char *v25; // rax\n  char *v26; // rax\n  __int64 v27; // rcx\n  unsigned __int64 v28; // rax\n  char *v29; // rax\n  __int64 v30; // rcx\n  unsigned __int64 v31; // rax\n  int v32; // edi\n  int v33; // ecx\n  int v34; // er8\n  int v35; // er9\n  char *v36; // rax\n  int v37; // edx\n  char *v38; // rax\n  char *v39; // rax\n  char *v40; // rax\n  char *v41; // rax\n  char *v42; // rax\n  char *v43; // rax\n  __int16 v44; // ax\n  __int16 v45; // fps\n  char *v47; // rax\n  char *v48; // rax\n  char *v49; // rax\n  char *v50; // rax\n  char *v51; // rax\n  char *v52; // rax\n  char *v53; // rax\n  char *v54; // rax\n  char *v55; // rax\n  char *v56; // rax\n  char *v57; // rbx\n  char *v58; // rax\n  char *v59; // rax\n  char *v60; // rbx\n  char *v61; // rax\n  char *v62; // rax\n  char *v63; // rax\n  char *v64; // rax\n  char *v65; // rax\n  char *v66; // rax\n  __int64 v67; // rax\n  char *v68; // rbx\n  char *v69; // rax\n  char *v70; // rax\n  char *v71; // rax\n  char *v72; // rax\n  char *v73; // rbx\n  char *v74; // rax\n  char *v75; // rax\n  char *v76; // rax\n  char *v77; // rax\n  char *v78; // rax\n  char *v79; // rax\n  char *v80; // rax\n  unsigned __int64 v81; // rax\n  _BYTE *v82; // rax\n  _BYTE *v83; // rax\n  _BYTE *v84; // rax\n  _BYTE *v85; // rax\n  _BYTE *v86; // rax\n  _BYTE *v87; // rax\n  _BYTE *v88; // rax\n  _BYTE *v89; // rax\n  _BYTE *v90; // rax\n  _BYTE *v91; // rax\n  unsigned int v92; // eax\n  unsigned int v93; // eax\n  unsigned __int64 v94; // rax\n  __int64 v95; // rax\n  unsigned __int64 v96; // rax\n  char *v97; // rax\n  int v98; // edx\n  int *v99; // rdx\n  int v100; // eax\n  unsigned __int64 v101; // rbx\n  __int64 v102; // rax\n  unsigned __int64 v103; // rax\n  __int64 v104; // rax\n  unsigned __int64 v105; // rax\n  long double v106; // [rsp+0h] [rbp-8E0h]\n  __int64 v107; // [rsp+18h] [rbp-8C8h] BYREF\n  __int64 v108; // [rsp+20h] [rbp-8C0h]\n  void *v109; // [rsp+28h] [rbp-8B8h]\n  unsigned __int64 *v110; // [rsp+30h] [rbp-8B0h]\n  void *v111; // [rsp+38h] [rbp-8A8h]\n  __int16 v112; // [rsp+4Ah] [rbp-896h]\n  int v113; // [rsp+4Ch] [rbp-894h] BYREF\n  int v114; // [rsp+50h] [rbp-890h]\n  int v115; // [rsp+54h] [rbp-88Ch]\n  int v116; // [rsp+58h] [rbp-888h]\n  int v117; // [rsp+5Ch] [rbp-884h]\n  unsigned int v118; // [rsp+60h] [rbp-880h]\n  int v119; // [rsp+64h] [rbp-87Ch]\n  int v120; // [rsp+68h] [rbp-878h]\n  int v121; // [rsp+6Ch] [rbp-874h]\n  unsigned int v122; // [rsp+70h] [rbp-870h]\n  int v123; // [rsp+74h] [rbp-86Ch]\n  int v124; // [rsp+78h] [rbp-868h]\n  unsigned int v125; // [rsp+7Ch] [rbp-864h]\n  unsigned int v126; // [rsp+80h] [rbp-860h]\n  unsigned int v127; // [rsp+84h] [rbp-85Ch]\n  unsigned int v128; // [rsp+88h] [rbp-858h]\n  unsigned int v129; // [rsp+8Ch] [rbp-854h]\n  unsigned int v130; // [rsp+90h] [rbp-850h]\n  unsigned int v131; // [rsp+94h] [rbp-84Ch]\n  unsigned int v132; // [rsp+98h] [rbp-848h]\n  int v133; // [rsp+9Ch] [rbp-844h]\n  unsigned int v134; // [rsp+A0h] [rbp-840h]\n  unsigned int v135; // [rsp+A4h] [rbp-83Ch]\n  char *format; // [rsp+A8h] [rbp-838h]\n  void *v137; // [rsp+B0h] [rbp-830h]\n  void *v138; // [rsp+B8h] [rbp-828h]\n  __int64 v139; // [rsp+C0h] [rbp-820h]\n  char *i; // [rsp+C8h] [rbp-818h]\n  void *src; // [rsp+D0h] [rbp-810h]\n  unsigned __int64 v142; // [rsp+D8h] [rbp-808h]\n  size_t n; // [rsp+E0h] [rbp-800h]\n  void *dest; // [rsp+E8h] [rbp-7F8h]\n  void *v145; // [rsp+F0h] [rbp-7F0h]\n  unsigned __int64 v146; // [rsp+F8h] [rbp-7E8h]\n  unsigned __int64 v147; // [rsp+100h] [rbp-7E0h]\n  unsigned __int64 v148; // [rsp+108h] [rbp-7D8h]\n  void *v149; // [rsp+110h] [rbp-7D0h]\n  unsigned __int64 v150; // [rsp+118h] [rbp-7C8h]\n  char *v151; // [rsp+120h] [rbp-7C0h]\n  char *v152; // [rsp+128h] [rbp-7B8h]\n  char *v153; // [rsp+130h] [rbp-7B0h]\n  __int64 v154; // [rsp+138h] [rbp-7A8h]\n  unsigned __int64 v155; // [rsp+140h] [rbp-7A0h]\n  _BYTE *v156; // [rsp+148h] [rbp-798h]\n  _BYTE *v157; // [rsp+150h] [rbp-790h]\n  void *v158; // [rsp+158h] [rbp-788h]\n  void *v159; // [rsp+160h] [rbp-780h]\n  void *v160; // [rsp+168h] [rbp-778h]\n  size_t maxlen; // [rsp+170h] [rbp-770h]\n  void *v162; // [rsp+178h] [rbp-768h]\n  void *v163; // [rsp+180h] [rbp-760h]\n  unsigned __int64 v164; // [rsp+188h] [rbp-758h]\n  size_t size; // [rsp+190h] [rbp-750h]\n  size_t v166; // [rsp+198h] [rbp-748h]\n  unsigned __int64 v167; // [rsp+1A0h] [rbp-740h]\n  size_t v168; // [rsp+1A8h] [rbp-738h]\n  size_t v169; // [rsp+1B0h] [rbp-730h]\n  void *v170; // [rsp+1B8h] [rbp-728h]\n  unsigned __int64 v171; // [rsp+1C0h] [rbp-720h]\n  size_t v172; // [rsp+1C8h] [rbp-718h]\n  size_t v173; // [rsp+1D0h] [rbp-710h]\n  _BYTE *v174; // [rsp+1D8h] [rbp-708h]\n  size_t v175; // [rsp+1E0h] [rbp-700h]\n  unsigned __int64 v176; // [rsp+1E8h] [rbp-6F8h]\n  size_t v177; // [rsp+1F0h] [rbp-6F0h]\n  size_t v178; // [rsp+1F8h] [rbp-6E8h]\n  size_t v179; // [rsp+200h] [rbp-6E0h]\n  size_t v180; // [rsp+208h] [rbp-6D8h]\n  __int64 v181; // [rsp+210h] [rbp-6D0h]\n  __int64 v182; // [rsp+218h] [rbp-6C8h]\n  __int64 v183; // [rsp+220h] [rbp-6C0h]\n  __int64 v184; // [rsp+228h] [rbp-6B8h]\n  double v185; // [rsp+230h] [rbp-6B0h]\n  __int64 v186; // [rsp+238h] [rbp-6A8h]\n  __int64 v187; // [rsp+240h] [rbp-6A0h]\n  __int64 v188; // [rsp+248h] [rbp-698h]\n  unsigned __int64 v189; // [rsp+250h] [rbp-690h]\n  size_t v190; // [rsp+258h] [rbp-688h]\n  long double v191; // [rsp+260h] [rbp-680h]\n  __int64 v192; // [rsp+270h] [rbp-670h]\n  int v193; // [rsp+278h] [rbp-668h]\n  char v194[8]; // [rsp+280h] [rbp-660h] BYREF\n  void *v195; // [rsp+288h] [rbp-658h]\n  _BYTE v196[224]; // [rsp+290h] [rbp-650h] BYREF\n  __int64 v197; // [rsp+370h] [rbp-570h] BYREF\n  void *ptr; // [rsp+378h] [rbp-568h]\n  __int64 v199; // [rsp+380h] [rbp-560h]\n  __int64 v200; // [rsp+388h] [rbp-558h]\n  _BYTE v201[624]; // [rsp+390h] [rbp-550h] BYREF\n  char v202[712]; // [rsp+600h] [rbp-2E0h] BYREF\n  unsigned __int64 v203; // [rsp+8C8h] [rbp-18h]\n\n  v111 = a1;\n  v110 = a2;\n  v109 = a3;\n  v108 = a4;\n  v203 = __readfsqword(0x28u);\n  if ( (int)sub_41084C(a3, &v197, v194) < 0 )\n    return 0LL;\n  if ( (int)sub_40FF3A(v108, v194) < 0 )\n  {\n    if ( ptr != v201 )\n      free(ptr);\n    if ( v195 != v196 )\n      free(v195);\n    *__errno_location() = 22;\n    return 0LL;\n  }\n  v13 = v199;\n  v14 = 7;\n  v164 = sub_40C64B(7uLL, v199, v200, 6LL);\n  if ( v164 > 0xF9F )\n  {\n    size = v164;\n    if ( v164 == -1LL )\n      goto LABEL_530;\n    v14 = size;\n    format = (char *)malloc(size);\n    if ( !format )\n      goto LABEL_530;\n    v137 = format;\n  }\n  else\n  {\n    v20 = alloca(16 * ((v164 + 30) / 0x10));\n    format = (char *)(16 * (((unsigned __int64)&v107 + 7) >> 4));\n    v137 = 0LL;\n  }\n  if ( v111 )\n  {\n    src = v111;\n    v142 = *v110;\n  }\n  else\n  {\n    src = 0LL;\n    v142 = 0LL;\n  }\n  n = 0LL;\n  v138 = v109;\n  v139 = 0LL;\n  for ( i = (char *)ptr; ; i += 88 )\n  {\n    if ( *(void **)i != v138 )\n    {\n      v166 = *(_QWORD *)i - (_QWORD)v138;\n      v167 = sub_40C617(n, v166);\n      if ( v167 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v21 = -1LL;\n          else\n            v21 = 2 * v142;\n        }\n        else\n        {\n          v21 = 12LL;\n        }\n        v142 = v21;\n        if ( v167 > v21 )\n          v142 = v167;\n        v168 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        dest = src != v111 && src ? realloc(src, v168) : malloc(v168);\n        if ( !dest )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(dest, src, n);\n        src = dest;\n      }\n      v13 = (int)v138;\n      v14 = (_DWORD)src + n;\n      memcpy((char *)src + n, v138, v166);\n      n = v167;\n    }\n    if ( v197 == v139 )\n    {\n      v22 = sub_40C617(n, 1LL);\n      if ( v22 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v104 = -1LL;\n          else\n            v104 = 2 * v142;\n        }\n        else\n        {\n          v104 = 12LL;\n        }\n        v142 = v104;\n        v105 = sub_40C617(n, 1LL);\n        if ( v105 > v142 )\n          v142 = sub_40C617(n, 1LL);\n        v169 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        v163 = src != v111 && src ? realloc(src, v169) : malloc(v169);\n        if ( !v163 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(v163, src, n);\n        src = v163;\n      }\n      *((_BYTE *)src + n) = 0;\n      if ( src != v111 && n + 1 < v142 )\n      {\n        v170 = realloc(src, n + 1);\n        if ( v170 )\n          src = v170;\n      }\n      if ( v137 )\n        free(v137);\n      if ( ptr != v201 )\n        free(ptr);\n      if ( v195 != v196 )\n        free(v195);\n      *v110 = n;\n      return src;\n    }\n    if ( i[72] == 37 )\n    {\n      if ( *((_QWORD *)i + 10) != -1LL )\n        abort();\n      v13 = 1;\n      v14 = n;\n      v171 = sub_40C617(n, 1LL);\n      if ( v171 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v23 = -1LL;\n          else\n            v23 = 2 * v142;\n        }\n        else\n        {\n          v23 = 12LL;\n        }\n        v142 = v23;\n        if ( v171 > v23 )\n          v142 = v171;\n        v172 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        if ( src != v111 && src )\n        {\n          v13 = v172;\n          v14 = (int)src;\n          v145 = realloc(src, v172);\n        }\n        else\n        {\n          v14 = v172;\n          v145 = malloc(v172);\n        }\n        if ( !v145 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n        {\n          v13 = (int)src;\n          v14 = (int)v145;\n          memcpy(v145, src, n);\n        }\n        src = v145;\n      }\n      *((_BYTE *)src + n) = 37;\n      n = v171;\n      goto LABEL_487;\n    }\n    if ( *((_QWORD *)i + 10) == -1LL )\n      abort();\n    if ( i[72] == 110 )\n    {\n      v24 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10));\n      if ( v24 == 20 )\n      {\n        **((_DWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n        goto LABEL_487;\n      }\n      if ( v24 > 0x14 )\n      {\n        if ( v24 == 21 )\n        {\n          **((_QWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n        if ( v24 == 22 )\n        {\n          **((_QWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n      }\n      else\n      {\n        if ( v24 == 18 )\n        {\n          **((_BYTE **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n        if ( v24 == 19 )\n        {\n          **((_WORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n      }\n      abort();\n    }\n    if ( i[72] != 102\n      && i[72] != 70\n      && i[72] != 101\n      && i[72] != 69\n      && i[72] != 103\n      && i[72] != 71\n      && i[72] != 97\n      && i[72] != 65 )\n    {\n      break;\n    }\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10)) != 12 )\n      break;\n    v25 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n    *(_QWORD *)&v106 = *((_QWORD *)v25 + 2);\n    DWORD2(v106) = *((_DWORD *)v25 + 6);\n    if ( !sub_40C6E2(v14, v13, a5, a6, a7, a8, v18, v19, a11, a12, DWORD2(v106), v15, v16, v17, v106) )\n      break;\n    v114 = *((_DWORD *)i + 4);\n    v115 = 0;\n    v146 = 0LL;\n    if ( *((_QWORD *)i + 3) != *((_QWORD *)i + 4) )\n    {\n      if ( *((_QWORD *)i + 5) == -1LL )\n      {\n        v152 = (char *)*((_QWORD *)i + 3);\n        do\n        {\n          v26 = v152++;\n          v27 = *v26 - 48;\n          if ( v146 > 0x1999999999999999LL )\n            v28 = -1LL;\n          else\n            v28 = 10 * v146;\n          v146 = sub_40C617(v28, v27);\n        }\n        while ( *((char **)i + 4) != v152 );\n      }\n      else\n      {\n        if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5)) != 5 )\n          abort();\n        v120 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5) + 4);\n        if ( v120 >= 0 )\n        {\n          v146 = v120;\n        }\n        else\n        {\n          v114 |= 2u;\n          v146 = (unsigned int)-v120;\n        }\n      }\n      v115 = 1;\n    }\n    v116 = 0;\n    v147 = 0LL;\n    if ( *((_QWORD *)i + 6) != *((_QWORD *)i + 7) )\n    {\n      if ( *((_QWORD *)i + 8) == -1LL )\n      {\n        v153 = (char *)(*((_QWORD *)i + 6) + 1LL);\n        v147 = 0LL;\n        while ( *((char **)i + 7) != v153 )\n        {\n          v29 = v153++;\n          v30 = *v29 - 48;\n          if ( v147 > 0x1999999999999999LL )\n            v31 = -1LL;\n          else\n            v31 = 10 * v147;\n          v147 = sub_40C617(v31, v30);\n        }\n        v116 = 1;\n      }\n      else\n      {\n        if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8)) != 5 )\n          abort();\n        v121 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8) + 4);\n        if ( v121 >= 0 )\n        {\n          v147 = v121;\n          v116 = 1;\n        }\n      }\n    }\n    if ( !v116 && i[72] != 97 && i[72] != 65 )\n      v147 = 6LL;\n    v148 = 0LL;\n    if ( v147 )\n      v148 = v147;\n    v148 = sub_40C617(v148, 12LL);\n    if ( v148 < v146 )\n      v148 = v146;\n    v32 = v148;\n    v148 = sub_40C617(v148, 1LL);\n    if ( v148 > 0x2BC )\n    {\n      v173 = v148;\n      if ( v148 == -1LL )\n        goto LABEL_525;\n      v32 = v173;\n      v149 = malloc(v173);\n      if ( !v149 )\n        goto LABEL_525;\n    }\n    else\n    {\n      v149 = v202;\n    }\n    v150 = 0LL;\n    v151 = (char *)v149;\n    v36 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n    v37 = *((_DWORD *)v36 + 6);\n    *(_QWORD *)&v191 = *((_QWORD *)v36 + 2);\n    DWORD2(v191) = v37;\n    if ( (unsigned int)sub_40FEE2(v32, 1, v37, v33, v34, v35, *(__int64 *)&v191, v37) )\n    {\n      if ( i[72] <= 64 || i[72] > 90 )\n      {\n        v41 = v151++;\n        *v41 = 110;\n        v42 = v151++;\n        *v42 = 97;\n        v43 = v151++;\n        *v43 = 110;\n      }\n      else\n      {\n        v38 = v151++;\n        *v38 = 78;\n        v39 = v151++;\n        *v39 = 65;\n        v40 = v151++;\n        *v40 = 78;\n      }\n    }\n    else\n    {\n      v117 = 0;\n      v112 = v134;\n      LOBYTE(v44) = v134;\n      HIBYTE(v44) = BYTE1(v134) | 3;\n      LOWORD(v134) = v44;\n      _FST7 = v191;\n      __asm { fxam }\n      if ( (v45 & 0x200) != 0 )\n      {\n        v117 = -1;\n        v191 = -v191;\n      }\n      if ( v117 >= 0 )\n      {\n        if ( (v114 & 4) != 0 )\n        {\n          v48 = v151++;\n          *v48 = 43;\n        }\n        else if ( (v114 & 8) != 0 )\n        {\n          v49 = v151++;\n          *v49 = 32;\n        }\n      }\n      else\n      {\n        v47 = v151++;\n        *v47 = 45;\n      }\n      if ( v191 > 0.0 && v191 == v191 + v191 )\n      {\n        if ( i[72] <= 64 || i[72] > 90 )\n        {\n          v53 = v151++;\n          *v53 = 105;\n          v54 = v151++;\n          *v54 = 110;\n          v55 = v151++;\n          *v55 = 102;\n        }\n        else\n        {\n          v50 = v151++;\n          *v50 = 73;\n          v51 = v151++;\n          *v51 = 78;\n          v52 = v151++;\n          *v52 = 70;\n        }\n      }\n      else\n      {\n        if ( 0.0 != v191 )\n          abort();\n        v150 = (unsigned __int64)v151;\n        switch ( i[72] )\n        {\n          case 'f':\n          case 'F':\n            v56 = v151++;\n            *v56 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v57 = v151++;\n              *v57 = sub_40C6B1();\n              while ( v147 )\n              {\n                v58 = v151++;\n                *v58 = 48;\n                --v147;\n              }\n            }\n            break;\n          case 'e':\n          case 'E':\n            v59 = v151++;\n            *v59 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v60 = v151++;\n              *v60 = sub_40C6B1();\n              while ( v147 )\n              {\n                v61 = v151++;\n                *v61 = 48;\n                --v147;\n              }\n            }\n            v62 = v151++;\n            *v62 = i[72];\n            v63 = v151++;\n            *v63 = 43;\n            v64 = v151++;\n            *v64 = 48;\n            v65 = v151++;\n            *v65 = 48;\n            break;\n          case 'g':\n          case 'G':\n            v66 = v151++;\n            *v66 = 48;\n            if ( (v114 & 0x10) != 0 )\n            {\n              if ( v147 )\n                v67 = v147 - 1;\n              else\n                v67 = 0LL;\n              v154 = v67;\n              v68 = v151++;\n              *v68 = sub_40C6B1();\n              while ( v154 )\n              {\n                v69 = v151++;\n                *v69 = 48;\n                --v154;\n              }\n            }\n            break;\n          case 'a':\n          case 'A':\n            v70 = v151++;\n            *v70 = 48;\n            v71 = v151++;\n            *v71 = i[72] + 23;\n            v150 = (unsigned __int64)v151;\n            v72 = v151++;\n            *v72 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v73 = v151++;\n              *v73 = sub_40C6B1();\n              while ( v147 )\n              {\n                v74 = v151++;\n                *v74 = 48;\n                --v147;\n              }\n            }\n            v75 = v151++;\n            *v75 = i[72] + 15;\n            v76 = v151++;\n            *v76 = 43;\n            v77 = v151++;\n            *v77 = 48;\n            break;\n          default:\n            abort();\n        }\n      }\n      LOWORD(v134) = v112;\n    }\n    if ( v115 && v151 - (_BYTE *)v149 < v146 )\n    {\n      v155 = (_BYTE *)v149 - v151 + v146;\n      v174 = (char *)v149 + v146;\n      if ( (v114 & 2) != 0 )\n      {\n        while ( v155 )\n        {\n          v78 = v151++;\n          *v78 = 32;\n          --v155;\n        }\n      }\n      else if ( (v114 & 0x20) != 0 && v150 )\n      {\n        v156 = v174;\n        while ( (unsigned __int64)v151 > v150 )\n          *--v156 = *--v151;\n        while ( v155 )\n        {\n          v79 = v151++;\n          *v79 = 48;\n          --v155;\n        }\n      }\n      else\n      {\n        v157 = v174;\n        while ( v151 > v149 )\n          *--v157 = *--v151;\n        while ( v155 )\n        {\n          v80 = v151++;\n          *v80 = 32;\n          --v155;\n        }\n      }\n      v151 = v174;\n    }\n    v175 = v151 - (_BYTE *)v149;\n    if ( v151 - (_BYTE *)v149 >= v148 )\n      abort();\n    if ( v142 - n <= v175 )\n    {\n      v176 = sub_40C617(n, v175);\n      if ( v176 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v81 = -1LL;\n          else\n            v81 = 2 * v142;\n        }\n        else\n        {\n          v81 = 12LL;\n        }\n        v142 = v81;\n        if ( v176 > v81 )\n          v142 = v176;\n        v177 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        v158 = src != v111 && src ? realloc(src, v177) : malloc(v177);\n        if ( !v158 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(v158, src, n);\n        src = v158;\n      }\n    }\n    v13 = (int)v149;\n    v14 = (_DWORD)src + n;\n    memcpy((char *)src + n, v149, v175);\n    if ( v149 != v202 )\n    {\n      v14 = (int)v149;\n      free(v149);\n    }\n    n += v175;\nLABEL_487:\n    v138 = (void *)*((_QWORD *)i + 1);\n    ++v139;\n  }\n  v122 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10));\n  v123 = *((_DWORD *)i + 4);\n  v159 = format + 1;\n  *format = 37;\n  if ( (v123 & 1) != 0 )\n  {\n    v82 = v159;\n    v159 = (char *)v159 + 1;\n    *v82 = 39;\n  }\n  if ( (v123 & 2) != 0 )\n  {\n    v83 = v159;\n    v159 = (char *)v159 + 1;\n    *v83 = 45;\n  }\n  if ( (v123 & 4) != 0 )\n  {\n    v84 = v159;\n    v159 = (char *)v159 + 1;\n    *v84 = 43;\n  }\n  if ( (v123 & 8) != 0 )\n  {\n    v85 = v159;\n    v159 = (char *)v159 + 1;\n    *v85 = 32;\n  }\n  if ( (v123 & 0x10) != 0 )\n  {\n    v86 = v159;\n    v159 = (char *)v159 + 1;\n    *v86 = 35;\n  }\n  if ( (v123 & 0x40) != 0 )\n  {\n    v87 = v159;\n    v159 = (char *)v159 + 1;\n    *v87 = 73;\n  }\n  if ( (v123 & 0x20) != 0 )\n  {\n    v88 = v159;\n    v159 = (char *)v159 + 1;\n    *v88 = 48;\n  }\n  if ( *((_QWORD *)i + 3) != *((_QWORD *)i + 4) )\n  {\n    v178 = *((_QWORD *)i + 4) - *((_QWORD *)i + 3);\n    memcpy(v159, *((const void **)i + 3), v178);\n    v159 = (char *)v159 + v178;\n  }\n  if ( *((_QWORD *)i + 6) != *((_QWORD *)i + 7) )\n  {\n    v179 = *((_QWORD *)i + 7) - *((_QWORD *)i + 6);\n    memcpy(v159, *((const void **)i + 6), v179);\n    v159 = (char *)v159 + v179;\n  }\n  if ( v122 > 0xA )\n  {\n    if ( v122 == 14 || v122 == 16 )\n      goto LABEL_260;\n    if ( v122 == 12 )\n    {\n      v91 = v159;\n      v159 = (char *)v159 + 1;\n      *v91 = 76;\n    }\n  }\n  else\n  {\n    if ( v122 >= 9 )\n    {\n      v89 = v159;\n      v159 = (char *)v159 + 1;\n      *v89 = 108;\n      goto LABEL_260;\n    }\n    if ( v122 >= 7 )\n    {\nLABEL_260:\n      v90 = v159;\n      v159 = (char *)v159 + 1;\n      *v90 = 108;\n    }\n  }\n  *(_WORD *)v159 = (unsigned __int8)i[72];\n  v118 = 0;\n  if ( *((_QWORD *)i + 5) != -1LL )\n  {\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5)) != 5 )\n      abort();\n    v92 = v118++;\n    *(&v134 + v92) = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5) + 4);\n  }\n  if ( *((_QWORD *)i + 8) != -1LL )\n  {\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8)) != 5 )\n      abort();\n    v93 = v118++;\n    *(&v134 + v93) = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8) + 4);\n  }\n  v94 = sub_40C617(n, 2LL);\n  if ( v94 > v142 )\n  {\n    if ( v142 )\n    {\n      if ( (v142 & 0x8000000000000000LL) != 0LL )\n        v95 = -1LL;\n      else\n        v95 = 2 * v142;\n    }\n    else\n    {\n      v95 = 12LL;\n    }\n    v142 = v95;\n    v96 = sub_40C617(n, 2LL);\n    if ( v96 > v142 )\n      v142 = sub_40C617(n, 2LL);\n    v180 = v142;\n    if ( v142 != -1LL )\n    {\n      v160 = src != v111 && src ? realloc(src, v180) : malloc(v180);\n      if ( v160 )\n      {\n        if ( src == v111 && n )\n          memcpy(v160, src, n);\n        src = v160;\n        goto LABEL_288;\n      }\n    }\nLABEL_525:\n    if ( src != v111 && src )\n      free(src);\n    if ( v137 )\n      free(v137);\nLABEL_530:\n    if ( ptr != v201 )\n      free(ptr);\n    if ( v195 != v196 )\n      free(v195);\n    *__errno_location() = 12;\n    return 0LL;\n  }\nLABEL_288:\n  *((_BYTE *)src + n) = 0;\n  v124 = *__errno_location();\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v113 = -1;\n      v119 = 0;\n      maxlen = v142 - n;\n      if ( v142 - n > 0x7FFFFFFF )\n        maxlen = 0x7FFFFFFFLL;\n      *__errno_location() = 0;\n      if ( v122 == 9 )\n      {\n        v183 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v183, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v183, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v183, &v113);\n        }\n      }\n      else if ( v122 > 9 )\n      {\n        if ( v122 == 13 )\n        {\n          v131 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v131, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v131, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v131, &v113);\n          }\n        }\n        else if ( v122 > 0xD )\n        {\n          if ( v122 == 15 )\n          {\n            v186 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v186, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v186, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v186, &v113);\n            }\n          }\n          else if ( v122 < 0xF )\n          {\n            v132 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v132, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v132, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v132, &v113);\n            }\n          }\n          else if ( v122 == 16 )\n          {\n            v187 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v187, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v187, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v187, &v113);\n            }\n          }\n          else\n          {\n            if ( v122 != 17 )\nLABEL_432:\n              abort();\n            v188 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v188, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v188, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v188, &v113);\n            }\n          }\n        }\n        else if ( v122 == 11 )\n        {\n          v185 = *((double *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, &v113, v185);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, &v113, v185);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, &v113, v185);\n          }\n        }\n        else if ( v122 > 0xB )\n        {\n          v97 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n          v98 = *((_DWORD *)v97 + 6);\n          v192 = *((_QWORD *)v97 + 2);\n          v193 = v98;\n          if ( v118 == 1 )\n          {\n            v13 = maxlen;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v13 = maxlen;\n            DWORD2(v106) = v193;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, &v113, v192, *((_QWORD *)&v106 + 1));\n          }\n          else\n          {\n            v13 = maxlen;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, &v113);\n          }\n        }\n        else\n        {\n          v184 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v184, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v184, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v184, &v113);\n          }\n        }\n      }\n      else if ( v122 == 4 )\n      {\n        v128 = *((unsigned __int16 *)v195 + 16 * *((_QWORD *)i + 10) + 8);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v128, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v128, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v128, &v113);\n        }\n      }\n      else if ( v122 > 4 )\n      {\n        if ( v122 == 6 )\n        {\n          v130 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v130, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v130, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v130, &v113);\n          }\n        }\n        else if ( v122 < 6 )\n        {\n          v129 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v129, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v129, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v129, &v113);\n          }\n        }\n        else if ( v122 == 7 )\n        {\n          v181 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v181, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v181, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v181, &v113);\n          }\n        }\n        else\n        {\n          v182 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v182, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v182, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v182, &v113);\n          }\n        }\n      }\n      else if ( v122 == 2 )\n      {\n        v126 = *((unsigned __int8 *)v195 + 32 * *((_QWORD *)i + 10) + 16);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v126, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v126, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v126, &v113);\n        }\n      }\n      else if ( v122 > 2 )\n      {\n        v127 = *((__int16 *)v195 + 16 * *((_QWORD *)i + 10) + 8);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v127, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v127, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v127, &v113);\n        }\n      }\n      else\n      {\n        if ( v122 != 1 )\n          goto LABEL_432;\n        v125 = *((char *)v195 + 32 * *((_QWORD *)i + 10) + 16);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v125, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v125, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v125, &v113);\n        }\n      }\n      if ( v113 >= 0 )\n      {\n        if ( v113 < maxlen && *((_BYTE *)src + n + v113) )\n          abort();\n        if ( v119 > v113 )\n          v113 = v119;\n        goto LABEL_443;\n      }\n      if ( !*((_BYTE *)v159 + 1) )\n        break;\n      *((_BYTE *)v159 + 1) = 0;\n    }\n    if ( v119 >= 0 )\n      v113 = v119;\nLABEL_443:\n    if ( v113 < 0 )\n    {\n      v133 = *__errno_location();\n      if ( src != v111 && src )\n        free(src);\n      if ( v137 )\n        free(v137);\n      if ( ptr != v201 )\n        free(ptr);\n      if ( v195 != v196 )\n        free(v195);\n      v99 = __errno_location();\n      if ( v133 )\n      {\n        v100 = v133;\n      }\n      else if ( i[72] == 99 || i[72] == 115 )\n      {\n        v100 = 84;\n      }\n      else\n      {\n        v100 = 22;\n      }\n      *v99 = v100;\n      return 0LL;\n    }\n    if ( (unsigned int)(v113 + 1) < maxlen )\n    {\n      n += v113;\n      *__errno_location() = v124;\n      goto LABEL_487;\n    }\n    if ( maxlen == 0x7FFFFFFF )\n      break;\n    if ( (v142 & 0x8000000000000000LL) != 0LL )\n      v101 = -1LL;\n    else\n      v101 = 2 * v142;\n    v102 = sub_40C617(n, (unsigned int)(v113 + 2));\n    v189 = sub_40C696(v102, v101);\n    if ( v189 > v142 )\n    {\n      if ( v142 )\n      {\n        if ( (v142 & 0x8000000000000000LL) != 0LL )\n          v103 = -1LL;\n        else\n          v103 = 2 * v142;\n      }\n      else\n      {\n        v103 = 12LL;\n      }\n      v142 = v103;\n      if ( v189 > v103 )\n        v142 = v189;\n      v190 = v142;\n      if ( v142 == -1LL )\n        goto LABEL_525;\n      v162 = src != v111 && src ? realloc(src, v190) : malloc(v190);\n      if ( !v162 )\n        goto LABEL_525;\n      if ( src == v111 && n )\n        memcpy(v162, src, n);\n      src = v162;\n    }\n  }\n  if ( src != v111 && src )\n    free(src);\n  if ( v137 )\n    free(v137);\n  if ( ptr != v201 )\n    free(ptr);\n  if ( v195 != v196 )\n    free(v195);\n  *__errno_location() = 75;\n  return 0LL;\n}\n"], [4259554, "sub_40FEE2", "_BOOL8 __fastcall sub_40FEE2(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int16 a8)\n{\n  if ( (a8 & 0x7FFF) == 0 )\n    return HIDWORD(a7) >> 31;\n  if ( (a8 & 0x7FFF) == 0x7FFF )\n    return (HIDWORD(a7) ^ 0x80000000 | (unsigned int)a7) != 0;\n  return a7 >= 0;\n}\n"], [4259642, "sub_40FF3A", "__int64 __fastcall sub_40FF3A(unsigned int *a1, unsigned __int64 *a2)\n{\n  unsigned int v2; // eax\n  _DWORD *v3; // rax\n  _DWORD *v4; // rax\n  _DWORD *v5; // rax\n  _DWORD *v6; // rax\n  _DWORD *v7; // rax\n  _DWORD *v8; // rax\n  _QWORD *v9; // rax\n  _QWORD *v10; // rax\n  _QWORD *v11; // rax\n  _QWORD *v12; // rax\n  _QWORD *v13; // rax\n  unsigned __int64 v14; // rdx\n  __int64 v15; // rax\n  _DWORD *v16; // rax\n  _DWORD *v17; // rax\n  _QWORD *v18; // rax\n  _QWORD *v19; // rax\n  _QWORD *v20; // rax\n  _QWORD *v21; // rax\n  _QWORD *v22; // rax\n  _QWORD *v23; // rax\n  _QWORD *v24; // rax\n  _QWORD *v25; // rax\n  unsigned __int64 v27; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v28; // [rsp+18h] [rbp-8h]\n\n  v27 = 0LL;\n  v28 = a2[1];\n  while ( *a2 > v27 )\n  {\n    v2 = *(_DWORD *)v28;\n    if ( *(_DWORD *)v28 == 11 )\n    {\n      if ( a1[1] >= 0xB0 )\n      {\n        v13 = (_QWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v13 + 1;\n      }\n      else\n      {\n        v13 = (_QWORD *)(*((_QWORD *)a1 + 2) + a1[1]);\n        a1[1] += 16;\n      }\n      *(_QWORD *)(v28 + 16) = *v13;\n    }\n    else if ( v2 > 0xB )\n    {\n      if ( v2 == 17 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v20 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v20 + 1;\n        }\n        else\n        {\n          v20 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v20;\n      }\n      else if ( v2 > 0x11 )\n      {\n        if ( v2 == 20 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v23 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v23 + 1;\n          }\n          else\n          {\n            v23 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v23;\n        }\n        else if ( v2 > 0x14 )\n        {\n          if ( v2 == 21 )\n          {\n            if ( *a1 >= 0x30 )\n            {\n              v24 = (_QWORD *)*((_QWORD *)a1 + 1);\n              *((_QWORD *)a1 + 1) = v24 + 1;\n            }\n            else\n            {\n              v24 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n              *a1 += 8;\n            }\n            *(_QWORD *)(v28 + 16) = *v24;\n          }\n          else\n          {\n            if ( v2 != 22 )\n              return 0xFFFFFFFFLL;\n            if ( *a1 >= 0x30 )\n            {\n              v25 = (_QWORD *)*((_QWORD *)a1 + 1);\n              *((_QWORD *)a1 + 1) = v25 + 1;\n            }\n            else\n            {\n              v25 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n              *a1 += 8;\n            }\n            *(_QWORD *)(v28 + 16) = *v25;\n          }\n        }\n        else if ( v2 == 18 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v21 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v21 + 1;\n          }\n          else\n          {\n            v21 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v21;\n        }\n        else\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v22 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v22 + 1;\n          }\n          else\n          {\n            v22 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v22;\n        }\n      }\n      else if ( v2 == 14 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v17 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v17 + 2;\n        }\n        else\n        {\n          v17 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v17;\n      }\n      else if ( v2 > 0xE )\n      {\n        if ( v2 == 15 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v18 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v18 + 1;\n          }\n          else\n          {\n            v18 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v18;\n          if ( !*(_QWORD *)(v28 + 16) )\n            *(_QWORD *)(v28 + 16) = \"(NULL)\";\n        }\n        else\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v19 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v19 + 1;\n          }\n          else\n          {\n            v19 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v19;\n          if ( !*(_QWORD *)(v28 + 16) )\n            *(_QWORD *)(v28 + 16) = \"(\";\n        }\n      }\n      else if ( v2 == 12 )\n      {\n        v14 = (*((_QWORD *)a1 + 1) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;\n        *((_QWORD *)a1 + 1) = v14 + 16;\n        v15 = *(_QWORD *)v14;\n        LODWORD(v14) = *(_DWORD *)(v14 + 8);\n        *(_QWORD *)(v28 + 16) = v15;\n        *(_DWORD *)(v28 + 24) = v14;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v16 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v16 + 2;\n        }\n        else\n        {\n          v16 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v16;\n      }\n    }\n    else if ( v2 == 5 )\n    {\n      if ( *a1 >= 0x30 )\n      {\n        v7 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v7 + 2;\n      }\n      else\n      {\n        v7 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_DWORD *)(v28 + 16) = *v7;\n    }\n    else if ( v2 > 5 )\n    {\n      if ( v2 == 8 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v10 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v10 + 1;\n        }\n        else\n        {\n          v10 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v10;\n      }\n      else if ( v2 > 8 )\n      {\n        if ( v2 == 9 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v11 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v11 + 1;\n          }\n          else\n          {\n            v11 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v11;\n        }\n        else\n        {\n          if ( v2 != 10 )\n            return 0xFFFFFFFFLL;\n          if ( *a1 >= 0x30 )\n          {\n            v12 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v12 + 1;\n          }\n          else\n          {\n            v12 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v12;\n        }\n      }\n      else if ( v2 == 6 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v8 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v8 + 2;\n        }\n        else\n        {\n          v8 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v8;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v9 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v9 + 1;\n        }\n        else\n        {\n          v9 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v9;\n      }\n    }\n    else if ( v2 == 2 )\n    {\n      if ( *a1 >= 0x30 )\n      {\n        v4 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v4 + 2;\n      }\n      else\n      {\n        v4 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_BYTE *)(v28 + 16) = *v4;\n    }\n    else if ( v2 > 2 )\n    {\n      if ( v2 == 3 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v5 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v5 + 2;\n        }\n        else\n        {\n          v5 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_WORD *)(v28 + 16) = *v5;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v6 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v6 + 2;\n        }\n        else\n        {\n          v6 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_WORD *)(v28 + 16) = *v6;\n      }\n    }\n    else\n    {\n      if ( v2 != 1 )\n        return 0xFFFFFFFFLL;\n      if ( *a1 >= 0x30 )\n      {\n        v3 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v3 + 2;\n      }\n      else\n      {\n        v3 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_BYTE *)(v28 + 16) = *v3;\n    }\n    ++v27;\n    v28 += 32LL;\n  }\n  return 0LL;\n}\n"], [4261912, "sub_410818", "__int64 __fastcall sub_410818(unsigned __int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a1 + a2 < a1 )\n    result = -1LL;\n  else\n    result = a1 + a2;\n  return result;\n}\n"], [4261964, "sub_41084C", "__int64 __fastcall sub_41084C(char *a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  unsigned __int64 v4; // rax\n  unsigned __int64 v5; // rax\n  __int64 v6; // rax\n  unsigned __int64 v7; // rax\n  size_t v8; // rax\n  void *v9; // rax\n  __int64 v10; // rsi\n  __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  __int64 v13; // rax\n  unsigned __int64 v14; // rax\n  size_t v15; // rax\n  void *v16; // rax\n  __int64 v17; // rsi\n  __int64 v18; // rax\n  char *v19; // rax\n  int v20; // eax\n  __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  size_t v23; // rax\n  void *v24; // rax\n  __int64 v25; // rsi\n  __int64 v26; // rax\n  unsigned __int64 v27; // rax\n  size_t v28; // rax\n  void *v29; // rax\n  char v33; // [rsp+2Fh] [rbp-E1h]\n  int v34; // [rsp+30h] [rbp-E0h]\n  int ii; // [rsp+34h] [rbp-DCh]\n  __int64 v37; // [rsp+40h] [rbp-D0h]\n  __int64 v38; // [rsp+48h] [rbp-C8h]\n  __int64 v39; // [rsp+50h] [rbp-C0h]\n  unsigned __int64 v40; // [rsp+58h] [rbp-B8h]\n  unsigned __int64 v41; // [rsp+60h] [rbp-B0h]\n  __int64 v42; // [rsp+68h] [rbp-A8h]\n  char *i; // [rsp+70h] [rbp-A0h]\n  char *j; // [rsp+70h] [rbp-A0h]\n  unsigned __int64 v45; // [rsp+78h] [rbp-98h]\n  char *k; // [rsp+80h] [rbp-90h]\n  char *l; // [rsp+80h] [rbp-90h]\n  unsigned __int64 v48; // [rsp+88h] [rbp-88h]\n  char *m; // [rsp+90h] [rbp-80h]\n  char *n; // [rsp+90h] [rbp-80h]\n  unsigned __int64 v51; // [rsp+98h] [rbp-78h]\n  __int64 v52; // [rsp+A0h] [rbp-70h]\n  unsigned __int64 v53; // [rsp+A8h] [rbp-68h]\n  void *dest; // [rsp+B8h] [rbp-58h]\n  unsigned __int64 v55; // [rsp+C8h] [rbp-48h]\n  void *v56; // [rsp+D8h] [rbp-38h]\n  unsigned __int64 v57; // [rsp+E8h] [rbp-28h]\n  void *v58; // [rsp+F8h] [rbp-18h]\n  void *v59; // [rsp+108h] [rbp-8h]\n\n  v37 = 0LL;\n  v40 = 0LL;\n  v41 = 0LL;\n  *(_QWORD *)a2 = 0LL;\n  v38 = 7LL;\n  *(_QWORD *)(a2 + 8) = a2 + 32;\n  *(_QWORD *)a3 = 0LL;\n  v39 = 7LL;\n  *(_QWORD *)(a3 + 8) = a3 + 16;\n  while ( 1 )\n  {\n    do\n    {\n      if ( !*a1 )\n      {\n        *(_QWORD *)(*(_QWORD *)(a2 + 8) + 88LL * *(_QWORD *)a2) = a1;\n        *(_QWORD *)(a2 + 16) = v40;\n        *(_QWORD *)(a2 + 24) = v41;\n        return 0LL;\n      }\n      v3 = a1++;\n    }\n    while ( *v3 != 37 );\n    v42 = -1LL;\n    v52 = *(_QWORD *)(a2 + 8) + 88LL * *(_QWORD *)a2;\n    *(_QWORD *)v52 = a1 - 1;\n    *(_DWORD *)(v52 + 16) = 0;\n    *(_QWORD *)(v52 + 24) = 0LL;\n    *(_QWORD *)(v52 + 32) = 0LL;\n    *(_QWORD *)(v52 + 40) = -1LL;\n    *(_QWORD *)(v52 + 48) = 0LL;\n    *(_QWORD *)(v52 + 56) = 0LL;\n    *(_QWORD *)(v52 + 64) = -1LL;\n    *(_QWORD *)(v52 + 80) = -1LL;\n    if ( *a1 > 47 && *a1 <= 57 )\n    {\n      for ( i = a1; *i > 47 && *i <= 57; ++i )\n        ;\n      if ( *i == 36 )\n      {\n        v45 = 0LL;\n        for ( j = a1; *j > 47 && *j <= 57; ++j )\n        {\n          if ( v45 > 0x1999999999999999LL )\n            v4 = -1LL;\n          else\n            v4 = 10 * v45;\n          v45 = sub_410818(v4, *j - 48);\n        }\n        if ( !v45 || v45 == -1LL )\n        {\nLABEL_272:\n          if ( *(_QWORD *)(a3 + 8) != a3 + 16 )\n            free(*(void **)(a3 + 8));\n          if ( *(_QWORD *)(a2 + 8) != a2 + 32 )\n            free(*(void **)(a2 + 8));\n          *__errno_location() = 22;\n          return 0xFFFFFFFFLL;\n        }\n        v42 = v45 - 1;\n        a1 = j + 1;\n      }\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              while ( 1 )\n              {\n                while ( *a1 == 39 )\n                {\n                  *(_DWORD *)(v52 + 16) |= 1u;\n                  ++a1;\n                }\n                if ( *a1 != 45 )\n                  break;\n                *(_DWORD *)(v52 + 16) |= 2u;\n                ++a1;\n              }\n              if ( *a1 != 43 )\n                break;\n              *(_DWORD *)(v52 + 16) |= 4u;\n              ++a1;\n            }\n            if ( *a1 != 32 )\n              break;\n            *(_DWORD *)(v52 + 16) |= 8u;\n            ++a1;\n          }\n          if ( *a1 != 35 )\n            break;\n          *(_DWORD *)(v52 + 16) |= 0x10u;\n          ++a1;\n        }\n        if ( *a1 != 48 )\n          break;\n        *(_DWORD *)(v52 + 16) |= 0x20u;\n        ++a1;\n      }\n      if ( *a1 != 73 )\n        break;\n      *(_DWORD *)(v52 + 16) |= 0x40u;\n      ++a1;\n    }\n    if ( *a1 != 42 )\n    {\n      if ( *a1 > 47 && *a1 <= 57 )\n      {\n        *(_QWORD *)(v52 + 24) = a1;\n        while ( *a1 > 47 && *a1 <= 57 )\n          ++a1;\n        *(_QWORD *)(v52 + 32) = a1;\n        if ( v40 < *(_QWORD *)(v52 + 32) - *(_QWORD *)(v52 + 24) )\n          v40 = *(_QWORD *)(v52 + 32) - *(_QWORD *)(v52 + 24);\n      }\n      goto LABEL_88;\n    }\n    *(_QWORD *)(v52 + 24) = a1++;\n    *(_QWORD *)(v52 + 32) = a1;\n    if ( !v40 )\n      v40 = 1LL;\n    if ( *a1 > 47 && *a1 <= 57 )\n    {\n      for ( k = a1; *k > 47 && *k <= 57; ++k )\n        ;\n      if ( *k == 36 )\n      {\n        v48 = 0LL;\n        for ( l = a1; *l > 47 && *l <= 57; ++l )\n        {\n          if ( v48 > 0x1999999999999999LL )\n            v5 = -1LL;\n          else\n            v5 = 10 * v48;\n          v48 = sub_410818(v5, *l - 48);\n        }\n        if ( !v48 || v48 == -1LL )\n          goto LABEL_272;\n        *(_QWORD *)(v52 + 40) = v48 - 1;\n        a1 = l + 1;\n      }\n    }\n    if ( *(_QWORD *)(v52 + 40) == -1LL )\n    {\n      v6 = v37++;\n      *(_QWORD *)(v52 + 40) = v6;\n      if ( *(_QWORD *)(v52 + 40) == -1LL )\n        goto LABEL_272;\n    }\n    v53 = *(_QWORD *)(v52 + 40);\n    if ( v53 >= v39 )\n      break;\nLABEL_75:\n    while ( *(_QWORD *)a3 <= v53 )\n    {\n      v10 = *(_QWORD *)(a3 + 8);\n      v11 = (*(_QWORD *)a3)++;\n      *(_DWORD *)(v10 + 32 * v11) = 0;\n    }\n    if ( *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) )\n    {\n      if ( *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) != 5 )\n        goto LABEL_272;\n    }\n    else\n    {\n      *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) = 5;\n    }\nLABEL_88:\n    if ( *a1 == 46 )\n    {\n      if ( *++a1 == 42 )\n      {\n        *(_QWORD *)(v52 + 48) = a1++ - 1;\n        *(_QWORD *)(v52 + 56) = a1;\n        if ( v41 <= 1 )\n          v41 = 2LL;\n        if ( *a1 > 47 && *a1 <= 57 )\n        {\n          for ( m = a1; *m > 47 && *m <= 57; ++m )\n            ;\n          if ( *m == 36 )\n          {\n            v51 = 0LL;\n            for ( n = a1; *n > 47 && *n <= 57; ++n )\n            {\n              if ( v51 > 0x1999999999999999LL )\n                v12 = -1LL;\n              else\n                v12 = 10 * v51;\n              v51 = sub_410818(v12, *n - 48);\n            }\n            if ( !v51 || v51 == -1LL )\n              goto LABEL_272;\n            *(_QWORD *)(v52 + 64) = v51 - 1;\n            a1 = n + 1;\n          }\n        }\n        if ( *(_QWORD *)(v52 + 64) == -1LL )\n        {\n          v13 = v37++;\n          *(_QWORD *)(v52 + 64) = v13;\n          if ( *(_QWORD *)(v52 + 64) == -1LL )\n            goto LABEL_272;\n        }\n        v55 = *(_QWORD *)(v52 + 64);\n        if ( v55 >= v39 )\n        {\n          if ( v39 < 0 )\n            v14 = -1LL;\n          else\n            v14 = 2 * v39;\n          v39 = v14;\n          if ( v14 <= v55 )\n            v39 = sub_410818(v55, 1LL);\n          if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n            v15 = -1LL;\n          else\n            v15 = 32 * v39;\n          if ( v15 == -1LL )\n            goto LABEL_277;\n          v16 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v15) : realloc(*(void **)(a3 + 8), v15);\n          v56 = v16;\n          if ( !v16 )\n            goto LABEL_277;\n          if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n            memcpy(v16, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n          *(_QWORD *)(a3 + 8) = v56;\n        }\n        while ( *(_QWORD *)a3 <= v55 )\n        {\n          v17 = *(_QWORD *)(a3 + 8);\n          v18 = (*(_QWORD *)a3)++;\n          *(_DWORD *)(v17 + 32 * v18) = 0;\n        }\n        if ( *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) )\n        {\n          if ( *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) != 5 )\n            goto LABEL_272;\n        }\n        else\n        {\n          *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) = 5;\n        }\n      }\n      else\n      {\n        *(_QWORD *)(v52 + 48) = a1 - 1;\n        while ( *a1 > 47 && *a1 <= 57 )\n          ++a1;\n        *(_QWORD *)(v52 + 56) = a1;\n        if ( v41 < *(_QWORD *)(v52 + 56) - *(_QWORD *)(v52 + 48) )\n          v41 = *(_QWORD *)(v52 + 56) - *(_QWORD *)(v52 + 48);\n      }\n    }\n    for ( ii = 0; ; ii += 8 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              while ( *a1 == 104 )\n              {\n                ii |= 1 << (ii & 1);\n                ++a1;\n              }\n              if ( *a1 != 76 )\n                break;\n              ii |= 4u;\n              ++a1;\n            }\n            if ( *a1 != 108 )\n              break;\n            ii += 8;\n            ++a1;\n          }\n          if ( *a1 != 106 )\n            break;\n          ii += 8;\n          ++a1;\n        }\n        if ( *a1 != 122 && *a1 != 90 )\n          break;\n        ii += 8;\n        ++a1;\n      }\n      if ( *a1 != 116 )\n        break;\n      ++a1;\n    }\n    v19 = a1++;\n    v33 = *v19;\n    v20 = *v19;\n    if ( v20 == 100 )\n    {\nLABEL_185:\n      if ( ii > 15 || (ii & 4) != 0 )\n      {\n        v34 = 9;\n      }\n      else if ( ii <= 7 )\n      {\n        if ( (ii & 2) != 0 )\n        {\n          v34 = 1;\n        }\n        else if ( (ii & 1) != 0 )\n        {\n          v34 = 3;\n        }\n        else\n        {\n          v34 = 5;\n        }\n      }\n      else\n      {\n        v34 = 7;\n      }\n      goto LABEL_229;\n    }\n    if ( v20 > 100 )\n    {\n      if ( v20 == 111 )\n        goto LABEL_195;\n      if ( v20 > 111 )\n      {\n        if ( v20 == 115 )\n        {\n          if ( ii <= 7 )\n            v34 = 15;\n          else\n            v34 = 16;\n          goto LABEL_229;\n        }\n        if ( v20 > 115 )\n        {\n          if ( v20 != 117 && v20 != 120 )\n            goto LABEL_272;\nLABEL_195:\n          if ( ii > 15 || (ii & 4) != 0 )\n          {\n            v34 = 10;\n          }\n          else if ( ii <= 7 )\n          {\n            if ( (ii & 2) != 0 )\n            {\n              v34 = 2;\n            }\n            else if ( (ii & 1) != 0 )\n            {\n              v34 = 4;\n            }\n            else\n            {\n              v34 = 6;\n            }\n          }\n          else\n          {\n            v34 = 8;\n          }\n          goto LABEL_229;\n        }\n        if ( v20 != 112 )\n          goto LABEL_272;\n        v34 = 17;\n      }\n      else\n      {\n        if ( v20 == 105 )\n          goto LABEL_185;\n        if ( v20 <= 105 )\n        {\n          if ( v20 > 103 )\n            goto LABEL_272;\nLABEL_205:\n          if ( ii > 15 || (ii & 4) != 0 )\n            v34 = 12;\n          else\n            v34 = 11;\n          goto LABEL_229;\n        }\n        if ( v20 != 110 )\n          goto LABEL_272;\n        if ( ii > 15 || (ii & 4) != 0 )\n        {\n          v34 = 22;\n        }\n        else if ( ii <= 7 )\n        {\n          if ( (ii & 2) != 0 )\n          {\n            v34 = 18;\n          }\n          else if ( (ii & 1) != 0 )\n          {\n            v34 = 19;\n          }\n          else\n          {\n            v34 = 20;\n          }\n        }\n        else\n        {\n          v34 = 21;\n        }\n      }\n    }\n    else if ( v20 > 71 )\n    {\n      if ( v20 == 88 )\n        goto LABEL_195;\n      if ( v20 > 88 )\n      {\n        if ( v20 == 97 )\n          goto LABEL_205;\n        if ( v20 != 99 )\n          goto LABEL_272;\n        if ( ii <= 7 )\n          v34 = 13;\n        else\n          v34 = 14;\n      }\n      else\n      {\n        if ( v20 != 83 )\n          goto LABEL_272;\n        v34 = 16;\n        v33 = 115;\n      }\n    }\n    else\n    {\n      if ( v20 >= 69 || v20 == 65 )\n        goto LABEL_205;\n      if ( v20 == 67 )\n      {\n        v34 = 14;\n        v33 = 99;\n      }\n      else\n      {\n        if ( v20 != 37 )\n          goto LABEL_272;\n        v34 = 0;\n      }\n    }\nLABEL_229:\n    if ( v34 )\n    {\n      *(_QWORD *)(v52 + 80) = v42;\n      if ( *(_QWORD *)(v52 + 80) == -1LL )\n      {\n        v21 = v37++;\n        *(_QWORD *)(v52 + 80) = v21;\n        if ( *(_QWORD *)(v52 + 80) == -1LL )\n          goto LABEL_272;\n      }\n      v57 = *(_QWORD *)(v52 + 80);\n      if ( v57 >= v39 )\n      {\n        if ( v39 < 0 )\n          v22 = -1LL;\n        else\n          v22 = 2 * v39;\n        v39 = v22;\n        if ( v22 <= v57 )\n          v39 = sub_410818(v57, 1LL);\n        if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n          v23 = -1LL;\n        else\n          v23 = 32 * v39;\n        if ( v23 == -1LL )\n          goto LABEL_277;\n        v24 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v23) : realloc(*(void **)(a3 + 8), v23);\n        v58 = v24;\n        if ( !v24 )\n          goto LABEL_277;\n        if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n          memcpy(v24, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n        *(_QWORD *)(a3 + 8) = v58;\n      }\n      while ( *(_QWORD *)a3 <= v57 )\n      {\n        v25 = *(_QWORD *)(a3 + 8);\n        v26 = (*(_QWORD *)a3)++;\n        *(_DWORD *)(v25 + 32 * v26) = 0;\n      }\n      if ( *(_DWORD *)(32 * v57 + *(_QWORD *)(a3 + 8)) )\n      {\n        if ( *(_DWORD *)(32 * v57 + *(_QWORD *)(a3 + 8)) != v34 )\n          goto LABEL_272;\n      }\n      else\n      {\n        *(_DWORD *)(*(_QWORD *)(a3 + 8) + 32 * v57) = v34;\n      }\n    }\n    *(_BYTE *)(v52 + 72) = v33;\n    *(_QWORD *)(v52 + 8) = a1;\n    if ( ++*(_QWORD *)a2 >= (unsigned __int64)v38 )\n    {\n      if ( v38 < 0 )\n        v27 = -1LL;\n      else\n        v27 = 2 * v38;\n      v38 = v27;\n      if ( v27 > 0x2E8BA2E8BA2E8BALL )\n        v28 = -1LL;\n      else\n        v28 = 88 * v27;\n      if ( v28 == -1LL )\n        goto LABEL_277;\n      v29 = *(_QWORD *)(a2 + 8) == a2 + 32 ? malloc(v28) : realloc(*(void **)(a2 + 8), v28);\n      v59 = v29;\n      if ( !v29 )\n        goto LABEL_277;\n      if ( *(_QWORD *)(a2 + 8) == a2 + 32 )\n        memcpy(v29, *(const void **)(a2 + 8), 88LL * *(_QWORD *)a2);\n      *(_QWORD *)(a2 + 8) = v59;\n    }\n  }\n  if ( v39 < 0 )\n    v7 = -1LL;\n  else\n    v7 = 2 * v39;\n  v39 = v7;\n  if ( v7 <= v53 )\n    v39 = sub_410818(v53, 1LL);\n  if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n    v8 = -1LL;\n  else\n    v8 = 32 * v39;\n  if ( v8 != -1LL )\n  {\n    v9 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v8) : realloc(*(void **)(a3 + 8), v8);\n    dest = v9;\n    if ( v9 )\n    {\n      if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n        memcpy(v9, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n      *(_QWORD *)(a3 + 8) = dest;\n      goto LABEL_75;\n    }\n  }\nLABEL_277:\n  if ( *(_QWORD *)(a3 + 8) != a3 + 16 )\n    free(*(void **)(a3 + 8));\n  if ( *(_QWORD *)(a2 + 8) != a2 + 32 )\n    free(*(void **)(a2 + 8));\n  *__errno_location() = 12;\n  return 0xFFFFFFFFLL;\n}\n"], [4267504, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_615E18 - off_615E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_615E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4267616, "fini", "void fini(void)\n{\n  ;\n}\n"], [4267632, "sub_411E70", "int __fastcall sub_411E70(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6162E8 )\n    v1 = (void *)qword_6162E8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4267664, "sub_411E90", "int __fastcall sub_411E90(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4267680, "sub_411EA0", "int __fastcall sub_411EA0(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4267696, "sub_411EB0", "int __fastcall sub_411EB0(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4267712, "sub_411EC0", "int __fastcall sub_411EC0(int fildes, char *filename, struct stat *stat_buf, int flag)\n{\n  return __fxstatat(1, fildes, filename, stat_buf, flag);\n}\n"], [4267736, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]