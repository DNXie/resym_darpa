[[4199000, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199040, "sub_401280", "__int64 sub_401280()\n{\n  return qword_60C010();\n}\n"], [4199056, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199072, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199088, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199104, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199120, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199136, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199152, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4199168, ".fread_unlocked", "// attributes: thunk\nsize_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread_unlocked(ptr, size, n, stream);\n}\n"], [4199184, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199200, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199216, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199232, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199248, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199264, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199280, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199296, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199312, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199328, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199344, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199360, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199376, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199392, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199408, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199424, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199440, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199456, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199472, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199488, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199504, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199520, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199536, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199552, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199568, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199584, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199600, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199616, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4199632, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199648, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199664, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199680, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199696, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199712, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4199728, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199744, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4199760, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199776, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199792, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4199808, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199824, ".getline", "// attributes: thunk\n__ssize_t getline(char **lineptr, size_t *n, FILE *stream)\n{\n  return getline(lineptr, n, stream);\n}\n"], [4199840, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199856, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199872, ".ngettext", "// attributes: thunk\nchar *ngettext(const char *msgid1, const char *msgid2, unsigned __int64 n)\n{\n  return ngettext(msgid1, msgid2, n);\n}\n"], [4199888, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199904, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199920, ".feof_unlocked", "// attributes: thunk\nint feof_unlocked(FILE *stream)\n{\n  return feof_unlocked(stream);\n}\n"], [4199936, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199952, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200000, "sub_401640", "signed __int64 sub_401640()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60C22F - &unk_60C228;\n  if ( (unsigned __int64)(&unk_60C22F - &unk_60C228) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200048, "sub_401670", "__int64 sub_401670()\n{\n  return 0LL;\n}\n"], [4200112, "sub_4016B0", "signed __int64 sub_4016B0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60C278 )\n  {\n    result = sub_401640();\n    byte_60C278 = 1;\n  }\n  return result;\n}\n"], [4200144, "sub_4016D0", "__int64 sub_4016D0()\n{\n  return sub_401670();\n}\n"], [4200189, "sub_4016FD", "__int64 __fastcall sub_4016FD(__int64 a1)\n{\n  return a1;\n}\n"], [4200203, "sub_40170B", "unsigned __int64 __fastcall sub_40170B(__int64 a1, unsigned __int64 a2)\n{\n  return a2 - 1 + a1 - (a2 - 1 + a1) % a2;\n}\n"], [4200273, "sub_401751", "int sub_401751()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_406BFD(qword_60C2B0);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_406BFD(qword_60C2B0);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_406BFD(qword_60C2B0);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200539, "sub_40185B", "__int64 __fastcall sub_40185B(__int64 a1)\n{\n  return a1;\n}\n"], [4200553, "sub_401869", "void __fastcall __noreturn sub_401869(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  char *v6; // rax\n  FILE *v7; // rbx\n  char *v8; // rax\n  FILE *v9; // rbx\n  char *v10; // rax\n  FILE *v11; // rbx\n  char *v12; // rax\n  FILE *v13; // rbx\n  char *v14; // rax\n  FILE *v15; // rbx\n  char *v16; // rax\n  char *v17; // rax\n\n  v1 = qword_60C2B0;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\n           \"Usage: %s [OPTION]... [FILE]...\\n\"\n           \"Print or check %s (%d-bit) checksums.\\n\"\n           \"With no FILE, or when FILE is -, read standard input.\\n\"\n           \"\\n\");\n    printf(v3, v1, \"SHA256\", 256LL);\n    v4 = stdout;\n    v5 = gettext(\"  -b, --binary         read in binary mode\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = gettext(\"  -c, --check          read %s sums from the FILEs and check them\\n\");\n    printf(v6, \"SHA256\");\n    v7 = stdout;\n    v8 = gettext(\"  -t, --text           read in text mode (default)\\n\");\n    fputs_unlocked(v8, v7);\n    v9 = stdout;\n    v10 = gettext(\n            \"\\n\"\n            \"The following three options are useful only when verifying checksums:\\n\"\n            \"      --quiet          don't print OK for each successfully verified file\\n\"\n            \"      --status         don't output anything, status code shows success\\n\"\n            \"  -w, --warn           warn about improperly formatted checksum lines\\n\"\n            \"\\n\");\n    fputs_unlocked(v10, v9);\n    v11 = stdout;\n    v12 = gettext(\"      --strict         with --check, exit non-zero for any invalid input\\n\");\n    fputs_unlocked(v12, v11);\n    v13 = stdout;\n    v14 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v14, v13);\n    v15 = stdout;\n    v16 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v16, v15);\n    v17 = gettext(\n            \"\\n\"\n            \"The sums are computed as described in %s.  When checking, the input\\n\"\n            \"should be a former output of this program.  The default mode is to print\\n\"\n            \"a line with checksum, a character indicating type (`*' for binary, ` ' for\\n\"\n            \"text), and name for each FILE.\\n\");\n    printf(v17, \"FIPS-180-2\");\n    sub_401751();\n  }\n  exit(a1);\n}\n"], [4200904, "sub_4019C8", "__int64 __fastcall sub_4019C8(__int64 a1, __int64 a2, _QWORD *a3, _QWORD *a4)\n{\n  __int64 v5; // rax\n  __int64 i; // [rsp+28h] [rbp-8h]\n  __int64 v7; // [rsp+28h] [rbp-8h]\n  __int64 j; // [rsp+28h] [rbp-8h]\n\n  if ( !a2 )\n    return 0LL;\n  *a4 = a1;\n  for ( i = a2 - 1; i && *(_BYTE *)(a1 + i) != 41; --i )\n    ;\n  if ( *(_BYTE *)(a1 + i) != 41 )\n    return 0LL;\n  v5 = i;\n  v7 = i + 1;\n  *(_BYTE *)(a1 + v5) = 0;\n  while ( *(_BYTE *)(a1 + v7) == 32 || *(_BYTE *)(a1 + v7) == 9 )\n    ++v7;\n  if ( *(_BYTE *)(a1 + v7) != 61 )\n    return 0LL;\n  for ( j = v7 + 1; *(_BYTE *)(a1 + j) == 32 || *(_BYTE *)(a1 + j) == 9; ++j )\n    ;\n  *a3 = j + a1;\n  return 1LL;\n}\n"], [4201187, "sub_401AE3", "__int64 __fastcall sub_401AE3(__int64 a1, unsigned __int64 a2, _QWORD *a3, _DWORD *a4, _QWORD *a5)\n{\n  __int64 result; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  unsigned __int64 v8; // rax\n  int v9; // eax\n  _BYTE *v10; // rax\n  _BYTE *v11; // rax\n  _BYTE *v12; // rax\n  __int64 v13; // rdx\n  char v17; // [rsp+37h] [rbp-19h]\n  __int64 i; // [rsp+38h] [rbp-18h]\n  __int64 v19; // [rsp+38h] [rbp-18h]\n  __int64 v20; // [rsp+38h] [rbp-18h]\n  unsigned __int64 v21; // [rsp+38h] [rbp-18h]\n  _BYTE *v22; // [rsp+40h] [rbp-10h]\n\n  v17 = 0;\n  for ( i = 0LL; *(_BYTE *)(a1 + i) == 32 || *(_BYTE *)(a1 + i) == 9; ++i )\n    ;\n  if ( strncmp((const char *)(a1 + i), \"SHA256\", 6uLL) )\n    goto LABEL_10;\n  if ( *(_BYTE *)(i + 6 + a1) == 32 )\n    ++i;\n  if ( *(_BYTE *)(i + 6 + a1) == 40 )\n  {\n    *a4 = 0;\n    result = sub_4019C8(i + 7 + a1, a2 - (i + 6) - 1, a3, a5);\n  }\n  else\n  {\nLABEL_10:\n    if ( a2 - i >= (unsigned __int64)(*(_BYTE *)(a1 + i) == 92) + qword_60C288 )\n    {\n      if ( *(_BYTE *)(a1 + i) == 92 )\n      {\n        ++i;\n        v17 = 1;\n      }\n      *a3 = i + a1;\n      v19 = qword_60C290 + i;\n      if ( *(_BYTE *)(a1 + v19) == 32 || *(_BYTE *)(a1 + v19) == 9 )\n      {\n        v6 = v19;\n        v20 = v19 + 1;\n        *(_BYTE *)(a1 + v6) = 0;\n        if ( *(_BYTE *)(a1 + v20) == 32 || *(_BYTE *)(a1 + v20) == 42 )\n        {\n          v7 = v20;\n          v21 = v20 + 1;\n          *a4 = *(_BYTE *)(a1 + v7) == 42;\n          *a5 = v21 + a1;\n          if ( v17 )\n          {\n            v22 = (_BYTE *)(a1 + v21);\n            while ( v21 < a2 )\n            {\n              if ( !*(_BYTE *)(a1 + v21) )\n                return 0LL;\n              if ( *(_BYTE *)(a1 + v21) == 92 )\n              {\n                if ( a2 - 1 == v21 )\n                  return 0LL;\n                v8 = v21 + 1;\n                v21 += 2LL;\n                v9 = *(char *)(a1 + v8);\n                if ( v9 == 92 )\n                {\n                  v11 = v22++;\n                  *v11 = 92;\n                }\n                else\n                {\n                  if ( v9 != 110 )\n                    return 0LL;\n                  v10 = v22++;\n                  *v10 = 10;\n                }\n              }\n              else\n              {\n                v12 = v22++;\n                v13 = v21++;\n                *v12 = *(_BYTE *)(a1 + v13);\n              }\n            }\n            *v22 = 0;\n          }\n          result = 1LL;\n        }\n        else\n        {\n          result = 0LL;\n        }\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n    else\n    {\n      result = 0LL;\n    }\n  }\n  return result;\n}\n"], [4201972, "sub_401DF4", "bool __fastcall sub_401DF4(_BYTE *a1)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; i < (unsigned __int64)qword_60C290; ++i )\n  {\n    if ( ((*__ctype_b_loc())[(unsigned __int8)*a1] & 0x1000) == 0 )\n      return 0;\n    ++a1;\n  }\n  return *a1 == 0;\n}\n"], [4202077, "sub_401E5D", "__int64 __fastcall sub_401E5D(const char *a1, __int64 a2, __int64 a3)\n{\n  int v3; // eax\n  int *v4; // rax\n  int *v6; // rax\n  bool v8; // [rsp+23h] [rbp-Dh]\n  __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v3 = strcmp(a1, \"-\");\n  v8 = v3 == 0;\n  if ( v3 )\n  {\n    v9 = sub_406D1E(a1, \"r\");\n    if ( !v9 )\n      goto LABEL_4;\n    sub_406CE4(v9, 2LL);\n  }\n  else\n  {\n    byte_60C280 = 1;\n    v9 = stdin;\n    sub_406CE4(stdin, 2LL);\n  }\n  if ( !(unsigned int)sub_4031D1(v9, a3) )\n  {\n    if ( v8 || !(unsigned int)sub_4091DB(v9) )\n      return 1LL;\nLABEL_4:\n    v4 = __errno_location();\n    error(0, *v4, \"%s\", a1);\n    return 0LL;\n  }\n  v6 = __errno_location();\n  error(0, *v6, \"%s\", a1);\n  if ( v9 != stdin )\n    sub_4091DB(v9);\n  return 0LL;\n}\n"], [4202412, "sub_401FAC", "_BOOL8 __fastcall sub_401FAC(const char *a1)\n{\n  int v1; // eax\n  int *v2; // rax\n  _BOOL8 result; // rax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rbx\n  char *v7; // rax\n  char *v8; // rax\n  char *v9; // rax\n  char *v10; // rax\n  int *v11; // rax\n  char *v12; // rax\n  __int64 v13; // rax\n  char *v14; // rax\n  __int64 v15; // rax\n  char *v16; // rax\n  __int64 v17; // rax\n  char *v18; // rax\n  bool v19; // al\n  const char *s1; // [rsp+8h] [rbp-C8h]\n  bool v21; // [rsp+12h] [rbp-BEh]\n  int v22; // [rsp+14h] [rbp-BCh] BYREF\n  char *lineptr; // [rsp+18h] [rbp-B8h] BYREF\n  size_t n; // [rsp+20h] [rbp-B0h] BYREF\n  char *v25; // [rsp+28h] [rbp-A8h] BYREF\n  _BYTE *v26; // [rsp+30h] [rbp-A0h] BYREF\n  FILE *stream; // [rsp+38h] [rbp-98h]\n  __int64 v28; // [rsp+40h] [rbp-90h]\n  __int64 v29; // [rsp+48h] [rbp-88h]\n  __int64 v30; // [rsp+50h] [rbp-80h]\n  __int64 v31; // [rsp+58h] [rbp-78h]\n  __int64 v32; // [rsp+60h] [rbp-70h]\n  __int64 v33; // [rsp+68h] [rbp-68h]\n  signed __int64 v34; // [rsp+70h] [rbp-60h]\n  unsigned __int64 i; // [rsp+78h] [rbp-58h]\n  __int64 v36; // [rsp+80h] [rbp-50h]\n  unsigned __int64 v37; // [rsp+88h] [rbp-48h]\n  char v38[40]; // [rsp+90h] [rbp-40h] BYREF\n  unsigned __int64 v39; // [rsp+B8h] [rbp-18h]\n\n  s1 = a1;\n  v39 = __readfsqword(0x28u);\n  v28 = 0LL;\n  v29 = 0LL;\n  v30 = 0LL;\n  v31 = 0LL;\n  v32 = 0LL;\n  v36 = sub_40170B((__int64)v38, 4uLL);\n  v1 = strcmp(a1, \"-\");\n  v21 = v1 == 0;\n  if ( v1 )\n  {\n    stream = (FILE *)sub_406D1E(a1, \"r\");\n    if ( !stream )\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", a1);\n      return 0LL;\n    }\n  }\n  else\n  {\n    byte_60C280 = 1;\n    s1 = gettext(\"standard input\");\n    stream = (FILE *)stdin;\n  }\n  v33 = 0LL;\n  lineptr = 0LL;\n  n = 0LL;\n  do\n  {\n    if ( !++v33 )\n    {\n      v4 = gettext(\"%s: too many checksum lines\");\n      error(1, 0, v4, s1);\n    }\n    v34 = getline(&lineptr, &n, stream);\n    if ( v34 <= 0 )\n      break;\n    if ( *lineptr != 35 )\n    {\n      if ( lineptr[v34 - 1] == 10 )\n        lineptr[--v34] = 0;\n      if ( (unsigned __int8)sub_401AE3((__int64)lineptr, v34, &v26, &v22, &v25) != 1\n        || v21 && !strcmp(v25, \"-\")\n        || !sub_401DF4(v26) )\n      {\n        ++v28;\n        if ( byte_60C299 )\n        {\n          v5 = gettext(\"%s: %lu: improperly formatted %s checksum line\");\n          error(0, 0, v5, s1, v33, \"SHA256\");\n        }\n        ++v30;\n      }\n      else\n      {\n        ++v29;\n        if ( (unsigned __int8)sub_401E5D(v25, (__int64)&v22, v36) != 1 )\n        {\n          ++v32;\n          if ( byte_60C298 != 1 )\n          {\n            v6 = v25;\n            v7 = gettext(\"%s: FAILED open or read\\n\");\n            printf(v7, v6);\n          }\n        }\n        else\n        {\n          v37 = (unsigned __int64)qword_60C290 >> 1;\n          for ( i = 0LL;\n                i < v37\n             && tolower((unsigned __int8)v26[2 * i]) == byte_40A2D0[*(_BYTE *)(v36 + i) >> 4]\n             && tolower((unsigned __int8)v26[2 * i + 1]) == byte_40A2D0[*(_BYTE *)(v36 + i) & 0xF];\n                ++i )\n          {\n            ;\n          }\n          if ( i != v37 )\n            ++v31;\n          if ( byte_60C298 != 1 )\n          {\n            if ( i == v37 )\n            {\n              if ( byte_60C29A != 1 )\n              {\n                v9 = gettext(\"OK\");\n                printf(\"%s: %s\\n\", v25, v9);\n              }\n            }\n            else\n            {\n              v8 = gettext(\"FAILED\");\n              printf(\"%s: %s\\n\", v25, v8);\n            }\n          }\n        }\n      }\n    }\n  }\n  while ( !feof_unlocked(stream) && !ferror_unlocked(stream) );\n  free(lineptr);\n  if ( ferror_unlocked(stream) )\n  {\n    v10 = gettext(\"%s: read error\");\n    error(0, 0, v10, s1);\n    result = 0LL;\n  }\n  else if ( !v21 && (unsigned int)sub_4091DB(stream) )\n  {\n    v11 = __errno_location();\n    error(0, *v11, \"%s\", s1);\n    result = 0LL;\n  }\n  else\n  {\n    if ( v29 )\n    {\n      if ( byte_60C298 != 1 )\n      {\n        if ( v28 )\n        {\n          v13 = sub_4016FD(v28);\n          v14 = ngettext(\n                  \"WARNING: %lu line is improperly formatted\",\n                  \"WARNING: %lu lines are improperly formatted\",\n                  v13);\n          error(0, 0, v14, v28);\n        }\n        if ( v32 )\n        {\n          v15 = sub_4016FD(v32);\n          v16 = ngettext(\n                  \"WARNING: %lu listed file could not be read\",\n                  \"WARNING: %lu listed files could not be read\",\n                  v15);\n          error(0, 0, v16, v32);\n        }\n        if ( v31 )\n        {\n          v17 = sub_4016FD(v31);\n          v18 = ngettext(\n                  \"WARNING: %lu computed checksum did NOT match\",\n                  \"WARNING: %lu computed checksums did NOT match\",\n                  v17);\n          error(0, 0, v18, v31);\n        }\n      }\n    }\n    else\n    {\n      v12 = gettext(\"%s: no properly formatted %s checksum lines found\");\n      error(0, 0, v12, s1, \"SHA256\");\n    }\n    v19 = v29 && !v31 && !v32 && (byte_60C29B != 1 || !v30);\n    result = v19;\n  }\n  return result;\n}\n"], [4204094, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  int v8; // eax\n  size_t v9; // rax\n  char *v10; // rbx\n  int *v11; // rax\n  int argc; // [rsp+1Ch] [rbp-74h]\n  char v13; // [rsp+2Ah] [rbp-66h]\n  char v14; // [rsp+2Bh] [rbp-65h]\n  int v15; // [rsp+2Ch] [rbp-64h] BYREF\n  int v16; // [rsp+30h] [rbp-60h]\n  int v17; // [rsp+34h] [rbp-5Ch]\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v19; // [rsp+40h] [rbp-50h]\n  char *s; // [rsp+48h] [rbp-48h]\n  char v21[40]; // [rsp+50h] [rbp-40h] BYREF\n  unsigned __int64 v22; // [rsp+78h] [rbp-18h]\n\n  argc = a1;\n  v22 = __readfsqword(0x28u);\n  v19 = sub_40170B((__int64)v21, 4uLL);\n  v13 = 0;\n  v14 = 1;\n  v16 = -1;\n  sub_406E04(*a2);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_409790(sub_402C55);\n  setvbuf(stdout, 0LL, 1, 0LL);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v17 = getopt_long(a1, a2, \"bctw\", &longopts, 0LL);\n        if ( v17 == -1 )\n        {\n          qword_60C288 = 67LL;\n          qword_60C290 = 64LL;\n          if ( v16 >= 0 && v13 )\n          {\n            v3 = gettext(\"the --binary and --text options are meaningless when verifying checksums\");\n            error(0, 0, v3);\n            sub_401869(1);\n          }\n          if ( byte_60C298 && v13 != 1 )\n          {\n            v4 = gettext(\"the --status option is meaningful only when verifying checksums\");\n            error(0, 0, v4);\n            sub_401869(1);\n          }\n          if ( byte_60C299 && v13 != 1 )\n          {\n            v5 = gettext(\"the --warn option is meaningful only when verifying checksums\");\n            error(0, 0, v5);\n            sub_401869(1);\n          }\n          if ( byte_60C29A && v13 != 1 )\n          {\n            v6 = gettext(\"the --quiet option is meaningful only when verifying checksums\");\n            error(0, 0, v6);\n            sub_401869(1);\n          }\n          if ( ((unsigned __int8)byte_60C29B & ((unsigned __int8)v13 ^ 1)) != 0 )\n          {\n            v7 = gettext(\"the --strict option is meaningful only when verifying checksums\");\n            error(0, 0, v7);\n            sub_401869(1);\n          }\n          if ( v16 < 0 )\n            v16 = 0;\n          if ( optind == a1 )\n          {\n            argc = a1 + 1;\n            a2[a1] = (char *)sub_40185B((__int64)\"-\");\n          }\n          while ( optind < argc )\n          {\n            s = a2[optind];\n            if ( v13 )\n            {\n              v14 &= sub_401FAC(s);\n            }\n            else\n            {\n              v15 = v16;\n              if ( (unsigned __int8)sub_401E5D(s, (__int64)&v15, v19) != 1 )\n              {\n                v14 = 0;\n              }\n              else\n              {\n                if ( strchr(s, 10) || strchr(s, 92) )\n                  putchar_unlocked(92);\n                for ( i = 0LL; (unsigned __int64)qword_60C290 >> 1 > i; ++i )\n                  printf(\"%02x\", *(unsigned __int8 *)(v19 + i));\n                putchar_unlocked(32);\n                if ( v15 )\n                  putchar_unlocked(42);\n                else\n                  putchar_unlocked(32);\n                for ( i = 0LL; ; ++i )\n                {\n                  v9 = strlen(s);\n                  if ( v9 <= i )\n                    break;\n                  v8 = s[i];\n                  if ( v8 == 10 )\n                  {\n                    fwrite_unlocked(\"\\\\n\", 1uLL, 2uLL, stdout);\n                  }\n                  else if ( v8 == 92 )\n                  {\n                    fwrite_unlocked(\"\\\\\\\\\", 1uLL, 2uLL, stdout);\n                  }\n                  else\n                  {\n                    putchar_unlocked(s[i]);\n                  }\n                }\n                putchar_unlocked(10);\n              }\n            }\n            ++optind;\n          }\n          if ( byte_60C280 )\n          {\n            if ( (unsigned int)sub_4091DB(stdin) == -1 )\n            {\n              v10 = gettext(\"standard input\");\n              v11 = __errno_location();\n              error(1, *v11, v10);\n            }\n          }\n          exit(v14 == 0);\n        }\n        if ( v17 != 116 )\n          break;\n        v16 = 0;\n      }\n      if ( v17 <= 116 )\n        break;\n      if ( v17 == 128 )\n      {\n        byte_60C298 = 1;\n        byte_60C299 = 0;\n        byte_60C29A = 0;\n      }\n      else if ( v17 > 128 )\n      {\n        if ( v17 == 129 )\n        {\n          byte_60C298 = 0;\n          byte_60C299 = 0;\n          byte_60C29A = 1;\n        }\n        else\n        {\n          if ( v17 != 130 )\n            goto LABEL_27;\n          byte_60C29B = 1;\n        }\n      }\n      else\n      {\n        if ( v17 != 119 )\n          goto LABEL_27;\n        byte_60C298 = 0;\n        byte_60C299 = 1;\n        byte_60C29A = 0;\n      }\n    }\n    if ( v17 == -130 )\n      sub_401869(0);\n    if ( v17 <= -130 )\n    {\n      if ( v17 == -131 )\n      {\n        sub_408DBC(\n          (_DWORD)stdout,\n          (unsigned int)\"sha256sum\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_60C1F0,\n          (unsigned int)\"Ulrich Drepper\",\n          (unsigned int)\"Scott Miller\",\n          \"David Madore\",\n          0LL);\n        exit(0);\n      }\nLABEL_27:\n      sub_401869(1);\n    }\n    if ( v17 == 98 )\n    {\n      v16 = 1;\n    }\n    else\n    {\n      if ( v17 != 99 )\n        goto LABEL_27;\n      v13 = 1;\n    }\n  }\n}\n"], [4205632, "sub_402C40", "__int64 __fastcall sub_402C40(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60C2A8 = a1;\n  return result;\n}\n"], [4205653, "sub_402C55", "__int64 sub_402C55()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_409680(stdout) && (byte_60C2A8 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60C2A0 )\n    {\n      v0 = (const char *)sub_4084E5(qword_60C2A0);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_409680(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4205888, "sub_402D40", "__int64 __fastcall sub_402D40(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)a1 = 1779033703;\n  *(_DWORD *)(a1 + 4) = -1150833019;\n  *(_DWORD *)(a1 + 8) = 1013904242;\n  *(_DWORD *)(a1 + 12) = -1521486534;\n  *(_DWORD *)(a1 + 16) = 1359893119;\n  *(_DWORD *)(a1 + 20) = -1694144372;\n  *(_DWORD *)(a1 + 24) = 528734635;\n  *(_DWORD *)(a1 + 28) = 1541459225;\n  *(_DWORD *)(a1 + 36) = 0;\n  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a1 + 36);\n  result = a1;\n  *(_QWORD *)(a1 + 40) = 0LL;\n  return result;\n}\n"], [4206022, "sub_402DC6", "__int64 __fastcall sub_402DC6(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)a1 = -1056596264;\n  *(_DWORD *)(a1 + 4) = 914150663;\n  *(_DWORD *)(a1 + 8) = 812702999;\n  *(_DWORD *)(a1 + 12) = -150054599;\n  *(_DWORD *)(a1 + 16) = -4191439;\n  *(_DWORD *)(a1 + 20) = 1750603025;\n  *(_DWORD *)(a1 + 24) = 1694076839;\n  *(_DWORD *)(a1 + 28) = -1090891868;\n  *(_DWORD *)(a1 + 36) = 0;\n  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a1 + 36);\n  result = a1;\n  *(_QWORD *)(a1 + 40) = 0LL;\n  return result;\n}\n"], [4206156, "sub_402E4C", "_DWORD *__fastcall sub_402E4C(_DWORD *a1, int a2)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = a2;\n  return result;\n}\n"], [4206178, "sub_402E62", "__int64 __fastcall sub_402E62(__int64 a1, __int64 a2)\n{\n  int i; // [rsp+14h] [rbp-Ch]\n\n  for ( i = 0; i <= 7; ++i )\n    sub_402E4C(\n      (_DWORD *)(4LL * i + a2),\n      HIBYTE(*(_DWORD *)(a1 + 4LL * i)) | (*(_DWORD *)(a1 + 4LL * i) >> 8) & 0xFF00 | ((*(_DWORD *)(a1 + 4LL * i) & 0xFF00) << 8) | (*(_DWORD *)(a1 + 4LL * i) << 24));\n  return a2;\n}\n"], [4206341, "sub_402F05", "__int64 __fastcall sub_402F05(__int64 a1, __int64 a2)\n{\n  int i; // [rsp+14h] [rbp-Ch]\n\n  for ( i = 0; i <= 6; ++i )\n    sub_402E4C(\n      (_DWORD *)(4LL * i + a2),\n      HIBYTE(*(_DWORD *)(a1 + 4LL * i)) | (*(_DWORD *)(a1 + 4LL * i) >> 8) & 0xFF00 | ((*(_DWORD *)(a1 + 4LL * i) & 0xFF00) << 8) | (*(_DWORD *)(a1 + 4LL * i) << 24));\n  return a2;\n}\n"], [4206504, "sub_402FA8", "__int64 __fastcall sub_402FA8(__int64 a1)\n{\n  __int64 v1; // rax\n  unsigned __int64 v3; // [rsp+10h] [rbp-10h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *(_QWORD *)(a1 + 40);\n  if ( v3 > 0x37 )\n    v1 = 32LL;\n  else\n    v1 = 16LL;\n  v4 = v1;\n  *(_DWORD *)(a1 + 32) += v3;\n  if ( *(unsigned int *)(a1 + 32) < v3 )\n    ++*(_DWORD *)(a1 + 36);\n  sub_402E4C(\n    (_DWORD *)(4 * (v1 - 2 + 12) + a1),\n    ((unsigned int)(*(__int64 *)(a1 + 32) >> 29) >> 24) | ((unsigned int)(*(__int64 *)(a1 + 32) >> 29) >> 8) & 0xFF00 | ((((unsigned __int16)(8 * *(_DWORD *)(a1 + 36)) | (*(_DWORD *)(a1 + 32) >> 29)) & 0xFF00) << 8) | ((unsigned int)(*(__int64 *)(a1 + 32) >> 29) << 24));\n  sub_402E4C(\n    (_DWORD *)(4 * (v4 - 1 + 12) + a1),\n    ((unsigned int)(8 * *(_DWORD *)(a1 + 32)) >> 24) | ((unsigned int)(8 * *(_DWORD *)(a1 + 32)) >> 8) & 0xFF00 | (((8 * (unsigned __int16)*(_DWORD *)(a1 + 32)) & 0xFF00) << 8) | (*(_DWORD *)(a1 + 32) << 27));\n  memcpy((void *)(a1 + 48 + v3), &unk_40A300, 4 * v4 - v3 - 8);\n  return sub_4037BF(a1 + 48, 4 * v4, a1);\n}\n"], [4206959, "sub_40316F", "__int64 __fastcall sub_40316F(__int64 a1, __int64 a2)\n{\n  sub_402FA8(a1);\n  return sub_402E62(a1, a2);\n}\n"], [4207008, "sub_4031A0", "__int64 __fastcall sub_4031A0(__int64 a1, __int64 a2)\n{\n  sub_402FA8(a1);\n  return sub_402F05(a1, a2);\n}\n"], [4207057, "sub_4031D1", "__int64 __fastcall sub_4031D1(FILE *a1, __int64 a2)\n{\n  __int64 v3; // [rsp+18h] [rbp-C8h]\n  char *ptr; // [rsp+20h] [rbp-C0h]\n  size_t v5; // [rsp+28h] [rbp-B8h]\n  char v6[176]; // [rsp+30h] [rbp-B0h] BYREF\n\n  ptr = (char *)malloc(0x8048uLL);\n  if ( !ptr )\n    return 1LL;\n  sub_402D40((__int64)v6);\nLABEL_4:\n  v3 = 0LL;\n  while ( 1 )\n  {\n    v5 = fread_unlocked(&ptr[v3], 1uLL, 0x8000 - v3, a1);\n    v3 += v5;\n    if ( v3 == 0x8000 )\n    {\n      sub_4037BF(ptr, 0x8000LL, v6);\n      goto LABEL_4;\n    }\n    if ( !v5 )\n      break;\n    if ( feof_unlocked(a1) )\n      goto LABEL_12;\n  }\n  if ( ferror_unlocked(a1) )\n  {\n    free(ptr);\n    return 1LL;\n  }\nLABEL_12:\n  if ( v3 )\n    sub_40358F(ptr, v3, v6);\n  sub_40316F((__int64)v6, a2);\n  free(ptr);\n  return 0LL;\n}\n"], [4207430, "sub_403346", "__int64 __fastcall sub_403346(FILE *a1, __int64 a2)\n{\n  __int64 v3; // [rsp+18h] [rbp-C8h]\n  char *ptr; // [rsp+20h] [rbp-C0h]\n  size_t v5; // [rsp+28h] [rbp-B8h]\n  char v6[176]; // [rsp+30h] [rbp-B0h] BYREF\n\n  ptr = (char *)malloc(0x8048uLL);\n  if ( !ptr )\n    return 1LL;\n  sub_402DC6((__int64)v6);\nLABEL_4:\n  v3 = 0LL;\n  while ( 1 )\n  {\n    v5 = fread_unlocked(&ptr[v3], 1uLL, 0x8000 - v3, a1);\n    v3 += v5;\n    if ( v3 == 0x8000 )\n    {\n      sub_4037BF(ptr, 0x8000LL, v6);\n      goto LABEL_4;\n    }\n    if ( !v5 )\n      break;\n    if ( feof_unlocked(a1) )\n      goto LABEL_12;\n  }\n  if ( ferror_unlocked(a1) )\n  {\n    free(ptr);\n    return 1LL;\n  }\nLABEL_12:\n  if ( v3 )\n    sub_40358F(ptr, v3, v6);\n  sub_4031A0((__int64)v6, a2);\n  free(ptr);\n  return 0LL;\n}\n"], [4207803, "sub_4034BB", "__int64 __fastcall sub_4034BB(__int64 a1, __int64 a2, __int64 a3)\n{\n  char v5[176]; // [rsp+20h] [rbp-B0h] BYREF\n\n  sub_402D40((__int64)v5);\n  sub_40358F(a1, a2, v5);\n  return sub_40316F((__int64)v5, a3);\n}\n"], [4207909, "sub_403525", "__int64 __fastcall sub_403525(__int64 a1, __int64 a2, __int64 a3)\n{\n  char v5[176]; // [rsp+20h] [rbp-B0h] BYREF\n\n  sub_402DC6((__int64)v5);\n  sub_40358F(a1, a2, v5);\n  return sub_4031A0((__int64)v5, a3);\n}\n"], [4208015, "sub_40358F", "unsigned __int64 __fastcall sub_40358F(char *a1, unsigned __int64 a2, size_t *a3)\n{\n  unsigned __int64 result; // rax\n  size_t v4; // rax\n  void *v5; // rax\n  size_t v7; // [rsp+10h] [rbp-30h]\n  char *src; // [rsp+18h] [rbp-28h]\n  size_t v9; // [rsp+28h] [rbp-18h]\n  size_t v10; // [rsp+28h] [rbp-18h]\n  size_t v11; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  src = a1;\n  v7 = a2;\n  result = a3[5];\n  if ( result )\n  {\n    v11 = a3[5];\n    v4 = a2;\n    if ( 128 - v11 <= a2 )\n      v4 = 128 - v11;\n    n = v4;\n    memcpy((char *)a3 + v11 + 48, a1, v4);\n    a3[5] += n;\n    if ( a3[5] > 0x40 )\n    {\n      sub_4037BF(a3 + 6, a3[5] & 0xFFFFFFFFFFFFFFC0LL, a3);\n      a3[5] &= 0x3FuLL;\n      memcpy(a3 + 6, (char *)a3 + ((v11 + n) & 0xFFFFFFFFFFFFFFC0LL) + 48, a3[5]);\n    }\n    src = &a1[n];\n    result = n;\n    v7 = a2 - n;\n  }\n  if ( v7 > 0x3F )\n  {\n    result = (unsigned __int8)src & 3;\n    if ( ((unsigned __int8)src & 3) != 0 )\n    {\n      while ( v7 > 0x40 )\n      {\n        v5 = memcpy(a3 + 6, src, 0x40uLL);\n        result = sub_4037BF(v5, 64LL, a3);\n        src += 64;\n        v7 -= 64LL;\n      }\n    }\n    else\n    {\n      sub_4037BF(src, v7 & 0xFFFFFFFFFFFFFFC0LL, a3);\n      result = v7 & 0xFFFFFFFFFFFFFFC0LL;\n      src += v7 & 0xFFFFFFFFFFFFFFC0LL;\n      v7 &= 0x3Fu;\n    }\n  }\n  if ( v7 )\n  {\n    v9 = a3[5];\n    memcpy((char *)a3 + v9 + 48, src, v7);\n    v10 = v7 + v9;\n    if ( v10 > 0x3F )\n    {\n      sub_4037BF(a3 + 6, 64LL, a3);\n      v10 -= 64LL;\n      memcpy(a3 + 6, a3 + 14, v10);\n    }\n    result = (unsigned __int64)a3;\n    a3[5] = v10;\n  }\n  return result;\n}\n"], [4208575, "sub_4037BF", "_DWORD *__fastcall sub_4037BF(_DWORD *a1, unsigned __int64 a2, int *a3)\n{\n  int v3; // edx\n  int v4; // eax\n  int v5; // edx\n  int v6; // eax\n  int v7; // edx\n  int v8; // eax\n  int v9; // edx\n  int v10; // eax\n  int v11; // edx\n  int v12; // eax\n  int v13; // edx\n  int v14; // eax\n  int v15; // edx\n  int v16; // eax\n  int v17; // edx\n  int v18; // eax\n  int v19; // edx\n  int v20; // eax\n  int v21; // edx\n  int v22; // eax\n  int v23; // edx\n  int v24; // eax\n  int v25; // edx\n  int v26; // eax\n  int v27; // edx\n  int v28; // eax\n  int v29; // edx\n  int v30; // eax\n  int v31; // edx\n  int v32; // eax\n  int v33; // edx\n  int v34; // eax\n  int v35; // edx\n  int v36; // eax\n  int v37; // edx\n  int v38; // eax\n  int v39; // edx\n  int v40; // eax\n  int v41; // edx\n  int v42; // eax\n  int v43; // edx\n  int v44; // eax\n  int v45; // edx\n  int v46; // eax\n  int v47; // edx\n  int v48; // eax\n  int v49; // edx\n  int v50; // eax\n  int v51; // edx\n  int v52; // eax\n  int v53; // edx\n  int v54; // eax\n  int v55; // edx\n  int v56; // eax\n  int v57; // edx\n  int v58; // eax\n  int v59; // edx\n  int v60; // eax\n  int v61; // edx\n  int v62; // eax\n  int v63; // edx\n  int v64; // eax\n  int v65; // edx\n  int v66; // eax\n  int v67; // edx\n  int v68; // eax\n  int v69; // edx\n  int v70; // eax\n  int v71; // edx\n  int v72; // eax\n  int v73; // edx\n  int v74; // eax\n  int v75; // edx\n  int v76; // eax\n  int v77; // edx\n  int v78; // eax\n  int v79; // edx\n  int v80; // eax\n  int v81; // edx\n  int v82; // eax\n  int v83; // edx\n  int v84; // eax\n  int v85; // edx\n  int v86; // eax\n  int v87; // edx\n  int v88; // eax\n  int v89; // edx\n  int v90; // eax\n  int v91; // edx\n  int v92; // eax\n  int v93; // edx\n  int v94; // eax\n  int v95; // edx\n  int v96; // eax\n  int v97; // edx\n  int v98; // eax\n  int v99; // edx\n  int v100; // eax\n  int v101; // edx\n  int v102; // eax\n  int v103; // edx\n  int v104; // eax\n  int v105; // edx\n  int v106; // eax\n  int v107; // edx\n  int v108; // eax\n  int v109; // edx\n  int v110; // eax\n  int v111; // edx\n  int v112; // eax\n  int v113; // edx\n  int v114; // eax\n  int v115; // edx\n  int v116; // eax\n  int v117; // edx\n  int v118; // eax\n  int v119; // edx\n  int v120; // eax\n  int v121; // edx\n  int v122; // eax\n  int v123; // edx\n  int v124; // eax\n  int v125; // edx\n  int v126; // eax\n  int v127; // edx\n  int v128; // eax\n  _DWORD *result; // rax\n  int v131; // [rsp+20h] [rbp-88h]\n  int v132; // [rsp+20h] [rbp-88h]\n  int v133; // [rsp+20h] [rbp-88h]\n  unsigned int v134; // [rsp+20h] [rbp-88h]\n  int v135; // [rsp+20h] [rbp-88h]\n  unsigned int v136; // [rsp+20h] [rbp-88h]\n  int v137; // [rsp+20h] [rbp-88h]\n  unsigned int v138; // [rsp+20h] [rbp-88h]\n  int v139; // [rsp+20h] [rbp-88h]\n  unsigned int v140; // [rsp+20h] [rbp-88h]\n  int v141; // [rsp+20h] [rbp-88h]\n  unsigned int v142; // [rsp+20h] [rbp-88h]\n  int v143; // [rsp+20h] [rbp-88h]\n  unsigned int v144; // [rsp+20h] [rbp-88h]\n  int v145; // [rsp+20h] [rbp-88h]\n  unsigned int v146; // [rsp+20h] [rbp-88h]\n  int v147; // [rsp+24h] [rbp-84h]\n  int v148; // [rsp+24h] [rbp-84h]\n  int v149; // [rsp+24h] [rbp-84h]\n  unsigned int v150; // [rsp+24h] [rbp-84h]\n  int v151; // [rsp+24h] [rbp-84h]\n  unsigned int v152; // [rsp+24h] [rbp-84h]\n  int v153; // [rsp+24h] [rbp-84h]\n  unsigned int v154; // [rsp+24h] [rbp-84h]\n  int v155; // [rsp+24h] [rbp-84h]\n  unsigned int v156; // [rsp+24h] [rbp-84h]\n  int v157; // [rsp+24h] [rbp-84h]\n  unsigned int v158; // [rsp+24h] [rbp-84h]\n  int v159; // [rsp+24h] [rbp-84h]\n  unsigned int v160; // [rsp+24h] [rbp-84h]\n  int v161; // [rsp+24h] [rbp-84h]\n  unsigned int v162; // [rsp+24h] [rbp-84h]\n  int v163; // [rsp+24h] [rbp-84h]\n  int v164; // [rsp+28h] [rbp-80h]\n  int v165; // [rsp+28h] [rbp-80h]\n  int v166; // [rsp+28h] [rbp-80h]\n  unsigned int v167; // [rsp+28h] [rbp-80h]\n  int v168; // [rsp+28h] [rbp-80h]\n  unsigned int v169; // [rsp+28h] [rbp-80h]\n  int v170; // [rsp+28h] [rbp-80h]\n  unsigned int v171; // [rsp+28h] [rbp-80h]\n  int v172; // [rsp+28h] [rbp-80h]\n  unsigned int v173; // [rsp+28h] [rbp-80h]\n  int v174; // [rsp+28h] [rbp-80h]\n  unsigned int v175; // [rsp+28h] [rbp-80h]\n  int v176; // [rsp+28h] [rbp-80h]\n  unsigned int v177; // [rsp+28h] [rbp-80h]\n  int v178; // [rsp+28h] [rbp-80h]\n  unsigned int v179; // [rsp+28h] [rbp-80h]\n  int v180; // [rsp+28h] [rbp-80h]\n  int v181; // [rsp+2Ch] [rbp-7Ch]\n  int v182; // [rsp+2Ch] [rbp-7Ch]\n  int v183; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v184; // [rsp+2Ch] [rbp-7Ch]\n  int v185; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v186; // [rsp+2Ch] [rbp-7Ch]\n  int v187; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v188; // [rsp+2Ch] [rbp-7Ch]\n  int v189; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v190; // [rsp+2Ch] [rbp-7Ch]\n  int v191; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v192; // [rsp+2Ch] [rbp-7Ch]\n  int v193; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v194; // [rsp+2Ch] [rbp-7Ch]\n  int v195; // [rsp+2Ch] [rbp-7Ch]\n  unsigned int v196; // [rsp+2Ch] [rbp-7Ch]\n  int v197; // [rsp+2Ch] [rbp-7Ch]\n  int v198; // [rsp+30h] [rbp-78h]\n  int v199; // [rsp+30h] [rbp-78h]\n  unsigned int v200; // [rsp+30h] [rbp-78h]\n  int v201; // [rsp+30h] [rbp-78h]\n  unsigned int v202; // [rsp+30h] [rbp-78h]\n  int v203; // [rsp+30h] [rbp-78h]\n  unsigned int v204; // [rsp+30h] [rbp-78h]\n  int v205; // [rsp+30h] [rbp-78h]\n  unsigned int v206; // [rsp+30h] [rbp-78h]\n  int v207; // [rsp+30h] [rbp-78h]\n  unsigned int v208; // [rsp+30h] [rbp-78h]\n  int v209; // [rsp+30h] [rbp-78h]\n  unsigned int v210; // [rsp+30h] [rbp-78h]\n  int v211; // [rsp+30h] [rbp-78h]\n  unsigned int v212; // [rsp+30h] [rbp-78h]\n  int v213; // [rsp+30h] [rbp-78h]\n  int v214; // [rsp+34h] [rbp-74h]\n  int v215; // [rsp+34h] [rbp-74h]\n  unsigned int v216; // [rsp+34h] [rbp-74h]\n  int v217; // [rsp+34h] [rbp-74h]\n  unsigned int v218; // [rsp+34h] [rbp-74h]\n  int v219; // [rsp+34h] [rbp-74h]\n  unsigned int v220; // [rsp+34h] [rbp-74h]\n  int v221; // [rsp+34h] [rbp-74h]\n  unsigned int v222; // [rsp+34h] [rbp-74h]\n  int v223; // [rsp+34h] [rbp-74h]\n  unsigned int v224; // [rsp+34h] [rbp-74h]\n  int v225; // [rsp+34h] [rbp-74h]\n  unsigned int v226; // [rsp+34h] [rbp-74h]\n  int v227; // [rsp+34h] [rbp-74h]\n  unsigned int v228; // [rsp+34h] [rbp-74h]\n  int v229; // [rsp+34h] [rbp-74h]\n  unsigned int v230; // [rsp+34h] [rbp-74h]\n  int v231; // [rsp+38h] [rbp-70h]\n  int v232; // [rsp+38h] [rbp-70h]\n  unsigned int v233; // [rsp+38h] [rbp-70h]\n  int v234; // [rsp+38h] [rbp-70h]\n  unsigned int v235; // [rsp+38h] [rbp-70h]\n  int v236; // [rsp+38h] [rbp-70h]\n  unsigned int v237; // [rsp+38h] [rbp-70h]\n  int v238; // [rsp+38h] [rbp-70h]\n  unsigned int v239; // [rsp+38h] [rbp-70h]\n  int v240; // [rsp+38h] [rbp-70h]\n  unsigned int v241; // [rsp+38h] [rbp-70h]\n  int v242; // [rsp+38h] [rbp-70h]\n  unsigned int v243; // [rsp+38h] [rbp-70h]\n  int v244; // [rsp+38h] [rbp-70h]\n  unsigned int v245; // [rsp+38h] [rbp-70h]\n  int v246; // [rsp+38h] [rbp-70h]\n  unsigned int v247; // [rsp+38h] [rbp-70h]\n  int v248; // [rsp+3Ch] [rbp-6Ch]\n  int v249; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v250; // [rsp+3Ch] [rbp-6Ch]\n  int v251; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v252; // [rsp+3Ch] [rbp-6Ch]\n  int v253; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v254; // [rsp+3Ch] [rbp-6Ch]\n  int v255; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v256; // [rsp+3Ch] [rbp-6Ch]\n  int v257; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v258; // [rsp+3Ch] [rbp-6Ch]\n  int v259; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v260; // [rsp+3Ch] [rbp-6Ch]\n  int v261; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v262; // [rsp+3Ch] [rbp-6Ch]\n  int v263; // [rsp+3Ch] [rbp-6Ch]\n  unsigned int v264; // [rsp+3Ch] [rbp-6Ch]\n  int i; // [rsp+40h] [rbp-68h]\n  unsigned int v266; // [rsp+48h] [rbp-60h]\n  _DWORD *v267; // [rsp+50h] [rbp-58h]\n  unsigned int v268; // [rsp+68h] [rbp-40h]\n  unsigned int v269; // [rsp+6Ch] [rbp-3Ch]\n  unsigned int v270; // [rsp+70h] [rbp-38h]\n  unsigned int v271; // [rsp+74h] [rbp-34h]\n  unsigned int v272; // [rsp+78h] [rbp-30h]\n  unsigned int v273; // [rsp+7Ch] [rbp-2Ch]\n  unsigned int v274; // [rsp+80h] [rbp-28h]\n  unsigned int v275; // [rsp+84h] [rbp-24h]\n  unsigned int v276; // [rsp+88h] [rbp-20h]\n  unsigned int v277; // [rsp+8Ch] [rbp-1Ch]\n  unsigned int v278; // [rsp+90h] [rbp-18h]\n  unsigned int v279; // [rsp+94h] [rbp-14h]\n  unsigned int v280; // [rsp+98h] [rbp-10h]\n  unsigned int v281; // [rsp+9Ch] [rbp-Ch]\n  unsigned int v282; // [rsp+A0h] [rbp-8h]\n  unsigned int v283; // [rsp+A4h] [rbp-4h]\n\n  v267 = a1;\n  v131 = *a3;\n  v147 = a3[1];\n  v164 = a3[2];\n  v181 = a3[3];\n  v198 = a3[4];\n  v214 = a3[5];\n  v231 = a3[6];\n  v248 = a3[7];\n  a3[8] += a2;\n  if ( (unsigned int)a3[8] < a2 )\n    ++a3[9];\n  while ( 1 )\n  {\n    result = v267;\n    if ( v267 >= &a1[a2 >> 2] )\n      break;\n    for ( i = 0; i <= 15; ++i )\n    {\n      *(&v268 + i) = HIBYTE(*v267) | (*v267 >> 8) & 0xFF00 | ((*v267 & 0xFF00) << 8) | (*v267 << 24);\n      ++v267;\n    }\n    v3 = __ROR4__(v198, 11) ^ __ROR4__(v198, 6);\n    v4 = __ROR4__(v198, 25);\n    v182 = (v4 ^ v3) + v248 + (v231 ^ v198 & (v214 ^ v231)) + 1116352408 + v268 + v181;\n    v249 = (__ROR4__(v131, 22) ^ __ROR4__(v131, 13) ^ __ROR4__(v131, 2))\n         + (v147 & v131 | v164 & (v131 | v147))\n         + (v4 ^ v3)\n         + v248\n         + (v231 ^ v198 & (v214 ^ v231))\n         + 1116352408\n         + v268;\n    v5 = __ROR4__(v182, 11) ^ __ROR4__(v182, 6);\n    v6 = __ROR4__(v182, 25);\n    v165 = (v6 ^ v5) + v231 + (v214 ^ v182 & (v198 ^ v214)) + 1899447441 + v269 + v164;\n    v232 = (__ROR4__(v249, 22) ^ __ROR4__(v249, 13) ^ __ROR4__(v249, 2))\n         + (v131 & v249 | v147 & (v249 | v131))\n         + (v6 ^ v5)\n         + v231\n         + (v214 ^ v182 & (v198 ^ v214))\n         + 1899447441\n         + v269;\n    v7 = __ROR4__(v165, 11) ^ __ROR4__(v165, 6);\n    v8 = __ROR4__(v165, 25);\n    v148 = (v8 ^ v7) + v214 + (v198 ^ v165 & (v182 ^ v198)) - 1245643825 + v270 + v147;\n    v215 = (__ROR4__(v232, 22) ^ __ROR4__(v232, 13) ^ __ROR4__(v232, 2))\n         + (v249 & v232 | v131 & (v232 | v249))\n         + (v8 ^ v7)\n         + v214\n         + (v198 ^ v165 & (v182 ^ v198))\n         - 1245643825\n         + v270;\n    v9 = __ROR4__(v148, 11) ^ __ROR4__(v148, 6);\n    v10 = __ROR4__(v148, 25);\n    v132 = (v10 ^ v9) + v198 + (v182 ^ v148 & (v165 ^ v182)) - 373957723 + v271 + v131;\n    v199 = (__ROR4__(v215, 22) ^ __ROR4__(v215, 13) ^ __ROR4__(v215, 2))\n         + (v232 & v215 | v249 & (v215 | v232))\n         + (v10 ^ v9)\n         + v198\n         + (v182 ^ v148 & (v165 ^ v182))\n         - 373957723\n         + v271;\n    v11 = __ROR4__(v132, 11) ^ __ROR4__(v132, 6);\n    v12 = __ROR4__(v132, 25);\n    v250 = (v12 ^ v11) + v182 + (v165 ^ v132 & (v148 ^ v165)) + 961987163 + v272 + v249;\n    v183 = (__ROR4__(v199, 22) ^ __ROR4__(v199, 13) ^ __ROR4__(v199, 2))\n         + (v215 & v199 | v232 & (v199 | v215))\n         + (v12 ^ v11)\n         + v182\n         + (v165 ^ v132 & (v148 ^ v165))\n         + 961987163\n         + v272;\n    v13 = __ROR4__(v250, 11) ^ __ROR4__(v250, 6);\n    v14 = __ROR4__(v250, 25);\n    v233 = (v14 ^ v13) + v165 + (v148 ^ v250 & (v132 ^ v148)) + 1508970993 + v273 + v232;\n    v166 = (__ROR4__(v183, 22) ^ __ROR4__(v183, 13) ^ __ROR4__(v183, 2))\n         + (v199 & v183 | v215 & (v183 | v199))\n         + (v14 ^ v13)\n         + v165\n         + (v148 ^ v250 & (v132 ^ v148))\n         + 1508970993\n         + v273;\n    v15 = __ROR4__(v233, 11) ^ __ROR4__(v233, 6);\n    v16 = __ROR4__(v233, 25);\n    v216 = (v16 ^ v15) + v148 + (v132 ^ v233 & (v250 ^ v132)) - 1841331548 + v274 + v215;\n    v149 = (__ROR4__(v166, 22) ^ __ROR4__(v166, 13) ^ __ROR4__(v166, 2))\n         + (v183 & v166 | v199 & (v166 | v183))\n         + (v16 ^ v15)\n         + v148\n         + (v132 ^ v233 & (v250 ^ v132))\n         - 1841331548\n         + v274;\n    v17 = __ROR4__(v216, 11) ^ __ROR4__(v216, 6);\n    v18 = __ROR4__(v216, 25);\n    v200 = (v18 ^ v17) + v132 + (v250 ^ v216 & (v233 ^ v250)) - 1424204075 + v275 + v199;\n    v133 = (__ROR4__(v149, 22) ^ __ROR4__(v149, 13) ^ __ROR4__(v149, 2))\n         + (v166 & v149 | v183 & (v149 | v166))\n         + (v18 ^ v17)\n         + v132\n         + (v250 ^ v216 & (v233 ^ v250))\n         - 1424204075\n         + v275;\n    v19 = __ROR4__(v200, 11) ^ __ROR4__(v200, 6);\n    v20 = __ROR4__(v200, 25);\n    v184 = (v20 ^ v19) + v250 + (v233 ^ v200 & (v216 ^ v233)) - 670586216 + v276 + v183;\n    v251 = (__ROR4__(v133, 22) ^ __ROR4__(v133, 13) ^ __ROR4__(v133, 2))\n         + (v149 & v133 | v166 & (v133 | v149))\n         + (v20 ^ v19)\n         + v250\n         + (v233 ^ v200 & (v216 ^ v233))\n         - 670586216\n         + v276;\n    v21 = __ROR4__(v184, 11) ^ __ROR4__(v184, 6);\n    v22 = __ROR4__(v184, 25);\n    v167 = (v22 ^ v21) + v233 + (v216 ^ v184 & (v200 ^ v216)) + 310598401 + v277 + v166;\n    v234 = (__ROR4__(v251, 22) ^ __ROR4__(v251, 13) ^ __ROR4__(v251, 2))\n         + (v133 & v251 | v149 & (v251 | v133))\n         + (v22 ^ v21)\n         + v233\n         + (v216 ^ v184 & (v200 ^ v216))\n         + 310598401\n         + v277;\n    v23 = __ROR4__(v167, 11) ^ __ROR4__(v167, 6);\n    v24 = __ROR4__(v167, 25);\n    v150 = (v24 ^ v23) + v216 + (v200 ^ v167 & (v184 ^ v200)) + 607225278 + v278 + v149;\n    v217 = (__ROR4__(v234, 22) ^ __ROR4__(v234, 13) ^ __ROR4__(v234, 2))\n         + (v251 & v234 | v133 & (v234 | v251))\n         + (v24 ^ v23)\n         + v216\n         + (v200 ^ v167 & (v184 ^ v200))\n         + 607225278\n         + v278;\n    v25 = __ROR4__(v150, 11) ^ __ROR4__(v150, 6);\n    v26 = __ROR4__(v150, 25);\n    v134 = (v26 ^ v25) + v200 + (v184 ^ v150 & (v167 ^ v184)) + 1426881987 + v279 + v133;\n    v201 = (__ROR4__(v217, 22) ^ __ROR4__(v217, 13) ^ __ROR4__(v217, 2))\n         + (v234 & v217 | v251 & (v217 | v234))\n         + (v26 ^ v25)\n         + v200\n         + (v184 ^ v150 & (v167 ^ v184))\n         + 1426881987\n         + v279;\n    v27 = __ROR4__(v134, 11) ^ __ROR4__(v134, 6);\n    v28 = __ROR4__(v134, 25);\n    v252 = (v28 ^ v27) + v184 + (v167 ^ v134 & (v150 ^ v167)) + 1925078388 + v280 + v251;\n    v185 = (__ROR4__(v201, 22) ^ __ROR4__(v201, 13) ^ __ROR4__(v201, 2))\n         + (v217 & v201 | v234 & (v201 | v217))\n         + (v28 ^ v27)\n         + v184\n         + (v167 ^ v134 & (v150 ^ v167))\n         + 1925078388\n         + v280;\n    v29 = __ROR4__(v252, 11) ^ __ROR4__(v252, 6);\n    v30 = __ROR4__(v252, 25);\n    v235 = (v30 ^ v29) + v167 + (v150 ^ v252 & (v134 ^ v150)) - 2132889090 + v281 + v234;\n    v168 = (__ROR4__(v185, 22) ^ __ROR4__(v185, 13) ^ __ROR4__(v185, 2))\n         + (v201 & v185 | v217 & (v185 | v201))\n         + (v30 ^ v29)\n         + v167\n         + (v150 ^ v252 & (v134 ^ v150))\n         - 2132889090\n         + v281;\n    v31 = __ROR4__(v235, 11) ^ __ROR4__(v235, 6);\n    v32 = __ROR4__(v235, 25);\n    v218 = (v32 ^ v31) + v150 + (v134 ^ v235 & (v252 ^ v134)) - 1680079193 + v282 + v217;\n    v151 = (__ROR4__(v168, 22) ^ __ROR4__(v168, 13) ^ __ROR4__(v168, 2))\n         + (v185 & v168 | v201 & (v168 | v185))\n         + (v32 ^ v31)\n         + v150\n         + (v134 ^ v235 & (v252 ^ v134))\n         - 1680079193\n         + v282;\n    v33 = __ROR4__(v218, 11) ^ __ROR4__(v218, 6);\n    v34 = __ROR4__(v218, 25);\n    v202 = (v34 ^ v33) + v134 + (v252 ^ v218 & (v235 ^ v252)) - 1046744716 + v283 + v201;\n    v135 = (__ROR4__(v151, 22) ^ __ROR4__(v151, 13) ^ __ROR4__(v151, 2))\n         + (v168 & v151 | v185 & (v151 | v168))\n         + (v34 ^ v33)\n         + v134\n         + (v252 ^ v218 & (v235 ^ v252))\n         - 1046744716\n         + v283;\n    v35 = __ROR4__(v202, 11) ^ __ROR4__(v202, 6);\n    v36 = __ROR4__(v202, 25);\n    v268 += (__ROR4__(v269, 18) ^ __ROR4__(v269, 7) ^ (v269 >> 3))\n          + v277\n          + ((v282 >> 10) ^ __ROR4__(v282, 19) ^ __ROR4__(v282, 17));\n    v186 = (v36 ^ v35) + v252 + (v235 ^ v202 & (v218 ^ v235)) - 459576895 + v268 + v185;\n    v253 = (__ROR4__(v135, 22) ^ __ROR4__(v135, 13) ^ __ROR4__(v135, 2))\n         + (v151 & v135 | v168 & (v135 | v151))\n         + (v36 ^ v35)\n         + v252\n         + (v235 ^ v202 & (v218 ^ v235))\n         - 459576895\n         + v268;\n    v37 = __ROR4__(v186, 11) ^ __ROR4__(v186, 6);\n    v38 = __ROR4__(v186, 25);\n    v269 += (__ROR4__(v270, 18) ^ __ROR4__(v270, 7) ^ (v270 >> 3))\n          + v278\n          + ((v283 >> 10) ^ __ROR4__(v283, 19) ^ __ROR4__(v283, 17));\n    v169 = (v38 ^ v37) + v235 + (v218 ^ v186 & (v202 ^ v218)) - 272742522 + v269 + v168;\n    v236 = (__ROR4__(v253, 22) ^ __ROR4__(v253, 13) ^ __ROR4__(v253, 2))\n         + (v135 & v253 | v151 & (v253 | v135))\n         + (v38 ^ v37)\n         + v235\n         + (v218 ^ v186 & (v202 ^ v218))\n         - 272742522\n         + v269;\n    v39 = __ROR4__(v169, 11) ^ __ROR4__(v169, 6);\n    v40 = __ROR4__(v169, 25);\n    v270 += (__ROR4__(v271, 18) ^ __ROR4__(v271, 7) ^ (v271 >> 3))\n          + v279\n          + ((v268 >> 10) ^ __ROR4__(v268, 19) ^ __ROR4__(v268, 17));\n    v152 = (v40 ^ v39) + v218 + (v202 ^ v169 & (v186 ^ v202)) + 264347078 + v270 + v151;\n    v219 = (__ROR4__(v236, 22) ^ __ROR4__(v236, 13) ^ __ROR4__(v236, 2))\n         + (v253 & v236 | v135 & (v236 | v253))\n         + (v40 ^ v39)\n         + v218\n         + (v202 ^ v169 & (v186 ^ v202))\n         + 264347078\n         + v270;\n    v41 = __ROR4__(v152, 11) ^ __ROR4__(v152, 6);\n    v42 = __ROR4__(v152, 25);\n    v271 += (__ROR4__(v272, 18) ^ __ROR4__(v272, 7) ^ (v272 >> 3))\n          + v280\n          + ((v269 >> 10) ^ __ROR4__(v269, 19) ^ __ROR4__(v269, 17));\n    v136 = (v42 ^ v41) + v202 + (v186 ^ v152 & (v169 ^ v186)) + 604807628 + v271 + v135;\n    v203 = (__ROR4__(v219, 22) ^ __ROR4__(v219, 13) ^ __ROR4__(v219, 2))\n         + (v236 & v219 | v253 & (v219 | v236))\n         + (v42 ^ v41)\n         + v202\n         + (v186 ^ v152 & (v169 ^ v186))\n         + 604807628\n         + v271;\n    v43 = __ROR4__(v136, 11) ^ __ROR4__(v136, 6);\n    v44 = __ROR4__(v136, 25);\n    v272 += (__ROR4__(v273, 18) ^ __ROR4__(v273, 7) ^ (v273 >> 3))\n          + v281\n          + ((v270 >> 10) ^ __ROR4__(v270, 19) ^ __ROR4__(v270, 17));\n    v254 = (v44 ^ v43) + v186 + (v169 ^ v136 & (v152 ^ v169)) + 770255983 + v272 + v253;\n    v187 = (__ROR4__(v203, 22) ^ __ROR4__(v203, 13) ^ __ROR4__(v203, 2))\n         + (v219 & v203 | v236 & (v203 | v219))\n         + (v44 ^ v43)\n         + v186\n         + (v169 ^ v136 & (v152 ^ v169))\n         + 770255983\n         + v272;\n    v45 = __ROR4__(v254, 11) ^ __ROR4__(v254, 6);\n    v46 = __ROR4__(v254, 25);\n    v273 += (__ROR4__(v274, 18) ^ __ROR4__(v274, 7) ^ (v274 >> 3))\n          + v282\n          + ((v271 >> 10) ^ __ROR4__(v271, 19) ^ __ROR4__(v271, 17));\n    v237 = (v46 ^ v45) + v169 + (v152 ^ v254 & (v136 ^ v152)) + 1249150122 + v273 + v236;\n    v170 = (__ROR4__(v187, 22) ^ __ROR4__(v187, 13) ^ __ROR4__(v187, 2))\n         + (v203 & v187 | v219 & (v187 | v203))\n         + (v46 ^ v45)\n         + v169\n         + (v152 ^ v254 & (v136 ^ v152))\n         + 1249150122\n         + v273;\n    v47 = __ROR4__(v237, 11) ^ __ROR4__(v237, 6);\n    v48 = __ROR4__(v237, 25);\n    v274 += (__ROR4__(v275, 18) ^ __ROR4__(v275, 7) ^ (v275 >> 3))\n          + v283\n          + ((v272 >> 10) ^ __ROR4__(v272, 19) ^ __ROR4__(v272, 17));\n    v220 = (v48 ^ v47) + v152 + (v136 ^ v237 & (v254 ^ v136)) + 1555081692 + v274 + v219;\n    v153 = (__ROR4__(v170, 22) ^ __ROR4__(v170, 13) ^ __ROR4__(v170, 2))\n         + (v187 & v170 | v203 & (v170 | v187))\n         + (v48 ^ v47)\n         + v152\n         + (v136 ^ v237 & (v254 ^ v136))\n         + 1555081692\n         + v274;\n    v49 = __ROR4__(v220, 11) ^ __ROR4__(v220, 6);\n    v50 = __ROR4__(v220, 25);\n    v275 += (__ROR4__(v276, 18) ^ __ROR4__(v276, 7) ^ (v276 >> 3))\n          + v268\n          + ((v273 >> 10) ^ __ROR4__(v273, 19) ^ __ROR4__(v273, 17));\n    v204 = (v50 ^ v49) + v136 + (v254 ^ v220 & (v237 ^ v254)) + 1996064986 + v275 + v203;\n    v137 = (__ROR4__(v153, 22) ^ __ROR4__(v153, 13) ^ __ROR4__(v153, 2))\n         + (v170 & v153 | v187 & (v153 | v170))\n         + (v50 ^ v49)\n         + v136\n         + (v254 ^ v220 & (v237 ^ v254))\n         + 1996064986\n         + v275;\n    v51 = __ROR4__(v204, 11) ^ __ROR4__(v204, 6);\n    v52 = __ROR4__(v204, 25);\n    v276 += (__ROR4__(v277, 18) ^ __ROR4__(v277, 7) ^ (v277 >> 3))\n          + v269\n          + ((v274 >> 10) ^ __ROR4__(v274, 19) ^ __ROR4__(v274, 17));\n    v188 = (v52 ^ v51) + v254 + (v237 ^ v204 & (v220 ^ v237)) - 1740746414 + v276 + v187;\n    v255 = (__ROR4__(v137, 22) ^ __ROR4__(v137, 13) ^ __ROR4__(v137, 2))\n         + (v153 & v137 | v170 & (v137 | v153))\n         + (v52 ^ v51)\n         + v254\n         + (v237 ^ v204 & (v220 ^ v237))\n         - 1740746414\n         + v276;\n    v53 = __ROR4__(v188, 11) ^ __ROR4__(v188, 6);\n    v54 = __ROR4__(v188, 25);\n    v277 += (__ROR4__(v278, 18) ^ __ROR4__(v278, 7) ^ (v278 >> 3))\n          + v270\n          + ((v275 >> 10) ^ __ROR4__(v275, 19) ^ __ROR4__(v275, 17));\n    v171 = (v54 ^ v53) + v237 + (v220 ^ v188 & (v204 ^ v220)) - 1473132947 + v277 + v170;\n    v238 = (__ROR4__(v255, 22) ^ __ROR4__(v255, 13) ^ __ROR4__(v255, 2))\n         + (v137 & v255 | v153 & (v255 | v137))\n         + (v54 ^ v53)\n         + v237\n         + (v220 ^ v188 & (v204 ^ v220))\n         - 1473132947\n         + v277;\n    v55 = __ROR4__(v171, 11) ^ __ROR4__(v171, 6);\n    v56 = __ROR4__(v171, 25);\n    v278 += (__ROR4__(v279, 18) ^ __ROR4__(v279, 7) ^ (v279 >> 3))\n          + v271\n          + ((v276 >> 10) ^ __ROR4__(v276, 19) ^ __ROR4__(v276, 17));\n    v154 = (v56 ^ v55) + v220 + (v204 ^ v171 & (v188 ^ v204)) - 1341970488 + v278 + v153;\n    v221 = (__ROR4__(v238, 22) ^ __ROR4__(v238, 13) ^ __ROR4__(v238, 2))\n         + (v255 & v238 | v137 & (v238 | v255))\n         + (v56 ^ v55)\n         + v220\n         + (v204 ^ v171 & (v188 ^ v204))\n         - 1341970488\n         + v278;\n    v57 = __ROR4__(v154, 11) ^ __ROR4__(v154, 6);\n    v58 = __ROR4__(v154, 25);\n    v279 += (__ROR4__(v280, 18) ^ __ROR4__(v280, 7) ^ (v280 >> 3))\n          + v272\n          + ((v277 >> 10) ^ __ROR4__(v277, 19) ^ __ROR4__(v277, 17));\n    v138 = (v58 ^ v57) + v204 + (v188 ^ v154 & (v171 ^ v188)) - 1084653625 + v279 + v137;\n    v205 = (__ROR4__(v221, 22) ^ __ROR4__(v221, 13) ^ __ROR4__(v221, 2))\n         + (v238 & v221 | v255 & (v221 | v238))\n         + (v58 ^ v57)\n         + v204\n         + (v188 ^ v154 & (v171 ^ v188))\n         - 1084653625\n         + v279;\n    v59 = __ROR4__(v138, 11) ^ __ROR4__(v138, 6);\n    v60 = __ROR4__(v138, 25);\n    v280 += (__ROR4__(v281, 18) ^ __ROR4__(v281, 7) ^ (v281 >> 3))\n          + v273\n          + ((v278 >> 10) ^ __ROR4__(v278, 19) ^ __ROR4__(v278, 17));\n    v256 = (v60 ^ v59) + v188 + (v171 ^ v138 & (v154 ^ v171)) - 958395405 + v280 + v255;\n    v189 = (__ROR4__(v205, 22) ^ __ROR4__(v205, 13) ^ __ROR4__(v205, 2))\n         + (v221 & v205 | v238 & (v205 | v221))\n         + (v60 ^ v59)\n         + v188\n         + (v171 ^ v138 & (v154 ^ v171))\n         - 958395405\n         + v280;\n    v61 = __ROR4__(v256, 11) ^ __ROR4__(v256, 6);\n    v62 = __ROR4__(v256, 25);\n    v281 += (__ROR4__(v282, 18) ^ __ROR4__(v282, 7) ^ (v282 >> 3))\n          + v274\n          + ((v279 >> 10) ^ __ROR4__(v279, 19) ^ __ROR4__(v279, 17));\n    v239 = (v62 ^ v61) + v171 + (v154 ^ v256 & (v138 ^ v154)) - 710438585 + v281 + v238;\n    v172 = (__ROR4__(v189, 22) ^ __ROR4__(v189, 13) ^ __ROR4__(v189, 2))\n         + (v205 & v189 | v221 & (v189 | v205))\n         + (v62 ^ v61)\n         + v171\n         + (v154 ^ v256 & (v138 ^ v154))\n         - 710438585\n         + v281;\n    v63 = __ROR4__(v239, 11) ^ __ROR4__(v239, 6);\n    v64 = __ROR4__(v239, 25);\n    v282 += (__ROR4__(v283, 18) ^ __ROR4__(v283, 7) ^ (v283 >> 3))\n          + v275\n          + ((v280 >> 10) ^ __ROR4__(v280, 19) ^ __ROR4__(v280, 17));\n    v222 = (v64 ^ v63) + v154 + (v138 ^ v239 & (v256 ^ v138)) + 113926993 + v282 + v221;\n    v155 = (__ROR4__(v172, 22) ^ __ROR4__(v172, 13) ^ __ROR4__(v172, 2))\n         + (v189 & v172 | v205 & (v172 | v189))\n         + (v64 ^ v63)\n         + v154\n         + (v138 ^ v239 & (v256 ^ v138))\n         + 113926993\n         + v282;\n    v65 = __ROR4__(v222, 11) ^ __ROR4__(v222, 6);\n    v66 = __ROR4__(v222, 25);\n    v283 += (__ROR4__(v268, 18) ^ __ROR4__(v268, 7) ^ (v268 >> 3))\n          + v276\n          + ((v281 >> 10) ^ __ROR4__(v281, 19) ^ __ROR4__(v281, 17));\n    v206 = (v66 ^ v65) + v138 + (v256 ^ v222 & (v239 ^ v256)) + 338241895 + v283 + v205;\n    v139 = (__ROR4__(v155, 22) ^ __ROR4__(v155, 13) ^ __ROR4__(v155, 2))\n         + (v172 & v155 | v189 & (v155 | v172))\n         + (v66 ^ v65)\n         + v138\n         + (v256 ^ v222 & (v239 ^ v256))\n         + 338241895\n         + v283;\n    v67 = __ROR4__(v206, 11) ^ __ROR4__(v206, 6);\n    v68 = __ROR4__(v206, 25);\n    v268 += (__ROR4__(v269, 18) ^ __ROR4__(v269, 7) ^ (v269 >> 3))\n          + v277\n          + ((v282 >> 10) ^ __ROR4__(v282, 19) ^ __ROR4__(v282, 17));\n    v190 = (v68 ^ v67) + v256 + (v239 ^ v206 & (v222 ^ v239)) + 666307205 + v268 + v189;\n    v257 = (__ROR4__(v139, 22) ^ __ROR4__(v139, 13) ^ __ROR4__(v139, 2))\n         + (v155 & v139 | v172 & (v139 | v155))\n         + (v68 ^ v67)\n         + v256\n         + (v239 ^ v206 & (v222 ^ v239))\n         + 666307205\n         + v268;\n    v69 = __ROR4__(v190, 11) ^ __ROR4__(v190, 6);\n    v70 = __ROR4__(v190, 25);\n    v269 += (__ROR4__(v270, 18) ^ __ROR4__(v270, 7) ^ (v270 >> 3))\n          + v278\n          + ((v283 >> 10) ^ __ROR4__(v283, 19) ^ __ROR4__(v283, 17));\n    v173 = (v70 ^ v69) + v239 + (v222 ^ v190 & (v206 ^ v222)) + 773529912 + v269 + v172;\n    v240 = (__ROR4__(v257, 22) ^ __ROR4__(v257, 13) ^ __ROR4__(v257, 2))\n         + (v139 & v257 | v155 & (v257 | v139))\n         + (v70 ^ v69)\n         + v239\n         + (v222 ^ v190 & (v206 ^ v222))\n         + 773529912\n         + v269;\n    v71 = __ROR4__(v173, 11) ^ __ROR4__(v173, 6);\n    v72 = __ROR4__(v173, 25);\n    v270 += (__ROR4__(v271, 18) ^ __ROR4__(v271, 7) ^ (v271 >> 3))\n          + v279\n          + ((v268 >> 10) ^ __ROR4__(v268, 19) ^ __ROR4__(v268, 17));\n    v156 = (v72 ^ v71) + v222 + (v206 ^ v173 & (v190 ^ v206)) + 1294757372 + v270 + v155;\n    v223 = (__ROR4__(v240, 22) ^ __ROR4__(v240, 13) ^ __ROR4__(v240, 2))\n         + (v257 & v240 | v139 & (v240 | v257))\n         + (v72 ^ v71)\n         + v222\n         + (v206 ^ v173 & (v190 ^ v206))\n         + 1294757372\n         + v270;\n    v73 = __ROR4__(v156, 11) ^ __ROR4__(v156, 6);\n    v74 = __ROR4__(v156, 25);\n    v271 += (__ROR4__(v272, 18) ^ __ROR4__(v272, 7) ^ (v272 >> 3))\n          + v280\n          + ((v269 >> 10) ^ __ROR4__(v269, 19) ^ __ROR4__(v269, 17));\n    v140 = (v74 ^ v73) + v206 + (v190 ^ v156 & (v173 ^ v190)) + 1396182291 + v271 + v139;\n    v207 = (__ROR4__(v223, 22) ^ __ROR4__(v223, 13) ^ __ROR4__(v223, 2))\n         + (v240 & v223 | v257 & (v223 | v240))\n         + (v74 ^ v73)\n         + v206\n         + (v190 ^ v156 & (v173 ^ v190))\n         + 1396182291\n         + v271;\n    v75 = __ROR4__(v140, 11) ^ __ROR4__(v140, 6);\n    v76 = __ROR4__(v140, 25);\n    v272 += (__ROR4__(v273, 18) ^ __ROR4__(v273, 7) ^ (v273 >> 3))\n          + v281\n          + ((v270 >> 10) ^ __ROR4__(v270, 19) ^ __ROR4__(v270, 17));\n    v258 = (v76 ^ v75) + v190 + (v173 ^ v140 & (v156 ^ v173)) + 1695183700 + v272 + v257;\n    v191 = (__ROR4__(v207, 22) ^ __ROR4__(v207, 13) ^ __ROR4__(v207, 2))\n         + (v223 & v207 | v240 & (v207 | v223))\n         + (v76 ^ v75)\n         + v190\n         + (v173 ^ v140 & (v156 ^ v173))\n         + 1695183700\n         + v272;\n    v77 = __ROR4__(v258, 11) ^ __ROR4__(v258, 6);\n    v78 = __ROR4__(v258, 25);\n    v273 += (__ROR4__(v274, 18) ^ __ROR4__(v274, 7) ^ (v274 >> 3))\n          + v282\n          + ((v271 >> 10) ^ __ROR4__(v271, 19) ^ __ROR4__(v271, 17));\n    v241 = (v78 ^ v77) + v173 + (v156 ^ v258 & (v140 ^ v156)) + 1986661051 + v273 + v240;\n    v174 = (__ROR4__(v191, 22) ^ __ROR4__(v191, 13) ^ __ROR4__(v191, 2))\n         + (v207 & v191 | v223 & (v191 | v207))\n         + (v78 ^ v77)\n         + v173\n         + (v156 ^ v258 & (v140 ^ v156))\n         + 1986661051\n         + v273;\n    v79 = __ROR4__(v241, 11) ^ __ROR4__(v241, 6);\n    v80 = __ROR4__(v241, 25);\n    v274 += (__ROR4__(v275, 18) ^ __ROR4__(v275, 7) ^ (v275 >> 3))\n          + v283\n          + ((v272 >> 10) ^ __ROR4__(v272, 19) ^ __ROR4__(v272, 17));\n    v224 = (v80 ^ v79) + v156 + (v140 ^ v241 & (v258 ^ v140)) - 2117940946 + v274 + v223;\n    v157 = (__ROR4__(v174, 22) ^ __ROR4__(v174, 13) ^ __ROR4__(v174, 2))\n         + (v191 & v174 | v207 & (v174 | v191))\n         + (v80 ^ v79)\n         + v156\n         + (v140 ^ v241 & (v258 ^ v140))\n         - 2117940946\n         + v274;\n    v81 = __ROR4__(v224, 11) ^ __ROR4__(v224, 6);\n    v82 = __ROR4__(v224, 25);\n    v275 += (__ROR4__(v276, 18) ^ __ROR4__(v276, 7) ^ (v276 >> 3))\n          + v268\n          + ((v273 >> 10) ^ __ROR4__(v273, 19) ^ __ROR4__(v273, 17));\n    v208 = (v82 ^ v81) + v140 + (v258 ^ v224 & (v241 ^ v258)) - 1838011259 + v275 + v207;\n    v141 = (__ROR4__(v157, 22) ^ __ROR4__(v157, 13) ^ __ROR4__(v157, 2))\n         + (v174 & v157 | v191 & (v157 | v174))\n         + (v82 ^ v81)\n         + v140\n         + (v258 ^ v224 & (v241 ^ v258))\n         - 1838011259\n         + v275;\n    v83 = __ROR4__(v208, 11) ^ __ROR4__(v208, 6);\n    v84 = __ROR4__(v208, 25);\n    v276 += (__ROR4__(v277, 18) ^ __ROR4__(v277, 7) ^ (v277 >> 3))\n          + v269\n          + ((v274 >> 10) ^ __ROR4__(v274, 19) ^ __ROR4__(v274, 17));\n    v192 = (v84 ^ v83) + v258 + (v241 ^ v208 & (v224 ^ v241)) - 1564481375 + v276 + v191;\n    v259 = (__ROR4__(v141, 22) ^ __ROR4__(v141, 13) ^ __ROR4__(v141, 2))\n         + (v157 & v141 | v174 & (v141 | v157))\n         + (v84 ^ v83)\n         + v258\n         + (v241 ^ v208 & (v224 ^ v241))\n         - 1564481375\n         + v276;\n    v85 = __ROR4__(v192, 11) ^ __ROR4__(v192, 6);\n    v86 = __ROR4__(v192, 25);\n    v277 += (__ROR4__(v278, 18) ^ __ROR4__(v278, 7) ^ (v278 >> 3))\n          + v270\n          + ((v275 >> 10) ^ __ROR4__(v275, 19) ^ __ROR4__(v275, 17));\n    v175 = (v86 ^ v85) + v241 + (v224 ^ v192 & (v208 ^ v224)) - 1474664885 + v277 + v174;\n    v242 = (__ROR4__(v259, 22) ^ __ROR4__(v259, 13) ^ __ROR4__(v259, 2))\n         + (v141 & v259 | v157 & (v259 | v141))\n         + (v86 ^ v85)\n         + v241\n         + (v224 ^ v192 & (v208 ^ v224))\n         - 1474664885\n         + v277;\n    v87 = __ROR4__(v175, 11) ^ __ROR4__(v175, 6);\n    v88 = __ROR4__(v175, 25);\n    v278 += (__ROR4__(v279, 18) ^ __ROR4__(v279, 7) ^ (v279 >> 3))\n          + v271\n          + ((v276 >> 10) ^ __ROR4__(v276, 19) ^ __ROR4__(v276, 17));\n    v158 = (v88 ^ v87) + v224 + (v208 ^ v175 & (v192 ^ v208)) - 1035236496 + v278 + v157;\n    v225 = (__ROR4__(v242, 22) ^ __ROR4__(v242, 13) ^ __ROR4__(v242, 2))\n         + (v259 & v242 | v141 & (v242 | v259))\n         + (v88 ^ v87)\n         + v224\n         + (v208 ^ v175 & (v192 ^ v208))\n         - 1035236496\n         + v278;\n    v89 = __ROR4__(v158, 11) ^ __ROR4__(v158, 6);\n    v90 = __ROR4__(v158, 25);\n    v279 += (__ROR4__(v280, 18) ^ __ROR4__(v280, 7) ^ (v280 >> 3))\n          + v272\n          + ((v277 >> 10) ^ __ROR4__(v277, 19) ^ __ROR4__(v277, 17));\n    v142 = (v90 ^ v89) + v208 + (v192 ^ v158 & (v175 ^ v192)) - 949202525 + v279 + v141;\n    v209 = (__ROR4__(v225, 22) ^ __ROR4__(v225, 13) ^ __ROR4__(v225, 2))\n         + (v242 & v225 | v259 & (v225 | v242))\n         + (v90 ^ v89)\n         + v208\n         + (v192 ^ v158 & (v175 ^ v192))\n         - 949202525\n         + v279;\n    v91 = __ROR4__(v142, 11) ^ __ROR4__(v142, 6);\n    v92 = __ROR4__(v142, 25);\n    v280 += (__ROR4__(v281, 18) ^ __ROR4__(v281, 7) ^ (v281 >> 3))\n          + v273\n          + ((v278 >> 10) ^ __ROR4__(v278, 19) ^ __ROR4__(v278, 17));\n    v260 = (v92 ^ v91) + v192 + (v175 ^ v142 & (v158 ^ v175)) - 778901479 + v280 + v259;\n    v193 = (__ROR4__(v209, 22) ^ __ROR4__(v209, 13) ^ __ROR4__(v209, 2))\n         + (v225 & v209 | v242 & (v209 | v225))\n         + (v92 ^ v91)\n         + v192\n         + (v175 ^ v142 & (v158 ^ v175))\n         - 778901479\n         + v280;\n    v93 = __ROR4__(v260, 11) ^ __ROR4__(v260, 6);\n    v94 = __ROR4__(v260, 25);\n    v281 += (__ROR4__(v282, 18) ^ __ROR4__(v282, 7) ^ (v282 >> 3))\n          + v274\n          + ((v279 >> 10) ^ __ROR4__(v279, 19) ^ __ROR4__(v279, 17));\n    v243 = (v94 ^ v93) + v175 + (v158 ^ v260 & (v142 ^ v158)) - 694614492 + v281 + v242;\n    v176 = (__ROR4__(v193, 22) ^ __ROR4__(v193, 13) ^ __ROR4__(v193, 2))\n         + (v209 & v193 | v225 & (v193 | v209))\n         + (v94 ^ v93)\n         + v175\n         + (v158 ^ v260 & (v142 ^ v158))\n         - 694614492\n         + v281;\n    v95 = __ROR4__(v243, 11) ^ __ROR4__(v243, 6);\n    v96 = __ROR4__(v243, 25);\n    v282 += (__ROR4__(v283, 18) ^ __ROR4__(v283, 7) ^ (v283 >> 3))\n          + v275\n          + ((v280 >> 10) ^ __ROR4__(v280, 19) ^ __ROR4__(v280, 17));\n    v226 = (v96 ^ v95) + v158 + (v142 ^ v243 & (v260 ^ v142)) - 200395387 + v282 + v225;\n    v159 = (__ROR4__(v176, 22) ^ __ROR4__(v176, 13) ^ __ROR4__(v176, 2))\n         + (v193 & v176 | v209 & (v176 | v193))\n         + (v96 ^ v95)\n         + v158\n         + (v142 ^ v243 & (v260 ^ v142))\n         - 200395387\n         + v282;\n    v97 = __ROR4__(v226, 11) ^ __ROR4__(v226, 6);\n    v98 = __ROR4__(v226, 25);\n    v283 += (__ROR4__(v268, 18) ^ __ROR4__(v268, 7) ^ (v268 >> 3))\n          + v276\n          + ((v281 >> 10) ^ __ROR4__(v281, 19) ^ __ROR4__(v281, 17));\n    v210 = (v98 ^ v97) + v142 + (v260 ^ v226 & (v243 ^ v260)) + 275423344 + v283 + v209;\n    v143 = (__ROR4__(v159, 22) ^ __ROR4__(v159, 13) ^ __ROR4__(v159, 2))\n         + (v176 & v159 | v193 & (v159 | v176))\n         + (v98 ^ v97)\n         + v142\n         + (v260 ^ v226 & (v243 ^ v260))\n         + 275423344\n         + v283;\n    v99 = __ROR4__(v210, 11) ^ __ROR4__(v210, 6);\n    v100 = __ROR4__(v210, 25);\n    v268 += (__ROR4__(v269, 18) ^ __ROR4__(v269, 7) ^ (v269 >> 3))\n          + v277\n          + ((v282 >> 10) ^ __ROR4__(v282, 19) ^ __ROR4__(v282, 17));\n    v194 = (v100 ^ v99) + v260 + (v243 ^ v210 & (v226 ^ v243)) + 430227734 + v268 + v193;\n    v261 = (__ROR4__(v143, 22) ^ __ROR4__(v143, 13) ^ __ROR4__(v143, 2))\n         + (v159 & v143 | v176 & (v143 | v159))\n         + (v100 ^ v99)\n         + v260\n         + (v243 ^ v210 & (v226 ^ v243))\n         + 430227734\n         + v268;\n    v101 = __ROR4__(v194, 11) ^ __ROR4__(v194, 6);\n    v102 = __ROR4__(v194, 25);\n    v269 += (__ROR4__(v270, 18) ^ __ROR4__(v270, 7) ^ (v270 >> 3))\n          + v278\n          + ((v283 >> 10) ^ __ROR4__(v283, 19) ^ __ROR4__(v283, 17));\n    v177 = (v102 ^ v101) + v243 + (v226 ^ v194 & (v210 ^ v226)) + 506948616 + v269 + v176;\n    v244 = (__ROR4__(v261, 22) ^ __ROR4__(v261, 13) ^ __ROR4__(v261, 2))\n         + (v143 & v261 | v159 & (v261 | v143))\n         + (v102 ^ v101)\n         + v243\n         + (v226 ^ v194 & (v210 ^ v226))\n         + 506948616\n         + v269;\n    v103 = __ROR4__(v177, 11) ^ __ROR4__(v177, 6);\n    v104 = __ROR4__(v177, 25);\n    v270 += (__ROR4__(v271, 18) ^ __ROR4__(v271, 7) ^ (v271 >> 3))\n          + v279\n          + ((v268 >> 10) ^ __ROR4__(v268, 19) ^ __ROR4__(v268, 17));\n    v160 = (v104 ^ v103) + v226 + (v210 ^ v177 & (v194 ^ v210)) + 659060556 + v270 + v159;\n    v227 = (__ROR4__(v244, 22) ^ __ROR4__(v244, 13) ^ __ROR4__(v244, 2))\n         + (v261 & v244 | v143 & (v244 | v261))\n         + (v104 ^ v103)\n         + v226\n         + (v210 ^ v177 & (v194 ^ v210))\n         + 659060556\n         + v270;\n    v105 = __ROR4__(v160, 11) ^ __ROR4__(v160, 6);\n    v106 = __ROR4__(v160, 25);\n    v271 += (__ROR4__(v272, 18) ^ __ROR4__(v272, 7) ^ (v272 >> 3))\n          + v280\n          + ((v269 >> 10) ^ __ROR4__(v269, 19) ^ __ROR4__(v269, 17));\n    v144 = (v106 ^ v105) + v210 + (v194 ^ v160 & (v177 ^ v194)) + 883997877 + v271 + v143;\n    v211 = (__ROR4__(v227, 22) ^ __ROR4__(v227, 13) ^ __ROR4__(v227, 2))\n         + (v244 & v227 | v261 & (v227 | v244))\n         + (v106 ^ v105)\n         + v210\n         + (v194 ^ v160 & (v177 ^ v194))\n         + 883997877\n         + v271;\n    v107 = __ROR4__(v144, 11) ^ __ROR4__(v144, 6);\n    v108 = __ROR4__(v144, 25);\n    v272 += (__ROR4__(v273, 18) ^ __ROR4__(v273, 7) ^ (v273 >> 3))\n          + v281\n          + ((v270 >> 10) ^ __ROR4__(v270, 19) ^ __ROR4__(v270, 17));\n    v262 = (v108 ^ v107) + v194 + (v177 ^ v144 & (v160 ^ v177)) + 958139571 + v272 + v261;\n    v195 = (__ROR4__(v211, 22) ^ __ROR4__(v211, 13) ^ __ROR4__(v211, 2))\n         + (v227 & v211 | v244 & (v211 | v227))\n         + (v108 ^ v107)\n         + v194\n         + (v177 ^ v144 & (v160 ^ v177))\n         + 958139571\n         + v272;\n    v109 = __ROR4__(v262, 11) ^ __ROR4__(v262, 6);\n    v110 = __ROR4__(v262, 25);\n    v273 += (__ROR4__(v274, 18) ^ __ROR4__(v274, 7) ^ (v274 >> 3))\n          + v282\n          + ((v271 >> 10) ^ __ROR4__(v271, 19) ^ __ROR4__(v271, 17));\n    v245 = (v110 ^ v109) + v177 + (v160 ^ v262 & (v144 ^ v160)) + 1322822218 + v273 + v244;\n    v178 = (__ROR4__(v195, 22) ^ __ROR4__(v195, 13) ^ __ROR4__(v195, 2))\n         + (v211 & v195 | v227 & (v195 | v211))\n         + (v110 ^ v109)\n         + v177\n         + (v160 ^ v262 & (v144 ^ v160))\n         + 1322822218\n         + v273;\n    v111 = __ROR4__(v245, 11) ^ __ROR4__(v245, 6);\n    v112 = __ROR4__(v245, 25);\n    v274 += (__ROR4__(v275, 18) ^ __ROR4__(v275, 7) ^ (v275 >> 3))\n          + v283\n          + ((v272 >> 10) ^ __ROR4__(v272, 19) ^ __ROR4__(v272, 17));\n    v228 = (v112 ^ v111) + v160 + (v144 ^ v245 & (v262 ^ v144)) + 1537002063 + v274 + v227;\n    v161 = (__ROR4__(v178, 22) ^ __ROR4__(v178, 13) ^ __ROR4__(v178, 2))\n         + (v195 & v178 | v211 & (v178 | v195))\n         + (v112 ^ v111)\n         + v160\n         + (v144 ^ v245 & (v262 ^ v144))\n         + 1537002063\n         + v274;\n    v113 = __ROR4__(v228, 11) ^ __ROR4__(v228, 6);\n    v114 = __ROR4__(v228, 25);\n    v275 += (__ROR4__(v276, 18) ^ __ROR4__(v276, 7) ^ (v276 >> 3))\n          + v268\n          + ((v273 >> 10) ^ __ROR4__(v273, 19) ^ __ROR4__(v273, 17));\n    v212 = (v114 ^ v113) + v144 + (v262 ^ v228 & (v245 ^ v262)) + 1747873779 + v275 + v211;\n    v145 = (__ROR4__(v161, 22) ^ __ROR4__(v161, 13) ^ __ROR4__(v161, 2))\n         + (v178 & v161 | v195 & (v161 | v178))\n         + (v114 ^ v113)\n         + v144\n         + (v262 ^ v228 & (v245 ^ v262))\n         + 1747873779\n         + v275;\n    v115 = __ROR4__(v212, 11) ^ __ROR4__(v212, 6);\n    v116 = __ROR4__(v212, 25);\n    v276 += (__ROR4__(v277, 18) ^ __ROR4__(v277, 7) ^ (v277 >> 3))\n          + v269\n          + ((v274 >> 10) ^ __ROR4__(v274, 19) ^ __ROR4__(v274, 17));\n    v196 = (v116 ^ v115) + v262 + (v245 ^ v212 & (v228 ^ v245)) + 1955562222 + v276 + v195;\n    v263 = (__ROR4__(v145, 22) ^ __ROR4__(v145, 13) ^ __ROR4__(v145, 2))\n         + (v161 & v145 | v178 & (v145 | v161))\n         + (v116 ^ v115)\n         + v262\n         + (v245 ^ v212 & (v228 ^ v245))\n         + 1955562222\n         + v276;\n    v117 = __ROR4__(v196, 11) ^ __ROR4__(v196, 6);\n    v118 = __ROR4__(v196, 25);\n    v277 += (__ROR4__(v278, 18) ^ __ROR4__(v278, 7) ^ (v278 >> 3))\n          + v270\n          + ((v275 >> 10) ^ __ROR4__(v275, 19) ^ __ROR4__(v275, 17));\n    v179 = (v118 ^ v117) + v245 + (v228 ^ v196 & (v212 ^ v228)) + 2024104815 + v277 + v178;\n    v246 = (__ROR4__(v263, 22) ^ __ROR4__(v263, 13) ^ __ROR4__(v263, 2))\n         + (v145 & v263 | v161 & (v263 | v145))\n         + (v118 ^ v117)\n         + v245\n         + (v228 ^ v196 & (v212 ^ v228))\n         + 2024104815\n         + v277;\n    v119 = __ROR4__(v179, 11) ^ __ROR4__(v179, 6);\n    v120 = __ROR4__(v179, 25);\n    v278 += (__ROR4__(v279, 18) ^ __ROR4__(v279, 7) ^ (v279 >> 3))\n          + v271\n          + ((v276 >> 10) ^ __ROR4__(v276, 19) ^ __ROR4__(v276, 17));\n    v162 = (v120 ^ v119) + v228 + (v212 ^ v179 & (v196 ^ v212)) - 2067236844 + v278 + v161;\n    v229 = (__ROR4__(v246, 22) ^ __ROR4__(v246, 13) ^ __ROR4__(v246, 2))\n         + (v263 & v246 | v145 & (v246 | v263))\n         + (v120 ^ v119)\n         + v228\n         + (v212 ^ v179 & (v196 ^ v212))\n         - 2067236844\n         + v278;\n    v121 = __ROR4__(v162, 11) ^ __ROR4__(v162, 6);\n    v122 = __ROR4__(v162, 25);\n    v279 += (__ROR4__(v280, 18) ^ __ROR4__(v280, 7) ^ (v280 >> 3))\n          + v272\n          + ((v277 >> 10) ^ __ROR4__(v277, 19) ^ __ROR4__(v277, 17));\n    v146 = (v122 ^ v121) + v212 + (v196 ^ v162 & (v179 ^ v196)) - 1933114872 + v279 + v145;\n    v213 = (__ROR4__(v229, 22) ^ __ROR4__(v229, 13) ^ __ROR4__(v229, 2))\n         + (v246 & v229 | v263 & (v229 | v246))\n         + (v122 ^ v121)\n         + v212\n         + (v196 ^ v162 & (v179 ^ v196))\n         - 1933114872\n         + v279;\n    v123 = __ROR4__(v146, 11) ^ __ROR4__(v146, 6);\n    v124 = __ROR4__(v146, 25);\n    v280 += (__ROR4__(v281, 18) ^ __ROR4__(v281, 7) ^ (v281 >> 3))\n          + v273\n          + ((v278 >> 10) ^ __ROR4__(v278, 19) ^ __ROR4__(v278, 17));\n    v264 = (v124 ^ v123) + v196 + (v179 ^ v146 & (v162 ^ v179)) - 1866530822 + v280 + v263;\n    v197 = (__ROR4__(v213, 22) ^ __ROR4__(v213, 13) ^ __ROR4__(v213, 2))\n         + (v229 & v213 | v246 & (v213 | v229))\n         + (v124 ^ v123)\n         + v196\n         + (v179 ^ v146 & (v162 ^ v179))\n         - 1866530822\n         + v280;\n    v125 = __ROR4__(v264, 11) ^ __ROR4__(v264, 6);\n    v126 = __ROR4__(v264, 25);\n    v281 += (__ROR4__(v282, 18) ^ __ROR4__(v282, 7) ^ (v282 >> 3))\n          + v274\n          + ((v279 >> 10) ^ __ROR4__(v279, 19) ^ __ROR4__(v279, 17));\n    v247 = (v126 ^ v125) + v179 + (v162 ^ v264 & (v146 ^ v162)) - 1538233109 + v281 + v246;\n    v180 = (__ROR4__(v197, 22) ^ __ROR4__(v197, 13) ^ __ROR4__(v197, 2))\n         + (v213 & v197 | v229 & (v197 | v213))\n         + (v126 ^ v125)\n         + v179\n         + (v162 ^ v264 & (v146 ^ v162))\n         - 1538233109\n         + v281;\n    v127 = __ROR4__(v247, 11) ^ __ROR4__(v247, 6);\n    v128 = __ROR4__(v247, 25);\n    v282 += (__ROR4__(v283, 18) ^ __ROR4__(v283, 7) ^ (v283 >> 3))\n          + v275\n          + ((v280 >> 10) ^ __ROR4__(v280, 19) ^ __ROR4__(v280, 17));\n    v230 = (v128 ^ v127) + v162 + (v146 ^ v247 & (v264 ^ v146)) - 1090935817 + v282 + v229;\n    v163 = (__ROR4__(v180, 22) ^ __ROR4__(v180, 13) ^ __ROR4__(v180, 2))\n         + (v197 & v180 | v213 & (v180 | v197))\n         + (v128 ^ v127)\n         + v162\n         + (v146 ^ v247 & (v264 ^ v146))\n         - 1090935817\n         + v282;\n    v283 += (__ROR4__(v268, 18) ^ __ROR4__(v268, 7) ^ (v268 >> 3))\n          + v276\n          + ((v281 >> 10) ^ __ROR4__(v281, 19) ^ __ROR4__(v281, 17));\n    v266 = (__ROR4__(v230, 25) ^ __ROR4__(v230, 11) ^ __ROR4__(v230, 6))\n         + v146\n         + (v264 ^ v230 & (v247 ^ v264))\n         - 965641998\n         + v283;\n    *a3 += (__ROR4__(v163, 22) ^ __ROR4__(v163, 13) ^ __ROR4__(v163, 2)) + (v180 & v163 | v197 & (v163 | v180)) + v266;\n    v131 = *a3;\n    a3[1] += v163;\n    v147 = a3[1];\n    a3[2] += v180;\n    v164 = a3[2];\n    a3[3] += v197;\n    v181 = a3[3];\n    a3[4] += v266 + v213;\n    v198 = a3[4];\n    a3[5] += v230;\n    v214 = a3[5];\n    a3[6] += v247;\n    v231 = a3[6];\n    a3[7] += v264;\n    v248 = a3[7];\n  }\n  return result;\n}\n"], [4221949, "sub_406BFD", "_BYTE *__fastcall sub_406BFD(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4222054, "sub_406C66", "size_t __fastcall sub_406C66(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4222132, "sub_406CB4", "int __fastcall sub_406CB4(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4222180, "sub_406CE4", "void __fastcall sub_406CE4(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_406CB4(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4222238, "sub_406D1E", "FILE *__fastcall sub_406D1E(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_408664((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_4091DB(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !(unsigned int)sub_4091DB(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4222468, "sub_406E04", "char *__fastcall sub_406E04(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60C2B0 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4222699, "sub_406EEB", "__int64 __fastcall sub_406EEB(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60C2C0;\n  v4 = sub_409148(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4222772, "sub_406F34", "__int64 __fastcall sub_406F34(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60C2C0;\n  return *(unsigned int *)v1;\n}\n"], [4222802, "sub_406F52", "__int64 *__fastcall sub_406F52(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60C2C0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4222838, "sub_406F76", "__int64 __fastcall sub_406F76(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60C2C0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4222974, "sub_406FFE", "__int64 __fastcall sub_406FFE(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60C2C0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4223025, "sub_407031", "__int64 *__fastcall sub_407031(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60C2C0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4223115, "sub_40708B", "_QWORD *__fastcall sub_40708B(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4223235, "sub_407103", "char *__fastcall sub_407103(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4223296, "sub_407140", "unsigned __int64 __fastcall sub_407140(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_407103((const char *)L\"`'\", a5);\n        a9 = sub_407103((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_407140(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4226443, "sub_407D8B", "unsigned __int64 __fastcall sub_407D8B(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60C2C0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_407140(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4226603, "sub_407E2B", "__int64 __fastcall sub_407E2B(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_407E5D(a1, a2, 0LL, a3);\n}\n"], [4226653, "sub_407E5D", "__int64 __fastcall sub_407E5D(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60C2C0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_407140(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_40900A(v10);\n  sub_407140(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4226953, "sub_407F89", "void sub_407F89()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60C220;\n  for ( i = 1; i < dword_60C200; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60C300 )\n  {\n    free(ptr[1]);\n    qword_60C210 = 256LL;\n    off_60C218 = &unk_60C300;\n  }\n  if ( ptr != (void **)&qword_60C210 )\n  {\n    free(ptr);\n    off_60C220 = &qword_60C210;\n  }\n  dword_60C200 = 1;\n}\n"], [4227124, "sub_408034", "void *__fastcall sub_408034(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60C220;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60C200 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60C220 == &qword_60C210;\n    if ( off_60C220 == &qword_60C210 )\n      v4 = 0LL;\n    else\n      v4 = off_60C220;\n    v12 = (__int64 *)sub_409059(v4, 16 * v14);\n    off_60C220 = v12;\n    if ( v9 )\n    {\n      v5 = off_60C218;\n      *v12 = qword_60C210;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60C200], 0, 16 * (v14 - (unsigned int)dword_60C200));\n    dword_60C200 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_407140((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60C300 )\n      free(ptr);\n    ptr = (void *)sub_40900A(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_407140((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4227770, "sub_4082BA", "void *__fastcall sub_4082BA(int a1, __int64 a2)\n{\n  return sub_408034(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60C2C0);\n}\n"], [4227813, "sub_4082E5", "void *__fastcall sub_4082E5(int a1, __int64 a2, size_t a3)\n{\n  return sub_408034(a1, a2, a3, (__int64)&qword_60C2C0);\n}\n"], [4227857, "sub_408311", "void *__fastcall sub_408311(__int64 a1)\n{\n  return sub_4082BA(0, a1);\n}\n"], [4227888, "sub_408330", "void *__fastcall sub_408330(__int64 a1, size_t a2)\n{\n  return sub_4082E5(0, a1, a2);\n}\n"], [4227927, "sub_408357", "void *__fastcall sub_408357(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_40708B(v5, a2);\n  return sub_408034(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4227992, "sub_408398", "void *__fastcall sub_408398(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_40708B(v7, a2);\n  return sub_408034(a1, a3, a4, (__int64)v7);\n}\n"], [4228055, "sub_4083D7", "void *__fastcall sub_4083D7(int a1, __int64 a2)\n{\n  return sub_408357(0, a1, a2);\n}\n"], [4228091, "sub_4083FB", "void *__fastcall sub_4083FB(int a1, __int64 a2, size_t a3)\n{\n  return sub_408398(0, a1, a2, a3);\n}\n"], [4228135, "sub_408427", "void *__fastcall sub_408427(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60C2C0;\n  v4[1] = qword_60C2C8;\n  v4[2] = qword_60C2D0;\n  v4[3] = qword_60C2D8;\n  v4[4] = qword_60C2E0;\n  v4[5] = qword_60C2E8;\n  v4[6] = qword_60C2F0;\n  sub_406F76(v4, a3, 1);\n  return sub_408034(0, a1, a2, (__int64)v4);\n}\n"], [4228283, "sub_4084BB", "void *__fastcall sub_4084BB(__int64 a1, unsigned __int8 a2)\n{\n  return sub_408427(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4228325, "sub_4084E5", "void *__fastcall sub_4084E5(__int64 a1)\n{\n  return sub_4084BB(a1, 0x3Au);\n}\n"], [4228356, "sub_408504", "void *__fastcall sub_408504(__int64 a1, size_t a2)\n{\n  return sub_408427(a1, a2, 0x3Au);\n}\n"], [4228398, "sub_40852E", "__int64 __fastcall sub_40852E(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_408564(a1, a2, a3, a4, -1LL);\n}\n"], [4228452, "sub_408564", "void *__fastcall sub_408564(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60C2C0;\n  v8[1] = qword_60C2C8;\n  v8[2] = qword_60C2D0;\n  v8[3] = qword_60C2D8;\n  v8[4] = qword_60C2E0;\n  v8[5] = qword_60C2E8;\n  v8[6] = qword_60C2F0;\n  sub_407031(v8, a2, a3);\n  return sub_408034(a1, a4, a5, (__int64)v8);\n}\n"], [4228603, "sub_4085FB", "__int64 __fastcall sub_4085FB(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40852E(0, a1, a2, a3);\n}\n"], [4228650, "sub_40862A", "void *__fastcall sub_40862A(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_408564(0, a1, a2, a3, a4);\n}\n"], [4228708, "sub_408664", "__int64 __fastcall sub_408664(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_409290(a1, 0, 3, a4, a5, a6);\n}\n"], [4228746, "sub_40868A", "int __fastcall sub_40868A(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4230261, "sub_408C75", "int __fastcall sub_408C75(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_40868A(a1, a2, a3, a4, a5, i);\n}\n"], [4230371, "sub_408CE3", "int __fastcall sub_408CE3(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_40868A(a1, a2, a3, a4, v8, i);\n}\n"], [4230588, "sub_408DBC", "int sub_408DBC(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_408CE3(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4230770, "sub_408E72", "int sub_408E72()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4230875, "sub_408EDB", "__int64 __fastcall sub_408EDB(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4091A6(a1, a2, v2);\n  return sub_409024(a2 * a1, a2, v2);\n}\n"], [4230937, "sub_408F19", "__int64 __fastcall sub_408F19(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4091A6(a1, a2, v4);\n  return sub_409059(a1, a3 * a2);\n}\n"], [4231013, "sub_408F65", "__int64 __fastcall sub_408F65(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4091A6(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_409059(a1, a3 * v6);\n}\n"], [4231178, "sub_40900A", "__int64 __fastcall sub_40900A(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_409024(a1, a2, a3);\n}\n"], [4231204, "sub_409024", "void *__fastcall sub_409024(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4091A6(a1, a2, v2);\n  return v4;\n}\n"], [4231257, "sub_409059", "void *__fastcall sub_409059(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4091A6(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4231354, "sub_4090BA", "__int64 __fastcall sub_4090BA(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_408F65(a1, a2, 1uLL);\n}\n"], [4231396, "sub_4090E4", "void *__fastcall sub_4090E4(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_409024(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4231439, "sub_40910F", "void *__fastcall sub_40910F(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4091A6(a1, a2, v2);\n  return v4;\n}\n"], [4231496, "sub_409148", "void *__fastcall sub_409148(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_409024(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4231545, "sub_409179", "void *__fastcall sub_409179(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_409148(a1, v1 + 1);\n}\n"], [4231590, "sub_4091A6", "void __noreturn sub_4091A6()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4231643, "sub_4091DB", "int __fastcall sub_4091DB(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40957D(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4231824, "sub_409290", "__int64 __fastcall sub_409290(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_60C400 < 0 )\n  {\n    v18 = sub_409290(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_409290(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_60C400 = -1;\n    }\n    else\n    {\n      dword_60C400 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_60C400 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4232522, "sub_40954A", "__int64 __fastcall sub_40954A(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4095C8(a1, 0LL, 1LL);\n  return result;\n}\n"], [4232573, "sub_40957D", "int __fastcall sub_40957D(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40954A(a1);\n  return fflush(a1);\n}\n"], [4232648, "sub_4095C8", "int __fastcall sub_4095C8(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4232832, "sub_409680", "__int64 __fastcall sub_409680(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_4091DB(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4232976, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_60BE18 - off_60BE10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_60BE10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4233088, "fini", "void fini(void)\n{\n  ;\n}\n"], [4233104, "sub_409790", "int __fastcall sub_409790(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60C1E8 )\n    v1 = (void *)qword_60C1E8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4233132, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]