[[4199728, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199760, "sub_401550", "__int64 sub_401550()\n{\n  return qword_60C010();\n}\n"], [4199776, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199792, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199808, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199824, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199840, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199856, ".ftello", "// attributes: thunk\n__off_t ftello(FILE *stream)\n{\n  return ftello(stream);\n}\n"], [4199872, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199888, ".ferror", "// attributes: thunk\nint ferror(FILE *stream)\n{\n  return ferror(stream);\n}\n"], [4199904, ".fread", "// attributes: thunk\nsize_t fread(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread(ptr, size, n, stream);\n}\n"], [4199920, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4199936, ".getpid", "// attributes: thunk\n__pid_t getpid(void)\n{\n  return getpid();\n}\n"], [4199952, ".fread_unlocked", "// attributes: thunk\nsize_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread_unlocked(ptr, size, n, stream);\n}\n"], [4199968, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199984, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4200000, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4200016, ".stpcpy", "// attributes: thunk\nchar *stpcpy(char *dest, const char *src)\n{\n  return stpcpy(dest, src);\n}\n"], [4200032, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4200048, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4200064, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200080, ".getuid", "// attributes: thunk\n__uid_t getuid(void)\n{\n  return getuid();\n}\n"], [4200096, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200112, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200128, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200144, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4200160, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4200176, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4200192, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4200208, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4200224, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4200240, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4200256, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4200272, ".freopen", "// attributes: thunk\nFILE *freopen(const char *filename, const char *modes, FILE *stream)\n{\n  return freopen(filename, modes, stream);\n}\n"], [4200288, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4200304, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4200320, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4200336, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4200352, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200368, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200384, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200400, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200416, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200432, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4200448, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200464, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200480, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200496, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200512, ".getgid", "// attributes: thunk\n__gid_t getgid(void)\n{\n  return getgid();\n}\n"], [4200528, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200544, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200560, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4200576, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200592, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4200608, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200624, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4200640, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200656, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4200672, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200688, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4200704, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200720, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200736, ".strtoul", "// attributes: thunk\nunsigned __int64 strtoul(const char *nptr, char **endptr, int base)\n{\n  return strtoul(nptr, endptr, base);\n}\n"], [4200752, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200768, ".getppid", "// attributes: thunk\n__pid_t getppid(void)\n{\n  return getppid();\n}\n"], [4200784, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200800, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200816, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200832, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200848, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200864, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200912, "sub_4019D0", "signed __int64 sub_4019D0()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60C28F - &unk_60C288;\n  if ( (unsigned __int64)(&unk_60C28F - &unk_60C288) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200960, "sub_401A00", "__int64 sub_401A00()\n{\n  return 0LL;\n}\n"], [4201024, "sub_401A40", "signed __int64 sub_401A40()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60C2F8 )\n  {\n    result = sub_4019D0();\n    byte_60C2F8 = 1;\n  }\n  return result;\n}\n"], [4201056, "sub_401A60", "__int64 sub_401A60()\n{\n  return sub_401A00();\n}\n"], [4201101, "sub_401A8D", "int sub_401A8D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402A3D(qword_60C310);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402A3D(qword_60C310);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402A3D(qword_60C310);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201367, "sub_401B97", "void __fastcall __noreturn sub_401B97(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  __int64 v3; // r13\n  __int64 v4; // r12\n  __int64 v5; // rbx\n  char *v6; // rax\n  FILE *v7; // rbx\n  char *v8; // rax\n  FILE *v9; // rbx\n  char *v10; // rax\n  FILE *v11; // rbx\n  char *v12; // rax\n  FILE *v13; // rbx\n  char *v14; // rax\n  FILE *v15; // rbx\n  char *v16; // rax\n  FILE *v17; // rbx\n  char *v18; // rax\n\n  if ( a1 )\n  {\n    v1 = qword_60C310;\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = qword_60C310;\n    v4 = qword_60C310;\n    v5 = qword_60C310;\n    v6 = gettext(\"Usage: %s [OPTION]... [FILE]\\n  or:  %s -e [OPTION]... [ARG]...\\n  or:  %s -i LO-HI [OPTION]...\\n\");\n    printf(v6, v5, v4, v3);\n    v7 = stdout;\n    v8 = gettext(\"Write a random permutation of the input lines to standard output.\\n\\n\");\n    fputs_unlocked(v8, v7);\n    v9 = stdout;\n    v10 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v10, v9);\n    v11 = stdout;\n    v12 = gettext(\n            \"  -e, --echo                treat each ARG as an input line\\n\"\n            \"  -i, --input-range=LO-HI   treat each number LO through HI as an input line\\n\"\n            \"  -n, --head-count=COUNT    output at most COUNT lines\\n\"\n            \"  -o, --output=FILE         write result to FILE instead of standard output\\n\"\n            \"      --random-source=FILE  get random bytes from FILE\\n\"\n            \"  -z, --zero-terminated     end lines with 0 byte, not newline\\n\");\n    fputs_unlocked(v12, v11);\n    v13 = stdout;\n    v14 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v14, v13);\n    v15 = stdout;\n    v16 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v16, v15);\n    v17 = stdout;\n    v18 = gettext(\"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    fputs_unlocked(v18, v17);\n    sub_401A8D();\n  }\n  exit(a1);\n}\n"], [4201676, "sub_401CCC", "_BOOL8 __fastcall sub_401CCC(__int64 a1, __int64 a2)\n{\n  return a1 != -1 || a2;\n}\n"], [4201719, "sub_401CF7", "char *__fastcall sub_401CF7(__int64 a1, int a2, char a3)\n{\n  char *result; // rax\n  int i; // [rsp+14h] [rbp-1Ch]\n  int j; // [rsp+14h] [rbp-1Ch]\n  char *dest; // [rsp+18h] [rbp-18h]\n  __int64 v8; // [rsp+20h] [rbp-10h]\n  char *v9; // [rsp+28h] [rbp-8h]\n\n  v8 = a2;\n  for ( i = 0; i < a2; ++i )\n    v8 += strlen(*(const char **)(8LL * i + a1));\n  dest = (char *)sub_406EC3(v8);\n  for ( j = 0; j < a2; ++j )\n  {\n    v9 = stpcpy(dest, *(const char **)(8LL * j + a1));\n    *(_QWORD *)(a1 + 8LL * j) = dest;\n    dest = v9 + 1;\n    *v9 = a3;\n  }\n  result = dest;\n  *(_QWORD *)(a1 + 8LL * a2) = dest;\n  return result;\n}\n"], [4201965, "sub_401DED", "char *__fastcall sub_401DED(const void *a1, char a2, size_t a3)\n{\n  return (char *)memchr(a1, a2, a3) + 1;\n}\n"], [4202022, "sub_401E26", "unsigned __int64 __fastcall sub_401E26(__int64 a1, char a2, char ***a3)\n{\n  char *v3; // rbx\n  int *v4; // rax\n  __int64 v5; // rax\n  char **v6; // rbx\n  __int64 v9; // [rsp+28h] [rbp-48h] BYREF\n  char *i; // [rsp+30h] [rbp-40h]\n  unsigned __int64 j; // [rsp+38h] [rbp-38h]\n  unsigned __int64 v12; // [rsp+40h] [rbp-30h]\n  char *v13; // [rsp+48h] [rbp-28h]\n  unsigned __int64 v14; // [rsp+50h] [rbp-20h]\n  char **v15; // [rsp+58h] [rbp-18h]\n\n  v13 = 0LL;\n  v13 = (char *)sub_40615A(a1, &v9);\n  if ( !v13 )\n  {\n    v3 = gettext(\"read error\");\n    v4 = __errno_location();\n    error(1, *v4, v3);\n  }\n  if ( v9 && v13[v9 - 1] != a2 )\n  {\n    v5 = v9++;\n    v13[v5] = a2;\n  }\n  v14 = (unsigned __int64)&v13[v9];\n  v12 = 0LL;\n  for ( i = v13; (unsigned __int64)i < v14; i = sub_401DED(i, a2, v14 - (_QWORD)i) )\n    ++v12;\n  v15 = (char **)sub_406D7A(v12 + 1, 8LL);\n  *a3 = v15;\n  i = v13;\n  *v15 = v13;\n  for ( j = 1LL; j <= v12; ++j )\n  {\n    v6 = &v15[j];\n    i = sub_401DED(i, a2, v14 - (_QWORD)i);\n    *v6 = i;\n  }\n  return v12;\n}\n"], [4202423, "sub_401FB7", "__int64 __fastcall sub_401FB7(unsigned __int64 a1, __int64 a2, __int64 a3, __int64 a4, char a5)\n{\n  unsigned __int64 i; // [rsp+30h] [rbp-20h]\n  unsigned __int64 j; // [rsp+30h] [rbp-20h]\n  __int64 v11; // [rsp+38h] [rbp-18h]\n  size_t n; // [rsp+40h] [rbp-10h]\n\n  if ( a2 )\n  {\n    for ( i = 0LL; i < a1; ++i )\n    {\n      v11 = 8LL * *(_QWORD *)(8 * i + a4) + a2;\n      n = *(_QWORD *)(v11 + 8) - *(_QWORD *)v11;\n      if ( fwrite_unlocked(*(const void **)v11, 1uLL, n, stdout) != n )\n        return 0xFFFFFFFFLL;\n    }\n  }\n  else\n  {\n    for ( j = 0LL; j < a1; ++j )\n    {\n      if ( printf(\"%lu%c\", *(_QWORD *)(8 * j + a4) + a3, (unsigned int)a5) < 0 )\n        return 0xFFFFFFFFLL;\n    }\n  }\n  return 0LL;\n}\n"], [4202713, "main", "__int64 __fastcall main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  _BOOL4 v4; // eax\n  __int64 v5; // rbx\n  char *v6; // rax\n  unsigned __int64 v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  char *v10; // rax\n  char *v11; // rax\n  char *v12; // rax\n  __int64 v13; // rbx\n  char *v14; // rax\n  const char *v15; // rbx\n  int *v16; // rax\n  __int64 v17; // rbx\n  char *v18; // rax\n  unsigned __int64 v19; // rax\n  __int64 v20; // rax\n  const char *v21; // rbx\n  int *v22; // rax\n  char *v23; // rbx\n  int *v24; // rax\n  const char *v25; // rbx\n  int *v26; // rax\n  char *v27; // rbx\n  int *v28; // rax\n  char v30; // [rsp+11h] [rbp-8Fh]\n  char v31; // [rsp+12h] [rbp-8Eh]\n  bool v32; // [rsp+13h] [rbp-8Dh]\n  int v33; // [rsp+14h] [rbp-8Ch]\n  int v34; // [rsp+18h] [rbp-88h]\n  int v35; // [rsp+1Ch] [rbp-84h]\n  const char **v36; // [rsp+20h] [rbp-80h] BYREF\n  unsigned __int64 v37; // [rsp+28h] [rbp-78h] BYREF\n  unsigned __int64 v38; // [rsp+30h] [rbp-70h]\n  __int64 v39; // [rsp+38h] [rbp-68h]\n  unsigned __int64 v40; // [rsp+40h] [rbp-60h]\n  char *s1; // [rsp+48h] [rbp-58h]\n  char *v42; // [rsp+50h] [rbp-50h]\n  unsigned __int64 v43; // [rsp+58h] [rbp-48h]\n  const char **v44; // [rsp+60h] [rbp-40h]\n  char *v45; // [rsp+68h] [rbp-38h]\n  char *v46; // [rsp+70h] [rbp-30h]\n  const char **v47; // [rsp+78h] [rbp-28h]\n  __int64 v48; // [rsp+80h] [rbp-20h]\n  __int64 v49; // [rsp+88h] [rbp-18h]\n\n  v30 = 0;\n  v38 = -1LL;\n  v39 = 0LL;\n  v40 = -1LL;\n  s1 = 0LL;\n  v42 = 0LL;\n  v31 = 10;\n  v36 = 0LL;\n  sub_402D04(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_4094F0(sub_402952);\n  while ( 1 )\n  {\n    v33 = getopt_long(a1, a2, \"ei:n:o:z\", &longopts, 0LL);\n    if ( v33 == -1 )\n      break;\n    if ( v33 == 105 )\n    {\n      v37 = 0LL;\n      v46 = strchr(optarg, 45);\n      v45 = optarg;\n      v32 = v46 == 0LL;\n      if ( sub_401CCC(v38, v39) )\n      {\n        v3 = gettext(\"multiple -i options specified\");\n        error(1, 0, v3);\n      }\n      if ( v46 )\n      {\n        *v46 = 0;\n        v32 = (unsigned int)sub_40711A(optarg, 0LL, 10LL, &v37, 0LL) != 0;\n        *v46 = 45;\n        v38 = v37;\n        v45 = v46 + 1;\n      }\n      v4 = sub_40711A(v45, 0LL, 10LL, &v37, 0LL) != 0;\n      v39 = v37;\n      v43 = v37 - v38 + 1;\n      if ( (v32 || v4) | (v38 > v37) ^ (v43 == 0) )\n      {\n        v5 = sub_402E0F(optarg);\n        v6 = gettext(\"invalid input range %s\");\n        error(1, 0, v6, v5);\n      }\n    }\n    else if ( v33 > 105 )\n    {\n      if ( v33 == 111 )\n      {\n        if ( s1 && strcmp(s1, optarg) )\n        {\n          v10 = gettext(\"multiple output files specified\");\n          error(1, 0, v10);\n        }\n        s1 = optarg;\n      }\n      else if ( v33 > 111 )\n      {\n        if ( v33 == 122 )\n        {\n          v31 = 0;\n        }\n        else\n        {\n          if ( v33 != 128 )\n            goto LABEL_41;\n          if ( v42 && strcmp(v42, optarg) )\n          {\n            v11 = gettext(\"multiple random sources specified\");\n            error(1, 0, v11);\n          }\n          v42 = optarg;\n        }\n      }\n      else\n      {\n        if ( v33 != 110 )\n          goto LABEL_41;\n        v34 = sub_40711A(optarg, 0LL, 10LL, &v37, 0LL);\n        if ( v34 )\n        {\n          if ( v34 != 1 )\n          {\n            v8 = sub_402E0F(optarg);\n            v9 = gettext(\"invalid line count %s\");\n            error(1, 0, v9, v8);\n          }\n        }\n        else\n        {\n          v7 = v40;\n          if ( v37 <= v40 )\n            v7 = v37;\n          v40 = v7;\n        }\n      }\n    }\n    else\n    {\n      if ( v33 == -130 )\n        sub_401B97(0);\n      if ( v33 != 101 )\n      {\n        if ( v33 == -131 )\n        {\n          sub_406C5B(\n            (_DWORD)stdout,\n            (unsigned int)\"shuf\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_60C250,\n            (unsigned int)\"Paul Eggert\",\n            0,\n            (char)a2);\n          exit(0);\n        }\nLABEL_41:\n        sub_401B97(1);\n      }\n      v30 = 1;\n    }\n  }\n  v35 = a1 - optind;\n  v47 = (const char **)&a2[optind];\n  if ( v30 )\n  {\n    if ( sub_401CCC(v38, v39) )\n    {\n      v12 = gettext(\"cannot combine -e and -i options\");\n      error(1, 0, v12);\n    }\n    sub_401CF7((__int64)v47, v35, v31);\n    v43 = v35;\n    v44 = v47;\n  }\n  else if ( sub_401CCC(v38, v39) )\n  {\n    if ( v35 )\n    {\n      v13 = sub_402E0F(*v47);\n      v14 = gettext(\"extra operand %s\");\n      error(0, 0, v14, v13);\n      sub_401B97(1);\n    }\n    v43 = v39 - v38 + 1;\n    v44 = 0LL;\n  }\n  else\n  {\n    if ( v35 )\n    {\n      if ( v35 != 1 )\n      {\n        v17 = sub_402E0F(v47[1]);\n        v18 = gettext(\"extra operand %s\");\n        error(0, 0, v18, v17);\n        sub_401B97(1);\n      }\n      if ( strcmp(*v47, \"-\") && !sub_402BB1(*v47, \"r\", stdin) )\n      {\n        v15 = *v47;\n        v16 = __errno_location();\n        error(1, *v16, \"%s\", v15);\n      }\n    }\n    sub_402B24(stdin, 2LL);\n    v43 = sub_401E26(stdin, v31, (char ***)&v36);\n    v44 = v36;\n  }\n  v19 = v40;\n  if ( v43 <= v40 )\n    v19 = v43;\n  v40 = v19;\n  v20 = sub_404907(v19, v43);\n  v48 = sub_4045EE(v42, v20);\n  if ( !v48 )\n  {\n    v21 = (const char *)sub_404428(v42);\n    v22 = __errno_location();\n    error(1, *v22, \"%s\", v21);\n  }\n  if ( v30 != 1 && !sub_401CCC(v38, v39) && (unsigned int)sub_407586(stdin) )\n  {\n    v23 = gettext(\"read error\");\n    v24 = __errno_location();\n    error(1, *v24, v23);\n  }\n  v49 = sub_404BA8(v48, v40, v43);\n  if ( s1 && !sub_402BB1(s1, \"w\", stdout) )\n  {\n    v25 = (const char *)sub_404428(s1);\n    v26 = __errno_location();\n    error(1, *v26, \"%s\", v25);\n  }\n  if ( (unsigned int)sub_401FB7(v40, (__int64)v44, v38, v49, v31) )\n  {\n    v27 = gettext(\"write error\");\n    v28 = __errno_location();\n    error(1, *v28, v27);\n  }\n  return 0LL;\n}\n"], [4204840, "sub_402928", "__int64 __fastcall sub_402928(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_60C300 = a1;\n  return result;\n}\n"], [4204861, "sub_40293D", "__int64 __fastcall sub_40293D(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60C308 = a1;\n  return result;\n}\n"], [4204882, "sub_402952", "__int64 sub_402952()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_407771(stdout) && (byte_60C308 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60C300 )\n    {\n      v0 = (const char *)sub_404428(qword_60C300);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_407771(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4205117, "sub_402A3D", "_BYTE *__fastcall sub_402A3D(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4205222, "sub_402AA6", "size_t __fastcall sub_402AA6(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4205300, "sub_402AF4", "int __fastcall sub_402AF4(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4205348, "sub_402B24", "void __fastcall sub_402B24(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_402AF4(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4205406, "sub_402B5E", "__int64 __fastcall sub_402B5E(int a1)\n{\n  int fd; // [rsp+1Ch] [rbp-4h]\n\n  fd = open(\"/dev/null\", 0);\n  if ( fd == a1 )\n    return 1LL;\n  if ( fd >= 0 )\n  {\n    close(fd);\n    *__errno_location() = 9;\n  }\n  return 0LL;\n}\n"], [4205489, "sub_402BB1", "FILE *__fastcall sub_402BB1(const char *a1, const char *a2, FILE *a3)\n{\n  int v3; // eax\n  FILE *streama; // [rsp+8h] [rbp-28h]\n  char v7; // [rsp+29h] [rbp-7h]\n  char v8; // [rsp+2Ah] [rbp-6h]\n  char v9; // [rsp+2Bh] [rbp-5h]\n  int v10; // [rsp+2Ch] [rbp-4h]\n\n  v7 = 0;\n  v8 = 0;\n  v9 = 0;\n  v3 = fileno(a3);\n  if ( v3 != 1 )\n  {\n    if ( v3 != 2 )\n    {\n      if ( !v3 )\n        goto LABEL_10;\n      if ( dup2(2, 2) != 2 )\n        v9 = 1;\n    }\n    if ( dup2(1, 1) != 1 )\n      v8 = 1;\n  }\n  if ( dup2(0, 0) )\n    v7 = 1;\nLABEL_10:\n  if ( v7 && (unsigned __int8)sub_402B5E(0) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v8 && (unsigned __int8)sub_402B5E(1) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v9 && (unsigned __int8)sub_402B5E(2) != 1 )\n  {\n    streama = 0LL;\n  }\n  else\n  {\n    streama = freopen(a1, a2, a3);\n  }\n  v10 = *__errno_location();\n  if ( v9 )\n    close(2);\n  if ( v8 )\n    close(1);\n  if ( v7 )\n    close(0);\n  if ( !streama )\n    *__errno_location() = v10;\n  return streama;\n}\n"], [4205828, "sub_402D04", "char *__fastcall sub_402D04(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60C310 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4206059, "sub_402DEB", "__int64 __fastcall sub_402DEB(unsigned int a1, __int64 a2)\n{\n  return sub_40429A(a1, 6LL, a2);\n}\n"], [4206095, "sub_402E0F", "__int64 __fastcall sub_402E0F(__int64 a1)\n{\n  return sub_402DEB(0, a1);\n}\n"], [4206126, "sub_402E2E", "__int64 __fastcall sub_402E2E(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60C320;\n  v4 = sub_406FE7(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4206199, "sub_402E77", "__int64 __fastcall sub_402E77(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60C320;\n  return *(unsigned int *)v1;\n}\n"], [4206229, "sub_402E95", "__int64 *__fastcall sub_402E95(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60C320;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4206265, "sub_402EB9", "__int64 __fastcall sub_402EB9(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60C320;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4206401, "sub_402F41", "__int64 __fastcall sub_402F41(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60C320;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4206452, "sub_402F74", "__int64 *__fastcall sub_402F74(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60C320;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4206542, "sub_402FCE", "_QWORD *__fastcall sub_402FCE(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4206662, "sub_403046", "char *__fastcall sub_403046(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)asc_409E00;\n  return v3;\n}\n"], [4206723, "sub_403083", "unsigned __int64 __fastcall sub_403083(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_403046((const char *)&asc_409E00[1], a5);\n        a9 = sub_403046((const char *)&asc_409E00[2], a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)asc_409E00;\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(asc_409E00 + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403083(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4209870, "sub_403CCE", "unsigned __int64 __fastcall sub_403CCE(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60C320;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403083(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4210030, "sub_403D6E", "__int64 __fastcall sub_403D6E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403DA0(a1, a2, 0LL, a3);\n}\n"], [4210080, "sub_403DA0", "__int64 __fastcall sub_403DA0(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60C320;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_403083(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_406EA9(v10);\n  sub_403083(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4210380, "sub_403ECC", "void sub_403ECC()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60C280;\n  for ( i = 1; i < dword_60C260; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60C360 )\n  {\n    free(ptr[1]);\n    qword_60C270 = 256LL;\n    off_60C278 = &unk_60C360;\n  }\n  if ( ptr != (void **)&qword_60C270 )\n  {\n    free(ptr);\n    off_60C280 = &qword_60C270;\n  }\n  dword_60C260 = 1;\n}\n"], [4210551, "sub_403F77", "void *__fastcall sub_403F77(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60C280;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60C260 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60C280 == &qword_60C270;\n    if ( off_60C280 == &qword_60C270 )\n      v4 = 0LL;\n    else\n      v4 = off_60C280;\n    v12 = (__int64 *)sub_406EF8(v4, 16 * v14);\n    off_60C280 = v12;\n    if ( v9 )\n    {\n      v5 = off_60C278;\n      *v12 = qword_60C270;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60C260], 0, 16 * (v14 - (unsigned int)dword_60C260));\n    dword_60C260 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_403083((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60C360 )\n      free(ptr);\n    ptr = (void *)sub_406EA9(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_403083((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4211197, "sub_4041FD", "void *__fastcall sub_4041FD(int a1, __int64 a2)\n{\n  return sub_403F77(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60C320);\n}\n"], [4211240, "sub_404228", "void *__fastcall sub_404228(int a1, __int64 a2, size_t a3)\n{\n  return sub_403F77(a1, a2, a3, (__int64)&qword_60C320);\n}\n"], [4211284, "sub_404254", "void *__fastcall sub_404254(__int64 a1)\n{\n  return sub_4041FD(0, a1);\n}\n"], [4211315, "sub_404273", "void *__fastcall sub_404273(__int64 a1, size_t a2)\n{\n  return sub_404228(0, a1, a2);\n}\n"], [4211354, "sub_40429A", "void *__fastcall sub_40429A(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_402FCE(v5, a2);\n  return sub_403F77(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4211419, "sub_4042DB", "void *__fastcall sub_4042DB(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_402FCE(v7, a2);\n  return sub_403F77(a1, a3, a4, (__int64)v7);\n}\n"], [4211482, "sub_40431A", "void *__fastcall sub_40431A(int a1, __int64 a2)\n{\n  return sub_40429A(0, a1, a2);\n}\n"], [4211518, "sub_40433E", "void *__fastcall sub_40433E(int a1, __int64 a2, size_t a3)\n{\n  return sub_4042DB(0, a1, a2, a3);\n}\n"], [4211562, "sub_40436A", "void *__fastcall sub_40436A(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60C320;\n  v4[1] = qword_60C328;\n  v4[2] = qword_60C330;\n  v4[3] = qword_60C338;\n  v4[4] = qword_60C340;\n  v4[5] = qword_60C348;\n  v4[6] = qword_60C350;\n  sub_402EB9(v4, a3, 1);\n  return sub_403F77(0, a1, a2, (__int64)v4);\n}\n"], [4211710, "sub_4043FE", "void *__fastcall sub_4043FE(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40436A(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4211752, "sub_404428", "void *__fastcall sub_404428(__int64 a1)\n{\n  return sub_4043FE(a1, 0x3Au);\n}\n"], [4211783, "sub_404447", "void *__fastcall sub_404447(__int64 a1, size_t a2)\n{\n  return sub_40436A(a1, a2, 0x3Au);\n}\n"], [4211825, "sub_404471", "__int64 __fastcall sub_404471(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4044A7(a1, a2, a3, a4, -1LL);\n}\n"], [4211879, "sub_4044A7", "void *__fastcall sub_4044A7(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60C320;\n  v8[1] = qword_60C328;\n  v8[2] = qword_60C330;\n  v8[3] = qword_60C338;\n  v8[4] = qword_60C340;\n  v8[5] = qword_60C348;\n  v8[6] = qword_60C350;\n  sub_402F74(v8, a2, a3);\n  return sub_403F77(a1, a4, a5, (__int64)v8);\n}\n"], [4212030, "sub_40453E", "__int64 __fastcall sub_40453E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404471(0, a1, a2, a3);\n}\n"], [4212077, "sub_40456D", "void *__fastcall sub_40456D(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4044A7(0, a1, a2, a3, a4);\n}\n"], [4212135, "sub_4045A7", "_QWORD *__fastcall sub_4045A7(__int64 a1)\n{\n  _QWORD *result; // rax\n\n  result = (_QWORD *)sub_406EC3(24LL);\n  *result = a1;\n  result[2] = 0LL;\n  result[1] = result[2];\n  return result;\n}\n"], [4212206, "sub_4045EE", "_QWORD *__fastcall sub_4045EE(__int64 a1, __int64 a2)\n{\n  _QWORD *result; // rax\n  __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = sub_405086(a1, a2);\n  if ( v3 )\n    result = sub_4045A7(v3);\n  else\n    result = 0LL;\n  return result;\n}\n"], [4212273, "sub_404631", "__int64 __fastcall sub_404631(__int64 a1)\n{\n  return *(_QWORD *)a1;\n}\n"], [4212290, "sub_404642", "__int64 __fastcall sub_404642(__int64 a1)\n{\n  return a1 << 8;\n}\n"], [4212308, "sub_404654", "unsigned __int64 __fastcall sub_404654(__int64 *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+10h] [rbp-70h]\n  unsigned __int64 v4; // [rsp+18h] [rbp-68h]\n  __int64 v5; // [rsp+20h] [rbp-60h]\n  __int64 v6; // [rsp+20h] [rbp-60h]\n  unsigned __int64 v7; // [rsp+28h] [rbp-58h]\n  __int64 v8; // [rsp+30h] [rbp-50h]\n  unsigned __int64 v9; // [rsp+38h] [rbp-48h]\n  unsigned __int64 v10; // [rsp+48h] [rbp-38h]\n  char v11[8]; // [rsp+60h] [rbp-20h] BYREF\n  unsigned __int64 v12; // [rsp+68h] [rbp-18h]\n\n  v12 = __readfsqword(0x28u);\n  v8 = *a1;\n  v3 = a1[1];\n  v4 = a1[2];\n  v9 = a2 + 1;\n  while ( 1 )\n  {\n    if ( v4 < a2 )\n    {\n      v5 = 0LL;\n      v7 = v4;\n      do\n      {\n        v7 = sub_404642(v7) + 255;\n        ++v5;\n      }\n      while ( v7 < a2 );\n      sub_40537F(v8, v11, v5);\n      v6 = 0LL;\n      do\n      {\n        v3 = (unsigned __int8)v11[v6] + sub_404642(v3);\n        v4 = sub_404642(v4) + 255;\n        ++v6;\n      }\n      while ( v4 < a2 );\n    }\n    if ( v4 == a2 )\n    {\n      a1[2] = 0LL;\n      a1[1] = a1[2];\n      return v3;\n    }\n    v10 = (v4 - a2) % v9;\n    if ( v3 <= v4 - v10 )\n      break;\n    v3 %= v9;\n    v4 = v10 - 1;\n  }\n  a1[1] = v3 / v9;\n  a1[2] = (v4 - a2) / v9;\n  return v3 % v9;\n}\n"], [4212791, "sub_404837", "void __fastcall sub_404837(void *a1)\n{\n  memset(a1, 0, 0x18uLL);\n  free(a1);\n}\n"], [4212839, "sub_404867", "__int64 __fastcall sub_404867(_QWORD *a1)\n{\n  unsigned int v2; // [rsp+18h] [rbp-8h]\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v2 = sub_4053D5(*a1);\n  v3 = *__errno_location();\n  sub_404837(a1);\n  *__errno_location() = v3;\n  return v2;\n}\n"], [4212906, "sub_4048AA", "unsigned __int64 __fastcall sub_4048AA(__int64 *a1, __int64 a2)\n{\n  return sub_404654(a1, a2 - 1);\n}\n"], [4212947, "sub_4048D3", "__int64 __fastcall sub_4048D3(__int64 a1)\n{\n  unsigned __int64 i; // [rsp+0h] [rbp-18h]\n  __int64 v3; // [rsp+10h] [rbp-8h]\n\n  v3 = 0LL;\n  for ( i = a1 - 1; i; i >>= 1 )\n    ++v3;\n  return v3;\n}\n"], [4212999, "sub_404907", "unsigned __int64 __fastcall sub_404907(__int64 a1, __int64 a2)\n{\n  return (unsigned __int64)(a1 * sub_4048D3(a2) + 7) >> 3;\n}\n"], [4213066, "sub_40494A", "__int64 __fastcall sub_40494A(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 result; // rax\n  __int64 v4; // [rsp+20h] [rbp-8h]\n\n  v4 = *(_QWORD *)(8 * a2 + a1);\n  *(_QWORD *)(a1 + 8 * a2) = *(_QWORD *)(8 * a3 + a1);\n  result = v4;\n  *(_QWORD *)(a1 + 8 * a3) = v4;\n  return result;\n}\n"], [4213180, "sub_4049BC", "unsigned __int64 __fastcall sub_4049BC(_QWORD *a1, unsigned __int64 a2)\n{\n  return *a1 % a2;\n}\n"], [4213221, "sub_4049E5", "bool __fastcall sub_4049E5(_QWORD *a1, _QWORD *a2)\n{\n  return *a1 == *a2;\n}\n"], [4213271, "sub_404A17", "__int64 __fastcall sub_404A17(__int64 a1)\n{\n  return sub_4081F4(a1, 0LL, sub_4049BC, sub_4049E5, free);\n}\n"], [4213318, "sub_404A46", "__int64 __fastcall sub_404A46(__int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 result; // rax\n  _QWORD *v7; // [rsp+28h] [rbp-38h]\n  _QWORD *v8; // [rsp+30h] [rbp-30h]\n  __int64 v9; // [rsp+38h] [rbp-28h]\n  __int64 v10[2]; // [rsp+40h] [rbp-20h] BYREF\n  __int64 v11[2]; // [rsp+50h] [rbp-10h] BYREF\n\n  v10[0] = a3;\n  v10[1] = 0LL;\n  v7 = (_QWORD *)sub_408ED3(a1, v10);\n  v11[0] = a4;\n  v11[1] = 0LL;\n  v8 = (_QWORD *)sub_408ED3(a1, v11);\n  if ( !v7 )\n  {\n    v7 = (_QWORD *)sub_406EC3(16LL);\n    v7[1] = a3;\n    *v7 = v7[1];\n  }\n  if ( !v8 )\n  {\n    v8 = (_QWORD *)sub_406EC3(16LL);\n    v8[1] = a4;\n    *v8 = v8[1];\n  }\n  v9 = v7[1];\n  v7[1] = v8[1];\n  v8[1] = v9;\n  if ( !sub_408E8A(a1, v7) )\n    sub_407045();\n  if ( !sub_408E8A(a1, v8) )\n    sub_407045();\n  result = v7[1];\n  *(_QWORD *)(a2 + 8 * a3) = result;\n  return result;\n}\n"], [4213646, "sub_404B8E", "__int64 __fastcall sub_404B8E(__int64 a1)\n{\n  return sub_40845F(a1);\n}\n"], [4213672, "sub_404BA8", "unsigned __int64 *__fastcall sub_404BA8(__int64 *a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  bool v3; // al\n  bool v6; // [rsp+2Fh] [rbp-21h]\n  unsigned __int64 *v7; // [rsp+30h] [rbp-20h]\n  unsigned __int64 i; // [rsp+38h] [rbp-18h]\n  unsigned __int64 j; // [rsp+38h] [rbp-18h]\n  __int64 v10; // [rsp+40h] [rbp-10h]\n  __int64 v11; // [rsp+48h] [rbp-8h]\n\n  if ( !a2 )\n    return 0LL;\n  if ( a2 == 1 )\n  {\n    v7 = (unsigned __int64 *)sub_406EC3(8LL);\n    *v7 = sub_4048AA(a1, a3);\n  }\n  else\n  {\n    v3 = a3 > 0x1FFFF && a3 / a2 > 0x1F;\n    v6 = v3;\n    if ( v3 )\n    {\n      v10 = sub_404A17(2 * a2);\n      if ( !v10 )\n        sub_407045();\n      v7 = (unsigned __int64 *)sub_406D7A(a2, 8LL);\n    }\n    else\n    {\n      v10 = 0LL;\n      v7 = (unsigned __int64 *)sub_406D7A(a3, 8LL);\n      for ( i = 0LL; i < a3; ++i )\n        v7[i] = i;\n    }\n    for ( j = 0LL; j < a2; ++j )\n    {\n      v11 = j + sub_4048AA(a1, a3 - j);\n      if ( v6 )\n        sub_404A46(v10, (__int64)v7, j, v11);\n      else\n        sub_40494A((__int64)v7, j, v11);\n    }\n    if ( v6 )\n      sub_404B8E(v10);\n    else\n      v7 = (unsigned __int64 *)sub_406DB8(v7, a2, 8LL);\n  }\n  return v7;\n}\n"], [4214127, "sub_404D6F", "void __fastcall __noreturn sub_404D6F(__int64 a1)\n{\n  void *v1; // r12\n  const char *v2; // rax\n  char *v3; // rbx\n  int *v4; // rax\n\n  if ( a1 )\n  {\n    v1 = sub_404428(a1);\n    if ( *__errno_location() )\n      v2 = \"%s: read error\";\n    else\n      v2 = \"%s: end of file\";\n    v3 = gettext(v2);\n    v4 = __errno_location();\n    error(status, *v4, v3, v1);\n  }\n  abort();\n}\n"], [4214234, "sub_404DDA", "_QWORD *__fastcall sub_404DDA(__int64 a1, __int64 a2)\n{\n  _QWORD *result; // rax\n\n  result = (_QWORD *)sub_406EC3(4152LL);\n  *result = a1;\n  result[1] = sub_404D6F;\n  result[2] = a2;\n  return result;\n}\n"], [4214305, "sub_404E21", "unsigned __int64 __fastcall sub_404E21(char *a1, unsigned __int64 a2, size_t a3)\n{\n  size_t v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  unsigned __int64 result; // rax\n  __int64 v9; // rax\n  int fd; // [rsp+24h] [rbp-4Ch]\n  unsigned __int64 v12; // [rsp+28h] [rbp-48h]\n  size_t n; // [rsp+38h] [rbp-38h]\n  size_t v14; // [rsp+40h] [rbp-30h]\n  size_t v15; // [rsp+48h] [rbp-28h]\n  size_t v16; // [rsp+50h] [rbp-20h]\n  size_t v17; // [rsp+58h] [rbp-18h]\n  struct timeval tv; // [rsp+60h] [rbp-10h] BYREF\n\n  v12 = 0LL;\n  fd = open(\"/dev/urandom\", 0);\n  if ( fd >= 0 )\n  {\n    v3 = a2;\n    if ( a3 <= a2 )\n      v3 = a3;\n    v12 = read(fd, a1, v3);\n    if ( (v12 & 0x8000000000000000LL) != 0LL )\n      v12 = 0LL;\n    close(fd);\n  }\n  if ( v12 < a2 )\n  {\n    v4 = a2 - v12;\n    if ( a2 - v12 > 0x10 )\n      v4 = 16LL;\n    n = v4;\n    gettimeofday(&tv, 0LL);\n    memcpy(&a1[v12], &tv, n);\n    v12 += n;\n  }\n  if ( v12 < a2 )\n  {\n    v5 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v5 = 4LL;\n    v14 = v5;\n    LODWORD(tv.tv_sec) = getpid();\n    memcpy(&a1[v12], &tv, v14);\n    v12 += v14;\n  }\n  if ( v12 < a2 )\n  {\n    v6 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v6 = 4LL;\n    v15 = v6;\n    LODWORD(tv.tv_sec) = getppid();\n    memcpy(&a1[v12], &tv, v15);\n    v12 += v15;\n  }\n  if ( v12 < a2 )\n  {\n    v7 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v7 = 4LL;\n    v16 = v7;\n    LODWORD(tv.tv_sec) = getuid();\n    memcpy(&a1[v12], &tv, v16);\n    v12 += v16;\n  }\n  result = v12;\n  if ( v12 < a2 )\n  {\n    v9 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v9 = 4LL;\n    v17 = v9;\n    LODWORD(tv.tv_sec) = getgid();\n    memcpy(&a1[v12], &tv, v17);\n    result = v12 + v17;\n  }\n  return result;\n}\n"], [4214918, "sub_405086", "char *__fastcall sub_405086(__int64 a1, size_t a2)\n{\n  size_t v3; // rax\n  FILE *stream; // [rsp+10h] [rbp-10h]\n  char *v5; // [rsp+18h] [rbp-8h]\n\n  if ( !a2 )\n    return (char *)sub_404DDA(0LL, 0LL);\n  stream = 0LL;\n  if ( a1 )\n  {\n    stream = (FILE *)sub_4077FC(a1, \"rb\");\n    if ( !stream )\n      return 0LL;\n  }\n  v5 = (char *)sub_404DDA((__int64)stream, a1);\n  if ( stream )\n  {\n    v3 = 4096LL;\n    if ( a2 <= 0x1000 )\n      v3 = a2;\n    setvbuf(stream, v5 + 24, 0, v3);\n  }\n  else\n  {\n    *((_QWORD *)v5 + 3) = 0LL;\n    sub_404E21(v5 + 32, 0x800uLL, a2);\n    sub_405BD3(v5 + 32);\n  }\n  return v5;\n}\n"], [4215157, "sub_405175", "__int64 __fastcall sub_405175(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  result = a1;\n  *(_QWORD *)(a1 + 8) = a2;\n  return result;\n}\n"], [4215183, "sub_40518F", "__int64 __fastcall sub_40518F(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  result = a1;\n  *(_QWORD *)(a1 + 16) = a2;\n  return result;\n}\n"], [4215209, "sub_4051A9", "size_t __fastcall sub_4051A9(__int64 a1, char *a2, size_t a3)\n{\n  size_t result; // rax\n  int *v4; // rbx\n  int v5; // eax\n  int v8; // [rsp+24h] [rbp-1Ch]\n  size_t v9; // [rsp+28h] [rbp-18h]\n\n  while ( 1 )\n  {\n    v9 = fread_unlocked(a2, 1uLL, a3, *(FILE **)a1);\n    v8 = *__errno_location();\n    a2 += v9;\n    result = v9;\n    a3 -= v9;\n    if ( !a3 )\n      break;\n    v4 = __errno_location();\n    if ( ferror_unlocked(*(FILE **)a1) )\n      v5 = v8;\n    else\n      v5 = 0;\n    *v4 = v5;\n    (*(void (__fastcall **)(_QWORD))(a1 + 8))(*(_QWORD *)(a1 + 16));\n  }\n  return result;\n}\n"], [4215369, "sub_405249", "size_t *__fastcall sub_405249(size_t *a1, char *a2, size_t a3)\n{\n  size_t *result; // rax\n  size_t i; // [rsp+20h] [rbp-10h]\n  char *v7; // [rsp+28h] [rbp-8h]\n\n  for ( i = *a1; a3 > i; i = 2048LL )\n  {\n    memcpy(a2, (char *)a1 + 2048 - i + 2080, i);\n    a2 += i;\n    a3 -= i;\n    if ( ((unsigned __int8)a2 & 7) == 0 )\n    {\n      v7 = a2;\n      while ( a3 > 0x7FF )\n      {\n        sub_40546B(a1 + 1, v7);\n        v7 += 2048;\n        a3 -= 2048LL;\n        if ( !a3 )\n        {\n          result = a1;\n          *a1 = 0LL;\n          return result;\n        }\n      }\n      a2 = v7;\n    }\n    sub_40546B(a1 + 1, a1 + 260);\n  }\n  memcpy(a2, (char *)a1 + 2048 - i + 2080, a3);\n  result = a1;\n  *a1 = i - a3;\n  return result;\n}\n"], [4215679, "sub_40537F", "size_t __fastcall sub_40537F(_QWORD *a1, char *a2, size_t a3)\n{\n  size_t result; // rax\n\n  if ( *a1 )\n    result = sub_4051A9((__int64)a1, a2, a3);\n  else\n    result = (size_t)sub_405249(a1 + 3, a2, a3);\n  return result;\n}\n"], [4215765, "sub_4053D5", "__int64 __fastcall sub_4053D5(__int64 *a1)\n{\n  __int64 result; // rax\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  v2 = *a1;\n  memset(a1, 0, 0x1038uLL);\n  free(a1);\n  if ( v2 )\n    result = sub_407586(v2);\n  else\n    result = 0LL;\n  return result;\n}\n"], [4215850, "sub_40542A", "__int64 __fastcall sub_40542A(__int64 a1)\n{\n  return a1;\n}\n"], [4215879, "sub_405447", "__int64 __fastcall sub_405447(__int64 a1, __int16 a2)\n{\n  return *(_QWORD *)((a2 & 0x7F8) + a1);\n}\n"], [4215915, "sub_40546B", "__int64 *__fastcall sub_40546B(__int64 *a1, __int64 *a2)\n{\n  __int64 v2; // rdx\n  __int64 v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  __int64 v16; // rax\n  __int64 *result; // rax\n  unsigned __int64 v18; // [rsp+10h] [rbp-A8h]\n  __int64 v19; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v20; // [rsp+10h] [rbp-A8h]\n  __int64 v21; // [rsp+10h] [rbp-A8h]\n  __int64 v22; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v23; // [rsp+10h] [rbp-A8h]\n  __int64 v24; // [rsp+10h] [rbp-A8h]\n  __int64 v25; // [rsp+18h] [rbp-A0h]\n  __int64 v26; // [rsp+18h] [rbp-A0h]\n  __int64 v27; // [rsp+18h] [rbp-A0h]\n  __int64 v28; // [rsp+18h] [rbp-A0h]\n  __int64 v29; // [rsp+18h] [rbp-A0h]\n  __int64 v30; // [rsp+18h] [rbp-A0h]\n  __int64 v31; // [rsp+18h] [rbp-A0h]\n  __int64 *v32; // [rsp+20h] [rbp-98h]\n  __int64 v34; // [rsp+30h] [rbp-88h]\n  __int64 v35; // [rsp+38h] [rbp-80h]\n  __int64 v36; // [rsp+40h] [rbp-78h]\n  __int64 v37; // [rsp+50h] [rbp-68h]\n  __int64 v38; // [rsp+60h] [rbp-58h]\n  __int64 v39; // [rsp+70h] [rbp-48h]\n  __int64 v40; // [rsp+78h] [rbp-40h]\n  __int64 v41; // [rsp+80h] [rbp-38h]\n  __int64 v42; // [rsp+90h] [rbp-28h]\n  __int64 v43; // [rsp+A0h] [rbp-18h]\n\n  v18 = a1[256];\n  v2 = a1[257];\n  ++a1[258];\n  v25 = v2 + a1[258];\n  v32 = a1;\n  do\n  {\n    v19 = v32[128] - (v18 ^ (v18 << 21)) - 1;\n    v34 = *v32;\n    v35 = sub_405447((__int64)a1, *v32) + v19 + v25;\n    *v32 = v35;\n    v3 = sub_405447((__int64)a1, (unsigned int)v35 >> 8);\n    v26 = sub_40542A(v34 + v3);\n    *a2 = v26;\n    v20 = (v19 ^ ((unsigned __int64)sub_40542A(v19) >> 5)) + v32[129];\n    v36 = v32[1];\n    v4 = sub_405447((__int64)a1, v36);\n    v32[1] = v4 + v20 + v26;\n    v5 = sub_405447((__int64)a1, (unsigned int)(v4 + v20 + v26) >> 8);\n    v27 = sub_40542A(v36 + v5);\n    a2[1] = v27;\n    v21 = (v20 ^ (v20 << 12)) + v32[130];\n    v37 = v32[2];\n    v6 = sub_405447((__int64)a1, v37);\n    v32[2] = v6 + v21 + v27;\n    v7 = sub_405447((__int64)a1, (unsigned int)(v6 + v21 + v27) >> 8);\n    v28 = sub_40542A(v37 + v7);\n    a2[2] = v28;\n    v18 = (v21 ^ ((unsigned __int64)sub_40542A(v21) >> 33)) + v32[131];\n    v38 = v32[3];\n    v8 = sub_405447((__int64)a1, v38);\n    v32[3] = v8 + v18 + v28;\n    v9 = sub_405447((__int64)a1, (unsigned int)(v8 + v18 + v28) >> 8);\n    v25 = sub_40542A(v38 + v9);\n    a2[3] = v25;\n    a2 += 4;\n    v32 += 4;\n  }\n  while ( v32 < a1 + 128 );\n  do\n  {\n    v22 = *(v32 - 128) - (v18 ^ (v18 << 21)) - 1;\n    v39 = *v32;\n    v40 = sub_405447((__int64)a1, *v32) + v22 + v25;\n    *v32 = v40;\n    v10 = sub_405447((__int64)a1, (unsigned int)v40 >> 8);\n    v29 = sub_40542A(v39 + v10);\n    *a2 = v29;\n    v23 = (v22 ^ ((unsigned __int64)sub_40542A(v22) >> 5)) + *(v32 - 127);\n    v41 = v32[1];\n    v11 = sub_405447((__int64)a1, v41);\n    v32[1] = v11 + v23 + v29;\n    v12 = sub_405447((__int64)a1, (unsigned int)(v11 + v23 + v29) >> 8);\n    v30 = sub_40542A(v41 + v12);\n    a2[1] = v30;\n    v24 = (v23 ^ (v23 << 12)) + *(v32 - 126);\n    v42 = v32[2];\n    v13 = sub_405447((__int64)a1, v42);\n    v32[2] = v13 + v24 + v30;\n    v14 = sub_405447((__int64)a1, (unsigned int)(v13 + v24 + v30) >> 8);\n    v31 = sub_40542A(v42 + v14);\n    a2[2] = v31;\n    v18 = (v24 ^ ((unsigned __int64)sub_40542A(v24) >> 33)) + *(v32 - 125);\n    v43 = v32[3];\n    v15 = sub_405447((__int64)a1, v43);\n    v32[3] = v15 + v18 + v31;\n    v16 = sub_405447((__int64)a1, (unsigned int)(v15 + v18 + v31) >> 8);\n    v25 = sub_40542A(v43 + v16);\n    a2[3] = v25;\n    a2 += 4;\n    v32 += 4;\n  }\n  while ( v32 < a1 + 256 );\n  a1[256] = v18;\n  result = a1;\n  a1[257] = v25;\n  return result;\n}\n"], [4217811, "sub_405BD3", "_QWORD *__fastcall sub_405BD3(_QWORD *a1)\n{\n  _QWORD *result; // rax\n  int i; // [rsp+10h] [rbp-48h]\n  int j; // [rsp+14h] [rbp-44h]\n  __int64 v4; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v5; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v6; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v7; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v8; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v9; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v10; // [rsp+20h] [rbp-38h]\n  __int64 v11; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v12; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v13; // [rsp+20h] [rbp-38h]\n  __int64 v14; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v15; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v16; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v17; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v18; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v19; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v20; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v21; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v22; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v23; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v24; // [rsp+30h] [rbp-28h]\n  __int64 v25; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v26; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v27; // [rsp+30h] [rbp-28h]\n  __int64 v28; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v29; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v30; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v31; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v32; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v33; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v34; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v35; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v36; // [rsp+38h] [rbp-20h]\n  __int64 v37; // [rsp+40h] [rbp-18h]\n  __int64 v38; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v39; // [rsp+40h] [rbp-18h]\n  __int64 v40; // [rsp+40h] [rbp-18h]\n  __int64 v41; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v42; // [rsp+40h] [rbp-18h]\n  __int64 v43; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v44; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v45; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v46; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v47; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v48; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v49; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v50; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v51; // [rsp+50h] [rbp-8h]\n  __int64 v52; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v53; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v54; // [rsp+50h] [rbp-8h]\n  __int64 v55; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v56; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v57; // [rsp+50h] [rbp-8h]\n\n  v4 = 0x647C4677A2884B7CLL;\n  v9 = 0xB9F8B322C73AC862LL;\n  v16 = 0x8C0EA5053D4712A0LL;\n  v23 = 0xB29B2E824A595524LL;\n  v30 = 0x82F053DB8355E0CELL;\n  v37 = 0x48FE4A0FA5A09315LL;\n  v44 = 0xAE985BF2CBFC89EDLL;\n  v51 = 0x98F5704F6C44C0ABLL;\n  for ( i = 0; i <= 255; i += 8 )\n  {\n    v10 = a1[i + 1] + v9;\n    v17 = a1[i + 2] + v16;\n    v24 = a1[i + 3] + v23;\n    v31 = a1[i + 4] + v30;\n    v38 = a1[i + 5] + v37;\n    v45 = a1[i + 6] + v44;\n    v52 = a1[i + 7] + v51;\n    v5 = a1[i] + v4 - v31;\n    v39 = ((unsigned __int64)sub_40542A(v52) >> 9) ^ v38;\n    v53 = v5 + v52;\n    v11 = v10 - v39;\n    v46 = (v5 << 9) ^ v45;\n    v6 = v11 + v5;\n    v18 = v17 - v46;\n    v54 = ((unsigned __int64)sub_40542A(v11) >> 23) ^ v53;\n    v12 = v18 + v11;\n    v25 = v24 - v54;\n    v4 = (v18 << 15) ^ v6;\n    v19 = v25 + v18;\n    v32 = v31 - v4;\n    v9 = ((unsigned __int64)sub_40542A(v25) >> 14) ^ v12;\n    v26 = v32 + v25;\n    v40 = v39 - v9;\n    v16 = (v32 << 20) ^ v19;\n    v33 = v40 + v32;\n    v47 = v46 - v16;\n    v23 = ((unsigned __int64)sub_40542A(v40) >> 17) ^ v26;\n    v37 = v47 + v40;\n    v51 = v54 - v23;\n    v30 = (v47 << 14) ^ v33;\n    v44 = v51 + v47;\n    a1[i] = v4;\n    a1[i + 1] = v9;\n    a1[i + 2] = v16;\n    a1[i + 3] = v23;\n    a1[i + 4] = v30;\n    a1[i + 5] = v37;\n    a1[i + 6] = v44;\n    a1[i + 7] = v51;\n  }\n  for ( j = 0; j <= 255; j += 8 )\n  {\n    v13 = a1[j + 1] + v9;\n    v20 = a1[j + 2] + v16;\n    v27 = a1[j + 3] + v23;\n    v34 = a1[j + 4] + v30;\n    v41 = a1[j + 5] + v37;\n    v48 = a1[j + 6] + v44;\n    v55 = a1[j + 7] + v51;\n    v7 = a1[j] + v4 - v34;\n    v42 = ((unsigned __int64)sub_40542A(v55) >> 9) ^ v41;\n    v56 = v7 + v55;\n    v14 = v13 - v42;\n    v49 = (v7 << 9) ^ v48;\n    v8 = v14 + v7;\n    v21 = v20 - v49;\n    v57 = ((unsigned __int64)sub_40542A(v14) >> 23) ^ v56;\n    v15 = v21 + v14;\n    v28 = v27 - v57;\n    v4 = (v21 << 15) ^ v8;\n    v22 = v28 + v21;\n    v35 = v34 - v4;\n    v9 = ((unsigned __int64)sub_40542A(v28) >> 14) ^ v15;\n    v29 = v35 + v28;\n    v43 = v42 - v9;\n    v16 = (v35 << 20) ^ v22;\n    v36 = v43 + v35;\n    v50 = v49 - v16;\n    v23 = ((unsigned __int64)sub_40542A(v43) >> 17) ^ v29;\n    v37 = v50 + v43;\n    v51 = v57 - v23;\n    v30 = (v50 << 14) ^ v36;\n    v44 = v51 + v50;\n    a1[j] = v4;\n    a1[j + 1] = v9;\n    a1[j + 2] = v16;\n    a1[j + 3] = v23;\n    a1[j + 4] = v30;\n    a1[j + 5] = v37;\n    a1[j + 6] = v44;\n    a1[j + 7] = v51;\n  }\n  a1[258] = 0LL;\n  a1[257] = a1[258];\n  result = a1;\n  a1[256] = a1[257];\n  return result;\n}\n"], [4219226, "sub_40615A", "char *__fastcall sub_40615A(FILE *a1, unsigned __int64 *a2)\n{\n  int v2; // eax\n  int v4; // [rsp+14h] [rbp-DCh]\n  char *ptr; // [rsp+18h] [rbp-D8h]\n  unsigned __int64 size; // [rsp+20h] [rbp-D0h]\n  unsigned __int64 v7; // [rsp+28h] [rbp-C8h]\n  __off_t v8; // [rsp+30h] [rbp-C0h]\n  size_t n; // [rsp+40h] [rbp-B0h]\n  size_t v10; // [rsp+48h] [rbp-A8h]\n  char *v11; // [rsp+50h] [rbp-A0h]\n  char *v12; // [rsp+58h] [rbp-98h]\n  struct stat stat_buf; // [rsp+60h] [rbp-90h] BYREF\n\n  size = 0x2000LL;\n  v2 = fileno(a1);\n  if ( (int)sub_409510(v2, &stat_buf) >= 0 && (stat_buf.st_mode & 0xF000) == 0x8000 )\n  {\n    v8 = ftello(a1);\n    if ( v8 >= 0 && stat_buf.st_size > v8 )\n    {\n      if ( stat_buf.st_size - v8 == -1 )\n      {\n        *__errno_location() = 12;\n        return 0LL;\n      }\n      size = stat_buf.st_size - v8 + 1;\n    }\n  }\n  ptr = (char *)malloc(size);\n  if ( !ptr )\n    return 0LL;\n  v7 = 0LL;\n  while ( 1 )\n  {\n    n = size - v7;\n    v10 = fread(&ptr[v7], 1uLL, size - v7, a1);\n    v7 += v10;\n    if ( v10 != n )\n      break;\n    if ( size == -1LL )\n    {\n      v4 = 12;\n      goto LABEL_25;\n    }\n    if ( ~(size >> 1) <= size )\n      size = -1LL;\n    else\n      size += size >> 1;\n    v12 = (char *)realloc(ptr, size);\n    if ( !v12 )\n    {\n      v4 = *__errno_location();\n      goto LABEL_25;\n    }\n    ptr = v12;\n  }\n  v4 = *__errno_location();\n  if ( ferror(a1) )\n  {\nLABEL_25:\n    free(ptr);\n    *__errno_location() = v4;\n    return 0LL;\n  }\n  if ( size - 1 > v7 )\n  {\n    v11 = (char *)realloc(ptr, v7 + 1);\n    if ( v11 )\n      ptr = v11;\n  }\n  ptr[v7] = 0;\n  *a2 = v7;\n  return ptr;\n}\n"], [4219959, "sub_406437", "char *__fastcall sub_406437(const char *a1, unsigned __int64 *a2, const char *a3)\n{\n  int v4; // [rsp+2Ch] [rbp-14h]\n  FILE *v5; // [rsp+30h] [rbp-10h]\n  char *ptr; // [rsp+38h] [rbp-8h]\n\n  v5 = fopen(a1, a3);\n  if ( !v5 )\n    return 0LL;\n  ptr = sub_40615A(v5, a2);\n  v4 = *__errno_location();\n  if ( !(unsigned int)sub_407586(v5) )\n    return ptr;\n  if ( ptr )\n  {\n    v4 = *__errno_location();\n    free(ptr);\n  }\n  *__errno_location() = v4;\n  return 0LL;\n}\n"], [4220117, "sub_4064D5", "char *__fastcall sub_4064D5(const char *a1, unsigned __int64 *a2)\n{\n  return sub_406437(a1, a2, \"r\");\n}\n"], [4220159, "sub_4064FF", "char *__fastcall sub_4064FF(const char *a1, unsigned __int64 *a2)\n{\n  return sub_406437(a1, a2, \"rb\");\n}\n"], [4220201, "sub_406529", "int __fastcall sub_406529(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4221716, "sub_406B14", "int __fastcall sub_406B14(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_406529(a1, a2, a3, a4, a5, i);\n}\n"], [4221826, "sub_406B82", "int __fastcall sub_406B82(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_406529(a1, a2, a3, a4, v8, i);\n}\n"], [4222043, "sub_406C5B", "int sub_406C5B(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_406B82(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4222225, "sub_406D11", "int sub_406D11()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4222330, "sub_406D7A", "__int64 __fastcall sub_406D7A(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_407045(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_406EC3(a2 * a1);\n}\n"], [4222392, "sub_406DB8", "__int64 __fastcall sub_406DB8(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_407045(a1, a2, v4);\n  return sub_406EF8(a1, a3 * a2);\n}\n"], [4222468, "sub_406E04", "__int64 __fastcall sub_406E04(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_407045(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_406EF8(a1, a3 * v6);\n}\n"], [4222633, "sub_406EA9", "__int64 __fastcall sub_406EA9(__int64 a1)\n{\n  return sub_406EC3(a1);\n}\n"], [4222659, "sub_406EC3", "void *__fastcall sub_406EC3(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_407045(a1, a2, v2);\n  return v4;\n}\n"], [4222712, "sub_406EF8", "void *__fastcall sub_406EF8(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_407045(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4222809, "sub_406F59", "__int64 __fastcall sub_406F59(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_406E04(a1, a2, 1uLL);\n}\n"], [4222851, "sub_406F83", "void *__fastcall sub_406F83(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_406EC3(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4222894, "sub_406FAE", "void *__fastcall sub_406FAE(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_407045(a1, a2, v2);\n  return v4;\n}\n"], [4222951, "sub_406FE7", "void *__fastcall sub_406FE7(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_406EC3(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4223000, "sub_407018", "void *__fastcall sub_407018(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_406FE7(a1, v1 + 1);\n}\n"], [4223045, "sub_407045", "void __noreturn sub_407045()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4223098, "sub_40707A", "__int64 __fastcall sub_40707A(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4223193, "sub_4070D9", "__int64 __fastcall sub_4070D9(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_40707A(a1, a2) )\n    ;\n  return i;\n}\n"], [4223258, "sub_40711A", "__int64 __fastcall sub_40711A(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  unsigned __int64 v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoul\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoul(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_4070D9(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_40707A(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_4070D9(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_40707A(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_4070D9(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_4070D9(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_40707A(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_4070D9(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_4070D9(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_4070D9(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_4070D9(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4224390, "sub_407586", "int __fastcall sub_407586(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40766E(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4224571, "sub_40763B", "__int64 __fastcall sub_40763B(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4076B9(a1, 0LL, 1LL);\n  return result;\n}\n"], [4224622, "sub_40766E", "int __fastcall sub_40766E(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40763B(a1);\n  return fflush(a1);\n}\n"], [4224697, "sub_4076B9", "int __fastcall sub_4076B9(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4224881, "sub_407771", "__int64 __fastcall sub_407771(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_407586(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4225020, "sub_4077FC", "FILE *__fastcall sub_4077FC(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_409182((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_407586(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !sub_407586(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4225250, "sub_4078E2", "__int64 __fastcall sub_4078E2(__int64 a1, char a2)\n{\n  return __ROR8__(a1, a2);\n}\n"], [4225278, "sub_4078FE", "__int64 __fastcall sub_4078FE(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 16);\n}\n"], [4225296, "sub_407910", "__int64 __fastcall sub_407910(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 24);\n}\n"], [4225314, "sub_407922", "__int64 __fastcall sub_407922(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 32);\n}\n"], [4225332, "sub_407934", "unsigned __int64 __fastcall sub_407934(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  unsigned __int64 v3; // [rsp+10h] [rbp-18h]\n  _QWORD *v4; // [rsp+18h] [rbp-10h]\n  unsigned __int64 j; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v4 = i;\n      for ( j = 1LL; ; ++j )\n      {\n        v4 = (_QWORD *)v4[1];\n        if ( !v4 )\n          break;\n      }\n      if ( j > v3 )\n        v3 = j;\n    }\n  }\n  return v3;\n}\n"], [4225458, "sub_4079B2", "_BOOL8 __fastcall sub_4079B2(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  __int64 v3; // [rsp+10h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-10h]\n  _QWORD *v5; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  v4 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v5 = i;\n      ++v3;\n      ++v4;\n      while ( 1 )\n      {\n        v5 = (_QWORD *)v5[1];\n        if ( !v5 )\n          break;\n        ++v4;\n      }\n    }\n  }\n  return *(_QWORD *)(a1 + 24) == v3 && *(_QWORD *)(a1 + 32) == v4;\n}\n"], [4225612, "sub_407A4C", "int __fastcall sub_407A4C(__int64 a1, FILE *a2)\n{\n  double v2; // xmm0_8\n  double v3; // xmm1_8\n  double v4; // xmm0_8\n  __int64 v6; // [rsp+10h] [rbp-20h]\n  __int64 v7; // [rsp+18h] [rbp-18h]\n  __int64 v8; // [rsp+20h] [rbp-10h]\n  unsigned __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v6 = sub_407922(a1);\n  v7 = sub_4078FE(a1);\n  v8 = sub_407910(a1);\n  v9 = sub_407934(a1);\n  fprintf(a2, \"# entries:         %lu\\n\", v6);\n  fprintf(a2, \"# buckets:         %lu\\n\", v7);\n  if ( v8 < 0 )\n    v2 = (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1)) + (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1));\n  else\n    v2 = (double)(int)v8;\n  v3 = 100.0 * v2;\n  if ( v7 < 0 )\n    v4 = (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1)) + (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1));\n  else\n    v4 = (double)(int)v7;\n  fprintf(a2, \"# buckets used:    %lu (%.2f%%)\\n\", v8, v3 / v4);\n  return fprintf(a2, \"max bucket length: %lu\\n\", v9);\n}\n"], [4225892, "sub_407B64", "__int64 __fastcall sub_407B64(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = (*(__int64 (__fastcall **)(__int64, _QWORD))(a1 + 48))(a2, *(_QWORD *)(a1 + 16));\n  if ( *(_QWORD *)(a1 + 16) <= v3 )\n    abort();\n  return 16 * v3 + *(_QWORD *)a1;\n}\n"], [4225979, "sub_407BBB", "__int64 __fastcall sub_407BBB(__int64 a1, __int64 a2)\n{\n  _QWORD *i; // [rsp+10h] [rbp-10h]\n  _QWORD *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = (_QWORD *)sub_407B64(a1, a2);\n  if ( !*v4 )\n    return 0LL;\n  for ( i = v4; i; i = (_QWORD *)i[1] )\n  {\n    if ( *i == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *i) )\n      return *i;\n  }\n  return 0LL;\n}\n"], [4226126, "sub_407C4E", "__int64 __fastcall sub_407C4E(unsigned __int64 *a1)\n{\n  unsigned __int64 i; // [rsp+18h] [rbp-8h]\n\n  if ( !a1[4] )\n    return 0LL;\n  for ( i = *a1; ; i += 16LL )\n  {\n    if ( a1[1] <= i )\n      abort();\n    if ( *(_QWORD *)i )\n      break;\n  }\n  return *(_QWORD *)i;\n}\n"], [4226218, "sub_407CAA", "__int64 __fastcall sub_407CAA(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = sub_407B64(a1, a2);\n  v4 = v3;\n  do\n  {\n    if ( *(_QWORD *)v4 == a2 && *(_QWORD *)(v4 + 8) )\n      return **(_QWORD **)(v4 + 8);\n    v4 = *(_QWORD *)(v4 + 8);\n  }\n  while ( v4 );\n  while ( 1 )\n  {\n    v3 += 16LL;\n    if ( v3 >= *(_QWORD *)(a1 + 8) )\n      break;\n    if ( *(_QWORD *)v3 )\n      return *(_QWORD *)v3;\n  }\n  return 0LL;\n}\n"], [4226372, "sub_407D44", "unsigned __int64 __fastcall sub_407D44(__int64 a1, __int64 a2, unsigned __int64 a3)\n{\n  __int64 v4; // rax\n  unsigned __int64 v5; // [rsp+20h] [rbp-18h]\n  _QWORD *i; // [rsp+28h] [rbp-10h]\n  _QWORD *j; // [rsp+30h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( v5 >= a3 )\n          return v5;\n        v4 = v5++;\n        *(_QWORD *)(a2 + 8 * v4) = *j;\n      }\n    }\n  }\n  return v5;\n}\n"], [4226528, "sub_407DE0", "__int64 __fastcall sub_407DE0(__int64 a1, unsigned __int8 (__fastcall *a2)(_QWORD, __int64), __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  _QWORD *i; // [rsp+30h] [rbp-10h]\n  _QWORD *j; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( a2(*j, a3) != 1 )\n          return v5;\n        ++v5;\n      }\n    }\n  }\n  return v5;\n}\n"], [4226676, "sub_407E74", "unsigned __int64 __fastcall sub_407E74(_BYTE *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( *a1 )\n    v4 = (31 * v4 + (unsigned __int8)*a1++) % a2;\n  return v4;\n}\n"], [4226762, "sub_407ECA", "bool __fastcall sub_407ECA(unsigned __int64 a1)\n{\n  unsigned __int64 v2; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+10h] [rbp-8h]\n\n  v2 = 3LL;\n  v4 = 9LL;\n  while ( v4 < a1 && a1 % v2 )\n  {\n    v3 = v2 + 1;\n    v4 += 4 * v3;\n    v2 = v3 + 1;\n  }\n  return a1 % v2 != 0;\n}\n"], [4226870, "sub_407F36", "__int64 __fastcall sub_407F36(unsigned __int64 a1)\n{\n  __int64 v2; // [rsp+0h] [rbp-8h]\n  __int64 i; // [rsp+0h] [rbp-8h]\n\n  v2 = a1;\n  if ( a1 <= 9 )\n    v2 = 10LL;\n  for ( i = v2 | 1; i != -1 && !sub_407ECA(i); i += 2LL )\n    ;\n  return i;\n}\n"], [4226941, "sub_407F7D", "__int64 __fastcall sub_407F7D(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)a1 = 0;\n  *(_DWORD *)(a1 + 4) = 1065353216;\n  *(_DWORD *)(a1 + 8) = 1061997773;\n  *(_DWORD *)(a1 + 12) = 1068826100;\n  result = a1;\n  *(_BYTE *)(a1 + 16) = 0;\n  return result;\n}\n"], [4227010, "sub_407FC2", "unsigned __int64 __fastcall sub_407FC2(__int64 a1, unsigned __int64 a2)\n{\n  return sub_4078E2(a1, 3) % a2;\n}\n"], [4227065, "sub_407FF9", "bool __fastcall sub_407FF9(__int64 a1, __int64 a2)\n{\n  return a1 == a2;\n}\n"], [4227090, "sub_408012", "__int64 __fastcall sub_408012(__int64 a1)\n{\n  __int64 v2; // [rsp+10h] [rbp-8h]\n\n  v2 = *(_QWORD *)(a1 + 40);\n  if ( (_UNKNOWN *)v2 == &unk_40A210 )\n    return 1LL;\n  if ( *(float *)(v2 + 8) > 0.1\n    && (float)(1.0 - 0.1) > *(float *)(v2 + 8)\n    && *(float *)(v2 + 12) > (float)(0.1 + 1.0)\n    && *(float *)v2 >= 0.0\n    && *(float *)(v2 + 4) > (float)(*(float *)v2 + 0.1)\n    && *(float *)(v2 + 4) <= 1.0\n    && *(float *)(v2 + 8) > (float)(*(float *)v2 + 0.1) )\n  {\n    return 1LL;\n  }\n  *(_QWORD *)(a1 + 40) = &unk_40A210;\n  return 0LL;\n}\n"], [4227338, "sub_40810A", "unsigned __int64 __fastcall sub_40810A(__int64 a1, __int64 a2)\n{\n  float v2; // xmm0_4\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // [rsp+8h] [rbp-18h]\n  unsigned __int64 v5; // [rsp+8h] [rbp-18h]\n  float v6; // [rsp+1Ch] [rbp-4h]\n\n  v4 = a1;\n  if ( *(_BYTE *)(a2 + 16) != 1 )\n  {\n    if ( a1 < 0 )\n      v2 = (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1))\n         + (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1));\n    else\n      v2 = (float)(int)a1;\n    v6 = v2 / *(float *)(a2 + 8);\n    if ( v6 >= 1.8446744e19 )\n      return 0LL;\n    if ( v6 >= 9.223372e18 )\n      v4 = (unsigned int)(int)(float)(v6 - 9.223372e18) ^ 0x8000000000000000LL;\n    else\n      v4 = (unsigned int)(int)v6;\n  }\n  v5 = sub_407F36(v4);\n  if ( v5 <= 0x1FFFFFFFFFFFFFFFLL )\n    result = v5;\n  else\n    result = 0LL;\n  return result;\n}\n"], [4227572, "sub_4081F4", "size_t *__fastcall sub_4081F4(__int64 a1, void *a2, unsigned __int64 (__fastcall *a3)(__int64 a1, unsigned __int64 a2), bool (__fastcall *a4)(__int64 a1, __int64 a2), size_t a5)\n{\n  size_t *result; // rax\n  bool (__fastcall *v7)(__int64, __int64); // [rsp+10h] [rbp-30h]\n  unsigned __int64 (__fastcall *v8)(__int64, unsigned __int64); // [rsp+18h] [rbp-28h]\n  void *v9; // [rsp+20h] [rbp-20h]\n  size_t *ptr; // [rsp+38h] [rbp-8h]\n\n  v9 = a2;\n  v8 = a3;\n  v7 = a4;\n  if ( !a3 )\n    v8 = sub_407FC2;\n  if ( !a4 )\n    v7 = sub_407FF9;\n  ptr = (size_t *)malloc(0x50uLL);\n  if ( !ptr )\n    return 0LL;\n  if ( !a2 )\n    v9 = &unk_40A210;\n  ptr[5] = (size_t)v9;\n  if ( (unsigned __int8)sub_408012((__int64)ptr) == 1\n    && (ptr[2] = sub_40810A(a1, (__int64)v9)) != 0\n    && (*ptr = (size_t)calloc(ptr[2], 0x10uLL)) != 0 )\n  {\n    ptr[1] = 16 * ptr[2] + *ptr;\n    ptr[3] = 0LL;\n    ptr[4] = 0LL;\n    ptr[6] = (size_t)v8;\n    ptr[7] = (size_t)v7;\n    ptr[8] = a5;\n    ptr[9] = 0LL;\n    result = ptr;\n  }\n  else\n  {\n    free(ptr);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4227929, "sub_408359", "__int64 __fastcall sub_408359(__int64 a1)\n{\n  __int64 result; // rax\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+20h] [rbp-10h]\n  _QWORD *v4; // [rsp+28h] [rbp-8h]\n\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (_QWORD *)i[1]; j; j = v4 )\n      {\n        if ( *(_QWORD *)(a1 + 64) )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*j);\n        *j = 0LL;\n        v4 = (_QWORD *)j[1];\n        j[1] = *(_QWORD *)(a1 + 72);\n        *(_QWORD *)(a1 + 72) = j;\n      }\n      if ( *(_QWORD *)(a1 + 64) )\n        (*(void (__fastcall **)(_QWORD))(a1 + 64))(*i);\n      *i = 0LL;\n      i[1] = 0LL;\n    }\n  }\n  *(_QWORD *)(a1 + 24) = 0LL;\n  result = a1;\n  *(_QWORD *)(a1 + 32) = 0LL;\n  return result;\n}\n"], [4228191, "sub_40845F", "void __fastcall sub_40845F(__int64 a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+18h] [rbp-18h]\n  _QWORD *ptr; // [rsp+20h] [rbp-10h]\n  _QWORD *ptra; // [rsp+20h] [rbp-10h]\n  _QWORD *ptrb; // [rsp+20h] [rbp-10h]\n  _QWORD *v6; // [rsp+28h] [rbp-8h]\n  _QWORD *v7; // [rsp+28h] [rbp-8h]\n\n  if ( *(_QWORD *)(a1 + 64) && *(_QWORD *)(a1 + 32) )\n  {\n    for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n    {\n      if ( *i )\n      {\n        for ( ptr = i; ptr; ptr = (_QWORD *)ptr[1] )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*ptr);\n      }\n    }\n  }\n  for ( j = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)j; j += 2 )\n  {\n    for ( ptra = (_QWORD *)j[1]; ptra; ptra = v6 )\n    {\n      v6 = (_QWORD *)ptra[1];\n      free(ptra);\n    }\n  }\n  for ( ptrb = *(_QWORD **)(a1 + 72); ptrb; ptrb = v7 )\n  {\n    v7 = (_QWORD *)ptrb[1];\n    free(ptrb);\n  }\n  free(*(void **)a1);\n  free((void *)a1);\n}\n"], [4228489, "sub_408589", "void *__fastcall sub_408589(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  if ( !*(_QWORD *)(a1 + 72) )\n    return malloc(0x10uLL);\n  v2 = *(_QWORD *)(a1 + 72);\n  *(_QWORD *)(a1 + 72) = *(_QWORD *)(v2 + 8);\n  return (void *)v2;\n}\n"], [4228564, "sub_4085D4", "__int64 __fastcall sub_4085D4(__int64 a1, _QWORD *a2)\n{\n  __int64 result; // rax\n\n  *a2 = 0LL;\n  a2[1] = *(_QWORD *)(a1 + 72);\n  result = a1;\n  *(_QWORD *)(a1 + 72) = a2;\n  return result;\n}\n"], [4228617, "sub_408609", "__int64 __fastcall sub_408609(__int64 a1, __int64 a2, _QWORD *a3, char a4)\n{\n  __int64 result; // rax\n  __int64 v5; // rdx\n  _QWORD *i; // [rsp+20h] [rbp-30h]\n  _QWORD *v9; // [rsp+28h] [rbp-28h]\n  __int64 v10; // [rsp+30h] [rbp-20h]\n  _QWORD *v11; // [rsp+38h] [rbp-18h]\n  __int64 v12; // [rsp+40h] [rbp-10h]\n  _QWORD *v13; // [rsp+48h] [rbp-8h]\n\n  v9 = (_QWORD *)sub_407B64(a1, a2);\n  *a3 = v9;\n  if ( !*v9 )\n    return 0LL;\n  if ( *v9 == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *v9) )\n  {\n    v12 = *v9;\n    if ( a4 )\n    {\n      if ( v9[1] )\n      {\n        v13 = (_QWORD *)v9[1];\n        v5 = v13[1];\n        *v9 = *v13;\n        v9[1] = v5;\n        sub_4085D4(a1, v13);\n      }\n      else\n      {\n        *v9 = 0LL;\n      }\n    }\n    result = v12;\n  }\n  else\n  {\n    for ( i = v9; ; i = (_QWORD *)i[1] )\n    {\n      if ( !i[1] )\n        return 0LL;\n      if ( *(_QWORD *)i[1] == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *(_QWORD *)i[1]) )\n        break;\n    }\n    v10 = *(_QWORD *)i[1];\n    if ( a4 )\n    {\n      v11 = (_QWORD *)i[1];\n      i[1] = v11[1];\n      sub_4085D4(a1, v11);\n    }\n    result = v10;\n  }\n  return result;\n}\n"], [4229022, "sub_40879E", "__int64 __fastcall sub_40879E(__int64 a1, __int64 a2, char a3)\n{\n  __int64 *i; // [rsp+20h] [rbp-30h]\n  __int64 *j; // [rsp+28h] [rbp-28h]\n  __int64 v7; // [rsp+30h] [rbp-20h]\n  __int64 v8; // [rsp+30h] [rbp-20h]\n  _QWORD *v9; // [rsp+38h] [rbp-18h]\n  _QWORD *v10; // [rsp+38h] [rbp-18h]\n  __int64 *v11; // [rsp+40h] [rbp-10h]\n  _QWORD *v12; // [rsp+48h] [rbp-8h]\n\n  for ( i = *(__int64 **)a2; *(_QWORD *)(a2 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (__int64 *)i[1]; j; j = v11 )\n      {\n        v7 = *j;\n        v9 = (_QWORD *)sub_407B64(a1, *j);\n        v11 = (__int64 *)j[1];\n        if ( *v9 )\n        {\n          j[1] = v9[1];\n          v9[1] = j;\n        }\n        else\n        {\n          *v9 = v7;\n          ++*(_QWORD *)(a1 + 24);\n          sub_4085D4(a1, j);\n        }\n      }\n      v8 = *i;\n      i[1] = 0LL;\n      if ( !a3 )\n      {\n        v10 = (_QWORD *)sub_407B64(a1, v8);\n        if ( *v10 )\n        {\n          v12 = sub_408589(a1);\n          if ( !v12 )\n            return 0LL;\n          *v12 = v8;\n          v12[1] = v10[1];\n          v10[1] = v12;\n        }\n        else\n        {\n          *v10 = v8;\n          ++*(_QWORD *)(a1 + 24);\n        }\n        *i = 0LL;\n        --*(_QWORD *)(a2 + 24);\n      }\n    }\n  }\n  return 1LL;\n}\n"], [4229484, "sub_40896C", "__int64 __fastcall sub_40896C(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  unsigned __int64 nmemb; // [rsp+10h] [rbp-60h]\n  void *v4; // [rsp+20h] [rbp-50h] BYREF\n  __int64 v5; // [rsp+28h] [rbp-48h]\n  unsigned __int64 v6; // [rsp+30h] [rbp-40h]\n  __int64 v7; // [rsp+38h] [rbp-38h]\n  __int64 v8; // [rsp+40h] [rbp-30h]\n  __int64 v9; // [rsp+48h] [rbp-28h]\n  __int64 v10; // [rsp+50h] [rbp-20h]\n  __int64 v11; // [rsp+58h] [rbp-18h]\n  __int64 v12; // [rsp+60h] [rbp-10h]\n  __int64 v13; // [rsp+68h] [rbp-8h]\n\n  nmemb = sub_40810A(a2, *(_QWORD *)(a1 + 40));\n  if ( !nmemb )\n    return 0LL;\n  if ( *(_QWORD *)(a1 + 16) == nmemb )\n    return 1LL;\n  v4 = calloc(nmemb, 0x10uLL);\n  if ( !v4 )\n    return 0LL;\n  v6 = nmemb;\n  v5 = (__int64)v4 + 16 * nmemb;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = *(_QWORD *)(a1 + 40);\n  v10 = *(_QWORD *)(a1 + 48);\n  v11 = *(_QWORD *)(a1 + 56);\n  v12 = *(_QWORD *)(a1 + 64);\n  v13 = *(_QWORD *)(a1 + 72);\n  if ( (unsigned __int8)sub_40879E((__int64)&v4, a1, 0) )\n  {\n    free(*(void **)a1);\n    *(_QWORD *)a1 = v4;\n    *(_QWORD *)(a1 + 8) = v5;\n    *(_QWORD *)(a1 + 16) = v6;\n    *(_QWORD *)(a1 + 24) = v7;\n    *(_QWORD *)(a1 + 72) = v13;\n    result = 1LL;\n  }\n  else\n  {\n    *(_QWORD *)(a1 + 72) = v13;\n    if ( (unsigned __int8)sub_40879E(a1, (__int64)&v4, 1) != 1 || (unsigned __int8)sub_40879E(a1, (__int64)&v4, 0) != 1 )\n      abort();\n    free(v4);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4230000, "sub_408B70", "__int64 __fastcall sub_408B70(_QWORD *a1, __int64 a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  __int64 v4; // rax\n  float v5; // xmm0_4\n  __int64 v6; // rdx\n  __int64 v7; // rax\n  float v8; // xmm1_4\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  float v11; // xmm0_4\n  __int64 v12; // rdx\n  __int64 v13; // rax\n  float v14; // xmm1_4\n  __int64 v15; // rdx\n  __int64 v16; // rax\n  float v17; // xmm0_4\n  __int64 v18; // rdx\n  float v19; // xmm0_4\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  __int64 v23; // rax\n  __int64 *v25; // [rsp+30h] [rbp-20h] BYREF\n  __int64 v26; // [rsp+38h] [rbp-18h]\n  __int64 v27; // [rsp+40h] [rbp-10h]\n  _QWORD *v28; // [rsp+48h] [rbp-8h]\n\n  if ( !a2 )\n    abort();\n  v26 = sub_408609((__int64)a1, a2, &v25, 0);\n  if ( v26 )\n  {\n    if ( a3 )\n      *a3 = v26;\n    result = 0LL;\n  }\n  else\n  {\n    v4 = a1[3];\n    if ( v4 < 0 )\n    {\n      v6 = a1[3] & 1LL | ((unsigned __int64)v4 >> 1);\n      v5 = (float)(int)v6 + (float)(int)v6;\n    }\n    else\n    {\n      v5 = (float)(int)v4;\n    }\n    v7 = a1[2];\n    if ( v7 < 0 )\n    {\n      v9 = a1[2] & 1LL | ((unsigned __int64)v7 >> 1);\n      v8 = (float)(int)v9 + (float)(int)v9;\n    }\n    else\n    {\n      v8 = (float)(int)v7;\n    }\n    if ( v5 > (float)(v8 * *(float *)(a1[5] + 8LL)) )\n    {\n      sub_408012((__int64)a1);\n      v10 = a1[3];\n      if ( v10 < 0 )\n      {\n        v12 = a1[3] & 1LL | ((unsigned __int64)v10 >> 1);\n        v11 = (float)(int)v12 + (float)(int)v12;\n      }\n      else\n      {\n        v11 = (float)(int)v10;\n      }\n      v13 = a1[2];\n      if ( v13 < 0 )\n      {\n        v15 = a1[2] & 1LL | ((unsigned __int64)v13 >> 1);\n        v14 = (float)(int)v15 + (float)(int)v15;\n      }\n      else\n      {\n        v14 = (float)(int)v13;\n      }\n      if ( v11 > (float)(v14 * *(float *)(a1[5] + 8LL)) )\n      {\n        v27 = a1[5];\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v16 = a1[2];\n          if ( v16 < 0 )\n          {\n            v18 = a1[2] & 1LL | ((unsigned __int64)v16 >> 1);\n            v17 = (float)(int)v18 + (float)(int)v18;\n          }\n          else\n          {\n            v17 = (float)(int)v16;\n          }\n          v19 = v17 * *(float *)(v27 + 12);\n        }\n        else\n        {\n          v20 = a1[2];\n          if ( v20 < 0 )\n          {\n            v22 = a1[2] & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v19 = (float)(v21 * *(float *)(v27 + 12)) * *(float *)(v27 + 8);\n        }\n        if ( v19 >= 1.8446744e19 )\n          return 0xFFFFFFFFLL;\n        if ( v19 >= 9.223372e18 )\n          v23 = (unsigned int)(int)(float)(v19 - 9.223372e18) ^ 0x8000000000000000LL;\n        else\n          v23 = (unsigned int)(int)v19;\n        if ( (unsigned __int8)sub_40896C((__int64)a1, v23) != 1 )\n          return 0xFFFFFFFFLL;\n        if ( sub_408609((__int64)a1, a2, &v25, 0) )\n          abort();\n      }\n    }\n    if ( *v25 )\n    {\n      v28 = sub_408589((__int64)a1);\n      if ( v28 )\n      {\n        *v28 = a2;\n        v28[1] = v25[1];\n        v25[1] = (__int64)v28;\n        ++a1[4];\n        result = 1LL;\n      }\n      else\n      {\n        result = 0xFFFFFFFFLL;\n      }\n    }\n    else\n    {\n      *v25 = a2;\n      ++a1[4];\n      ++a1[3];\n      result = 1LL;\n    }\n  }\n  return result;\n}\n"], [4230794, "sub_408E8A", "__int64 __fastcall sub_408E8A(_QWORD *a1, __int64 a2)\n{\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h] BYREF\n\n  v3 = sub_408B70(a1, a2, &v4);\n  if ( v3 == -1 )\n    return 0LL;\n  if ( v3 )\n    return a2;\n  return v4;\n}\n"], [4230867, "sub_408ED3", "__int64 __fastcall sub_408ED3(__int64 a1, __int64 a2)\n{\n  __int64 v3; // rax\n  float v4; // xmm0_4\n  __int64 v5; // rdx\n  __int64 v6; // rax\n  float v7; // xmm1_4\n  __int64 v8; // rdx\n  __int64 v9; // rax\n  float v10; // xmm0_4\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  float v13; // xmm1_4\n  __int64 v14; // rdx\n  __int64 v15; // rax\n  float v16; // xmm0_4\n  __int64 v17; // rdx\n  float v18; // xmm0_4\n  __int64 v19; // rax\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  float v23; // xmm0_4\n  _QWORD *v24; // [rsp+10h] [rbp-30h] BYREF\n  void *ptr; // [rsp+18h] [rbp-28h]\n  __int64 v26; // [rsp+20h] [rbp-20h]\n  __int64 v27; // [rsp+28h] [rbp-18h]\n  __int64 v28; // [rsp+30h] [rbp-10h]\n  void *v29; // [rsp+38h] [rbp-8h]\n\n  v26 = sub_408609(a1, a2, &v24, 1);\n  if ( !v26 )\n    return 0LL;\n  --*(_QWORD *)(a1 + 32);\n  if ( !*v24 )\n  {\n    v3 = --*(_QWORD *)(a1 + 24);\n    if ( v3 < 0 )\n    {\n      v5 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v3 >> 1);\n      v4 = (float)(int)v5 + (float)(int)v5;\n    }\n    else\n    {\n      v4 = (float)(int)v3;\n    }\n    v6 = *(_QWORD *)(a1 + 16);\n    if ( v6 < 0 )\n    {\n      v8 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v6 >> 1);\n      v7 = (float)(int)v8 + (float)(int)v8;\n    }\n    else\n    {\n      v7 = (float)(int)v6;\n    }\n    if ( (float)(v7 * **(float **)(a1 + 40)) > v4 )\n    {\n      sub_408012(a1);\n      v9 = *(_QWORD *)(a1 + 24);\n      if ( v9 < 0 )\n      {\n        v11 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v9 >> 1);\n        v10 = (float)(int)v11 + (float)(int)v11;\n      }\n      else\n      {\n        v10 = (float)(int)v9;\n      }\n      v12 = *(_QWORD *)(a1 + 16);\n      if ( v12 < 0 )\n      {\n        v14 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v12 >> 1);\n        v13 = (float)(int)v14 + (float)(int)v14;\n      }\n      else\n      {\n        v13 = (float)(int)v12;\n      }\n      if ( (float)(v13 * **(float **)(a1 + 40)) > v10 )\n      {\n        v27 = *(_QWORD *)(a1 + 40);\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v15 = *(_QWORD *)(a1 + 16);\n          if ( v15 < 0 )\n          {\n            v17 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v15 >> 1);\n            v16 = (float)(int)v17 + (float)(int)v17;\n          }\n          else\n          {\n            v16 = (float)(int)v15;\n          }\n          v18 = v16 * *(float *)(v27 + 4);\n          if ( v18 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v18 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v18;\n        }\n        else\n        {\n          v20 = *(_QWORD *)(a1 + 16);\n          if ( v20 < 0 )\n          {\n            v22 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v23 = (float)(v21 * *(float *)(v27 + 4)) * *(float *)(v27 + 8);\n          if ( v23 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v23 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v23;\n        }\n        v28 = v19;\n        if ( (unsigned __int8)sub_40896C(a1, v19) != 1 )\n        {\n          for ( ptr = *(void **)(a1 + 72); ptr; ptr = v29 )\n          {\n            v29 = (void *)*((_QWORD *)ptr + 1);\n            free(ptr);\n          }\n          *(_QWORD *)(a1 + 72) = 0LL;\n        }\n      }\n    }\n  }\n  return v26;\n}\n"], [4231554, "sub_409182", "__int64 __fastcall sub_409182(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_4091A8(a1, 0, 3, a4, a5, a6);\n}\n"], [4231592, "sub_4091A8", "__int64 __fastcall sub_4091A8(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_60C460 < 0 )\n  {\n    v18 = sub_4091A8(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_4091A8(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_60C460 = -1;\n    }\n    else\n    {\n      dword_60C460 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_60C460 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4232304, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_60BE18 - off_60BE10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_60BE10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4232416, "fini", "void fini(void)\n{\n  ;\n}\n"], [4232432, "sub_4094F0", "int __fastcall sub_4094F0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60C248 )\n    v1 = (void *)qword_60C248;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4232464, "sub_409510", "int __fastcall sub_409510(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4232480, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]