[[4198752, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4198784, "sub_401180", "__int64 sub_401180()\n{\n  return qword_609010();\n}\n"], [4198800, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198816, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198832, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198848, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198864, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198880, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198896, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4198912, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4198928, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4198944, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4198960, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4198976, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4198992, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199008, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199024, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199040, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199056, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199072, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199088, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199104, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199120, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199136, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199152, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4199168, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4199184, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199200, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199216, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199232, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199248, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199264, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199280, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199296, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199312, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199328, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199344, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199360, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199376, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4199392, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199408, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199424, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199440, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199456, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199472, ".memrchr", "// attributes: thunk\nvoid *memrchr(const void *s, int c, size_t n)\n{\n  return memrchr(s, c, n);\n}\n"], [4199488, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4199504, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199520, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4199536, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199552, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199568, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199584, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199600, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199616, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199632, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4199680, "sub_401500", "signed __int64 sub_401500()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60921F - &unk_609218;\n  if ( (unsigned __int64)(&unk_60921F - &unk_609218) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199728, "sub_401530", "__int64 sub_401530()\n{\n  return 0LL;\n}\n"], [4199792, "sub_401570", "signed __int64 sub_401570()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_609278 )\n  {\n    result = sub_401500();\n    byte_609278 = 1;\n  }\n  return result;\n}\n"], [4199824, "sub_401590", "__int64 sub_401590()\n{\n  return sub_401530();\n}\n"], [4199869, "sub_4015BD", "int sub_4015BD()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4039D3(qword_609290);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4039D3(qword_609290);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4039D3(qword_609290);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200135, "sub_4016C7", "void __fastcall __noreturn sub_4016C7(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n\n  v1 = qword_609290;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Print the first 10 lines of each FILE to standard output.\\n\"\n           \"With more than one FILE, precede each with a header giving the file name.\\n\"\n           \"With no FILE, or when FILE is -, read standard input.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -c, --bytes=[-]K         print the first K bytes of each file;\\n\"\n           \"                             with the leading `-', print all but the last\\n\"\n           \"                             K bytes of each file\\n\"\n           \"  -n, --lines=[-]K         print the first K lines instead of the first 10;\\n\"\n           \"                             with the leading `-', print all but the last\\n\"\n           \"                             K lines of each file\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -q, --quiet, --silent    never print headers giving file names\\n\"\n            \"  -v, --verbose            always print headers giving file names\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"\\n\"\n            \"K may have a multiplier suffix:\\n\"\n            \"b 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\n\"\n            \"GB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\n\");\n    fputs_unlocked(v17, v16);\n    sub_4015BD();\n  }\n  exit(a1);\n}\n"], [4200448, "sub_401800", "void __fastcall sub_401800(int a1, __int64 a2)\n{\n  __int64 v2; // r12\n  char *v3; // rbx\n  int *v4; // rax\n  __int64 v5; // r12\n  char *v6; // rbx\n  int *v7; // rax\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n\n  switch ( a1 )\n  {\n    case 2:\n      v5 = sub_403DCC(a2);\n      v6 = gettext(\"error writing %s\");\n      v7 = __errno_location();\n      error(0, *v7, v6, v5);\n      break;\n    case 3:\n      v8 = sub_403DCC(a2);\n      v9 = gettext(\"%s: file has shrunk too much\");\n      v10 = __errno_location();\n      error(0, *v10, v9, v8);\n      break;\n    case 1:\n      v2 = sub_403DCC(a2);\n      v3 = gettext(\"error reading %s\");\n      v4 = __errno_location();\n      error(0, *v4, v3, v2);\n      break;\n    default:\n      abort();\n  }\n}\n"], [4200686, "sub_4018EE", "int __fastcall sub_4018EE(const char *a1)\n{\n  const char *v1; // rax\n  int result; // eax\n\n  if ( byte_6091D0 )\n    v1 = &locale;\n  else\n    v1 = \"\\n\";\n  result = printf(\"%s==> %s <==\\n\", v1, a1);\n  byte_6091D0 = 0;\n  return result;\n}\n"], [4200752, "sub_401930", "__int64 __fastcall sub_401930(unsigned int a1, FILE *a2, unsigned __int64 a3)\n{\n  __int64 v3; // rax\n  unsigned __int64 n; // [rsp+38h] [rbp-2028h]\n  char ptr[8200]; // [rsp+40h] [rbp-2020h] BYREF\n  unsigned __int64 v8; // [rsp+2048h] [rbp-18h]\n\n  v8 = __readfsqword(0x28u);\n  while ( a3 )\n  {\n    v3 = 0x2000LL;\n    if ( a3 <= 0x2000 )\n      v3 = a3;\n    n = sub_405564(a1, ptr, v3);\n    if ( n == -1LL )\n      return 1LL;\n    a3 -= n;\n    if ( !n && a3 )\n      return 3LL;\n    if ( fwrite_unlocked(ptr, 1uLL, n, a2) < n )\n      return 2LL;\n  }\n  return 0LL;\n}\n"], [4201038, "sub_401A4E", "__int64 __fastcall sub_401A4E(__int64 a1, unsigned int a2, unsigned __int64 a3)\n{\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  char *v6; // rbx\n  int *v7; // rax\n  __int64 result; // rax\n  __int64 v9; // r12\n  char *v10; // rbx\n  int *v11; // rax\n  char *v12; // rbx\n  int *v13; // rax\n  unsigned __int8 v14; // [rsp+29h] [rbp-B7h]\n  char v15; // [rsp+2Ah] [rbp-B6h]\n  char v16; // [rsp+2Bh] [rbp-B5h]\n  bool v17; // [rsp+2Ch] [rbp-B4h]\n  unsigned __int8 v18; // [rsp+2Dh] [rbp-B3h]\n  char v19; // [rsp+2Eh] [rbp-B2h]\n  char v20; // [rsp+2Fh] [rbp-B1h]\n  unsigned __int64 v21; // [rsp+30h] [rbp-B0h]\n  unsigned __int64 n; // [rsp+38h] [rbp-A8h]\n  unsigned __int64 v23; // [rsp+40h] [rbp-A0h]\n  unsigned __int64 i; // [rsp+40h] [rbp-A0h]\n  unsigned __int64 v25; // [rsp+48h] [rbp-98h]\n  unsigned __int64 v27; // [rsp+58h] [rbp-88h]\n  unsigned __int64 v28; // [rsp+60h] [rbp-80h]\n  unsigned __int64 v29; // [rsp+68h] [rbp-78h]\n  unsigned __int64 v30; // [rsp+78h] [rbp-68h]\n  _QWORD *v31; // [rsp+80h] [rbp-60h]\n  size_t v32; // [rsp+88h] [rbp-58h]\n  void *ptr[8]; // [rsp+A0h] [rbp-40h]\n\n  ptr[5] = (void *)__readfsqword(0x28u);\n  if ( a3 > 0x100000 )\n  {\n    v18 = 1;\n    v19 = 0;\n    v29 = 0x2000 - (a3 & 0x1FFF);\n    v30 = ((a3 + v29) >> 13) + 1;\n    v31 = (_QWORD *)sub_40605A(v30, 8LL);\n    v20 = 0;\n    v23 = 0LL;\n    v25 = 1LL;\n    while ( v19 != 1 )\n    {\n      if ( !v31[v23] )\n        v31[v23] = sub_405F6F(0x2000LL);\n      n = sub_403A8A(a2, v31[v23], 0x2000LL);\n      if ( n <= 0x1FFF )\n      {\n        if ( *__errno_location() )\n        {\n          v9 = sub_403DCC(a1);\n          v10 = gettext(\"error reading %s\");\n          v11 = __errno_location();\n          error(0, *v11, v10, v9);\n          v18 = 0;\n          goto LABEL_39;\n        }\n        v19 = 1;\n      }\n      if ( v23 + 1 == v30 )\n        v20 = 1;\n      if ( v20 && fwrite_unlocked((const void *)v31[v25], 1uLL, n, stdout) < n )\n      {\n        v12 = gettext(\"write error\");\n        v13 = __errno_location();\n        error(0, *v13, v12);\n        v18 = 0;\n        goto LABEL_39;\n      }\n      v23 = v25;\n      v25 = (v25 + 1) % v30;\n    }\n    if ( v29 )\n    {\n      if ( v20 )\n      {\n        v32 = 0x2000 - n;\n        if ( v29 >= 0x2000 - n )\n        {\n          fwrite_unlocked((const void *)(v31[v23] + n), 1uLL, v32, stdout);\n          fwrite_unlocked((const void *)v31[v25], 1uLL, v29 - v32, stdout);\n        }\n        else\n        {\n          fwrite_unlocked((const void *)(v31[v23] + n), 1uLL, v29, stdout);\n        }\n      }\n      else if ( v23 + 1 == v30 )\n      {\n        fwrite_unlocked((const void *)v31[v25], 1uLL, n - (0x2000 - v29), stdout);\n      }\n    }\nLABEL_39:\n    for ( i = 0LL; i < v30; ++i )\n      free((void *)v31[i]);\n    free(v31);\n    result = v18;\n  }\n  else\n  {\n    v14 = 1;\n    v15 = 1;\n    v16 = 0;\n    v27 = a3 + 0x2000;\n    ptr[0] = (void *)sub_405E26(2LL, a3 + 0x2000);\n    ptr[1] = (char *)ptr[0] + a3 + 0x2000;\n    v17 = 0;\n    while ( v16 != 1 )\n    {\n      v28 = sub_403A8A(a2, ptr[v17], v27);\n      v21 = 0LL;\n      if ( v28 < v27 )\n      {\n        if ( *__errno_location() )\n        {\n          v3 = sub_403DCC(a1);\n          v4 = gettext(\"error reading %s\");\n          v5 = __errno_location();\n          error(0, *v5, v4, v3);\n          v14 = 0;\n          break;\n        }\n        if ( v28 <= a3 && !v15 )\n          v21 = a3 - v28;\n        v16 = 1;\n      }\n      if ( v15 != 1 )\n        fwrite_unlocked((char *)ptr[!v17] + 0x2000, 1uLL, a3 - v21, stdout);\n      v15 = 0;\n      if ( a3 < v28 && fwrite_unlocked(ptr[v17], 1uLL, v28 - a3, stdout) < v28 - a3 )\n      {\n        v6 = gettext(\"write error\");\n        v7 = __errno_location();\n        error(0, *v7, v6);\n        v14 = 0;\n        break;\n      }\n      v17 = !v17;\n    }\n    free(ptr[0]);\n    result = v14;\n  }\n  return result;\n}\n"], [4202753, "sub_402101", "__int64 __fastcall sub_402101(__int64 a1, unsigned int a2, unsigned __int64 a3)\n{\n  __int64 result; // rax\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  unsigned __int64 v7; // rax\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  int v12; // [rsp+2Ch] [rbp-C4h]\n  __off_t whence; // [rsp+30h] [rbp-C0h]\n  __off_t v14; // [rsp+38h] [rbp-B8h]\n  unsigned __int64 v15; // [rsp+48h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+50h] [rbp-A0h] BYREF\n\n  if ( byte_609279 || (unsigned int)sub_406950(a2, &stat_buf) || (stat_buf.st_mode & 0xF000) != 0x8000 )\n    return sub_401A4E(a1, a2, a3);\n  whence = lseek(a2, 0LL, 1);\n  if ( whence == -1 || (v14 = lseek(a2, 0LL, 2), v14 == -1) )\n  {\n    v4 = sub_403DCC(a1);\n    v5 = gettext(\"cannot lseek %s\");\n    v6 = __errno_location();\n    error(0, *v6, v5, v4);\n    result = 0LL;\n  }\n  else\n  {\n    if ( v14 - whence < 0 )\n      v7 = 0LL;\n    else\n      v7 = v14 - whence;\n    v15 = v7;\n    if ( v7 > a3 )\n    {\n      if ( lseek(a2, 0LL, whence) == -1 )\n      {\n        v8 = sub_403DCC(a1);\n        v9 = gettext(\"%s: cannot lseek back to original position\");\n        v10 = __errno_location();\n        error(0, *v10, v9, v8);\n        result = 0LL;\n      }\n      else\n      {\n        v12 = sub_401930(a2, stdout, v15 - a3);\n        if ( v12 )\n        {\n          sub_401800(v12, a1);\n          result = 0LL;\n        }\n        else\n        {\n          result = 1LL;\n        }\n      }\n    }\n    else\n    {\n      result = 1LL;\n    }\n  }\n  return result;\n}\n"], [4203316, "sub_402334", "__int64 __fastcall sub_402334(__int64 a1, unsigned int a2, size_t a3)\n{\n  size_t v3; // rax\n  char *i; // rax\n  __int64 v5; // r12\n  char *v6; // rbx\n  int *v7; // rax\n  unsigned __int8 v10; // [rsp+2Fh] [rbp-61h]\n  size_t *ptr; // [rsp+30h] [rbp-60h]\n  size_t *v12; // [rsp+38h] [rbp-58h]\n  size_t *src; // [rsp+40h] [rbp-50h]\n  size_t *srca; // [rsp+40h] [rbp-50h]\n  size_t *srcb; // [rsp+40h] [rbp-50h]\n  size_t v16; // [rsp+48h] [rbp-48h]\n  size_t v17; // [rsp+58h] [rbp-38h]\n  char *j; // [rsp+60h] [rbp-30h]\n  size_t v19; // [rsp+68h] [rbp-28h]\n  char *v20; // [rsp+70h] [rbp-20h]\n  char *v21; // [rsp+78h] [rbp-18h]\n\n  v16 = 0LL;\n  v10 = 1;\n  v12 = (size_t *)sub_405F6F(8216LL);\n  ptr = v12;\n  v12[1025] = 0LL;\n  v12[1024] = v12[1025];\n  v12[1026] = 0LL;\n  src = (size_t *)sub_405F6F(8216LL);\n  while ( 1 )\n  {\n    v3 = sub_405564(a2, src, 0x2000LL);\n    v19 = v3;\n    if ( !v3 || v3 == -1LL )\n      break;\n    src[1024] = v3;\n    src[1025] = 0LL;\n    src[1026] = 0LL;\n    v20 = (char *)src + v3;\n    for ( i = (char *)memchr(src, 10, v3); i; i = (char *)memchr(i + 1, 10, v20 - (i + 1)) )\n      ++src[1025];\n    v16 += src[1025];\n    if ( src[1024] + v12[1024] > 0x1FFF )\n    {\n      v12[1026] = (size_t)src;\n      v12 = (size_t *)v12[1026];\n      if ( v16 - ptr[1025] <= a3 )\n      {\n        src = (size_t *)sub_405F6F(8216LL);\n      }\n      else\n      {\n        fwrite_unlocked(ptr, 1uLL, ptr[1024], stdout);\n        src = ptr;\n        v16 -= ptr[1025];\n        ptr = (size_t *)ptr[1026];\n      }\n    }\n    else\n    {\n      memcpy((char *)v12 + v12[1024], src, src[1024]);\n      v12[1024] += src[1024];\n      v12[1025] += src[1025];\n    }\n  }\n  free(src);\n  if ( v19 == -1LL )\n  {\n    v5 = sub_403DCC(a1);\n    v6 = gettext(\"error reading %s\");\n    v7 = __errno_location();\n    error(0, *v7, v6, v5);\n    v10 = 0;\n  }\n  else\n  {\n    if ( v12[1024] && *((_BYTE *)v12 + v12[1024] - 1) != 10 )\n    {\n      ++v12[1025];\n      ++v16;\n    }\n    for ( srca = ptr; v16 - srca[1025] > a3; srca = (size_t *)srca[1026] )\n    {\n      fwrite_unlocked(srca, 1uLL, srca[1024], stdout);\n      v16 -= srca[1025];\n    }\n    if ( a3 < v16 )\n    {\n      v17 = v16 - a3;\n      v21 = (char *)srca + srca[1024];\n      for ( j = (char *)srca; v17; ++j )\n      {\n        j = (char *)memchr(j, 10, v21 - j);\n        if ( !j )\n          break;\n        ++srca[1025];\n        --v17;\n      }\n      fwrite_unlocked(srca, 1uLL, j - (char *)srca, stdout);\n    }\n  }\n  while ( ptr )\n  {\n    srcb = (size_t *)ptr[1026];\n    free(ptr);\n    ptr = srcb;\n  }\n  return v10;\n}\n"], [4204486, "sub_4027C6", "__int64 __fastcall sub_4027C6(__int64 a1, unsigned int a2, __int64 a3, __off_t a4, __int64 a5)\n{\n  __int64 v5; // r12\n  char *v6; // rbx\n  int *v7; // rax\n  __int64 result; // rax\n  __int64 v9; // r12\n  char *v10; // rbx\n  int *v11; // rax\n  const char *v13; // rbx\n  int *v14; // rax\n  __int64 v15; // r12\n  char *v16; // rbx\n  int *v17; // rax\n  __int64 v18; // r12\n  char *v19; // rbx\n  int *v20; // rax\n  int v23; // [rsp+3Ch] [rbp-2064h]\n  __int64 v24; // [rsp+40h] [rbp-2060h]\n  __int64 v25; // [rsp+40h] [rbp-2060h]\n  __off_t offset; // [rsp+48h] [rbp-2058h]\n  size_t n; // [rsp+50h] [rbp-2050h]\n  _BYTE *v28; // [rsp+58h] [rbp-2048h]\n  char v29[32]; // [rsp+60h] [rbp-2040h] BYREF\n  char s[8200]; // [rsp+80h] [rbp-2020h] BYREF\n  unsigned __int64 v31; // [rsp+2088h] [rbp-18h]\n\n  v31 = __readfsqword(0x28u);\n  v24 = (a5 - a4) % 0x2000;\n  if ( !v24 )\n    v24 = 0x2000LL;\n  offset = a5 - v24;\n  if ( lseek(a2, a5 - v24, 0) >= 0 )\n  {\n    v25 = sub_405564(a2, s, v24);\n    if ( v25 == -1 )\n    {\n      v9 = sub_403DCC(a1);\n      v10 = gettext(\"error reading %s\");\n      v11 = __errno_location();\n      error(0, *v11, v10, v9);\n      result = 0LL;\n    }\n    else\n    {\n      if ( v25 && s[v25 - 1] != 10 )\n        --a3;\nLABEL_10:\n      n = v25;\n      do\n      {\n        if ( !n || (v28 = memrchr(s, 10, n)) == 0LL )\n        {\n          if ( offset == a4 )\n            return 1LL;\n          offset -= 0x2000LL;\n          if ( lseek(a2, offset, 0) < 0 )\n          {\n            v15 = sub_403B0A(offset, v29);\n            v16 = gettext(\"%s: cannot seek to offset %s\");\n            v17 = __errno_location();\n            error(0, *v17, v16, a1, v15);\n            return 0LL;\n          }\n          v25 = sub_405564(a2, s, 0x2000LL);\n          if ( v25 == -1 )\n          {\n            v18 = sub_403DCC(a1);\n            v19 = gettext(\"error reading %s\");\n            v20 = __errno_location();\n            error(0, *v20, v19, v18);\n            return 0LL;\n          }\n          if ( !v25 )\n            return 1LL;\n          goto LABEL_10;\n        }\n        n = v28 - s;\n      }\n      while ( a3-- );\n      if ( a4 >= offset )\n        goto LABEL_18;\n      if ( lseek(a2, a4, 0) < 0 )\n      {\n        v13 = (const char *)sub_403DCC(a1);\n        v14 = __errno_location();\n        error(0, *v14, \"%s: unable to restore file pointer to initial offset\", v13);\n        return 0LL;\n      }\n      v23 = sub_401930(a2, stdout, offset - a4);\n      if ( v23 )\n      {\n        sub_401800(v23, a1);\n        result = 0LL;\n      }\n      else\n      {\nLABEL_18:\n        fwrite_unlocked(s, 1uLL, n + 1, stdout);\n        result = 1LL;\n      }\n    }\n  }\n  else\n  {\n    v5 = sub_403B0A(offset, s);\n    v6 = gettext(\"%s: cannot seek to offset %s\");\n    v7 = __errno_location();\n    error(0, *v7, v6, a1, v5);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4205663, "sub_402C5F", "__int64 __fastcall sub_402C5F(__int64 a1, unsigned int a2, size_t a3)\n{\n  __int64 v5; // [rsp+20h] [rbp-10h]\n  __int64 v6; // [rsp+28h] [rbp-8h]\n\n  if ( byte_609279 == 1 )\n    return sub_402334(a1, a2, a3);\n  v5 = lseek(a2, 0LL, 1);\n  v6 = lseek(a2, 0LL, 2);\n  if ( v5 < 0 || v5 >= v6 )\n    return sub_402334(a1, a2, a3);\n  if ( v6 )\n    return sub_4027C6(a1, a2, a3, v5, v6);\n  return 1LL;\n}\n"], [4205830, "sub_402D06", "__int64 __fastcall sub_402D06(__int64 a1, unsigned int a2, unsigned __int64 a3)\n{\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  char *v7; // rbx\n  int *v8; // rax\n  unsigned __int64 v10; // [rsp+20h] [rbp-2030h]\n  unsigned __int64 n; // [rsp+28h] [rbp-2028h]\n  char ptr[8200]; // [rsp+30h] [rbp-2020h] BYREF\n  unsigned __int64 v13; // [rsp+2038h] [rbp-18h]\n\n  v13 = __readfsqword(0x28u);\n  v10 = 0x2000LL;\n  while ( a3 )\n  {\n    if ( a3 < v10 )\n      v10 = a3;\n    n = sub_405564(a2, ptr, v10);\n    if ( n == -1LL )\n    {\n      v3 = sub_403DCC(a1);\n      v4 = gettext(\"error reading %s\");\n      v5 = __errno_location();\n      error(0, *v5, v4, v3);\n      return 0LL;\n    }\n    if ( !n )\n      break;\n    if ( fwrite_unlocked(ptr, 1uLL, n, stdout) < n )\n    {\n      v7 = gettext(\"write error\");\n      v8 = __errno_location();\n      error(1, *v8, v7);\n    }\n    a3 -= n;\n  }\n  return 1LL;\n}\n"], [4206203, "sub_402E7B", "__int64 __fastcall sub_402E7B(__int64 a1, unsigned int a2, __int64 a3)\n{\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  size_t v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  char *v10; // rbx\n  int *v11; // rax\n  int errnum; // [rsp+24h] [rbp-20CCh]\n  size_t n; // [rsp+28h] [rbp-20C8h]\n  unsigned __int64 v15; // [rsp+30h] [rbp-20C0h]\n  struct stat stat_buf; // [rsp+40h] [rbp-20B0h] BYREF\n  char ptr[8200]; // [rsp+D0h] [rbp-2020h] BYREF\n  unsigned __int64 v18; // [rsp+20D8h] [rbp-18h]\n\n  v18 = __readfsqword(0x28u);\n  while ( a3 )\n  {\n    v15 = sub_405564(a2, ptr, 0x2000LL);\n    n = 0LL;\n    if ( v15 == -1LL )\n    {\n      v3 = sub_403DCC(a1);\n      v4 = gettext(\"error reading %s\");\n      v5 = __errno_location();\n      error(0, *v5, v4, v3);\n      return 0LL;\n    }\n    if ( !v15 )\n      break;\n    while ( n < v15 )\n    {\n      v7 = n++;\n      if ( ptr[v7] == 10 && !--a3 )\n      {\n        if ( lseek(a2, n - v15, 1) < 0 )\n        {\n          errnum = *__errno_location();\n          if ( (unsigned int)sub_406950(a2, &stat_buf) || (stat_buf.st_mode & 0xF000) == 0x8000 )\n          {\n            v8 = sub_403DCC(a1);\n            v9 = gettext(\"cannot reposition file pointer for %s\");\n            error(0, errnum, v9, v8);\n          }\n        }\n        break;\n      }\n    }\n    if ( fwrite_unlocked(ptr, 1uLL, n, stdout) < n )\n    {\n      v10 = gettext(\"write error\");\n      v11 = __errno_location();\n      error(1, *v11, v10);\n    }\n  }\n  return 1LL;\n}\n"], [4206799, "sub_4030CF", "__int64 __fastcall sub_4030CF(const char *a1, unsigned int a2, size_t a3, char a4, char a5)\n{\n  __int64 result; // rax\n\n  if ( byte_60927A )\n    sub_4018EE(a1);\n  if ( a5 )\n  {\n    if ( a4 )\n      result = sub_402C5F((__int64)a1, a2, a3);\n    else\n      result = sub_402101((__int64)a1, a2, a3);\n  }\n  else if ( a4 )\n  {\n    result = sub_402E7B((__int64)a1, a2, a3);\n  }\n  else\n  {\n    result = sub_402D06((__int64)a1, a2, a3);\n  }\n  return result;\n}\n"], [4206962, "sub_403172", "__int64 __fastcall sub_403172(const char *a1, size_t a2, char a3, char a4)\n{\n  int v4; // eax\n  unsigned __int8 v5; // al\n  __int64 v6; // r12\n  char *v7; // rbx\n  int *v8; // rax\n  __int64 v10; // r12\n  char *v11; // rbx\n  int *v12; // rax\n  const char *s1; // [rsp+18h] [rbp-28h]\n  bool v16; // [rsp+2Ah] [rbp-16h]\n  unsigned __int8 v17; // [rsp+2Bh] [rbp-15h]\n  int fd; // [rsp+2Ch] [rbp-14h]\n\n  s1 = a1;\n  v4 = strcmp(a1, \"-\");\n  v16 = v4 == 0;\n  if ( v4 )\n  {\n    fd = open(a1, 0);\n    if ( fd < 0 )\n    {\n      v6 = sub_403DCC(a1);\n      v7 = gettext(\"cannot open %s for reading\");\n      v8 = __errno_location();\n      error(0, *v8, v7, v6);\n      return 0LL;\n    }\n    v5 = sub_4030CF(a1, fd, a2, a3, a4);\n  }\n  else\n  {\n    byte_60927B = 1;\n    fd = 0;\n    s1 = gettext(\"standard input\");\n    v5 = sub_4030CF(s1, 0, a2, a3, a4);\n  }\n  v17 = v5;\n  if ( v16 || !close(fd) )\n    return v17;\n  v10 = sub_403DCC(s1);\n  v11 = gettext(\"closing %s\");\n  v12 = __errno_location();\n  error(0, *v12, v11, v10);\n  return 0LL;\n}\n"], [4207282, "sub_4032B2", "__int64 __fastcall sub_4032B2(char a1, const char *a2)\n{\n  char *v2; // rbx\n  char *v3; // rax\n  char *v4; // rax\n  int v6; // [rsp+14h] [rbp-1Ch]\n  __int64 v7[3]; // [rsp+18h] [rbp-18h] BYREF\n\n  v6 = sub_4061C6(a2, 0LL, 10LL, v7, \"bkKmMGTPEZY0\");\n  if ( v6 == 1 )\n  {\n    if ( a1 )\n      v2 = gettext(\"number of lines\");\n    else\n      v2 = gettext(\"number of bytes\");\n    v3 = gettext(\"%s: %s is so large that it is not representable\");\n    error(1, 0, v3, a2, v2);\n  }\n  if ( v6 )\n  {\n    if ( a1 )\n      v4 = gettext(\"invalid number of lines\");\n    else\n      v4 = gettext(\"invalid number of bytes\");\n    error(1, 0, \"%s: %s\", a2, v4);\n  }\n  return v7[0];\n}\n"], [4207501, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  int v3; // eax\n  unsigned int v4; // ebx\n  char *v5; // rax\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  char **v9; // rax\n  int *v10; // rax\n  char *const *argv; // [rsp+10h] [rbp-80h]\n  int argc; // [rsp+1Ch] [rbp-74h]\n  bool v13; // [rsp+24h] [rbp-6Ch]\n  char v14; // [rsp+25h] [rbp-6Bh]\n  bool v15; // [rsp+26h] [rbp-6Ah]\n  char v16; // [rsp+27h] [rbp-69h]\n  int v17; // [rsp+28h] [rbp-68h]\n  int v18; // [rsp+2Ch] [rbp-64h]\n  __int64 i; // [rsp+30h] [rbp-60h]\n  __int64 v20; // [rsp+38h] [rbp-58h]\n  char *v21; // [rsp+40h] [rbp-50h]\n  const char *v22; // [rsp+48h] [rbp-48h]\n  char *v23; // [rsp+50h] [rbp-40h]\n  char **v24; // [rsp+58h] [rbp-38h]\n  char v25[24]; // [rsp+60h] [rbp-30h] BYREF\n  unsigned __int64 v26; // [rsp+78h] [rbp-18h]\n\n  argc = a1;\n  argv = a2;\n  v26 = __readfsqword(0x28u);\n  v17 = 0;\n  v13 = 1;\n  v20 = 10LL;\n  v14 = 1;\n  v15 = 0;\n  sub_403CC1(*a2, a2, a3);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_406930(sub_4038E8);\n  byte_60927B = 0;\n  byte_60927A = 0;\n  if ( a1 <= 1 || *a2[1] != 45 || (unsigned int)(a2[1][1] - 48) > 9 )\n    goto LABEL_53;\n  v21 = a2[1] + 1;\n  v22 = v21;\n  v16 = 0;\n  do\n    ++v21;\n  while ( (unsigned int)(*v21 - 48) <= 9 );\n  v23 = v21;\n  while ( 1 )\n  {\n    if ( !*v21 )\n    {\n      *v23 = v16;\n      if ( v16 )\n        v23[1] = 0;\n      v20 = sub_4032B2(v14, v22);\n      a2[1] = *a2;\n      argv = a2 + 1;\n      argc = a1 - 1;\n      while ( 1 )\n      {\nLABEL_53:\n        v18 = getopt_long(argc, argv, \"c:n:qv0123456789\", &longopts, 0LL);\n        if ( v18 == -1 )\n        {\n          if ( v17 == 1 || !v17 && argc - 1 > optind )\n            byte_60927A = 1;\n          if ( v14 != 1 && v15 && v20 < 0 )\n          {\n            v7 = sub_403C3C(v20, v25);\n            v8 = gettext(\"%s: number of bytes is too large\");\n            error(1, 0, v8, v7);\n          }\n          if ( optind >= argc )\n            v9 = &off_407370;\n          else\n            v9 = (char **)&argv[optind];\n          v24 = v9;\n          for ( i = 0LL; v24[i]; ++i )\n            v13 = (v13 & (unsigned __int8)sub_403172(v24[i], v20, v14, v15)) != 0;\n          if ( byte_60927B )\n          {\n            if ( close(0) < 0 )\n            {\n              v10 = __errno_location();\n              error(1, *v10, \"-\");\n            }\n          }\n          exit(!v13);\n        }\n        if ( v18 == 110 )\n          break;\n        if ( v18 <= 110 )\n        {\n          if ( v18 == -130 )\n            sub_4016C7(0);\n          if ( v18 != 99 )\n          {\n            if ( v18 == -131 )\n            {\n              sub_405D07(\n                (_DWORD)stdout,\n                (unsigned int)\"head\",\n                (unsigned int)\"GNU coreutils\",\n                (_DWORD)off_6091D8,\n                (unsigned int)\"David MacKenzie\",\n                (unsigned int)\"Jim Meyering\",\n                0);\n              exit(0);\n            }\nLABEL_50:\n            if ( (unsigned int)(v18 - 48) <= 9 )\n            {\n              v6 = gettext(\"invalid trailing option -- %c\");\n              error(0, 0, v6, (unsigned int)v18);\n            }\n            sub_4016C7(1);\n          }\n          v14 = 0;\n          v15 = *(_BYTE *)optarg == 45;\n          if ( *(_BYTE *)optarg == 45 )\n            ++optarg;\n          goto LABEL_42;\n        }\n        switch ( v18 )\n        {\n          case 118:\n            v17 = 1;\n            break;\n          case 128:\n            byte_609279 = 1;\n            break;\n          case 113:\n            v17 = 2;\n            break;\n          default:\n            goto LABEL_50;\n        }\n      }\n      v14 = 1;\n      v15 = *(_BYTE *)optarg == 45;\n      if ( *(_BYTE *)optarg == 45 )\n        ++optarg;\nLABEL_42:\n      v20 = sub_4032B2(v14, (const char *)optarg);\n      goto LABEL_53;\n    }\n    v3 = *v21;\n    if ( v3 == 108 )\n    {\n      v14 = 1;\n    }\n    else\n    {\n      if ( v3 <= 108 )\n      {\n        if ( v3 == 99 )\n        {\n          v14 = 0;\n          v16 = 0;\n          goto LABEL_23;\n        }\n        if ( v3 != 107 && v3 != 98 )\n        {\nLABEL_22:\n          v4 = *v21;\n          v5 = gettext(\"invalid trailing option -- %c\");\n          error(0, 0, v5, v4);\n          sub_4016C7(1);\n        }\n        goto LABEL_18;\n      }\n      switch ( v3 )\n      {\n        case 'q':\n          v17 = 2;\n          break;\n        case 'v':\n          v17 = 1;\n          break;\n        case 'm':\nLABEL_18:\n          v14 = 0;\n          v16 = *v21;\n          break;\n        default:\n          goto LABEL_22;\n      }\n    }\nLABEL_23:\n    ++v21;\n  }\n}\n"], [4208851, "sub_4038D3", "__int64 __fastcall sub_4038D3(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_609288 = a1;\n  return result;\n}\n"], [4208872, "sub_4038E8", "__int64 sub_4038E8()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_406632(stdout) && (byte_609288 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_609280 )\n    {\n      v0 = (const char *)sub_4053E5(qword_609280);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_406632(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4209107, "sub_4039D3", "_BYTE *__fastcall sub_4039D3(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4209212, "sub_403A3C", "size_t __fastcall sub_403A3C(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4209290, "sub_403A8A", "__int64 __fastcall sub_403A8A(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  __int64 v7; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  while ( a3 )\n  {\n    v7 = sub_405564(a1, a2, a3);\n    if ( v7 == -1 )\n      break;\n    if ( !v7 )\n    {\n      *__errno_location() = 0;\n      return v5;\n    }\n    v5 += v7;\n    a2 += v7;\n    a3 -= v7;\n  }\n  return v5;\n}\n"], [4209418, "sub_403B0A", "__int64 __fastcall sub_403B0A(__int64 a1, __int64 a2)\n{\n  __int64 v3; // [rsp+8h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = a1;\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  if ( a1 >= 0 )\n  {\n    do\n    {\n      *(_BYTE *)--v4 = (char)v3 % 10 + 48;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n  }\n  else\n  {\n    do\n    {\n      *(_BYTE *)--v4 = 48 - (char)v3 % 10;\n      v3 /= 10LL;\n    }\n    while ( v3 );\n    *(_BYTE *)--v4 = 45;\n  }\n  return v4;\n}\n"], [4209724, "sub_403C3C", "__int64 __fastcall sub_403C3C(unsigned __int64 a1, __int64 a2)\n{\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  do\n  {\n    *(_BYTE *)--v4 = a1 % 0xA + 48;\n    a1 /= 0xAuLL;\n  }\n  while ( a1 );\n  return v4;\n}\n"], [4209857, "sub_403CC1", "char *__fastcall sub_403CC1(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_609290 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4210088, "sub_403DA8", "__int64 __fastcall sub_403DA8(unsigned int a1, __int64 a2)\n{\n  return sub_405257(a1, 6LL, a2);\n}\n"], [4210124, "sub_403DCC", "__int64 __fastcall sub_403DCC(__int64 a1)\n{\n  return sub_403DA8(0, a1);\n}\n"], [4210155, "sub_403DEB", "__int64 __fastcall sub_403DEB(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6092A0;\n  v4 = sub_406093(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4210228, "sub_403E34", "__int64 __fastcall sub_403E34(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6092A0;\n  return *(unsigned int *)v1;\n}\n"], [4210258, "sub_403E52", "__int64 *__fastcall sub_403E52(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6092A0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4210294, "sub_403E76", "__int64 __fastcall sub_403E76(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6092A0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4210430, "sub_403EFE", "__int64 __fastcall sub_403EFE(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6092A0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4210481, "sub_403F31", "__int64 *__fastcall sub_403F31(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6092A0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4210571, "sub_403F8B", "_QWORD *__fastcall sub_403F8B(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4210691, "sub_404003", "char *__fastcall sub_404003(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4210752, "sub_404040", "unsigned __int64 __fastcall sub_404040(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_404003((const char *)L\"`'\", a5);\n        a9 = sub_404003((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_404040(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4213899, "sub_404C8B", "unsigned __int64 __fastcall sub_404C8B(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6092A0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_404040(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4214059, "sub_404D2B", "__int64 __fastcall sub_404D2B(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404D5D(a1, a2, 0LL, a3);\n}\n"], [4214109, "sub_404D5D", "__int64 __fastcall sub_404D5D(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6092A0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_404040(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_405F55(v10);\n  sub_404040(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4214409, "sub_404E89", "void sub_404E89()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_609210;\n  for ( i = 1; i < dword_6091F0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6092E0 )\n  {\n    free(ptr[1]);\n    qword_609200 = 256LL;\n    off_609208 = &unk_6092E0;\n  }\n  if ( ptr != (void **)&qword_609200 )\n  {\n    free(ptr);\n    off_609210 = &qword_609200;\n  }\n  dword_6091F0 = 1;\n}\n"], [4214580, "sub_404F34", "void *__fastcall sub_404F34(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_609210;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6091F0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_609210 == &qword_609200;\n    if ( off_609210 == &qword_609200 )\n      v4 = 0LL;\n    else\n      v4 = off_609210;\n    v12 = (__int64 *)sub_405FA4(v4, 16 * v14);\n    off_609210 = v12;\n    if ( v9 )\n    {\n      v5 = off_609208;\n      *v12 = qword_609200;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6091F0], 0, 16 * (v14 - (unsigned int)dword_6091F0));\n    dword_6091F0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_404040((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6092E0 )\n      free(ptr);\n    ptr = (void *)sub_405F55(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_404040((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4215226, "sub_4051BA", "void *__fastcall sub_4051BA(int a1, __int64 a2)\n{\n  return sub_404F34(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6092A0);\n}\n"], [4215269, "sub_4051E5", "void *__fastcall sub_4051E5(int a1, __int64 a2, size_t a3)\n{\n  return sub_404F34(a1, a2, a3, (__int64)&qword_6092A0);\n}\n"], [4215313, "sub_405211", "void *__fastcall sub_405211(__int64 a1)\n{\n  return sub_4051BA(0, a1);\n}\n"], [4215344, "sub_405230", "void *__fastcall sub_405230(__int64 a1, size_t a2)\n{\n  return sub_4051E5(0, a1, a2);\n}\n"], [4215383, "sub_405257", "void *__fastcall sub_405257(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403F8B(v5, a2);\n  return sub_404F34(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4215448, "sub_405298", "void *__fastcall sub_405298(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403F8B(v7, a2);\n  return sub_404F34(a1, a3, a4, (__int64)v7);\n}\n"], [4215511, "sub_4052D7", "void *__fastcall sub_4052D7(int a1, __int64 a2)\n{\n  return sub_405257(0, a1, a2);\n}\n"], [4215547, "sub_4052FB", "void *__fastcall sub_4052FB(int a1, __int64 a2, size_t a3)\n{\n  return sub_405298(0, a1, a2, a3);\n}\n"], [4215591, "sub_405327", "void *__fastcall sub_405327(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6092A0;\n  v4[1] = qword_6092A8;\n  v4[2] = qword_6092B0;\n  v4[3] = qword_6092B8;\n  v4[4] = qword_6092C0;\n  v4[5] = qword_6092C8;\n  v4[6] = qword_6092D0;\n  sub_403E76(v4, a3, 1);\n  return sub_404F34(0, a1, a2, (__int64)v4);\n}\n"], [4215739, "sub_4053BB", "void *__fastcall sub_4053BB(__int64 a1, unsigned __int8 a2)\n{\n  return sub_405327(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4215781, "sub_4053E5", "void *__fastcall sub_4053E5(__int64 a1)\n{\n  return sub_4053BB(a1, 0x3Au);\n}\n"], [4215812, "sub_405404", "void *__fastcall sub_405404(__int64 a1, size_t a2)\n{\n  return sub_405327(a1, a2, 0x3Au);\n}\n"], [4215854, "sub_40542E", "__int64 __fastcall sub_40542E(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_405464(a1, a2, a3, a4, -1LL);\n}\n"], [4215908, "sub_405464", "void *__fastcall sub_405464(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6092A0;\n  v8[1] = qword_6092A8;\n  v8[2] = qword_6092B0;\n  v8[3] = qword_6092B8;\n  v8[4] = qword_6092C0;\n  v8[5] = qword_6092C8;\n  v8[6] = qword_6092D0;\n  sub_403F31(v8, a2, a3);\n  return sub_404F34(a1, a4, a5, (__int64)v8);\n}\n"], [4216059, "sub_4054FB", "__int64 __fastcall sub_4054FB(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40542E(0, a1, a2, a3);\n}\n"], [4216106, "sub_40552A", "void *__fastcall sub_40552A(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_405464(0, a1, a2, a3, a4);\n}\n"], [4216164, "sub_405564", "ssize_t __fastcall sub_405564(int a1, void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = read(a1, a2, a3); ; result = read(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4216277, "sub_4055D5", "int __fastcall sub_4055D5(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4217792, "sub_405BC0", "int __fastcall sub_405BC0(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4055D5(a1, a2, a3, a4, a5, i);\n}\n"], [4217902, "sub_405C2E", "int __fastcall sub_405C2E(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4055D5(a1, a2, a3, a4, v8, i);\n}\n"], [4218119, "sub_405D07", "int sub_405D07(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_405C2E(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4218301, "sub_405DBD", "int sub_405DBD()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4218406, "sub_405E26", "__int64 __fastcall sub_405E26(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4060F1(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_405F6F(a2 * a1);\n}\n"], [4218468, "sub_405E64", "__int64 __fastcall sub_405E64(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4060F1(a1, a2, v4);\n  return sub_405FA4(a1, a3 * a2);\n}\n"], [4218544, "sub_405EB0", "__int64 __fastcall sub_405EB0(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4060F1(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_405FA4(a1, a3 * v6);\n}\n"], [4218709, "sub_405F55", "__int64 __fastcall sub_405F55(__int64 a1)\n{\n  return sub_405F6F(a1);\n}\n"], [4218735, "sub_405F6F", "void *__fastcall sub_405F6F(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4060F1(a1, a2, v2);\n  return v4;\n}\n"], [4218788, "sub_405FA4", "void *__fastcall sub_405FA4(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4060F1(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4218885, "sub_406005", "__int64 __fastcall sub_406005(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_405EB0(a1, a2, 1uLL);\n}\n"], [4218927, "sub_40602F", "void *__fastcall sub_40602F(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405F6F(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4218970, "sub_40605A", "void *__fastcall sub_40605A(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4060F1(a1, a2, v2);\n  return v4;\n}\n"], [4219027, "sub_406093", "void *__fastcall sub_406093(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405F6F(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4219076, "sub_4060C4", "void *__fastcall sub_4060C4(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_406093(a1, v1 + 1);\n}\n"], [4219121, "sub_4060F1", "void __noreturn sub_4060F1()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4219174, "sub_406126", "__int64 __fastcall sub_406126(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4219269, "sub_406185", "__int64 __fastcall sub_406185(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_406126(a1, a2) )\n    ;\n  return i;\n}\n"], [4219334, "sub_4061C6", "__int64 __fastcall sub_4061C6(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_406185(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_406126(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_406185(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_406126(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_406185(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_406185(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_406126(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_406185(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_406185(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_406185(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_406185(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4220466, "sub_406632", "__int64 __fastcall sub_406632(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_4066BD(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4220605, "sub_4066BD", "int __fastcall sub_4066BD(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_4067A5(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4220786, "sub_406772", "__int64 __fastcall sub_406772(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4067F0(a1, 0LL, 1LL);\n  return result;\n}\n"], [4220837, "sub_4067A5", "int __fastcall sub_4067A5(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_406772(a1);\n  return fflush(a1);\n}\n"], [4220912, "sub_4067F0", "int __fastcall sub_4067F0(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4221104, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4221216, "fini", "void fini(void)\n{\n  ;\n}\n"], [4221232, "sub_406930", "int __fastcall sub_406930(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6091C8 )\n    v1 = (void *)qword_6091C8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4221264, "sub_406950", "int __fastcall sub_406950(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4221280, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]