[[4198344, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4198384, "sub_400FF0", "__int64 sub_400FF0()\n{\n  return qword_607010();\n}\n"], [4198400, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198416, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198432, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198448, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198464, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198480, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198496, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4198512, ".pathconf", "// attributes: thunk\n__int64 pathconf(const char *path, int name)\n{\n  return pathconf(path, name);\n}\n"], [4198528, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4198544, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4198560, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4198576, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4198592, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4198608, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4198624, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4198640, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4198656, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4198672, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4198688, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4198704, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4198720, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4198736, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4198752, ".strspn", "// attributes: thunk\nsize_t strspn(const char *s, const char *accept)\n{\n  return strspn(s, accept);\n}\n"], [4198768, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4198784, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4198800, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4198816, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4198832, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4198848, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4198864, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4198880, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4198896, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4198912, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4198928, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4198944, ".mbrlen", "// attributes: thunk\nsize_t mbrlen(const char *s, size_t n, mbstate_t *ps)\n{\n  return mbrlen(s, n, ps);\n}\n"], [4198960, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4198976, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4198992, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199008, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199024, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199040, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199056, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199072, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199088, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199104, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199120, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199136, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4199184, "sub_401310", "signed __int64 sub_401310()\n{\n  signed __int64 result; // rax\n\n  result = &unk_6071DF - &unk_6071D8;\n  if ( (unsigned __int64)(&unk_6071DF - &unk_6071D8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199232, "sub_401340", "__int64 sub_401340()\n{\n  return 0LL;\n}\n"], [4199296, "sub_401380", "signed __int64 sub_401380()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_607218 )\n  {\n    result = sub_401310();\n    byte_607218 = 1;\n  }\n  return result;\n}\n"], [4199328, "sub_4013A0", "__int64 sub_4013A0()\n{\n  return sub_401340();\n}\n"], [4199373, "sub_4013CD", "int sub_4013CD()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402076(qword_607230);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402076(qword_607230);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402076(qword_607230);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4199639, "sub_4014D7", "void __fastcall __noreturn sub_4014D7(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n\n  v1 = qword_607230;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... NAME...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Diagnose invalid or unportable file names.\\n\"\n           \"\\n\"\n           \"  -p                  check for most POSIX systems\\n\"\n           \"  -P                  check for empty names and leading \\\"-\\\"\\n\"\n           \"      --portability   check for all POSIX systems (equivalent to -p -P)\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v9, v8);\n    sub_4013CD();\n  }\n  exit(a1);\n}\n"], [4199837, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  bool v4; // [rsp+29h] [rbp-17h]\n  unsigned __int8 v5; // [rsp+2Ah] [rbp-16h]\n  unsigned __int8 v6; // [rsp+2Bh] [rbp-15h]\n  int v7; // [rsp+2Ch] [rbp-14h]\n\n  v4 = 1;\n  v5 = 0;\n  v6 = 0;\n  sub_40212D(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_404820(sub_401F8B);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v7 = getopt_long(a1, a2, \"+pP\", &longopts, 0LL);\n      if ( v7 == -1 )\n      {\n        if ( optind == a1 )\n        {\n          v3 = gettext(\"missing operand\");\n          error(0, 0, v3);\n          sub_4014D7(1);\n        }\n        while ( optind < a1 )\n        {\n          v4 = (v4 & (unsigned __int8)sub_40197D(a2[optind], v5, v6)) != 0;\n          ++optind;\n        }\n        exit(!v4);\n      }\n      if ( v7 != 80 )\n        break;\n      v6 = 1;\n    }\n    if ( v7 <= 80 )\n      break;\n    if ( v7 == 112 )\n    {\n      v5 = 1;\n    }\n    else\n    {\n      if ( v7 != 128 )\n        goto LABEL_14;\n      v5 = 1;\n      v6 = 1;\n    }\n  }\n  if ( v7 == -131 )\n  {\n    sub_404102(\n      (_DWORD)stdout,\n      (unsigned int)\"pathchk\",\n      (unsigned int)\"GNU coreutils\",\n      (_DWORD)off_6071A0,\n      (unsigned int)\"Paul Eggert\",\n      (unsigned int)\"David MacKenzie\",\n      \"Jim Meyering\",\n      0LL);\n    exit(0);\n  }\n  if ( v7 == -130 )\n    sub_4014D7(0);\nLABEL_14:\n  sub_4014D7(1);\n}\n"], [4200308, "sub_401774", "__int64 __fastcall sub_401774(char *a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *s; // [rsp+18h] [rbp-18h]\n  char *sa; // [rsp+18h] [rbp-18h]\n\n  for ( s = a1; ; s = sa + 1 )\n  {\n    sa = strchr(s, 45);\n    if ( !sa )\n      break;\n    if ( sa == a1 || *(sa - 1) == 47 )\n    {\n      v1 = sub_402238(a1);\n      v2 = gettext(\"leading `-' in a component of file name %s\");\n      error(0, 0, v2, v1);\n      return 0LL;\n    }\n  }\n  return 1LL;\n}\n"], [4200459, "sub_40180B", "__int64 __fastcall sub_40180B(const char *a1, __int64 a2)\n{\n  __int64 v2; // r12\n  __int64 v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  size_t v7; // [rsp+18h] [rbp-38h]\n  char *v8; // [rsp+20h] [rbp-30h]\n  size_t v9; // [rsp+28h] [rbp-28h]\n  mbstate_t ps; // [rsp+30h] [rbp-20h] BYREF\n  unsigned __int64 v11; // [rsp+38h] [rbp-18h]\n\n  v11 = __readfsqword(0x28u);\n  v7 = strspn(a1, \"/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._-\");\n  v8 = (char *)&a1[v7];\n  if ( !a1[v7] )\n    return 1LL;\n  ps = 0LL;\n  v9 = mbrlen(v8, a2 - v7, &ps);\n  v2 = sub_402214(0LL, a1);\n  if ( v9 > 0x10 )\n    v3 = 1LL;\n  else\n    v3 = v9;\n  v4 = sub_403704(1LL, 6LL, v8, v3);\n  v5 = gettext(\"nonportable character %s in file name %s\");\n  error(0, 0, v5, v4, v2);\n  return 0LL;\n}\n"], [4200732, "sub_40191C", "_BYTE *__fastcall sub_40191C(_BYTE *a1)\n{\n  while ( *a1 == 47 )\n    ++a1;\n  return a1;\n}\n"], [4200764, "sub_40193C", "__int64 __fastcall sub_40193C(__int64 a1)\n{\n  __int64 i; // [rsp+10h] [rbp-8h]\n\n  for ( i = 1LL; *(_BYTE *)(a1 + i) != 47 && *(_BYTE *)(a1 + i); ++i )\n    ;\n  return i;\n}\n"], [4200829, "sub_40197D", "__int64 __fastcall sub_40197D(char *a1, char a2, char a3)\n{\n  __int64 result; // rax\n  char *v4; // rax\n  int *v5; // rax\n  const char *v6; // rax\n  char *v7; // rbx\n  int *v8; // rax\n  __int64 v9; // rbx\n  char *v10; // rax\n  _BYTE *i; // rax\n  __int64 v12; // rax\n  char *j; // rax\n  const char *v14; // rax\n  int v15; // eax\n  int *v16; // rax\n  __int64 v17; // rbx\n  char *v18; // rax\n  char v20; // [rsp+14h] [rbp-11Ch]\n  char v21; // [rsp+15h] [rbp-11Bh]\n  char v22; // [rsp+16h] [rbp-11Ah]\n  char v23; // [rsp+17h] [rbp-119h]\n  _BYTE *v24; // [rsp+18h] [rbp-118h]\n  char *v25; // [rsp+18h] [rbp-118h]\n  unsigned __int64 v26; // [rsp+20h] [rbp-110h]\n  unsigned __int64 v27; // [rsp+28h] [rbp-108h]\n  unsigned __int64 v28; // [rsp+30h] [rbp-100h]\n  unsigned __int64 v29; // [rsp+38h] [rbp-F8h]\n  char *path; // [rsp+40h] [rbp-F0h]\n  __int64 v31; // [rsp+48h] [rbp-E8h]\n  unsigned __int64 v32; // [rsp+60h] [rbp-D0h]\n  char *v33; // [rsp+68h] [rbp-C8h]\n  __int64 v34; // [rsp+70h] [rbp-C0h]\n  unsigned __int64 v35; // [rsp+78h] [rbp-B8h]\n  struct stat stat_buf; // [rsp+90h] [rbp-A0h] BYREF\n\n  v29 = strlen(a1);\n  v21 = 0;\n  if ( a3 && (unsigned __int8)sub_401774(a1) != 1 )\n    return 0LL;\n  if ( (a2 || a3) && !v29 )\n  {\n    v4 = gettext(\"empty file name\");\n    error(0, 0, v4);\n    return 0LL;\n  }\n  if ( a2 )\n  {\n    if ( (unsigned __int8)sub_40180B(a1, v29) != 1 )\n      return 0LL;\n  }\n  else if ( (unsigned int)sub_404840(a1, &stat_buf) )\n  {\n    if ( *__errno_location() != 2 || !v29 )\n    {\n      v5 = __errno_location();\n      error(0, *v5, \"%s\", a1);\n      return 0LL;\n    }\n  }\n  else\n  {\n    v21 = 1;\n  }\n  if ( !a2 && (v21 == 1 || v29 <= 0xFF) )\n    goto LABEL_30;\n  if ( a2 )\n  {\n    v26 = 256LL;\n  }\n  else\n  {\n    if ( *a1 == 47 )\n      v6 = \"/\";\n    else\n      v6 = \".\";\n    path = (char *)v6;\n    *__errno_location() = 0;\n    v31 = pathconf(path, 4);\n    if ( v31 < 0 && *__errno_location() )\n    {\n      v7 = gettext(\"%s: unable to determine maximum file name length\");\n      v8 = __errno_location();\n      error(0, *v8, v7, path);\n      return 0LL;\n    }\n    v26 = v31;\n  }\n  if ( v26 <= v29 )\n  {\n    v9 = sub_402238(a1);\n    v10 = gettext(\"limit %lu exceeded by length %lu of file name %s\");\n    error(0, 0, v10, v26 - 1, v29, v9);\n    result = 0LL;\n  }\n  else\n  {\nLABEL_30:\n    v20 = a2;\n    if ( a2 != 1 && v21 != 1 )\n    {\n      for ( i = sub_40191C(a1); ; i = sub_40191C(&v24[v32]) )\n      {\n        v24 = i;\n        if ( !*i )\n          break;\n        v32 = sub_40193C((__int64)i);\n        if ( v32 > 0xE )\n        {\n          v20 = 1;\n          break;\n        }\n      }\n    }\n    if ( v20 )\n    {\n      v27 = 14LL;\n      if ( a2 )\n        v12 = 14LL;\n      else\n        v12 = 0LL;\n      v28 = v12;\n      for ( j = sub_40191C(a1); ; j = sub_40191C(&v25[v35]) )\n      {\n        v25 = j;\n        if ( !*j )\n          break;\n        if ( v28 )\n        {\n          v27 = v28;\n        }\n        else\n        {\n          if ( j == a1 )\n            v14 = \".\";\n          else\n            v14 = a1;\n          v33 = (char *)v14;\n          v22 = *v25;\n          *__errno_location() = 0;\n          *v25 = 0;\n          v34 = pathconf(v33, 3);\n          *v25 = v22;\n          if ( v34 < 0 )\n          {\n            v15 = *__errno_location();\n            if ( v15 )\n            {\n              if ( v15 != 2 )\n              {\n                *v25 = 0;\n                v16 = __errno_location();\n                error(0, *v16, \"%s\", v33);\n                *v25 = v22;\n                return 0LL;\n              }\n              v28 = v27;\n            }\n            else\n            {\n              v27 = -1LL;\n            }\n          }\n          else\n          {\n            v27 = v34;\n          }\n        }\n        v35 = sub_40193C((__int64)v25);\n        if ( v27 < v35 )\n        {\n          v23 = v25[v35];\n          v25[v35] = 0;\n          v17 = sub_402238(v25);\n          v18 = gettext(\"limit %lu exceeded by length %lu of file name component %s\");\n          error(0, 0, v18, v27, v35, v17);\n          v25[v35] = v23;\n          return 0LL;\n        }\n      }\n    }\n    result = 1LL;\n  }\n  return result;\n}\n"], [4202337, "sub_401F61", "__int64 __fastcall sub_401F61(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_607220 = a1;\n  return result;\n}\n"], [4202358, "sub_401F76", "__int64 __fastcall sub_401F76(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_607228 = a1;\n  return result;\n}\n"], [4202379, "sub_401F8B", "__int64 sub_401F8B()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_404521(stdout) && (byte_607228 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_607220 )\n    {\n      v0 = (const char *)sub_403851(qword_607220);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_404521(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4202614, "sub_402076", "_BYTE *__fastcall sub_402076(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4202719, "sub_4020DF", "size_t __fastcall sub_4020DF(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4202797, "sub_40212D", "char *__fastcall sub_40212D(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_607230 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4203028, "sub_402214", "__int64 __fastcall sub_402214(unsigned int a1, __int64 a2)\n{\n  return sub_4036C3(a1, 6LL, a2);\n}\n"], [4203064, "sub_402238", "__int64 __fastcall sub_402238(__int64 a1)\n{\n  return sub_402214(0, a1);\n}\n"], [4203095, "sub_402257", "__int64 __fastcall sub_402257(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_607240;\n  v4 = sub_40448E(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4203168, "sub_4022A0", "__int64 __fastcall sub_4022A0(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_607240;\n  return *(unsigned int *)v1;\n}\n"], [4203198, "sub_4022BE", "__int64 *__fastcall sub_4022BE(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_607240;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4203234, "sub_4022E2", "__int64 __fastcall sub_4022E2(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_607240;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4203370, "sub_40236A", "__int64 __fastcall sub_40236A(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_607240;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4203421, "sub_40239D", "__int64 *__fastcall sub_40239D(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_607240;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4203511, "sub_4023F7", "_QWORD *__fastcall sub_4023F7(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4203631, "sub_40246F", "char *__fastcall sub_40246F(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4203692, "sub_4024AC", "unsigned __int64 __fastcall sub_4024AC(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_40246F((const char *)L\"`'\", a5);\n        a9 = sub_40246F((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4024AC(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4206839, "sub_4030F7", "unsigned __int64 __fastcall sub_4030F7(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_607240;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4024AC(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4206999, "sub_403197", "__int64 __fastcall sub_403197(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4031C9(a1, a2, 0LL, a3);\n}\n"], [4207049, "sub_4031C9", "__int64 __fastcall sub_4031C9(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_607240;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4024AC(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_404350(v10);\n  sub_4024AC(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4207349, "sub_4032F5", "void sub_4032F5()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_6071D0;\n  for ( i = 1; i < dword_6071B0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_607280 )\n  {\n    free(ptr[1]);\n    qword_6071C0 = 256LL;\n    off_6071C8 = &unk_607280;\n  }\n  if ( ptr != (void **)&qword_6071C0 )\n  {\n    free(ptr);\n    off_6071D0 = &qword_6071C0;\n  }\n  dword_6071B0 = 1;\n}\n"], [4207520, "sub_4033A0", "void *__fastcall sub_4033A0(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_6071D0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6071B0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_6071D0 == &qword_6071C0;\n    if ( off_6071D0 == &qword_6071C0 )\n      v4 = 0LL;\n    else\n      v4 = off_6071D0;\n    v12 = (__int64 *)sub_40439F(v4, 16 * v14);\n    off_6071D0 = v12;\n    if ( v9 )\n    {\n      v5 = off_6071C8;\n      *v12 = qword_6071C0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6071B0], 0, 16 * (v14 - (unsigned int)dword_6071B0));\n    dword_6071B0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4024AC((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_607280 )\n      free(ptr);\n    ptr = (void *)sub_404350(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_4024AC((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4208166, "sub_403626", "void *__fastcall sub_403626(int a1, __int64 a2)\n{\n  return sub_4033A0(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_607240);\n}\n"], [4208209, "sub_403651", "void *__fastcall sub_403651(int a1, __int64 a2, size_t a3)\n{\n  return sub_4033A0(a1, a2, a3, (__int64)&qword_607240);\n}\n"], [4208253, "sub_40367D", "void *__fastcall sub_40367D(__int64 a1)\n{\n  return sub_403626(0, a1);\n}\n"], [4208284, "sub_40369C", "void *__fastcall sub_40369C(__int64 a1, size_t a2)\n{\n  return sub_403651(0, a1, a2);\n}\n"], [4208323, "sub_4036C3", "void *__fastcall sub_4036C3(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_4023F7(v5, a2);\n  return sub_4033A0(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4208388, "sub_403704", "void *__fastcall sub_403704(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_4023F7(v7, a2);\n  return sub_4033A0(a1, a3, a4, (__int64)v7);\n}\n"], [4208451, "sub_403743", "void *__fastcall sub_403743(int a1, __int64 a2)\n{\n  return sub_4036C3(0, a1, a2);\n}\n"], [4208487, "sub_403767", "void *__fastcall sub_403767(int a1, __int64 a2, size_t a3)\n{\n  return sub_403704(0, a1, a2, a3);\n}\n"], [4208531, "sub_403793", "void *__fastcall sub_403793(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_607240;\n  v4[1] = qword_607248;\n  v4[2] = qword_607250;\n  v4[3] = qword_607258;\n  v4[4] = qword_607260;\n  v4[5] = qword_607268;\n  v4[6] = qword_607270;\n  sub_4022E2(v4, a3, 1);\n  return sub_4033A0(0, a1, a2, (__int64)v4);\n}\n"], [4208679, "sub_403827", "void *__fastcall sub_403827(__int64 a1, unsigned __int8 a2)\n{\n  return sub_403793(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4208721, "sub_403851", "void *__fastcall sub_403851(__int64 a1)\n{\n  return sub_403827(a1, 0x3Au);\n}\n"], [4208752, "sub_403870", "void *__fastcall sub_403870(__int64 a1, size_t a2)\n{\n  return sub_403793(a1, a2, 0x3Au);\n}\n"], [4208794, "sub_40389A", "__int64 __fastcall sub_40389A(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4038D0(a1, a2, a3, a4, -1LL);\n}\n"], [4208848, "sub_4038D0", "void *__fastcall sub_4038D0(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_607240;\n  v8[1] = qword_607248;\n  v8[2] = qword_607250;\n  v8[3] = qword_607258;\n  v8[4] = qword_607260;\n  v8[5] = qword_607268;\n  v8[6] = qword_607270;\n  sub_40239D(v8, a2, a3);\n  return sub_4033A0(a1, a4, a5, (__int64)v8);\n}\n"], [4208999, "sub_403967", "__int64 __fastcall sub_403967(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40389A(0, a1, a2, a3);\n}\n"], [4209046, "sub_403996", "void *__fastcall sub_403996(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4038D0(0, a1, a2, a3, a4);\n}\n"], [4209104, "sub_4039D0", "int __fastcall sub_4039D0(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4210619, "sub_403FBB", "int __fastcall sub_403FBB(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4039D0(a1, a2, a3, a4, a5, i);\n}\n"], [4210729, "sub_404029", "int __fastcall sub_404029(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4039D0(a1, a2, a3, a4, v8, i);\n}\n"], [4210946, "sub_404102", "int sub_404102(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_404029(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4211128, "sub_4041B8", "int sub_4041B8()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4211233, "sub_404221", "__int64 __fastcall sub_404221(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4044EC(a1, a2, v2);\n  return sub_40436A(a2 * a1, a2, v2);\n}\n"], [4211295, "sub_40425F", "__int64 __fastcall sub_40425F(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4044EC(a1, a2, v4);\n  return sub_40439F(a1, a3 * a2);\n}\n"], [4211371, "sub_4042AB", "__int64 __fastcall sub_4042AB(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4044EC(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40439F(a1, a3 * v6);\n}\n"], [4211536, "sub_404350", "__int64 __fastcall sub_404350(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40436A(a1, a2, a3);\n}\n"], [4211562, "sub_40436A", "void *__fastcall sub_40436A(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4044EC(a1, a2, v2);\n  return v4;\n}\n"], [4211615, "sub_40439F", "void *__fastcall sub_40439F(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4044EC(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4211712, "sub_404400", "__int64 __fastcall sub_404400(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_4042AB(a1, a2, 1uLL);\n}\n"], [4211754, "sub_40442A", "void *__fastcall sub_40442A(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40436A(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4211797, "sub_404455", "void *__fastcall sub_404455(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4044EC(a1, a2, v2);\n  return v4;\n}\n"], [4211854, "sub_40448E", "void *__fastcall sub_40448E(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40436A(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4211903, "sub_4044BF", "void *__fastcall sub_4044BF(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40448E(a1, v1 + 1);\n}\n"], [4211948, "sub_4044EC", "void __noreturn sub_4044EC()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4212001, "sub_404521", "__int64 __fastcall sub_404521(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_4045AC(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4212140, "sub_4045AC", "int __fastcall sub_4045AC(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_404694(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4212321, "sub_404661", "__int64 __fastcall sub_404661(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4046DF(a1, 0LL, 1LL);\n  return result;\n}\n"], [4212372, "sub_404694", "int __fastcall sub_404694(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_404661(a1);\n  return fflush(a1);\n}\n"], [4212447, "sub_4046DF", "int __fastcall sub_4046DF(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4212640, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_606E18 - off_606E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_606E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4212752, "fini", "void fini(void)\n{\n  ;\n}\n"], [4212768, "sub_404820", "int __fastcall sub_404820(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_607198 )\n    v1 = (void *)qword_607198;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4212800, "sub_404840", "int __fastcall sub_404840(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4212816, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]