[[4199240, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199280, "sub_401370", "__int64 sub_401370()\n{\n  return qword_609010();\n}\n"], [4199296, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4199312, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199328, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199344, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199360, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199376, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199392, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199408, ".toupper", "// attributes: thunk\nint toupper(int c)\n{\n  return toupper(c);\n}\n"], [4199424, ".getc_unlocked", "// attributes: thunk\nint getc_unlocked(FILE *stream)\n{\n  return getc_unlocked(stream);\n}\n"], [4199440, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199456, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199472, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199488, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199504, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199520, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199536, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199552, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199568, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199584, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4199600, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199616, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199632, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199648, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199664, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199680, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199696, ".freopen", "// attributes: thunk\nFILE *freopen(const char *filename, const char *modes, FILE *stream)\n{\n  return freopen(filename, modes, stream);\n}\n"], [4199712, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199728, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199744, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199760, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199776, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199792, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199808, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199824, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199840, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199856, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199872, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4199888, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199904, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199920, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199936, ".putc_unlocked", "// attributes: thunk\nint putc_unlocked(int c, FILE *stream)\n{\n  return putc_unlocked(c, stream);\n}\n"], [4199952, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199968, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199984, ".strcoll", "// attributes: thunk\nint strcoll(const char *s1, const char *s2)\n{\n  return strcoll(s1, s2);\n}\n"], [4200000, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200016, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4200032, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200048, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200064, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200080, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4200096, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200112, ".strtoul", "// attributes: thunk\nunsigned __int64 strtoul(const char *nptr, char **endptr, int base)\n{\n  return strtoul(nptr, endptr, base);\n}\n"], [4200128, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200144, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200160, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200176, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200192, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200208, ".feof_unlocked", "// attributes: thunk\nint feof_unlocked(FILE *stream)\n{\n  return feof_unlocked(stream);\n}\n"], [4200224, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200240, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200288, "sub_401760", "signed __int64 sub_401760()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60924F - &unk_609248;\n  if ( (unsigned __int64)(&unk_60924F - &unk_609248) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200336, "sub_401790", "__int64 sub_401790()\n{\n  return 0LL;\n}\n"], [4200400, "sub_4017D0", "signed __int64 sub_4017D0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_6092B8 )\n  {\n    result = sub_401760();\n    byte_6092B8 = 1;\n  }\n  return result;\n}\n"], [4200432, "sub_4017F0", "__int64 sub_4017F0()\n{\n  return sub_401790();\n}\n"], [4200477, "sub_40181D", "__int64 __fastcall sub_40181D(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4200492, "sub_40182C", "int sub_40182C()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402DBB(qword_609300);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402DBB(qword_609300);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402DBB(qword_609300);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200758, "sub_401936", "void __fastcall __noreturn sub_401936(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n\n  v1 = qword_609300;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [INPUT [OUTPUT]]\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Filter adjacent matching lines from INPUT (or standard input),\\n\"\n           \"writing to OUTPUT (or standard output).\\n\"\n           \"\\n\"\n           \"With no options, matching lines are merged to the first occurrence.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -c, --count           prefix lines by the number of occurrences\\n\"\n           \"  -d, --repeated        only print duplicate lines\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -D, --all-repeated[=delimit-method]  print all duplicate lines\\n\"\n            \"                        delimit-method={none(default),prepend,separate}\\n\"\n            \"                        Delimiting is done with blank lines\\n\"\n            \"  -f, --skip-fields=N   avoid comparing the first N fields\\n\"\n            \"  -i, --ignore-case     ignore differences in case when comparing\\n\"\n            \"  -s, --skip-chars=N    avoid comparing the first N characters\\n\"\n            \"  -u, --unique          only print unique lines\\n\"\n            \"  -z, --zero-terminated  end lines with 0 byte, not newline\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"  -w, --check-chars=N   compare no more than N characters in lines\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"\\n\"\n            \"A field is a run of blanks (usually spaces and/or TABs), then non-blank\\n\"\n            \"characters.  Fields are skipped before chars.\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\n            \"\\n\"\n            \"Note: 'uniq' does not detect repeated lines unless they are adjacent.\\n\"\n            \"You may want to sort the input first, or use `sort -u' without `uniq'.\\n\"\n            \"Also, comparisons honor the rules specified by `LC_COLLATE'.\\n\");\n    fputs_unlocked(v21, v20);\n    sub_40182C();\n  }\n  exit(a1);\n}\n"], [4201127, "sub_401AA7", "__int64 __fastcall sub_401AA7(const char *a1, const char *a2)\n{\n  char *v2; // rax\n  __int64 v4; // [rsp+18h] [rbp-8h] BYREF\n\n  if ( (unsigned int)sub_4059E9(a1, 0LL, 10LL, &v4, &locale) > 1 )\n  {\n    v2 = gettext(a2);\n    error(1, 0, \"%s: %s\", a1, v2);\n  }\n  return v4;\n}\n"], [4201242, "sub_401B1A", "__int64 __fastcall sub_401B1A(__int64 a1)\n{\n  const unsigned __int16 *v1; // rbx\n  const unsigned __int16 *v2; // rbx\n  __int64 v3; // rax\n  unsigned __int64 i; // [rsp+10h] [rbp-30h]\n  unsigned __int64 v6; // [rsp+18h] [rbp-28h]\n  __int64 v7; // [rsp+20h] [rbp-20h]\n  unsigned __int64 v8; // [rsp+28h] [rbp-18h]\n\n  v7 = *(_QWORD *)(a1 + 16);\n  v8 = *(_QWORD *)(a1 + 8) - 1LL;\n  v6 = 0LL;\n  for ( i = 0LL; i < qword_6092C8 && v6 < v8; ++i )\n  {\n    while ( v6 < v8 )\n    {\n      v1 = *__ctype_b_loc();\n      if ( (v1[(unsigned __int8)sub_40181D(*(_BYTE *)(v7 + v6))] & 1) == 0 )\n        break;\n      ++v6;\n    }\n    while ( v6 < v8 )\n    {\n      v2 = *__ctype_b_loc();\n      if ( (v2[(unsigned __int8)sub_40181D(*(_BYTE *)(v7 + v6))] & 1) != 0 )\n        break;\n      ++v6;\n    }\n  }\n  v3 = qword_6092D0;\n  if ( v8 - v6 <= qword_6092D0 )\n    v3 = v8 - v6;\n  return *(_QWORD *)(a1 + 16) + v3 + v6;\n}\n"], [4201529, "sub_401C39", "bool __fastcall sub_401C39(const void *a1, const void *a2, unsigned __int64 a3, unsigned __int64 a4)\n{\n  bool v4; // al\n  bool result; // al\n  bool v6; // al\n  __int64 v7; // [rsp+0h] [rbp-20h]\n  __int64 n; // [rsp+8h] [rbp-18h]\n\n  n = a3;\n  v7 = a4;\n  if ( qword_6092D8 < a3 )\n    n = qword_6092D8;\n  if ( qword_6092D8 < a4 )\n    v7 = qword_6092D8;\n  if ( byte_6092E7 )\n  {\n    v4 = n != v7 || (unsigned int)sub_40328C(a1, a2, n);\n    result = v4;\n  }\n  else if ( byte_6092C0 )\n  {\n    result = (unsigned int)sub_405871(a1, n, a2, v7) != 0;\n  }\n  else\n  {\n    v6 = n != v7 || memcmp(a1, a2, n);\n    result = v6;\n  }\n  return result;\n}\n"], [4201762, "sub_401D22", "size_t __fastcall sub_401D22(__int64 a1, char a2, __int64 a3)\n{\n  size_t result; // rax\n\n  if ( a3 )\n  {\n    if ( a2 != 1 )\n      result = (unsigned __int8)byte_6092E5 ^ 1u;\n    else\n      result = (unsigned __int8)byte_6092E6 ^ 1u;\n  }\n  else\n  {\n    result = (unsigned __int8)byte_6092E4 ^ 1u;\n  }\n  if ( !(_BYTE)result )\n  {\n    if ( !dword_6092E0 )\n      printf(\"%7lu \", a3 + 1);\n    result = fwrite_unlocked(*(const void **)(a1 + 16), 1uLL, *(_QWORD *)(a1 + 8), stdout);\n  }\n  return result;\n}\n"], [4201915, "sub_401DBB", "void __fastcall sub_401DBB(const char *a1, const char *a2, char a3)\n{\n  int *v3; // rax\n  int *v4; // rax\n  char *v5; // rax\n  char v7; // [rsp+26h] [rbp-AAh]\n  bool v8; // [rsp+27h] [rbp-A9h]\n  char *v9; // [rsp+28h] [rbp-A8h]\n  char *v10; // [rsp+30h] [rbp-A0h]\n  const void *v11; // [rsp+38h] [rbp-98h]\n  unsigned __int64 v12; // [rsp+40h] [rbp-90h]\n  _BYTE *v13; // [rsp+48h] [rbp-88h]\n  char *v14; // [rsp+50h] [rbp-80h]\n  __int64 v15; // [rsp+58h] [rbp-78h]\n  const void *v16; // [rsp+60h] [rbp-70h]\n  unsigned __int64 v17; // [rsp+68h] [rbp-68h]\n  char *v18; // [rsp+70h] [rbp-60h]\n  const void *v19; // [rsp+78h] [rbp-58h]\n  unsigned __int64 v20; // [rsp+80h] [rbp-50h]\n  char *v21; // [rsp+88h] [rbp-48h]\n  char v22[16]; // [rsp+90h] [rbp-40h] BYREF\n  void *ptr; // [rsp+A0h] [rbp-30h]\n  char v24[8]; // [rsp+B0h] [rbp-20h] BYREF\n  __int64 v25; // [rsp+B8h] [rbp-18h]\n  void *v26; // [rsp+C0h] [rbp-10h]\n\n  if ( strcmp(a1, \"-\") && !sub_402F2F(a1, \"r\", stdin) )\n  {\n    v3 = __errno_location();\n    error(1, *v3, \"%s\", a1);\n  }\n  if ( strcmp(a2, \"-\") && !sub_402F2F(a2, \"w\", stdout) )\n  {\n    v4 = __errno_location();\n    error(1, *v4, \"%s\", a2);\n  }\n  sub_402EA2(stdin, 2LL);\n  v9 = v22;\n  v10 = v24;\n  sub_4030DF(v22);\n  sub_4030DF(v24);\n  if ( byte_6092E4 && byte_6092E5 && dword_6092E0 == 1 )\n  {\n    while ( !feof_unlocked(stdin) && sub_40312D(v9, stdin, (unsigned int)a3) )\n    {\n      v16 = (const void *)sub_401B1A((__int64)v9);\n      v17 = *((_QWORD *)v9 + 1) + *((_QWORD *)v9 + 2) - (_QWORD)v16 - 1LL;\n      if ( !*((_QWORD *)v10 + 1) || sub_401C39(v16, v11, v17, v12) )\n      {\n        fwrite_unlocked(*((const void **)v9 + 2), 1uLL, *((_QWORD *)v9 + 1), stdout);\n        v18 = v10;\n        v10 = v9;\n        v9 = v18;\n        v11 = v16;\n        v12 = v17;\n      }\n    }\n  }\n  else\n  {\n    v15 = 0LL;\n    v7 = 1;\n    if ( sub_40312D(v24, stdin, (unsigned int)a3) )\n    {\n      v13 = (_BYTE *)sub_401B1A((__int64)v24);\n      v14 = (char *)(v25 + (_BYTE *)v26 - v13 - 1);\n      while ( !feof_unlocked(stdin) )\n      {\n        if ( !sub_40312D(v9, stdin, (unsigned int)a3) )\n        {\n          if ( ferror_unlocked(stdin) )\n            goto LABEL_39;\n          break;\n        }\n        v19 = (const void *)sub_401B1A((__int64)v9);\n        v20 = *((_QWORD *)v9 + 1) + *((_QWORD *)v9 + 2) - (_QWORD)v19 - 1LL;\n        v8 = !sub_401C39(v19, v13, v20, (unsigned __int64)v14);\n        v15 += v8;\n        if ( v15 == -1 )\n          v15 = -2LL;\n        if ( dword_6092E8 )\n        {\n          if ( !v8 )\n          {\n            if ( v15 )\n              v7 = 0;\n          }\n          else if ( v15 == 1 && (dword_6092E8 == 1 || dword_6092E8 == 2 && v7 != 1) )\n          {\n            putchar_unlocked(a3);\n          }\n        }\n        if ( !v8 || byte_6092E6 )\n        {\n          sub_401D22((__int64)v10, v8, v15);\n          v21 = v10;\n          v10 = v9;\n          v9 = v21;\n          v13 = v19;\n          v14 = (char *)v20;\n          if ( !v8 )\n            v15 = 0LL;\n        }\n      }\n      sub_401D22((__int64)v10, 0, v15);\n    }\n  }\nLABEL_39:\n  if ( ferror_unlocked(stdin) || (unsigned int)sub_405E55(stdin) )\n  {\n    v5 = gettext(\"error reading %s\");\n    error(1, 0, v5, a1);\n  }\n  free(ptr);\n  free(v26);\n}\n"], [4203267, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  int v5; // eax\n  int v6; // edx\n  __int64 v7; // rbx\n  char *v8; // rax\n  int v9; // eax\n  char v10; // al\n  char *v11; // rax\n  char v12; // [rsp+2Ah] [rbp-36h]\n  _BYTE v13[5]; // [rsp+2Bh] [rbp-35h]\n  int v14; // [rsp+30h] [rbp-30h]\n  int v15; // [rsp+34h] [rbp-2Ch]\n  __int64 v16; // [rsp+38h] [rbp-28h] BYREF\n  const char *v17; // [rsp+40h] [rbp-20h]\n  const char *v18; // [rsp+48h] [rbp-18h]\n\n  v13[4] = 0;\n  *(_DWORD *)v13 = getenv(\"POSIXLY_CORRECT\") != 0LL;\n  v14 = 0;\n  v15 = 0;\n  v12 = 10;\n  v18 = \"-\";\n  v17 = \"-\";\n  sub_4033AA(*a2);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  byte_6092C0 = sub_403082(3LL);\n  sub_406370(sub_402CD0);\n  qword_6092D0 = 0LL;\n  qword_6092C8 = 0LL;\n  qword_6092D8 = -1LL;\n  byte_6092E5 = 1;\n  byte_6092E4 = 1;\n  byte_6092E6 = 0;\n  dword_6092E0 = 1;\n  dword_6092E8 = 0;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          if ( *(_DWORD *)&v13[1] != -1 && (!v13[0] || !v15) )\n          {\n            *(_DWORD *)&v13[1] = getopt_long(a1, a2, \"-0123456789Dcdf:is:uw:z\", &longopts, 0LL);\n            if ( *(_DWORD *)&v13[1] != -1 )\n              break;\n          }\n          if ( a1 <= optind )\n          {\n            if ( !dword_6092E0 )\n            {\n              if ( byte_6092E6 )\n              {\n                v11 = gettext(\"printing all duplicated lines and repeat counts is meaningless\");\n                error(0, 0, v11);\n                sub_401936(1);\n              }\n            }\n            sub_401DBB(v17, v18, v12);\n            exit(0);\n          }\n          if ( v15 == 2 )\n          {\n            v3 = sub_4034B5(a2[optind]);\n            v4 = gettext(\"extra operand %s\");\n            error(0, 0, v4, v3);\n            sub_401936(1);\n          }\n          v5 = v15++;\n          v6 = optind++;\n          (&v17)[v5] = a2[v6];\n        }\n        if ( *(_DWORD *)&v13[1] != 99 )\n          break;\n        dword_6092E0 = 0;\n      }\n      if ( *(int *)&v13[1] <= 99 )\n        break;\n      if ( *(_DWORD *)&v13[1] == 115 )\n      {\n        qword_6092D0 = sub_401AA7((const char *)optarg, \"invalid number of bytes to skip\");\n      }\n      else if ( *(int *)&v13[1] > 115 )\n      {\n        switch ( *(_DWORD *)&v13[1] )\n        {\n          case 'w':\n            qword_6092D8 = sub_401AA7((const char *)optarg, \"invalid number of bytes to compare\");\n            break;\n          case 'z':\n            v12 = 0;\n            break;\n          case 'u':\n            byte_6092E5 = 0;\n            break;\n          default:\n            goto LABEL_62;\n        }\n      }\n      else\n      {\n        switch ( *(_DWORD *)&v13[1] )\n        {\n          case 'f':\n            v14 = 2;\n            qword_6092C8 = sub_401AA7((const char *)optarg, \"invalid number of fields to skip\");\n            break;\n          case 'i':\n            byte_6092E7 = 1;\n            break;\n          case 'd':\n            byte_6092E4 = 0;\n            break;\n          default:\n            goto LABEL_62;\n        }\n      }\n    }\n    if ( *(_DWORD *)&v13[1] == 1 )\n    {\n      if ( *(_BYTE *)optarg != 43\n        || (int)sub_403326() > 200111\n        || (unsigned int)sub_4059E9(optarg, 0LL, 10LL, &v16, &locale) )\n      {\n        if ( v15 == 2 )\n        {\n          v7 = sub_4034B5(optarg);\n          v8 = gettext(\"extra operand %s\");\n          error(0, 0, v8, v7);\n          sub_401936(1);\n        }\n        v9 = v15++;\n        (&v17)[v9] = (const char *)optarg;\n      }\n      else\n      {\n        qword_6092D0 = v16;\n      }\n    }\n    else\n    {\n      if ( *(int *)&v13[1] <= 1 )\n      {\n        if ( *(_DWORD *)&v13[1] == -131 )\n        {\n          sub_40537F(\n            (_DWORD)stdout,\n            (unsigned int)\"uniq\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_609200,\n            (unsigned int)\"Richard M. Stallman\",\n            (unsigned int)\"David MacKenzie\",\n            0);\n          exit(0);\n        }\n        if ( *(_DWORD *)&v13[1] == -130 )\n          sub_401936(0);\nLABEL_62:\n        sub_401936(1);\n      }\n      if ( *(int *)&v13[1] < 48 )\n        goto LABEL_62;\n      if ( *(int *)&v13[1] <= 57 )\n      {\n        if ( v14 == 2 )\n          qword_6092C8 = 0LL;\n        if ( (unsigned __int64)qword_6092C8 > 0x1999999999999999LL\n          || *(_DWORD *)&v13[1] - 48 + 10 * qword_6092C8 < (unsigned __int64)qword_6092C8 )\n        {\n          v10 = 1;\n        }\n        else\n        {\n          qword_6092C8 = 10 * qword_6092C8 + *(_DWORD *)&v13[1] - 48;\n          v10 = 0;\n        }\n        if ( v10 )\n          qword_6092C8 = -1LL;\n        v14 = 1;\n      }\n      else\n      {\n        if ( *(_DWORD *)&v13[1] != 68 )\n          goto LABEL_62;\n        byte_6092E4 = 0;\n        byte_6092E6 = 1;\n        if ( optarg )\n          dword_6092E8 = dword_406560[sub_402B94(\"--all-repeated\", optarg, off_406540, dword_406560, 4LL, off_609208)];\n        else\n          dword_6092E8 = 0;\n      }\n    }\n  }\n}\n"], [4204698, "sub_40289A", "void __noreturn sub_40289A()\n{\n  sub_401936(1);\n}\n"], [4204714, "sub_4028AA", "__int64 __fastcall sub_4028AA(const char *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 result; // rax\n  char v7; // [rsp+27h] [rbp-19h]\n  __int64 i; // [rsp+28h] [rbp-18h]\n  __int64 v9; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v7 = 0;\n  n = strlen(a1);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !strncmp(*(const char **)(8 * i + a2), a1, n) )\n    {\n      if ( strlen(*(const char **)(8 * i + a2)) == n )\n        return i;\n      if ( v9 == -1 )\n      {\n        v9 = i;\n      }\n      else if ( !a3 || memcmp((const void *)(a4 * v9 + a3), (const void *)(i * a4 + a3), a4) )\n      {\n        v7 = 1;\n      }\n    }\n  }\n  if ( v7 )\n    result = -2LL;\n  else\n    result = v9;\n  return result;\n}\n"], [4205017, "sub_4029D9", "void __fastcall sub_4029D9(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  __int64 v5; // rax\n  char *format; // [rsp+28h] [rbp-18h]\n\n  if ( a3 == -1 )\n    v3 = gettext(\"invalid argument %s for %s\");\n  else\n    v3 = gettext(\"ambiguous argument %s for %s\");\n  format = v3;\n  v4 = sub_403491(1LL, a1);\n  v5 = sub_404940(0LL, 6LL, a2);\n  error(0, 0, format, v5, v4);\n}\n"], [4205156, "sub_402A64", "int __fastcall sub_402A64(__int64 a1, __int64 a2, size_t a3)\n{\n  char *v3; // rax\n  __int64 i; // [rsp+20h] [rbp-10h]\n  void *s1; // [rsp+28h] [rbp-8h]\n\n  s1 = 0LL;\n  v3 = gettext(\"Valid arguments are:\");\n  fprintf(stderr, v3);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a1); ++i )\n  {\n    if ( i && !memcmp(s1, (const void *)(i * a3 + a2), a3) )\n    {\n      fprintf(stderr, \", `%s'\", *(const char **)(8 * i + a1));\n    }\n    else\n    {\n      fprintf(stderr, \"\\n  - `%s'\", *(const char **)(8 * i + a1));\n      s1 = (void *)(i * a3 + a2);\n    }\n  }\n  return putc_unlocked(10, stderr);\n}\n"], [4205460, "sub_402B94", "__int64 __fastcall sub_402B94(__int64 a1, const char *a2, __int64 a3, __int64 a4, size_t a5, void (*a6)(void))\n{\n  __int64 v11; // [rsp+38h] [rbp-8h]\n\n  v11 = sub_4028AA(a2, a3, a4, a5);\n  if ( v11 >= 0 )\n    return v11;\n  sub_4029D9(a1, (__int64)a2, v11);\n  sub_402A64(a3, a4, a5);\n  a6();\n  return -1LL;\n}\n"], [4205594, "sub_402C1A", "__int64 __fastcall sub_402C1A(const void *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 i; // [rsp+28h] [rbp-8h]\n\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !memcmp(a1, (const void *)(i * a4 + a3), a4) )\n      return *(_QWORD *)(8 * i + a2);\n  }\n  return 0LL;\n}\n"], [4205734, "sub_402CA6", "__int64 __fastcall sub_402CA6(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_6092F0 = a1;\n  return result;\n}\n"], [4205755, "sub_402CBB", "__int64 __fastcall sub_402CBB(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_6092F8 = a1;\n  return result;\n}\n"], [4205776, "sub_402CD0", "__int64 sub_402CD0()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_406040(stdout) && (byte_6092F8 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_6092F0 )\n    {\n      v0 = (const char *)sub_404ACE(qword_6092F0);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_406040(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4206011, "sub_402DBB", "_BYTE *__fastcall sub_402DBB(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4206116, "sub_402E24", "size_t __fastcall sub_402E24(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4206194, "sub_402E72", "int __fastcall sub_402E72(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4206242, "sub_402EA2", "void __fastcall sub_402EA2(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_402E72(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4206300, "sub_402EDC", "__int64 __fastcall sub_402EDC(int a1)\n{\n  int fd; // [rsp+1Ch] [rbp-4h]\n\n  fd = open(\"/dev/null\", 0);\n  if ( fd == a1 )\n    return 1LL;\n  if ( fd >= 0 )\n  {\n    close(fd);\n    *__errno_location() = 9;\n  }\n  return 0LL;\n}\n"], [4206383, "sub_402F2F", "FILE *__fastcall sub_402F2F(const char *a1, const char *a2, FILE *a3)\n{\n  int v3; // eax\n  FILE *streama; // [rsp+8h] [rbp-28h]\n  char v7; // [rsp+29h] [rbp-7h]\n  char v8; // [rsp+2Ah] [rbp-6h]\n  char v9; // [rsp+2Bh] [rbp-5h]\n  int v10; // [rsp+2Ch] [rbp-4h]\n\n  v7 = 0;\n  v8 = 0;\n  v9 = 0;\n  v3 = fileno(a3);\n  if ( v3 != 1 )\n  {\n    if ( v3 != 2 )\n    {\n      if ( !v3 )\n        goto LABEL_10;\n      if ( dup2(2, 2) != 2 )\n        v9 = 1;\n    }\n    if ( dup2(1, 1) != 1 )\n      v8 = 1;\n  }\n  if ( dup2(0, 0) )\n    v7 = 1;\nLABEL_10:\n  if ( v7 && (unsigned __int8)sub_402EDC(0) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v8 && (unsigned __int8)sub_402EDC(1) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v9 && (unsigned __int8)sub_402EDC(2) != 1 )\n  {\n    streama = 0LL;\n  }\n  else\n  {\n    streama = freopen(a1, a2, a3);\n  }\n  v10 = *__errno_location();\n  if ( v9 )\n    close(2);\n  if ( v8 )\n    close(1);\n  if ( v7 )\n    close(0);\n  if ( !streama )\n    *__errno_location() = v10;\n  return streama;\n}\n"], [4206722, "sub_403082", "__int64 __fastcall sub_403082(int a1)\n{\n  unsigned __int8 v2; // [rsp+17h] [rbp-9h]\n  const char *s1; // [rsp+18h] [rbp-8h]\n\n  v2 = 1;\n  s1 = setlocale(a1, 0LL);\n  if ( s1 && (!strcmp(s1, \"C\") || !strcmp(s1, \"POSIX\")) )\n    v2 = 0;\n  return v2;\n}\n"], [4206815, "sub_4030DF", "void *__fastcall sub_4030DF(void *a1)\n{\n  return memset(a1, 0, 0x18uLL);\n}\n"], [4206851, "sub_403103", "__int64 __fastcall sub_403103(__int64 a1, __int64 a2)\n{\n  return sub_40312D(a1, a2, 10LL);\n}\n"], [4206893, "sub_40312D", "__int64 *__fastcall sub_40312D(__int64 *a1, FILE *a2, char a3)\n{\n  _BYTE *v4; // rax\n  int v6; // [rsp+2Ch] [rbp-24h]\n  __int64 v7; // [rsp+30h] [rbp-20h]\n  _BYTE *v8; // [rsp+38h] [rbp-18h]\n  __int64 v9; // [rsp+40h] [rbp-10h]\n  __int64 v10; // [rsp+48h] [rbp-8h]\n\n  v7 = a1[2];\n  v8 = (_BYTE *)v7;\n  v9 = *a1 + v7;\n  if ( feof_unlocked(a2) )\n    return 0LL;\n  while ( 1 )\n  {\n    v6 = getc_unlocked(a2);\n    if ( v6 == -1 )\n      break;\nLABEL_9:\n    if ( v8 == (_BYTE *)v9 )\n    {\n      v10 = *a1;\n      v7 = sub_40567D(v7, a1);\n      v8 = (_BYTE *)(v7 + v10);\n      a1[2] = v7;\n      v9 = *a1 + v7;\n    }\n    v4 = v8++;\n    *v4 = v6;\n    if ( a3 == v6 )\n      goto LABEL_12;\n  }\n  if ( v8 == (_BYTE *)v7 || ferror_unlocked(a2) )\n    return 0LL;\n  if ( *(v8 - 1) != a3 )\n  {\n    v6 = a3;\n    goto LABEL_9;\n  }\nLABEL_12:\n  a1[1] = (__int64)&v8[-v7];\n  return a1;\n}\n"], [4207214, "sub_40326E", "void __fastcall sub_40326E(__int64 a1)\n{\n  free(*(void **)(a1 + 16));\n}\n"], [4207244, "sub_40328C", "__int64 __fastcall sub_40328C(__int64 a1, __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int8 v5; // [rsp+2Bh] [rbp-25h]\n  int v6; // [rsp+2Ch] [rbp-24h]\n  unsigned int v7; // [rsp+34h] [rbp-1Ch]\n  unsigned __int64 i; // [rsp+38h] [rbp-18h]\n\n  for ( i = 0LL; i < a3; ++i )\n  {\n    v5 = *(_BYTE *)(a2 + i);\n    v6 = toupper(*(unsigned __int8 *)(a1 + i));\n    v7 = v6 - toupper(v5);\n    if ( v7 )\n      return v7;\n  }\n  return 0LL;\n}\n"], [4207398, "sub_403326", "__int64 sub_403326()\n{\n  __int64 result; // rax\n  char *endptr; // [rsp+0h] [rbp-20h] BYREF\n  __int64 v2; // [rsp+8h] [rbp-18h]\n  char *nptr; // [rsp+10h] [rbp-10h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v2 = 200809LL;\n  nptr = getenv(\"_POSIX2_VERSION\");\n  if ( nptr )\n  {\n    if ( *nptr )\n    {\n      v4 = strtol(nptr, &endptr, 10);\n      if ( !*endptr )\n        v2 = v4;\n    }\n  }\n  if ( v2 < (__int64)0xFFFFFFFF80000000LL )\n    return 0x80000000LL;\n  result = 0x7FFFFFFFLL;\n  if ( v2 <= 0x7FFFFFFF )\n    result = v2;\n  return result;\n}\n"], [4207530, "sub_4033AA", "char *__fastcall sub_4033AA(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_609300 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4207761, "sub_403491", "__int64 __fastcall sub_403491(unsigned int a1, __int64 a2)\n{\n  return sub_404940(a1, 6LL, a2);\n}\n"], [4207797, "sub_4034B5", "__int64 __fastcall sub_4034B5(__int64 a1)\n{\n  return sub_403491(0, a1);\n}\n"], [4207828, "sub_4034D4", "__int64 __fastcall sub_4034D4(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609320;\n  v4 = sub_40570B(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4207901, "sub_40351D", "__int64 __fastcall sub_40351D(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609320;\n  return *(unsigned int *)v1;\n}\n"], [4207931, "sub_40353B", "__int64 *__fastcall sub_40353B(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_609320;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4207967, "sub_40355F", "__int64 __fastcall sub_40355F(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_609320;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4208103, "sub_4035E7", "__int64 __fastcall sub_4035E7(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_609320;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4208154, "sub_40361A", "__int64 *__fastcall sub_40361A(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_609320;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4208244, "sub_403674", "_QWORD *__fastcall sub_403674(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4208364, "sub_4036EC", "char *__fastcall sub_4036EC(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4208425, "sub_403729", "unsigned __int64 __fastcall sub_403729(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_4036EC((const char *)L\"`'\", a5);\n        a9 = sub_4036EC((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403729(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4211572, "sub_404374", "unsigned __int64 __fastcall sub_404374(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_609320;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403729(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4211732, "sub_404414", "__int64 __fastcall sub_404414(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404446(a1, a2, 0LL, a3);\n}\n"], [4211782, "sub_404446", "__int64 __fastcall sub_404446(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_609320;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_403729(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_4055CD(v10);\n  sub_403729(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4212082, "sub_404572", "void sub_404572()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_609240;\n  for ( i = 1; i < dword_609220; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_609360 )\n  {\n    free(ptr[1]);\n    qword_609230 = 256LL;\n    off_609238 = &unk_609360;\n  }\n  if ( ptr != (void **)&qword_609230 )\n  {\n    free(ptr);\n    off_609240 = &qword_609230;\n  }\n  dword_609220 = 1;\n}\n"], [4212253, "sub_40461D", "void *__fastcall sub_40461D(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_609240;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_609220 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_609240 == &qword_609230;\n    if ( off_609240 == &qword_609230 )\n      v4 = 0LL;\n    else\n      v4 = off_609240;\n    v12 = (__int64 *)sub_40561C(v4, 16 * v14);\n    off_609240 = v12;\n    if ( v9 )\n    {\n      v5 = off_609238;\n      *v12 = qword_609230;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_609220], 0, 16 * (v14 - (unsigned int)dword_609220));\n    dword_609220 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_403729((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_609360 )\n      free(ptr);\n    ptr = (void *)sub_4055CD(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_403729((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4212899, "sub_4048A3", "void *__fastcall sub_4048A3(int a1, __int64 a2)\n{\n  return sub_40461D(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_609320);\n}\n"], [4212942, "sub_4048CE", "void *__fastcall sub_4048CE(int a1, __int64 a2, size_t a3)\n{\n  return sub_40461D(a1, a2, a3, (__int64)&qword_609320);\n}\n"], [4212986, "sub_4048FA", "void *__fastcall sub_4048FA(__int64 a1)\n{\n  return sub_4048A3(0, a1);\n}\n"], [4213017, "sub_404919", "void *__fastcall sub_404919(__int64 a1, size_t a2)\n{\n  return sub_4048CE(0, a1, a2);\n}\n"], [4213056, "sub_404940", "void *__fastcall sub_404940(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403674(v5, a2);\n  return sub_40461D(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4213121, "sub_404981", "void *__fastcall sub_404981(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403674(v7, a2);\n  return sub_40461D(a1, a3, a4, (__int64)v7);\n}\n"], [4213184, "sub_4049C0", "void *__fastcall sub_4049C0(int a1, __int64 a2)\n{\n  return sub_404940(0, a1, a2);\n}\n"], [4213220, "sub_4049E4", "void *__fastcall sub_4049E4(int a1, __int64 a2, size_t a3)\n{\n  return sub_404981(0, a1, a2, a3);\n}\n"], [4213264, "sub_404A10", "void *__fastcall sub_404A10(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_609320;\n  v4[1] = qword_609328;\n  v4[2] = qword_609330;\n  v4[3] = qword_609338;\n  v4[4] = qword_609340;\n  v4[5] = qword_609348;\n  v4[6] = qword_609350;\n  sub_40355F(v4, a3, 1);\n  return sub_40461D(0, a1, a2, (__int64)v4);\n}\n"], [4213412, "sub_404AA4", "void *__fastcall sub_404AA4(__int64 a1, unsigned __int8 a2)\n{\n  return sub_404A10(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4213454, "sub_404ACE", "void *__fastcall sub_404ACE(__int64 a1)\n{\n  return sub_404AA4(a1, 0x3Au);\n}\n"], [4213485, "sub_404AED", "void *__fastcall sub_404AED(__int64 a1, size_t a2)\n{\n  return sub_404A10(a1, a2, 0x3Au);\n}\n"], [4213527, "sub_404B17", "__int64 __fastcall sub_404B17(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_404B4D(a1, a2, a3, a4, -1LL);\n}\n"], [4213581, "sub_404B4D", "void *__fastcall sub_404B4D(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_609320;\n  v8[1] = qword_609328;\n  v8[2] = qword_609330;\n  v8[3] = qword_609338;\n  v8[4] = qword_609340;\n  v8[5] = qword_609348;\n  v8[6] = qword_609350;\n  sub_40361A(v8, a2, a3);\n  return sub_40461D(a1, a4, a5, (__int64)v8);\n}\n"], [4213732, "sub_404BE4", "__int64 __fastcall sub_404BE4(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404B17(0, a1, a2, a3);\n}\n"], [4213779, "sub_404C13", "void *__fastcall sub_404C13(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_404B4D(0, a1, a2, a3, a4);\n}\n"], [4213837, "sub_404C4D", "int __fastcall sub_404C4D(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4215352, "sub_405238", "int __fastcall sub_405238(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_404C4D(a1, a2, a3, a4, a5, i);\n}\n"], [4215462, "sub_4052A6", "int __fastcall sub_4052A6(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_404C4D(a1, a2, a3, a4, v8, i);\n}\n"], [4215679, "sub_40537F", "int sub_40537F(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_4052A6(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4215861, "sub_405435", "int sub_405435()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4215966, "sub_40549E", "__int64 __fastcall sub_40549E(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_405769(a1, a2, v2);\n  return sub_4055E7(a2 * a1, a2, v2);\n}\n"], [4216028, "sub_4054DC", "__int64 __fastcall sub_4054DC(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_405769(a1, a2, v4);\n  return sub_40561C(a1, a3 * a2);\n}\n"], [4216104, "sub_405528", "__int64 __fastcall sub_405528(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_405769(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40561C(a1, a3 * v6);\n}\n"], [4216269, "sub_4055CD", "__int64 __fastcall sub_4055CD(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4055E7(a1, a2, a3);\n}\n"], [4216295, "sub_4055E7", "void *__fastcall sub_4055E7(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_405769(a1, a2, v2);\n  return v4;\n}\n"], [4216348, "sub_40561C", "void *__fastcall sub_40561C(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_405769(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4216445, "sub_40567D", "__int64 __fastcall sub_40567D(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_405528(a1, a2, 1uLL);\n}\n"], [4216487, "sub_4056A7", "void *__fastcall sub_4056A7(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4055E7(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4216530, "sub_4056D2", "void *__fastcall sub_4056D2(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_405769(a1, a2, v2);\n  return v4;\n}\n"], [4216587, "sub_40570B", "void *__fastcall sub_40570B(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4055E7(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4216636, "sub_40573C", "void *__fastcall sub_40573C(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40570B(a1, v1 + 1);\n}\n"], [4216681, "sub_405769", "void __noreturn sub_405769()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4216734, "sub_40579E", "void __fastcall sub_40579E(int a1, __int64 a2, size_t a3, __int64 a4, size_t a5)\n{\n  char *v5; // rax\n  char *v6; // rax\n  void *v7; // r12\n  void *v8; // rbx\n  char *v9; // rax\n\n  v5 = gettext(\"string comparison failed\");\n  error(0, a1, v5);\n  v6 = gettext(\"Set LC_ALL='C' to work around the problem.\");\n  error(0, 0, v6);\n  v7 = sub_404981(1, 6, a4, a5);\n  v8 = sub_404981(0, 6, a2, a3);\n  v9 = gettext(\"The strings compared were %s and %s.\");\n  error(status, 0, v9, v8, v7);\n}\n"], [4216945, "sub_405871", "__int64 __fastcall sub_405871(__int64 a1, size_t a2, __int64 a3, size_t a4)\n{\n  unsigned int v7; // [rsp+28h] [rbp-8h]\n  int v8; // [rsp+2Ch] [rbp-4h]\n\n  v7 = sub_40619C(a1, a2, a3, a4);\n  v8 = *__errno_location();\n  if ( v8 )\n    sub_40579E(v8, a1, a2, a3, a4);\n  return v7;\n}\n"], [4217046, "sub_4058D6", "__int64 __fastcall sub_4058D6(__int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  unsigned int v7; // [rsp+28h] [rbp-8h]\n  int v8; // [rsp+2Ch] [rbp-4h]\n\n  v7 = sub_406278(a1, a2, a3, a4);\n  v8 = *__errno_location();\n  if ( v8 )\n    sub_40579E(v8, a1, a2 - 1, a3, a4 - 1);\n  return v7;\n}\n"], [4217161, "sub_405949", "__int64 __fastcall sub_405949(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4217256, "sub_4059A8", "__int64 __fastcall sub_4059A8(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_405949(a1, a2) )\n    ;\n  return i;\n}\n"], [4217321, "sub_4059E9", "__int64 __fastcall sub_4059E9(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  unsigned __int64 v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoul\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoul(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_4059A8(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_405949(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_4059A8(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_405949(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_4059A8(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_4059A8(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_405949(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_4059A8(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_4059A8(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_4059A8(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_4059A8(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4218453, "sub_405E55", "int __fastcall sub_405E55(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_405F3D(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4218634, "sub_405F0A", "__int64 __fastcall sub_405F0A(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_405F88(a1, 0LL, 1LL);\n  return result;\n}\n"], [4218685, "sub_405F3D", "int __fastcall sub_405F3D(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_405F0A(a1);\n  return fflush(a1);\n}\n"], [4218760, "sub_405F88", "int __fastcall sub_405F88(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4218944, "sub_406040", "__int64 __fastcall sub_406040(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_405E55(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4219083, "sub_4060CB", "__int64 __fastcall sub_4060CB(const char *a1, __int64 a2, const char *a3, __int64 a4)\n{\n  unsigned int v10; // [rsp+2Ch] [rbp-14h]\n  size_t v11; // [rsp+30h] [rbp-10h]\n  size_t v12; // [rsp+38h] [rbp-8h]\n\n  while ( 1 )\n  {\n    *__errno_location() = 0;\n    v10 = strcoll(a1, a3);\n    if ( v10 || *__errno_location() )\n      break;\n    v11 = strlen(a1) + 1;\n    v12 = strlen(a3) + 1;\n    a1 += v11;\n    a3 += v12;\n    a2 -= v11;\n    a4 -= v12;\n    if ( !a2 )\n      return (unsigned int)-(a4 != 0);\n    if ( !a4 )\n      return 1LL;\n  }\n  return v10;\n}\n"], [4219292, "sub_40619C", "__int64 __fastcall sub_40619C(const char *a1, size_t a2, const char *a3, __int64 a4)\n{\n  char v7; // [rsp+2Ah] [rbp-6h]\n  char v8; // [rsp+2Bh] [rbp-5h]\n  unsigned int v9; // [rsp+2Ch] [rbp-4h]\n\n  if ( a2 == a4 && !memcmp(a1, a3, a2) )\n  {\n    *__errno_location() = 0;\n    v9 = 0;\n  }\n  else\n  {\n    v7 = a1[a2];\n    v8 = a3[a4];\n    a1[a2] = 0;\n    a3[a4] = 0;\n    v9 = sub_4060CB(a1, a2 + 1, a3, a4 + 1);\n    a1[a2] = v7;\n    a3[a4] = v8;\n  }\n  return v9;\n}\n"], [4219512, "sub_406278", "__int64 __fastcall sub_406278(const char *a1, size_t a2, const char *a3, __int64 a4)\n{\n  if ( a2 != a4 || memcmp(a1, a3, a2) )\n    return sub_4060CB(a1, a2, a3, a4);\n  *__errno_location() = 0;\n  return 0LL;\n}\n"], [4219632, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4219744, "fini", "void fini(void)\n{\n  ;\n}\n"], [4219760, "sub_406370", "int __fastcall sub_406370(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6091F8 )\n    v1 = (void *)qword_6091F8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4219788, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]