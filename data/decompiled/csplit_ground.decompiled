[[4199880, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199920, "sub_4015F0", "__int64 sub_4015F0()\n{\n  return qword_60B010();\n}\n"], [4199936, ".sigprocmask", "// attributes: thunk\nint sigprocmask(int how, const sigset_t *set, sigset_t *oset)\n{\n  return sigprocmask(how, set, oset);\n}\n"], [4199952, ".raise", "// attributes: thunk\nint raise(int sig)\n{\n  return raise(sig);\n}\n"], [4199968, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199984, ".strtoimax", "// attributes: thunk\nintmax_t strtoimax(const char *nptr, char **endptr, int base)\n{\n  return strtoimax(nptr, endptr, base);\n}\n"], [4200000, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4200016, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4200032, ".unlink", "// attributes: thunk\nint unlink(const char *name)\n{\n  return unlink(name);\n}\n"], [4200048, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4200064, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4200080, ".strcpy", "// attributes: thunk\nchar *strcpy(char *dest, const char *src)\n{\n  return strcpy(dest, src);\n}\n"], [4200096, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4200112, ".sigaction", "// attributes: thunk\nint sigaction(int sig, const struct sigaction *act, struct sigaction *oact)\n{\n  return sigaction(sig, act, oact);\n}\n"], [4200128, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4200144, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4200160, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4200176, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4200192, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4200208, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4200224, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200240, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200256, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200272, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200288, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4200304, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4200320, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4200336, ".snprintf", "// attributes: thunk\nint snprintf(char *s, size_t maxlen, const char *format, ...)\n{\n  return snprintf(s, maxlen, format);\n}\n"], [4200352, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4200368, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4200384, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4200400, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4200416, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4200432, ".fputc", "// attributes: thunk\nint fputc(int c, FILE *stream)\n{\n  return fputc(c, stream);\n}\n"], [4200448, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4200464, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4200480, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200496, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200512, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200528, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200544, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200560, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4200576, ".signal", "// attributes: thunk\n__sighandler_t signal(int sig, __sighandler_t handler)\n{\n  return signal(sig, handler);\n}\n"], [4200592, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200608, ".sigemptyset", "// attributes: thunk\nint sigemptyset(sigset_t *set)\n{\n  return sigemptyset(set);\n}\n"], [4200624, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200640, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200656, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200672, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200688, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200704, ".re_search", "// attributes: thunk\nint re_search(struct re_pattern_buffer *buffer, const char *string, int length, int start, int range, struct re_registers *regs)\n{\n  return re_search(buffer, string, length, start, range, regs);\n}\n"], [4200720, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200736, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4200752, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200768, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4200784, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200800, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200816, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4200832, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200848, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200864, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4200880, ".strtoul", "// attributes: thunk\nunsigned __int64 strtoul(const char *nptr, char **endptr, int base)\n{\n  return strtoul(nptr, endptr, base);\n}\n"], [4200896, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200912, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4200928, ".sigismember", "// attributes: thunk\nint sigismember(const sigset_t *set, int signo)\n{\n  return sigismember(set, signo);\n}\n"], [4200944, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200960, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200976, ".re_compile_pattern", "// attributes: thunk\nconst char *re_compile_pattern(const char *pattern, size_t length, struct re_pattern_buffer *buffer)\n{\n  return re_compile_pattern(pattern, length, buffer);\n}\n"], [4200992, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4201008, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4201024, ".sigaddset", "// attributes: thunk\nint sigaddset(sigset_t *set, int signo)\n{\n  return sigaddset(set, signo);\n}\n"], [4201040, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4201056, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4201104, "sub_401A90", "signed __int64 sub_401A90()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60B2AF - &unk_60B2A8;\n  if ( (unsigned __int64)(&unk_60B2AF - &unk_60B2A8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4201152, "sub_401AC0", "__int64 sub_401AC0()\n{\n  return 0LL;\n}\n"], [4201216, "sub_401B00", "signed __int64 sub_401B00()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60B318 )\n  {\n    result = sub_401A90();\n    byte_60B318 = 1;\n  }\n  return result;\n}\n"], [4201248, "sub_401B20", "__int64 sub_401B20()\n{\n  return sub_401AC0();\n}\n"], [4201293, "sub_401B4D", "int sub_401B4D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_404546(qword_60B468);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_404546(qword_60B468);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_404546(qword_60B468);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201559, "sub_401C57", "int sub_401C57()\n{\n  sigset_t oset; // [rsp+0h] [rbp-80h] BYREF\n\n  sub_403131();\n  sigprocmask(0, &set, &oset);\n  sub_4030A3(0LL);\n  return sigprocmask(2, &oset, 0LL);\n}\n"], [4201628, "sub_401C9C", "void __noreturn sub_401C9C()\n{\n  sub_401C57();\n  exit(1);\n}\n"], [4201647, "sub_401CAF", "void __noreturn sub_401CAF()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(0, 0, \"%s\", v0);\n  sub_401C9C();\n}\n"], [4201694, "sub_401CDE", "int __fastcall sub_401CDE(int a1)\n{\n  sub_4030A3(1LL);\n  signal(a1, 0LL);\n  return raise(a1);\n}\n"], [4201742, "sub_401D0E", "size_t __fastcall sub_401D0E(void *a1, size_t a2)\n{\n  size_t result; // rax\n\n  free(src);\n  src = a1;\n  result = a2;\n  n = a2;\n  return result;\n}\n"], [4201797, "sub_401D45", "__int64 __fastcall sub_401D45(__int64 a1, __int64 a2)\n{\n  char *v3; // rbx\n  int *v4; // rax\n  __int64 v5; // [rsp+18h] [rbp-18h]\n\n  if ( !a2 )\n    return 0LL;\n  v5 = sub_40600B(0LL, a1, a2);\n  if ( !v5 )\n    byte_60B348 = 1;\n  if ( v5 == -1 )\n  {\n    v3 = gettext(\"read error\");\n    v4 = __errno_location();\n    error(0, *v4, v3);\n    sub_401C9C();\n  }\n  return v5;\n}\n"], [4201930, "sub_401DCA", "_QWORD *__fastcall sub_401DCA(_QWORD *a1)\n{\n  _QWORD *result; // rax\n\n  *a1 = 0LL;\n  a1[1] = 0LL;\n  result = a1;\n  a1[2] = 0LL;\n  return result;\n}\n"], [4201975, "sub_401DF7", "_QWORD *sub_401DF7()\n{\n  _QWORD *v1; // [rsp+8h] [rbp-8h]\n\n  v1 = (_QWORD *)sub_406A3C(1312LL);\n  v1[163] = 0LL;\n  sub_401DCA(v1);\n  return v1;\n}\n"], [4202030, "sub_401E2E", "_QWORD *__fastcall sub_401E2E(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  _QWORD *result; // rax\n  _QWORD *v6; // [rsp+28h] [rbp-18h]\n\n  if ( !*(_QWORD *)(a1 + 48) )\n  {\n    *(_QWORD *)(a1 + 56) = sub_401DF7();\n    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a1 + 56);\n  }\n  if ( **(_QWORD **)(a1 + 56) == 80LL )\n  {\n    v3 = *(_QWORD *)(a1 + 56);\n    *(_QWORD *)(v3 + 1304) = sub_401DF7();\n    *(_QWORD *)(a1 + 56) = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 1304LL);\n  }\n  v6 = *(_QWORD **)(a1 + 56);\n  v6[2 * v6[1] + 4] = a2;\n  v6[2 * v6[1] + 3] = a3;\n  ++*v6;\n  result = v6;\n  ++v6[1];\n  return result;\n}\n"], [4202278, "sub_401F26", "__int64 __fastcall sub_401F26(_QWORD *a1)\n{\n  void *v2; // rax\n  void *s; // [rsp+18h] [rbp-28h]\n  size_t n; // [rsp+20h] [rbp-20h]\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  char *v6; // [rsp+30h] [rbp-10h]\n\n  if ( !a1[1] )\n    return 0LL;\n  v5 = 0LL;\n  s = (void *)a1[5];\n  n = a1[1];\n  while ( 1 )\n  {\n    v6 = (char *)memchr(s, 10, n);\n    if ( !v6 )\n      break;\n    sub_401E2E((__int64)a1, (__int64)s, v6 - (_BYTE *)s + 1);\n    n -= v6 - (_BYTE *)s + 1;\n    s = v6 + 1;\n    ++v5;\n  }\n  if ( n )\n  {\n    if ( byte_60B348 )\n    {\n      sub_401E2E((__int64)a1, (__int64)s, n);\n      ++v5;\n    }\n    else\n    {\n      v2 = (void *)sub_406B60(s, n);\n      sub_401D0E(v2, n);\n    }\n  }\n  a1[4] = v5;\n  a1[2] = qword_60B338 + 1;\n  a1[3] = a1[2];\n  qword_60B338 += v5;\n  return v5;\n}\n"], [4202612, "sub_402074", "_QWORD *__fastcall sub_402074(__int64 a1)\n{\n  _QWORD *v2; // [rsp+18h] [rbp-8h]\n\n  v2 = (_QWORD *)sub_406A3C(72LL);\n  v2[5] = sub_406A3C(a1 + 1);\n  *v2 = a1;\n  v2[7] = 0LL;\n  v2[6] = v2[7];\n  return v2;\n}\n"], [4202710, "sub_4020D6", "_QWORD *__fastcall sub_4020D6(unsigned __int64 a1)\n{\n  _QWORD *result; // rax\n  __int64 v2; // [rsp+18h] [rbp-18h]\n\n  v2 = 0x1FFFLL;\n  if ( a1 > 0x1FFF )\n    v2 = ((a1 - 0x1FFF + 2047) & 0xFFFFFFFFFFFFF800LL) + 0x1FFF;\n  result = sub_402074(v2);\n  result[4] = 0LL;\n  result[1] = 0LL;\n  result[3] = qword_60B338 + 1;\n  result[2] = result[3];\n  result[8] = 0LL;\n  return result;\n}\n"], [4202871, "sub_402177", "__int64 __fastcall sub_402177(__int64 a1)\n{\n  __int64 result; // rax\n  _QWORD *ptr; // [rsp+10h] [rbp-10h]\n  _QWORD *v3; // [rsp+18h] [rbp-8h]\n\n  for ( ptr = *(_QWORD **)(a1 + 48); ptr; ptr = v3 )\n  {\n    v3 = (_QWORD *)ptr[163];\n    free(ptr);\n  }\n  free(*(void **)(a1 + 40));\n  result = a1;\n  *(_QWORD *)(a1 + 40) = 0LL;\n  return result;\n}\n"], [4202969, "sub_4021D9", "_QWORD *__fastcall sub_4021D9(_QWORD *a1)\n{\n  _QWORD *result; // rax\n  __int64 i; // [rsp+10h] [rbp-8h]\n\n  a1[8] = 0LL;\n  a1[7] = a1[6];\n  if ( qword_60B320 )\n  {\n    for ( i = qword_60B320; *(_QWORD *)(i + 64); i = *(_QWORD *)(i + 64) )\n      ;\n    result = (_QWORD *)i;\n    *(_QWORD *)(i + 64) = a1;\n  }\n  else\n  {\n    result = a1;\n    qword_60B320 = (__int64)a1;\n  }\n  return result;\n}\n"], [4203082, "sub_40224A", "bool sub_40224A()\n{\n  __int64 v1; // rbx\n  __int64 *v2; // rdi\n  unsigned __int64 v3; // [rsp+8h] [rbp-38h]\n  __int64 v4; // [rsp+10h] [rbp-30h]\n  char *dest; // [rsp+18h] [rbp-28h]\n  __int64 *ptr; // [rsp+20h] [rbp-20h]\n  __int64 v7; // [rsp+28h] [rbp-18h]\n\n  v3 = 0x1FFFLL;\n  if ( byte_60B348 )\n    return 0;\n  if ( n > 0x1FFF )\n    v3 = n;\n  while ( 1 )\n  {\n    ptr = sub_4020D6(v3);\n    v4 = *ptr;\n    dest = (char *)ptr[5];\n    if ( n )\n    {\n      memcpy(dest, src, n);\n      dest += n;\n      ptr[1] += n;\n      v4 -= n;\n      n = 0LL;\n    }\n    v1 = ptr[1];\n    ptr[1] = v1 + sub_401D45((__int64)dest, v4);\n    v2 = ptr;\n    v7 = sub_401F26(ptr);\n    if ( !v7 )\n    {\n      v2 = ptr;\n      sub_402177((__int64)ptr);\n    }\n    if ( v7 || byte_60B348 )\n      break;\n    if ( 0xFFFFFFFFFFFFFFFFLL / *ptr <= 1 )\n      sub_401CAF(v2, v4, 0xFFFFFFFFFFFFFFFFLL % *ptr);\n    v3 = 2 * *ptr;\n    sub_402177((__int64)ptr);\n    free(ptr);\n  }\n  if ( v7 )\n    sub_4021D9(ptr);\n  else\n    free(ptr);\n  return v7 != 0;\n}\n"], [4203499, "sub_4023EB", "__int64 sub_4023EB()\n{\n  char *v0; // rbx\n  int *v1; // rax\n\n  if ( !qword_60B320 && !sub_40224A() )\n  {\n    v0 = gettext(\"input disappeared\");\n    v1 = __errno_location();\n    error(1, *v1, v0);\n  }\n  return *(_QWORD *)(qword_60B320 + 24);\n}\n"], [4203590, "sub_402446", "__int64 sub_402446()\n{\n  _QWORD *v1; // [rsp+0h] [rbp-10h]\n  __int64 v2; // [rsp+8h] [rbp-8h]\n\n  if ( ptr )\n  {\n    sub_402177((__int64)ptr);\n    free(ptr);\n    ptr = 0LL;\n  }\n  if ( !qword_60B320 && !sub_40224A() )\n    return 0LL;\n  if ( *(_QWORD *)(qword_60B320 + 24) > (unsigned __int64)qword_60B340 )\n    qword_60B340 = *(_QWORD *)(qword_60B320 + 24);\n  ++*(_QWORD *)(qword_60B320 + 24);\n  v1 = *(_QWORD **)(qword_60B320 + 56);\n  v2 = (__int64)&v1[2 * ++v1[2] + 1];\n  if ( v1[2] == *v1 )\n  {\n    *(_QWORD *)(qword_60B320 + 56) = v1[163];\n    if ( !*(_QWORD *)(qword_60B320 + 56) || !**(_QWORD **)(qword_60B320 + 56) )\n    {\n      ptr = (void *)qword_60B320;\n      qword_60B320 = *(_QWORD *)(qword_60B320 + 64);\n    }\n  }\n  return v2;\n}\n"], [4203929, "sub_402599", "__int64 __fastcall sub_402599(unsigned __int64 a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  __int64 v3; // [rsp+20h] [rbp-10h]\n  unsigned __int64 j; // [rsp+28h] [rbp-8h]\n\n  if ( !qword_60B320 && !sub_40224A() )\n    return 0LL;\n  if ( *(_QWORD *)(qword_60B320 + 16) > a1 )\n    return 0LL;\n  for ( i = (_QWORD *)qword_60B320; i[2] + i[4] <= a1; i = (_QWORD *)i[8] )\n  {\n    if ( !i[8] && !sub_40224A() )\n      return 0LL;\n  }\n  v3 = i[6];\n  for ( j = a1 - i[2]; j > 0x4F; j -= 80LL )\n    v3 = *(_QWORD *)(v3 + 1304);\n  return 16 * (j + 1) + v3 + 8;\n}\n"], [4204180, "sub_402694", "bool sub_402694()\n{\n  return sub_402599(qword_60B340 + 1) == 0;\n}\n"], [4204211, "sub_4026B3", "void __fastcall sub_4026B3(const char *a1)\n{\n  __int64 v1; // r12\n  char *v2; // rbx\n  int *v3; // rax\n\n  if ( strcmp(a1, \"-\") )\n  {\n    if ( (int)sub_407F74(0LL, a1, 0LL, 0LL) < 0 )\n    {\n      v1 = sub_404873(a1);\n      v2 = gettext(\"cannot open %s for reading\");\n      v3 = __errno_location();\n      error(1, *v3, v2, v1);\n    }\n  }\n}\n"], [4204345, "sub_402739", "unsigned __int64 __fastcall sub_402739(unsigned __int64 a1, char a2, int a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  unsigned __int64 result; // rax\n  unsigned __int64 i; // [rsp+10h] [rbp-30h]\n  unsigned __int64 v10; // [rsp+18h] [rbp-28h]\n  __int64 v11; // [rsp+28h] [rbp-18h]\n\n  v10 = sub_4023EB();\n  if ( v10 > a1 )\n  {\n    v3 = *(_QWORD *)(8LL * a3 + qword_60B388);\n    v4 = gettext(\"%s: line number out of range\");\n    error(0, 0, v4, v3);\n    sub_401C9C();\n  }\n  for ( i = 0LL; ; ++i )\n  {\n    result = i;\n    if ( i >= a1 - v10 )\n      break;\n    v11 = sub_402446();\n    if ( !v11 )\n    {\n      v5 = *(_QWORD *)(8LL * a3 + qword_60B388);\n      v6 = gettext(\"%s: line number out of range\");\n      error(0, 0, v6, v5);\n      sub_401C9C();\n    }\n    if ( a2 != 1 )\n      sub_40332F(v11);\n  }\n  return result;\n}\n"], [4204602, "sub_40283A", "__int64 sub_40283A()\n{\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = sub_402446();\n    if ( !result )\n      break;\n    sub_40332F(result);\n  }\n  return result;\n}\n"], [4204642, "sub_402862", "void __fastcall __noreturn sub_402862(__int64 a1, __int64 a2)\n{\n  __int64 v2; // rax\n  __int64 v3; // r12\n  __int64 v4; // rbx\n  char *v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  char v8[24]; // [rsp+10h] [rbp-30h] BYREF\n  unsigned __int64 v9; // [rsp+28h] [rbp-18h]\n\n  v9 = __readfsqword(0x28u);\n  v2 = sub_4046E3(*(_QWORD *)(a1 + 8), v8);\n  v3 = sub_404873(v2);\n  v4 = qword_60B468;\n  v5 = gettext(\"%s: %s: line number out of range\");\n  fprintf(stderr, v5, v4, v3);\n  if ( a2 )\n  {\n    v6 = sub_4046E3(a2, v8);\n    v7 = gettext(\" on repetition %s\\n\");\n    fprintf(stderr, v7, v6);\n  }\n  else\n  {\n    fputc(10, stderr);\n  }\n  sub_401C9C();\n}\n"], [4204851, "sub_402933", "bool __fastcall sub_402933(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v2; // rax\n  bool result; // al\n  __int64 v4; // [rsp+18h] [rbp-18h]\n  unsigned __int64 v5; // [rsp+20h] [rbp-10h]\n  __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v5 = (a2 + 1) * *(_QWORD *)(a1 + 8);\n  sub_402FA4();\n  v4 = sub_4023EB();\n  while ( 1 )\n  {\n    v2 = v4++;\n    if ( v2 >= v5 )\n      break;\n    v6 = sub_402446();\n    if ( !v6 )\n      sub_402862(a1, a2);\n    sub_40332F(v6);\n  }\n  sub_403131();\n  result = sub_402694();\n  if ( result )\n    sub_402862(a1, a2);\n  return result;\n}\n"], [4205007, "sub_4029CF", "void __fastcall __noreturn sub_4029CF(__int64 a1, __int64 a2, char a3)\n{\n  __int64 v3; // r12\n  __int64 v4; // rbx\n  char *v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  char v9[24]; // [rsp+20h] [rbp-30h] BYREF\n  unsigned __int64 v10; // [rsp+38h] [rbp-18h]\n\n  v10 = __readfsqword(0x28u);\n  v3 = sub_404873(*(_QWORD *)(qword_60B388 + 8LL * *(int *)(a1 + 24)));\n  v4 = qword_60B468;\n  v5 = gettext(\"%s: %s: match not found\");\n  fprintf(stderr, v5, v4, v3);\n  if ( a2 )\n  {\n    v6 = sub_4046E3(a2, v9);\n    v7 = gettext(\" on repetition %s\\n\");\n    fprintf(stderr, v7, v6);\n  }\n  else\n  {\n    fputc(10, stderr);\n  }\n  if ( a3 != 1 )\n  {\n    sub_40283A();\n    sub_403131();\n  }\n  sub_401C9C();\n}\n"], [4205245, "sub_402ABD", "__int64 __fastcall sub_402ABD(__int64 a1, __int64 a2)\n{\n  char *v2; // rax\n  char *v3; // rax\n  __int64 result; // rax\n  char v5; // [rsp+13h] [rbp-1Dh]\n  int v6; // [rsp+14h] [rbp-1Ch]\n  int v7; // [rsp+14h] [rbp-1Ch]\n  __int64 range; // [rsp+18h] [rbp-18h]\n  __int64 rangea; // [rsp+18h] [rbp-18h]\n  __int64 v10; // [rsp+20h] [rbp-10h]\n  __int64 v11; // [rsp+20h] [rbp-10h]\n  __int64 v12; // [rsp+20h] [rbp-10h]\n  unsigned __int64 v13; // [rsp+28h] [rbp-8h]\n\n  v5 = *(_BYTE *)(a1 + 29);\n  if ( v5 != 1 )\n    sub_402FA4();\n  if ( *(__int64 *)a1 < 0 )\n  {\n    do\n    {\n      v12 = sub_402599(++qword_60B340);\n      if ( !v12 )\n      {\n        if ( *(_BYTE *)(a1 + 28) )\n        {\n          if ( v5 != 1 )\n          {\n            sub_40283A();\n            sub_403131();\n          }\n          exit(0);\n        }\n        sub_4029CF(a1, a2, v5);\n      }\n      rangea = *(_QWORD *)v12;\n      if ( *(_BYTE *)(*(_QWORD *)v12 - 1LL + *(_QWORD *)(v12 + 8)) == 10 )\n        LODWORD(rangea) = rangea - 1;\n      v7 = re_search((struct re_pattern_buffer *)(a1 + 32), *(const char **)(v12 + 8), rangea, 0, rangea, 0LL);\n      if ( v7 == -2 )\n      {\n        v3 = gettext(\"error in regular expression search\");\n        error(0, 0, v3);\n        sub_401C9C();\n      }\n    }\n    while ( v7 == -1 );\n  }\n  else\n  {\n    while ( 1 )\n    {\n      v10 = sub_402599(++qword_60B340);\n      if ( !v10 )\n      {\n        if ( *(_BYTE *)(a1 + 28) )\n        {\n          if ( v5 != 1 )\n          {\n            sub_40283A();\n            sub_403131();\n          }\n          exit(0);\n        }\n        sub_4029CF(a1, a2, v5);\n      }\n      range = *(_QWORD *)v10;\n      if ( *(_BYTE *)(*(_QWORD *)v10 - 1LL + *(_QWORD *)(v10 + 8)) == 10 )\n        LODWORD(range) = range - 1;\n      v6 = re_search((struct re_pattern_buffer *)(a1 + 32), *(const char **)(v10 + 8), range, 0, range, 0LL);\n      if ( v6 == -2 )\n      {\n        v2 = gettext(\"error in regular expression search\");\n        error(0, 0, v2);\n        sub_401C9C();\n      }\n      if ( v6 != -1 )\n        break;\n      v11 = sub_402446();\n      if ( v5 != 1 )\n        sub_40332F(v11);\n    }\n  }\n  v13 = *(_QWORD *)a1 + qword_60B340;\n  sub_402739(v13, v5, *(_DWORD *)(a1 + 24));\n  if ( v5 != 1 )\n    sub_403131();\n  result = *(_QWORD *)a1;\n  if ( *(__int64 *)a1 > 0 )\n  {\n    result = v13;\n    qword_60B340 = v13;\n  }\n  return result;\n}\n"], [4205959, "sub_402D87", "__int64 sub_402D87()\n{\n  unsigned __int64 i; // [rsp+0h] [rbp-10h]\n  unsigned __int64 j; // [rsp+8h] [rbp-8h]\n  unsigned __int64 k; // [rsp+8h] [rbp-8h]\n\n  for ( i = 0LL; i < qword_60B3A0; ++i )\n  {\n    if ( *(_BYTE *)(qword_60B398 + 96 * i + 30) )\n    {\n      for ( j = 0LL; *(_BYTE *)(qword_60B398 + 96 * i + 28) || *(_QWORD *)(qword_60B398 + 96 * i + 16) >= j; ++j )\n        sub_402ABD(qword_60B398 + 96 * i, j);\n    }\n    else\n    {\n      for ( k = 0LL; *(_BYTE *)(qword_60B398 + 96 * i + 28) || *(_QWORD *)(qword_60B398 + 96 * i + 16) >= k; ++k )\n        sub_402933(qword_60B398 + 96 * i, k);\n    }\n  }\n  sub_402FA4();\n  sub_40283A();\n  return sub_403131();\n}\n"], [4206323, "sub_402EF3", "char *__fastcall sub_402EF3(unsigned int a1)\n{\n  const char *v1; // rbx\n  char *v2; // r12\n  size_t v3; // rax\n  int v4; // ebx\n  char *v5; // r12\n  size_t v6; // rax\n\n  strcpy(dest, s);\n  if ( qword_60B360 )\n  {\n    v1 = qword_60B360;\n    v2 = dest;\n    v3 = strlen(s);\n    sprintf(&v2[v3], v1, a1);\n  }\n  else\n  {\n    v4 = dword_60B260;\n    v5 = dest;\n    v6 = strlen(s);\n    sprintf(&v5[v6], \"%0*u\", v4, a1);\n  }\n  return dest;\n}\n"], [4206500, "sub_402FA4", "_BOOL8 sub_402FA4()\n{\n  _BOOL8 result; // rax\n  bool v1; // [rsp+Bh] [rbp-85h]\n  int errnum; // [rsp+Ch] [rbp-84h]\n  sigset_t oset; // [rsp+10h] [rbp-80h] BYREF\n\n  name = sub_402EF3(dword_60B368);\n  if ( dword_60B368 == -1 )\n  {\n    v1 = 0;\n    errnum = 75;\n  }\n  else\n  {\n    sigprocmask(0, &set, &oset);\n    stream = (FILE *)sub_4045FD(name, \"w\");\n    v1 = stream != 0LL;\n    errnum = *__errno_location();\n    dword_60B368 += v1;\n    sigprocmask(2, &oset, 0LL);\n  }\n  result = !v1;\n  if ( !v1 )\n  {\n    error(0, errnum, \"%s\", name);\n    sub_401C9C();\n  }\n  qword_60B370 = 0LL;\n  return result;\n}\n"], [4206755, "sub_4030A3", "__int64 __fastcall sub_4030A3(char a1)\n{\n  __int64 result; // rax\n  int *v2; // rax\n  unsigned int i; // [rsp+14h] [rbp-Ch]\n  const char *name; // [rsp+18h] [rbp-8h]\n\n  result = (unsigned __int8)byte_60B391 ^ 1u;\n  if ( byte_60B391 == 1 )\n  {\n    for ( i = 0; ; ++i )\n    {\n      result = (unsigned int)dword_60B368;\n      if ( i >= dword_60B368 )\n        break;\n      name = sub_402EF3(i);\n      if ( unlink(name) )\n      {\n        if ( a1 != 1 )\n        {\n          v2 = __errno_location();\n          error(0, *v2, \"%s\", name);\n        }\n      }\n    }\n    dword_60B368 = 0;\n  }\n  return result;\n}\n"], [4206897, "sub_403131", "unsigned __int64 sub_403131()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  const char *v2; // rbx\n  int *v3; // rax\n  const char *v4; // rax\n  bool v6; // [rsp+Bh] [rbp-B5h]\n  int errnum; // [rsp+Ch] [rbp-B4h]\n  sigset_t oset; // [rsp+10h] [rbp-B0h] BYREF\n  char v9[24]; // [rsp+90h] [rbp-30h] BYREF\n  unsigned __int64 v10; // [rsp+A8h] [rbp-18h]\n\n  v10 = __readfsqword(0x28u);\n  if ( stream )\n  {\n    if ( ferror_unlocked(stream) )\n    {\n      v0 = sub_404873(name);\n      v1 = gettext(\"write error for %s\");\n      error(0, 0, v1, v0);\n      stream = 0LL;\n      sub_401C9C();\n    }\n    if ( (unsigned int)sub_407ACF(stream) )\n    {\n      v2 = name;\n      v3 = __errno_location();\n      error(0, *v3, \"%s\", v2);\n      stream = 0LL;\n      sub_401C9C();\n    }\n    if ( qword_60B370 || !byte_60B392 )\n    {\n      if ( byte_60B390 != 1 )\n      {\n        v4 = (const char *)sub_4046E3(qword_60B370, v9);\n        fprintf(stdout, \"%s\\n\", v4);\n      }\n    }\n    else\n    {\n      sigprocmask(0, &set, &oset);\n      v6 = unlink(name) == 0;\n      errnum = *__errno_location();\n      dword_60B368 -= v6;\n      sigprocmask(2, &oset, 0LL);\n      if ( !v6 )\n        error(0, errnum, \"%s\", name);\n    }\n    stream = 0LL;\n  }\n  return __readfsqword(0x28u) ^ v10;\n}\n"], [4207407, "sub_40332F", "__int64 __fastcall sub_40332F(__int64 a1)\n{\n  __int64 result; // rax\n\n  fwrite_unlocked(*(const void **)(a1 + 8), 1uLL, *(_QWORD *)a1, stream);\n  result = *(_QWORD *)a1 + qword_60B370;\n  qword_60B370 = result;\n  return result;\n}\n"], [4207480, "sub_403378", "__int64 sub_403378()\n{\n  __int64 v0; // rdx\n  __int64 v2; // [rsp+8h] [rbp-8h]\n\n  if ( qword_60B3A0 == qword_60B448 )\n    qword_60B398 = sub_40697D(qword_60B398, &qword_60B448, 96LL);\n  v0 = qword_60B3A0++;\n  v2 = qword_60B398 + 96 * v0;\n  *(_BYTE *)(v2 + 30) = 0;\n  *(_QWORD *)(v2 + 16) = 0LL;\n  *(_BYTE *)(v2 + 28) = 0;\n  *(_QWORD *)(v2 + 8) = 0LL;\n  *(_QWORD *)v2 = 0LL;\n  return v2;\n}\n"], [4207644, "sub_40341C", "void __fastcall sub_40341C(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n\n  if ( (unsigned int)sub_406C9F(a3, 0LL, 10LL, a1, locale) )\n  {\n    v3 = gettext(\"%s: integer expected after delimiter\");\n    error(1, 0, v3, a2);\n  }\n}\n"], [4207745, "sub_403481", "_BYTE *__fastcall sub_403481(int a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  _BYTE *result; // rax\n  __int64 v8; // [rsp+20h] [rbp-20h] BYREF\n  _BYTE *v9; // [rsp+28h] [rbp-18h]\n\n  v9 = (_BYTE *)(strlen((const char *)a3) - 1 + a3);\n  if ( *v9 != 125 )\n  {\n    v3 = gettext(\"%s: `}' is required in repeat count\");\n    error(1, 0, v3, a3);\n  }\n  *v9 = 0;\n  if ( (_BYTE *)(a3 + 1) == v9 - 1 && *(_BYTE *)(a3 + 1) == 42 )\n  {\n    *(_BYTE *)(a2 + 28) = 1;\n  }\n  else\n  {\n    if ( (unsigned int)sub_407663(a3 + 1, 0LL, 10LL, &v8, locale) )\n    {\n      v4 = *(_QWORD *)(8LL * a1 + qword_60B388);\n      v5 = gettext(\"%s}: integer required between `{' and `}'\");\n      error(1, 0, v5, v4);\n    }\n    *(_QWORD *)(a2 + 16) = v8;\n  }\n  result = v9;\n  *v9 = 125;\n  return result;\n}\n"], [4208021, "sub_403595", "__int64 __fastcall sub_403595(int a1, char a2, char *a3)\n{\n  char *v3; // rax\n  char *v4; // rax\n  char v7; // [rsp+1Fh] [rbp-31h]\n  char *v8; // [rsp+20h] [rbp-30h]\n  __int64 v9; // [rsp+30h] [rbp-20h]\n  const char *v10; // [rsp+38h] [rbp-18h]\n\n  v7 = *a3;\n  v8 = strrchr(a3 + 1, *a3);\n  if ( !v8 )\n  {\n    v3 = gettext(\"%s: closing delimiter `%c' missing\");\n    error(1, 0, v3, a3, (unsigned int)v7);\n  }\n  v9 = sub_403378();\n  *(_DWORD *)(v9 + 24) = a1;\n  *(_BYTE *)(v9 + 29) = a2;\n  *(_BYTE *)(v9 + 30) = 1;\n  *(_QWORD *)(v9 + 32) = 0LL;\n  *(_QWORD *)(v9 + 40) = 0LL;\n  *(_QWORD *)(v9 + 64) = sub_406A3C(256LL);\n  *(_QWORD *)(v9 + 72) = 0LL;\n  re_syntax_options = 710LL;\n  v10 = re_compile_pattern(a3 + 1, v8 - a3 - 1, (struct re_pattern_buffer *)(v9 + 32));\n  if ( v10 )\n  {\n    v4 = gettext(\"%s: invalid regular expression: %s\");\n    error(0, 0, v4, a3, v10);\n    sub_401C9C();\n  }\n  if ( v8[1] )\n    sub_40341C(v9, (__int64)a3, (__int64)(v8 + 1));\n  return v9;\n}\n"], [4208407, "sub_403717", "unsigned __int64 __fastcall sub_403717(int a1, int a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // r12\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // rbx\n  char *v11; // rax\n  unsigned __int64 v15; // [rsp+20h] [rbp-40h] BYREF\n  __int64 v16; // [rsp+28h] [rbp-38h]\n  char v17[24]; // [rsp+30h] [rbp-30h] BYREF\n  unsigned __int64 v18; // [rsp+48h] [rbp-18h]\n\n  v18 = __readfsqword(0x28u);\n  while ( a2 < a1 )\n  {\n    if ( **(_BYTE **)(8LL * a2 + a3) == 47 || **(_BYTE **)(8LL * a2 + a3) == 37 )\n    {\n      v16 = sub_403595(a2, **(_BYTE **)(8LL * a2 + a3) == 37, *(char **)(8LL * a2 + a3));\n    }\n    else\n    {\n      v16 = sub_403378();\n      *(_DWORD *)(v16 + 24) = a2;\n      if ( (unsigned int)sub_407663(*(_QWORD *)(8LL * a2 + a3), 0LL, 10LL, &v15, locale) )\n      {\n        v3 = *(_QWORD *)(8LL * a2 + a3);\n        v4 = gettext(\"%s: invalid pattern\");\n        error(1, 0, v4, v3);\n      }\n      if ( !v15 )\n      {\n        v5 = *(_QWORD *)(8LL * a2 + a3);\n        v6 = gettext(\"%s: line number must be greater than zero\");\n        error(1, 0, v6, v5);\n      }\n      if ( v15 < qword_60B450 )\n      {\n        v7 = sub_4046E3(qword_60B450, v17);\n        v8 = sub_404873(*(_QWORD *)(8LL * a2 + a3));\n        v9 = gettext(\"line number %s is smaller than preceding line number, %s\");\n        error(1, 0, v9, v8, v7);\n      }\n      if ( v15 == qword_60B450 )\n      {\n        v10 = sub_404873(*(_QWORD *)(8LL * a2 + a3));\n        v11 = gettext(\"warning: line number %s is the same as preceding line number\");\n        error(0, 0, v11, v10);\n      }\n      qword_60B450 = v15;\n      *(_QWORD *)(v16 + 8) = v15;\n    }\n    if ( a2 + 1 < a1 && **(_BYTE **)(8 * (a2 + 1LL) + a3) == 123 )\n    {\n      ++a2;\n      sub_403481(a2, v16, *(_QWORD *)(8LL * a2 + a3));\n    }\n    ++a2;\n  }\n  return __readfsqword(0x28u) ^ v18;\n}\n"], [4209153, "sub_403A01", "__int64 __fastcall sub_403A01(__int64 a1, _DWORD *a2)\n{\n  int v2; // eax\n  int v4; // [rsp+14h] [rbp-Ch]\n  __int64 i; // [rsp+18h] [rbp-8h]\n\n  v4 = 0;\n  for ( i = 0LL; ; ++i )\n  {\n    v2 = *(char *)(a1 + i);\n    if ( v2 == 39 )\n    {\n      v4 |= 1u;\n      continue;\n    }\n    if ( v2 > 39 )\n      break;\n    if ( v2 != 35 )\n      goto LABEL_11;\n    v4 |= 2u;\nLABEL_12:\n    ;\n  }\n  if ( v2 == 45 || v2 == 48 )\n    goto LABEL_12;\nLABEL_11:\n  *a2 = v4;\n  return i;\n}\n"], [4209263, "sub_403A6F", "void __fastcall sub_403A6F(unsigned __int8 *a1, int a2)\n{\n  int v2; // eax\n  char *v3; // rax\n  char *v4; // rax\n  unsigned int v5; // ebx\n  char *v6; // rax\n  unsigned __int8 v7; // [rsp+1Bh] [rbp-15h]\n  int v8; // [rsp+1Ch] [rbp-14h]\n\n  v7 = *a1;\n  v8 = 1;\n  v2 = *a1;\n  if ( v2 == 105 )\n    goto LABEL_11;\n  if ( *a1 > 0x69u )\n  {\n    if ( v2 == 117 )\n      goto LABEL_18;\n    if ( v2 != 120 && v2 != 111 )\n      goto LABEL_14;\nLABEL_12:\n    v8 = 2;\n    goto LABEL_18;\n  }\n  if ( v2 == 88 )\n    goto LABEL_12;\n  if ( v2 == 100 )\n  {\nLABEL_11:\n    *a1 = 117;\n    goto LABEL_18;\n  }\n  if ( !*a1 )\n  {\n    v3 = gettext(\"missing conversion specifier in suffix\");\n    error(1, 0, v3);\n    goto LABEL_18;\n  }\nLABEL_14:\n  if ( ((*__ctype_b_loc())[v7] & 0x4000) != 0 )\n    v4 = gettext(\"invalid conversion specifier in suffix: %c\");\n  else\n    v4 = gettext(\"invalid conversion specifier in suffix: \\\\%.3o\");\n  error(1, 0, v4, v7);\nLABEL_18:\n  if ( (a2 & ~v8) != 0 )\n  {\n    if ( ((unsigned __int8)a2 & (unsigned __int8)~(_BYTE)v8 & 2) != 0 )\n      v5 = 35;\n    else\n      v5 = 39;\n    v6 = gettext(\"invalid flags in conversion specification: %%%c%c\");\n    error(1, 0, v6, v5, v7);\n  }\n}\n"], [4209615, "sub_403BCF", "__int64 __fastcall sub_403BCF(unsigned __int8 *a1)\n{\n  char *v1; // rax\n  __int64 v2; // rax\n  char *v3; // rax\n  __int64 v4; // rdx\n  char v6; // [rsp+1Fh] [rbp-11h]\n  int v7; // [rsp+20h] [rbp-10h] BYREF\n  int v8; // [rsp+24h] [rbp-Ch]\n  unsigned __int8 *i; // [rsp+28h] [rbp-8h]\n\n  v6 = 0;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 37 && *++i != 37 )\n    {\n      if ( v6 )\n      {\n        v1 = gettext(\"too many %% conversion specifications in suffix\");\n        error(1, 0, v1);\n      }\n      v6 = 1;\n      v2 = sub_403A01((__int64)i, &v7);\n      for ( i += v2; (unsigned int)((char)*i - 48) <= 9; ++i )\n        ;\n      if ( *i == 46 )\n      {\n        do\n          ++i;\n        while ( (unsigned int)((char)*i - 48) <= 9 );\n      }\n      sub_403A6F(i, v7);\n    }\n  }\n  if ( v6 != 1 )\n  {\n    v3 = gettext(\"missing %% conversion specification in suffix\");\n    error(1, 0, v3);\n  }\n  v8 = snprintf(0LL, 0LL, (const char *)a1, 0xFFFFFFFFLL);\n  if ( v8 < 0 )\n    sub_401CAF(0LL, 0LL, v4);\n  return v8;\n}\n"], [4209941, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  char *v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  char *v8; // rdi\n  __int64 v9; // rdx\n  unsigned __int64 v10; // rax\n  int v11; // eax\n  char *v12; // rbx\n  int *v13; // rax\n  int i; // [rsp+20h] [rbp-D0h]\n  int j; // [rsp+20h] [rbp-D0h]\n  int v17; // [rsp+24h] [rbp-CCh]\n  unsigned __int64 v18; // [rsp+28h] [rbp-C8h] BYREF\n  size_t v19; // [rsp+30h] [rbp-C0h]\n  unsigned __int64 v20; // [rsp+38h] [rbp-B8h]\n  struct sigaction v21; // [rsp+40h] [rbp-B0h] BYREF\n\n  sub_404768(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_408100(sub_40445B);\n  qword_60B388 = (__int64)a2;\n  qword_60B398 = 0LL;\n  qword_60B3A0 = 0LL;\n  byte_60B390 = 0;\n  byte_60B391 = 1;\n  s = \"xx\";\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          v17 = getopt_long(a1, a2, \"f:b:kn:sqz\", &longopts, 0LL);\n          if ( v17 == -1 )\n          {\n            if ( a1 - optind <= 1 )\n            {\n              if ( a1 > optind )\n              {\n                v6 = sub_404873(a2[a1 - 1]);\n                v7 = gettext(\"missing operand after %s\");\n                error(0, 0, v7, v6);\n              }\n              else\n              {\n                v5 = gettext(\"missing operand\");\n                error(0, 0, v5);\n              }\n              sub_4042DC(1LL);\n            }\n            v8 = s;\n            v19 = strlen(s);\n            if ( qword_60B360 )\n            {\n              v8 = qword_60B360;\n              v10 = sub_403BCF((unsigned __int8 *)qword_60B360);\n            }\n            else if ( (unsigned int)dword_60B260 <= 9 )\n            {\n              v10 = 10LL;\n            }\n            else\n            {\n              v10 = dword_60B260;\n            }\n            v20 = v10;\n            if ( -2LL - v19 < v10 )\n              sub_401CAF(v8, a2, v9);\n            dest = (char *)sub_406A3C(v19 + v20 + 1);\n            v11 = optind++;\n            sub_4026B3(a2[v11]);\n            sub_403717(a1, optind, (__int64)a2);\n            sigemptyset(&set);\n            for ( i = 0; i <= 10; ++i )\n            {\n              sigaction(sig[i], 0LL, &v21);\n              if ( v21.sa_handler != (__sighandler_t)1 )\n                sigaddset(&set, sig[i]);\n            }\n            v21.sa_handler = (__sighandler_t)sub_401CDE;\n            v21.sa_mask = set;\n            v21.sa_flags = 0;\n            for ( j = 0; j <= 10; ++j )\n            {\n              if ( sigismember(&set, sig[j]) )\n                sigaction(sig[j], &v21, 0LL);\n            }\n            sub_402D87();\n            if ( close(0) )\n            {\n              v12 = gettext(\"read error\");\n              v13 = __errno_location();\n              error(0, *v13, v12);\n              sub_401C9C();\n            }\n            exit(0);\n          }\n          if ( v17 != 107 )\n            break;\n          byte_60B391 = 0;\n        }\n        if ( v17 > 107 )\n          break;\n        if ( v17 == -130 )\n          sub_4042DC(0LL);\n        if ( v17 <= -130 )\n        {\n          if ( v17 == -131 )\n          {\n            sub_4067D4(\n              (_DWORD)stdout,\n              (unsigned int)\"csplit\",\n              (unsigned int)\"GNU coreutils\",\n              (_DWORD)off_60B268,\n              (unsigned int)\"Stuart Kemp\",\n              (unsigned int)\"David MacKenzie\",\n              0);\n            exit(0);\n          }\nLABEL_29:\n          sub_4042DC(1LL);\n        }\n        if ( v17 == 98 )\n        {\n          qword_60B360 = (char *)optarg;\n        }\n        else\n        {\n          if ( v17 != 102 )\n            goto LABEL_29;\n          s = (char *)optarg;\n        }\n      }\n      if ( v17 != 113 )\n        break;\nLABEL_25:\n      byte_60B390 = 1;\n    }\n    if ( v17 > 113 )\n    {\n      if ( v17 == 115 )\n        goto LABEL_25;\n      if ( v17 != 122 )\n        goto LABEL_29;\n      byte_60B392 = 1;\n    }\n    else\n    {\n      if ( v17 != 110 )\n        goto LABEL_29;\n      if ( (unsigned int)sub_407157(optarg, 0LL, 10LL, &v18, locale) || v18 > 0x7FFFFFFF )\n      {\n        v3 = optarg;\n        v4 = gettext(\"%s: invalid number\");\n        error(1, 0, v4, v3);\n      }\n      dword_60B260 = v18;\n    }\n  }\n}\n"], [4211420, "sub_4042DC", "void __fastcall __noreturn sub_4042DC(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n\n  v1 = qword_60B468;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... FILE PATTERN...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Output pieces of FILE separated by PATTERN(s) to files `xx00', `xx01', ...,\\n\"\n           \"and output byte counts of each piece to standard output.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -b, --suffix-format=FORMAT  use sprintf FORMAT instead of %02d\\n\"\n           \"  -f, --prefix=PREFIX        use PREFIX instead of `xx'\\n\"\n           \"  -k, --keep-files           do not remove output files on errors\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -n, --digits=DIGITS        use specified number of digits instead of 2\\n\"\n            \"  -s, --quiet, --silent      do not print counts of output file sizes\\n\"\n            \"  -z, --elide-empty-files    remove empty output files\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\"\\nRead standard input if FILE is -.  Each PATTERN may be:\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"\\n\"\n            \"  INTEGER            copy up to but not including specified line number\\n\"\n            \"  /REGEXP/[OFFSET]   copy up to but not including a matching line\\n\"\n            \"  %REGEXP%[OFFSET]   skip to, but not including a matching line\\n\"\n            \"  {INTEGER}          repeat the previous pattern specified number of times\\n\"\n            \"  {*}                repeat the previous pattern as many times as possible\\n\"\n            \"\\n\"\n            \"A line OFFSET is a required `+' or `-' followed by a positive integer.\\n\");\n    fputs_unlocked(v19, v18);\n    sub_401B4D();\n  }\n  exit(a1);\n}\n"], [4211782, "sub_404446", "__int64 __fastcall sub_404446(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60B460 = a1;\n  return result;\n}\n"], [4211803, "sub_40445B", "__int64 sub_40445B()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_407FED(stdout) && (byte_60B460 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60B458 )\n    {\n      v0 = (const char *)sub_405E8C(qword_60B458);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_407FED(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4212038, "sub_404546", "_BYTE *__fastcall sub_404546(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4212143, "sub_4045AF", "size_t __fastcall sub_4045AF(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4212221, "sub_4045FD", "FILE *__fastcall sub_4045FD(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_40607C((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_407ACF(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !(unsigned int)sub_407ACF(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4212451, "sub_4046E3", "__int64 __fastcall sub_4046E3(unsigned __int64 a1, __int64 a2)\n{\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  do\n  {\n    *(_BYTE *)--v4 = a1 % 0xA + 48;\n    a1 /= 0xAuLL;\n  }\n  while ( a1 );\n  return v4;\n}\n"], [4212584, "sub_404768", "char *__fastcall sub_404768(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60B468 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4212815, "sub_40484F", "__int64 __fastcall sub_40484F(unsigned int a1, __int64 a2)\n{\n  return sub_405CFE(a1, 6LL, a2);\n}\n"], [4212851, "sub_404873", "__int64 __fastcall sub_404873(__int64 a1)\n{\n  return sub_40484F(0, a1);\n}\n"], [4212882, "sub_404892", "__int64 __fastcall sub_404892(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60B480;\n  v4 = sub_406B60(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4212955, "sub_4048DB", "__int64 __fastcall sub_4048DB(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60B480;\n  return *(unsigned int *)v1;\n}\n"], [4212985, "sub_4048F9", "__int64 *__fastcall sub_4048F9(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60B480;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4213021, "sub_40491D", "__int64 __fastcall sub_40491D(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60B480;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4213157, "sub_4049A5", "__int64 __fastcall sub_4049A5(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60B480;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4213208, "sub_4049D8", "__int64 *__fastcall sub_4049D8(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60B480;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4213298, "sub_404A32", "_QWORD *__fastcall sub_404A32(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4213418, "sub_404AAA", "char *__fastcall sub_404AAA(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4213479, "sub_404AE7", "unsigned __int64 __fastcall sub_404AE7(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_404AAA((const char *)L\"`'\", a5);\n        a9 = sub_404AAA((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_404AE7(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4216626, "sub_405732", "unsigned __int64 __fastcall sub_405732(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60B480;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_404AE7(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4216786, "sub_4057D2", "__int64 __fastcall sub_4057D2(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405804(a1, a2, 0LL, a3);\n}\n"], [4216836, "sub_405804", "__int64 __fastcall sub_405804(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60B480;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_404AE7(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_406A22(v10);\n  sub_404AE7(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4217136, "sub_405930", "void sub_405930()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60B2A0;\n  for ( i = 1; i < dword_60B280; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60B4C0 )\n  {\n    free(ptr[1]);\n    qword_60B290 = 256LL;\n    off_60B298 = &unk_60B4C0;\n  }\n  if ( ptr != (void **)&qword_60B290 )\n  {\n    free(ptr);\n    off_60B2A0 = &qword_60B290;\n  }\n  dword_60B280 = 1;\n}\n"], [4217307, "sub_4059DB", "void *__fastcall sub_4059DB(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60B2A0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60B280 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60B2A0 == &qword_60B290;\n    if ( off_60B2A0 == &qword_60B290 )\n      v4 = 0LL;\n    else\n      v4 = off_60B2A0;\n    v12 = (__int64 *)sub_406A71(v4, 16 * v14);\n    off_60B2A0 = v12;\n    if ( v9 )\n    {\n      v5 = off_60B298;\n      *v12 = qword_60B290;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60B280], 0, 16 * (v14 - (unsigned int)dword_60B280));\n    dword_60B280 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_404AE7((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60B4C0 )\n      free(ptr);\n    ptr = (void *)sub_406A22(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_404AE7((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4217953, "sub_405C61", "void *__fastcall sub_405C61(int a1, __int64 a2)\n{\n  return sub_4059DB(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60B480);\n}\n"], [4217996, "sub_405C8C", "void *__fastcall sub_405C8C(int a1, __int64 a2, size_t a3)\n{\n  return sub_4059DB(a1, a2, a3, (__int64)&qword_60B480);\n}\n"], [4218040, "sub_405CB8", "void *__fastcall sub_405CB8(__int64 a1)\n{\n  return sub_405C61(0, a1);\n}\n"], [4218071, "sub_405CD7", "void *__fastcall sub_405CD7(__int64 a1, size_t a2)\n{\n  return sub_405C8C(0, a1, a2);\n}\n"], [4218110, "sub_405CFE", "void *__fastcall sub_405CFE(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_404A32(v5, a2);\n  return sub_4059DB(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4218175, "sub_405D3F", "void *__fastcall sub_405D3F(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_404A32(v7, a2);\n  return sub_4059DB(a1, a3, a4, (__int64)v7);\n}\n"], [4218238, "sub_405D7E", "void *__fastcall sub_405D7E(int a1, __int64 a2)\n{\n  return sub_405CFE(0, a1, a2);\n}\n"], [4218274, "sub_405DA2", "void *__fastcall sub_405DA2(int a1, __int64 a2, size_t a3)\n{\n  return sub_405D3F(0, a1, a2, a3);\n}\n"], [4218318, "sub_405DCE", "void *__fastcall sub_405DCE(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60B480;\n  v4[1] = qword_60B488;\n  v4[2] = qword_60B490;\n  v4[3] = qword_60B498;\n  v4[4] = qword_60B4A0;\n  v4[5] = qword_60B4A8;\n  v4[6] = qword_60B4B0;\n  sub_40491D(v4, a3, 1);\n  return sub_4059DB(0, a1, a2, (__int64)v4);\n}\n"], [4218466, "sub_405E62", "void *__fastcall sub_405E62(__int64 a1, unsigned __int8 a2)\n{\n  return sub_405DCE(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4218508, "sub_405E8C", "void *__fastcall sub_405E8C(__int64 a1)\n{\n  return sub_405E62(a1, 0x3Au);\n}\n"], [4218539, "sub_405EAB", "void *__fastcall sub_405EAB(__int64 a1, size_t a2)\n{\n  return sub_405DCE(a1, a2, 0x3Au);\n}\n"], [4218581, "sub_405ED5", "__int64 __fastcall sub_405ED5(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_405F0B(a1, a2, a3, a4, -1LL);\n}\n"], [4218635, "sub_405F0B", "void *__fastcall sub_405F0B(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60B480;\n  v8[1] = qword_60B488;\n  v8[2] = qword_60B490;\n  v8[3] = qword_60B498;\n  v8[4] = qword_60B4A0;\n  v8[5] = qword_60B4A8;\n  v8[6] = qword_60B4B0;\n  sub_4049D8(v8, a2, a3);\n  return sub_4059DB(a1, a4, a5, (__int64)v8);\n}\n"], [4218786, "sub_405FA2", "__int64 __fastcall sub_405FA2(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405ED5(0, a1, a2, a3);\n}\n"], [4218833, "sub_405FD1", "void *__fastcall sub_405FD1(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_405F0B(0, a1, a2, a3, a4);\n}\n"], [4218891, "sub_40600B", "ssize_t __fastcall sub_40600B(int a1, void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = read(a1, a2, a3); ; result = read(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4219004, "sub_40607C", "__int64 __fastcall sub_40607C(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_407B84(a1, 0, 3, a4, a5, a6);\n}\n"], [4219042, "sub_4060A2", "int __fastcall sub_4060A2(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4220557, "sub_40668D", "int __fastcall sub_40668D(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4060A2(a1, a2, a3, a4, a5, i);\n}\n"], [4220667, "sub_4066FB", "int __fastcall sub_4066FB(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4060A2(a1, a2, a3, a4, v8, i);\n}\n"], [4220884, "sub_4067D4", "int sub_4067D4(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_4066FB(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4221066, "sub_40688A", "int sub_40688A()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4221171, "sub_4068F3", "__int64 __fastcall sub_4068F3(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_401CAF(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_406A3C(a2 * a1);\n}\n"], [4221233, "sub_406931", "__int64 __fastcall sub_406931(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_401CAF(a1, a2, v4);\n  return sub_406A71(a1, a3 * a2);\n}\n"], [4221309, "sub_40697D", "__int64 __fastcall sub_40697D(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_401CAF(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_406A71(a1, a3 * v6);\n}\n"], [4221474, "sub_406A22", "__int64 __fastcall sub_406A22(__int64 a1)\n{\n  return sub_406A3C(a1);\n}\n"], [4221500, "sub_406A3C", "void *__fastcall sub_406A3C(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_401CAF(a1, a2, v2);\n  return v4;\n}\n"], [4221553, "sub_406A71", "void *__fastcall sub_406A71(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_401CAF(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4221650, "sub_406AD2", "__int64 __fastcall sub_406AD2(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_40697D(a1, a2, 1uLL);\n}\n"], [4221692, "sub_406AFC", "void *__fastcall sub_406AFC(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_406A3C(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4221735, "sub_406B27", "void *__fastcall sub_406B27(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_401CAF(a1, a2, v2);\n  return v4;\n}\n"], [4221792, "sub_406B60", "void *__fastcall sub_406B60(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_406A3C(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4221841, "sub_406B91", "void *__fastcall sub_406B91(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_406B60(a1, v1 + 1);\n}\n"], [4221886, "sub_406BBE", "__int64 __fastcall sub_406BBE(__int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( *a1 >= (__int64)0x8000000000000000LL / a2 )\n  {\n    if ( 0x7FFFFFFFFFFFFFFFLL / a2 >= *a1 )\n    {\n      *a1 *= a2;\n      result = 0LL;\n    }\n    else\n    {\n      *a1 = 0x7FFFFFFFFFFFFFFFLL;\n      result = 1LL;\n    }\n  }\n  else\n  {\n    *a1 = 0x8000000000000000LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4222046, "sub_406C5E", "__int64 __fastcall sub_406C5E(__int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_406BBE(a1, a2) )\n    ;\n  return i;\n}\n"], [4222111, "sub_406C9F", "__int64 __fastcall sub_406C9F(const char *a1, char **a2, int a3, intmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned int v12; // [rsp+38h] [rbp-28h]\n  int v13; // [rsp+3Ch] [rbp-24h]\n  int v14; // [rsp+40h] [rbp-20h]\n  int v15; // [rsp+44h] [rbp-1Ch]\n  char v16; // [rsp+48h] [rbp-18h] BYREF\n  intmax_t v17; // [rsp+50h] [rbp-10h] BYREF\n  char **endptr; // [rsp+58h] [rbp-8h]\n\n  v12 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoimax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v16;\n  endptr = v5;\n  *__errno_location() = 0;\n  v17 = strtoimax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v17 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v12 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v17;\n    return v12;\n  }\n  if ( !**endptr )\n    goto LABEL_71;\n  v13 = 1024;\n  v14 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v17;\n    return v12 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_30;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_31;\nLABEL_30:\n      v13 = 1000;\n      v14 = 2;\n      goto LABEL_31;\n    }\n    if ( (*endptr)[2] == 66 )\n      v14 = 3;\n  }\nLABEL_31:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_60:\n        v15 = sub_406C5E(&v17, v13, 3);\n        goto LABEL_69;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v15 = sub_406BBE(&v17, 512);\n            break;\n          case 'c':\n            v15 = 0;\n            break;\n          case 'Z':\n            v15 = sub_406C5E(&v17, v13, 7);\n            break;\n          default:\n            goto LABEL_68;\n        }\n        goto LABEL_69;\n      }\n      if ( v8 == 109 )\n        goto LABEL_62;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_68;\n          v15 = sub_406BBE(&v17, 2);\n          goto LABEL_69;\n        }\nLABEL_64:\n        v15 = sub_406C5E(&v17, v13, 4);\n        goto LABEL_69;\n      }\n      if ( v8 != 107 )\n        goto LABEL_68;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v15 = sub_406C5E(&v17, v13, 6);\n          goto LABEL_69;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_68:\n            *a4 = v17;\n            return v12 | 2;\n          }\n          v15 = sub_406BBE(&v17, 1024);\n          goto LABEL_69;\n        }\n        goto LABEL_60;\n      }\n      if ( v8 == 80 )\n      {\n        v15 = sub_406C5E(&v17, v13, 5);\n        goto LABEL_69;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_68;\nLABEL_62:\n        v15 = sub_406C5E(&v17, v13, 2);\n        goto LABEL_69;\n      }\n      goto LABEL_64;\n    }\n    v15 = sub_406C5E(&v17, v13, 1);\n    goto LABEL_69;\n  }\n  v15 = sub_406C5E(&v17, v13, 8);\nLABEL_69:\n  v12 |= v15;\n  *endptr += v14;\n  if ( **endptr )\n    v12 |= 2u;\nLABEL_71:\n  *a4 = v17;\n  return v12;\n}\n"], [4223159, "sub_4070B7", "__int64 __fastcall sub_4070B7(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4223254, "sub_407116", "__int64 __fastcall sub_407116(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_4070B7(a1, a2) )\n    ;\n  return i;\n}\n"], [4223319, "sub_407157", "__int64 __fastcall sub_407157(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  unsigned __int64 v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoul\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoul(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_407116(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_4070B7(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_407116(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_4070B7(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_407116(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_407116(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_4070B7(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_407116(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_407116(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_407116(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_407116(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4224451, "sub_4075C3", "__int64 __fastcall sub_4075C3(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4224546, "sub_407622", "__int64 __fastcall sub_407622(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_4075C3(a1, a2) )\n    ;\n  return i;\n}\n"], [4224611, "sub_407663", "__int64 __fastcall sub_407663(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_407622(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_4075C3(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_407622(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_4075C3(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_407622(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_407622(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_4075C3(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_407622(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_407622(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_407622(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_407622(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4225743, "sub_407ACF", "int __fastcall sub_407ACF(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_407E71(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4225924, "sub_407B84", "__int64 __fastcall sub_407B84(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_60B5C0 < 0 )\n  {\n    v18 = sub_407B84(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_407B84(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_60B5C0 = -1;\n    }\n    else\n    {\n      dword_60B5C0 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_60B5C0 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4226622, "sub_407E3E", "__int64 __fastcall sub_407E3E(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_407EBC(a1, 0LL, 1LL);\n  return result;\n}\n"], [4226673, "sub_407E71", "int __fastcall sub_407E71(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_407E3E(a1);\n  return fflush(a1);\n}\n"], [4226748, "sub_407EBC", "int __fastcall sub_407EBC(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4226932, "sub_407F74", "__int64 __fastcall sub_407F74(int a1, const char *a2, int a3, unsigned int a4)\n{\n  int fd; // [rsp+24h] [rbp-Ch]\n  unsigned int v6; // [rsp+28h] [rbp-8h]\n  int v7; // [rsp+2Ch] [rbp-4h]\n\n  fd = open(a2, a3, a4);\n  if ( fd == a1 || fd < 0 )\n    return (unsigned int)fd;\n  v6 = dup2(fd, a1);\n  v7 = *__errno_location();\n  close(fd);\n  *__errno_location() = v7;\n  return v6;\n}\n"], [4227053, "sub_407FED", "__int64 __fastcall sub_407FED(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_407ACF(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4227200, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_60AE18 - off_60AE10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_60AE10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4227312, "fini", "void fini(void)\n{\n  ;\n}\n"], [4227328, "sub_408100", "int __fastcall sub_408100(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60B258 )\n    v1 = (void *)qword_60B258;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4227356, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]