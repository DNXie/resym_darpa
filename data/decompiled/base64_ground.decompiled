[[4198840, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4198880, "sub_4011E0", "__int64 sub_4011E0()\n{\n  return qword_608010();\n}\n"], [4198896, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198912, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198928, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198944, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198960, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198976, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198992, ".fread_unlocked", "// attributes: thunk\nsize_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread_unlocked(ptr, size, n, stream);\n}\n"], [4199008, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199024, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199040, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199056, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199072, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199088, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199104, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199120, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199136, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199152, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199168, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199184, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199200, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199216, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199232, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199248, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199264, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4199280, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199296, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199312, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199328, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199344, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199360, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199376, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199392, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199408, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199424, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199440, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199456, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199472, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199488, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199504, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199520, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199536, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4199552, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199568, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199584, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4199600, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4199616, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199632, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199648, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199664, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199680, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199696, ".feof_unlocked", "// attributes: thunk\nint feof_unlocked(FILE *stream)\n{\n  return feof_unlocked(stream);\n}\n"], [4199712, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199728, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4199776, "sub_401560", "signed __int64 sub_401560()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60820F - &unk_608208;\n  if ( (unsigned __int64)(&unk_60820F - &unk_608208) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199824, "sub_401590", "__int64 sub_401590()\n{\n  return 0LL;\n}\n"], [4199888, "sub_4015D0", "signed __int64 sub_4015D0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_608278 )\n  {\n    result = sub_401560();\n    byte_608278 = 1;\n  }\n  return result;\n}\n"], [4199920, "sub_4015F0", "__int64 sub_4015F0()\n{\n  return sub_401590();\n}\n"], [4199965, "sub_40161D", "int sub_40161D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402D65(qword_608290);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402D65(qword_608290);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402D65(qword_608290);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200231, "sub_401727", "void __fastcall __noreturn sub_401727(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n\n  v1 = qword_608290;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]\\nBase64 encode or decode FILE, or standard input, to standard output.\\n\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"  -d, --decode          decode data\\n\"\n           \"  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n\"\n           \"  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n\"\n           \"                          Use 0 to disable line wrapping\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"\\n\"\n            \"The data are encoded as described for the base64 alphabet in RFC 3548.\\n\"\n            \"When decoding, the input may contain newlines in addition to the bytes of\\n\"\n            \"the formal base64 alphabet.  Use --ignore-garbage to attempt to recover\\n\"\n            \"from any other non-alphabet bytes in the encoded stream.\\n\");\n    fputs_unlocked(v13, v12);\n    sub_40161D();\n  }\n  exit(a1);\n}\n"], [4200488, "sub_401828", "void __fastcall sub_401828(char *a1, size_t a2, __int64 a3, _QWORD *a4, FILE *a5)\n{\n  char *v5; // rbx\n  int *v6; // rax\n  size_t v7; // rax\n  char *v8; // rbx\n  int *v9; // rax\n  char *v10; // rbx\n  int *v11; // rax\n  size_t v15; // [rsp+38h] [rbp-28h]\n  size_t v16; // [rsp+48h] [rbp-18h]\n\n  if ( a3 )\n  {\n    v15 = 0LL;\n    while ( v15 < a2 )\n    {\n      v7 = a3 - *a4;\n      if ( a2 - v15 <= v7 )\n        v7 = a2 - v15;\n      v16 = v7;\n      if ( v7 )\n      {\n        if ( fwrite_unlocked(&a1[v15], 1uLL, v7, stdout) < v7 )\n        {\n          v10 = gettext(\"write error\");\n          v11 = __errno_location();\n          error(1, *v11, v10);\n        }\n        *a4 += v16;\n        v15 += v16;\n      }\n      else\n      {\n        if ( fputs_unlocked(\"\\n\", a5) < 0 )\n        {\n          v8 = gettext(\"write error\");\n          v9 = __errno_location();\n          error(1, *v9, v8);\n        }\n        *a4 = 0LL;\n      }\n    }\n  }\n  else if ( fwrite_unlocked(a1, 1uLL, a2, stdout) < a2 )\n  {\n    v5 = gettext(\"write error\");\n    v6 = __errno_location();\n    error(1, *v6, v5);\n  }\n}\n"], [4200891, "sub_4019BB", "unsigned __int64 __fastcall sub_4019BB(FILE *a1, FILE *a2, __int64 a3)\n{\n  char *v3; // rbx\n  int *v4; // rax\n  char *v5; // rbx\n  int *v6; // rax\n  __int64 v9; // [rsp+28h] [rbp-1C38h] BYREF\n  unsigned __int64 v10; // [rsp+30h] [rbp-1C30h]\n  size_t v11; // [rsp+38h] [rbp-1C28h]\n  char v12[3072]; // [rsp+40h] [rbp-1C20h] BYREF\n  char v13[4104]; // [rsp+C40h] [rbp-1020h] BYREF\n  unsigned __int64 v14; // [rsp+1C48h] [rbp-18h]\n\n  v14 = __readfsqword(0x28u);\n  v9 = 0LL;\n  do\n  {\n    v10 = 0LL;\n    do\n    {\n      v11 = fread_unlocked(&v12[v10], 1uLL, 3072 - v10, a1);\n      v10 += v11;\n    }\n    while ( !feof_unlocked(a1) && !ferror_unlocked(a1) && v10 <= 0xBFF );\n    if ( v10 )\n    {\n      sub_4022AD(v12, v10, v13, 4 * ((v10 + 2) / 3));\n      sub_401828(v13, 4 * ((v10 + 2) / 3), a3, &v9, a2);\n    }\n  }\n  while ( !feof_unlocked(a1) && !ferror_unlocked(a1) && v10 == 3072 );\n  if ( a3 && v9 && fputs_unlocked(\"\\n\", a2) < 0 )\n  {\n    v3 = gettext(\"write error\");\n    v4 = __errno_location();\n    error(1, *v4, v3);\n  }\n  if ( ferror_unlocked(a1) )\n  {\n    v5 = gettext(\"read error\");\n    v6 = __errno_location();\n    error(1, *v6, v5);\n  }\n  return __readfsqword(0x28u) ^ v14;\n}\n"], [4201474, "sub_401C02", "unsigned __int64 __fastcall sub_401C02(FILE *a1, FILE *a2, char a3)\n{\n  char *v3; // rbx\n  int *v4; // rax\n  unsigned __int64 v5; // rax\n  size_t v6; // rax\n  char *v7; // rbx\n  int *v8; // rax\n  char *v9; // rax\n  unsigned int v10; // eax\n  char v13; // [rsp+23h] [rbp-1C4Dh]\n  unsigned int i; // [rsp+24h] [rbp-1C4Ch]\n  size_t n; // [rsp+28h] [rbp-1C48h] BYREF\n  unsigned __int64 v16; // [rsp+30h] [rbp-1C40h]\n  size_t v17; // [rsp+38h] [rbp-1C38h]\n  int v18[4]; // [rsp+40h] [rbp-1C30h] BYREF\n  char ptr[3072]; // [rsp+50h] [rbp-1C20h] BYREF\n  char v20[4104]; // [rsp+C50h] [rbp-1020h] BYREF\n  unsigned __int64 v21; // [rsp+1C58h] [rbp-18h]\n\n  v21 = __readfsqword(0x28u);\n  sub_40256A(v18);\n  do\n  {\n    v16 = 0LL;\n    do\n    {\n      n = fread_unlocked(&v20[v16], 1uLL, 4096 - v16, a1);\n      if ( a3 )\n      {\n        v17 = 0LL;\n        while ( n && v17 < n )\n        {\n          if ( (unsigned __int8)sub_40253F((unsigned int)v20[v16 + v17]) || v20[v16 + v17] == 61 )\n            ++v17;\n          else\n            memmove(&v20[v17 + v16], &v20[v16 + 1 + v17], --n - v17);\n        }\n      }\n      v16 += n;\n      if ( ferror_unlocked(a1) )\n      {\n        v3 = gettext(\"read error\");\n        v4 = __errno_location();\n        error(1, *v4, v3);\n      }\n    }\n    while ( v16 <= 0xFFF && !feof_unlocked(a1) );\n    for ( i = 0; ; ++i )\n    {\n      v10 = feof_unlocked(a1) ? 2 : 1;\n      if ( v10 <= i || i == 1 && !v18[0] )\n        break;\n      n = 3072LL;\n      if ( i )\n        v5 = 0LL;\n      else\n        v5 = v16;\n      v13 = sub_4029AC(v18, v20, v5, ptr, &n);\n      v6 = fwrite_unlocked(ptr, 1uLL, n, a2);\n      if ( v6 < n )\n      {\n        v7 = gettext(\"write error\");\n        v8 = __errno_location();\n        error(1, *v8, v7);\n      }\n      if ( v13 != 1 )\n      {\n        v9 = gettext(\"invalid input\");\n        error(1, 0, v9);\n      }\n    }\n  }\n  while ( !feof_unlocked(a1) );\n  return __readfsqword(0x28u) ^ v21;\n}\n"], [4202316, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  int *v7; // rax\n  char *v8; // rbx\n  int *v9; // rax\n  int *v10; // rax\n  char v11; // [rsp+12h] [rbp-2Eh]\n  char v12; // [rsp+13h] [rbp-2Dh]\n  int v13; // [rsp+14h] [rbp-2Ch]\n  __int64 v14; // [rsp+18h] [rbp-28h] BYREF\n  FILE *v15; // [rsp+20h] [rbp-20h]\n  char *s1; // [rsp+28h] [rbp-18h]\n\n  v11 = 0;\n  v12 = 0;\n  v14 = 76LL;\n  sub_402E86(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_405A80(sub_402C7A);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v13 = getopt_long(a1, a2, \"diw:\", &longopts, 0LL);\n      if ( v13 == -1 )\n      {\n        if ( a1 - optind > 1 )\n        {\n          v5 = sub_402F91(a2[optind]);\n          v6 = gettext(\"extra operand %s\");\n          error(0, 0, v6, v5);\n          sub_401727(1);\n        }\n        if ( optind >= a1 )\n          s1 = \"-\";\n        else\n          s1 = a2[optind];\n        if ( !strcmp(s1, \"-\") )\n        {\n          v15 = (FILE *)stdin;\n        }\n        else\n        {\n          v15 = fopen(s1, \"rb\");\n          if ( !v15 )\n          {\n            v7 = __errno_location();\n            error(1, *v7, \"%s\", s1);\n          }\n        }\n        sub_402E4C(v15, 2LL);\n        if ( v11 )\n          sub_401C02(v15, stdout, v12);\n        else\n          sub_4019BB(v15, stdout, v14);\n        if ( (unsigned int)sub_405786(v15) == -1 )\n        {\n          if ( !strcmp(s1, \"-\") )\n          {\n            v8 = gettext(\"closing standard input\");\n            v9 = __errno_location();\n            error(1, *v9, v8);\n          }\n          else\n          {\n            v10 = __errno_location();\n            error(1, *v10, \"%s\", s1);\n          }\n        }\n        exit(0);\n      }\n      if ( v13 != 100 )\n        break;\n      v11 = 1;\n    }\n    if ( v13 <= 100 )\n      break;\n    if ( v13 == 105 )\n    {\n      v12 = 1;\n    }\n    else\n    {\n      if ( v13 != 119 )\n        goto LABEL_17;\n      if ( (unsigned int)sub_40531A(optarg, 0LL, 0LL, &v14, 0LL) )\n      {\n        v3 = sub_4043D6(optarg);\n        v4 = gettext(\"invalid wrap size: %s\");\n        error(1, 0, v4, v3);\n      }\n    }\n  }\n  if ( v13 == -131 )\n  {\n    sub_404E5B(\n      (_DWORD)stdout,\n      (unsigned int)\"base64\",\n      (unsigned int)\"GNU coreutils\",\n      (_DWORD)off_6081D0,\n      (unsigned int)\"Simon Josefsson\",\n      0,\n      (char)a2);\n    exit(0);\n  }\n  if ( v13 == -130 )\n    sub_401727(0);\nLABEL_17:\n  sub_401727(1);\n}\n"], [4203166, "sub_40229E", "__int64 __fastcall sub_40229E(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4203181, "sub_4022AD", "void __fastcall sub_4022AD(unsigned __int8 *a1, __int64 a2, char *a3, __int64 a4)\n{\n  char *v4; // rbx\n  char *v5; // rbx\n  char v6; // r12\n  char v7; // al\n  char *v8; // rbx\n  char v9; // r12\n  char v10; // al\n  char v11; // al\n  char *v12; // rbx\n  char v13; // al\n\n  while ( a2 )\n  {\n    if ( !a4 )\n      break;\n    v4 = a3++;\n    *v4 = byte_406240[(unsigned __int8)sub_40229E(*a1) >> 2];\n    if ( !--a4 )\n      break;\n    v5 = a3++;\n    v6 = 16 * sub_40229E(*a1);\n    v7 = --a2 ? (unsigned __int8)sub_40229E(a1[1]) >> 4 : 0;\n    *v5 = byte_406240[(v6 + v7) & 0x3F];\n    if ( !--a4 )\n      break;\n    v8 = a3++;\n    if ( a2 )\n    {\n      v9 = 4 * sub_40229E(a1[1]);\n      v10 = --a2 ? (unsigned __int8)sub_40229E(a1[2]) >> 6 : 0;\n      v11 = byte_406240[(v9 + v10) & 0x3F];\n    }\n    else\n    {\n      v11 = 61;\n    }\n    *v8 = v11;\n    if ( !--a4 )\n      break;\n    v12 = a3++;\n    v13 = a2 ? byte_406240[sub_40229E(a1[2]) & 0x3F] : 61;\n    *v12 = v13;\n    if ( !--a4 )\n      break;\n    if ( a2 )\n      --a2;\n    if ( a2 )\n      a1 += 3;\n  }\n  if ( a4 )\n    *a3 = 0;\n}\n"], [4203675, "sub_40249B", "unsigned __int64 __fastcall sub_40249B(unsigned __int8 *a1, unsigned __int64 a2, char **a3)\n{\n  unsigned __int64 result; // rax\n  unsigned __int64 size; // [rsp+28h] [rbp-8h]\n\n  size = 4 * ((a2 + 2) / 3) + 1;\n  if ( a2 <= size )\n  {\n    *a3 = (char *)malloc(size);\n    if ( *a3 )\n    {\n      sub_4022AD(a1, a2, *a3, size);\n      result = 4 * ((a2 + 2) / 3);\n    }\n    else\n    {\n      result = 4 * ((a2 + 2) / 3) + 1;\n    }\n  }\n  else\n  {\n    *a3 = 0LL;\n    result = 0LL;\n  }\n  return result;\n}\n"], [4203839, "sub_40253F", "__int64 __fastcall sub_40253F(unsigned __int8 a1)\n{\n  return (unsigned int)~(unsigned __int8)byte_406140[(unsigned __int8)sub_40229E(a1)] >> 7;\n}\n"], [4203882, "sub_40256A", "_DWORD *__fastcall sub_40256A(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = 0;\n  return result;\n}\n"], [4203902, "sub_40257E", "char *__fastcall sub_40257E(_DWORD *a1, char **a2, unsigned __int64 a3, _QWORD *a4)\n{\n  char *result; // rax\n  char *v5; // rax\n  unsigned int v6; // eax\n  char v9; // [rsp+2Fh] [rbp-11h]\n  char *v10; // [rsp+30h] [rbp-10h]\n  char *s; // [rsp+38h] [rbp-8h]\n\n  if ( *a1 == 4 )\n    *a1 = 0;\n  if ( *a1 || (s = *a2, (__int64)(a3 - (_QWORD)*a2) <= 3) || memchr(s, 10, 4uLL) )\n  {\n    v10 = *a2;\n    while ( (unsigned __int64)v10 < a3 )\n    {\n      v5 = v10++;\n      v9 = *v5;\n      if ( *v5 != 10 )\n      {\n        v6 = (*a1)++;\n        *((_BYTE *)a1 + v6 + 4) = v9;\n        if ( *a1 == 4 )\n          break;\n      }\n    }\n    *a2 = v10;\n    *a4 = (unsigned int)*a1;\n    result = (char *)(a1 + 1);\n  }\n  else\n  {\n    *a2 += 4;\n    *a4 = 4LL;\n    result = s;\n  }\n  return result;\n}\n"], [4204178, "sub_402692", "__int64 __fastcall sub_402692(unsigned __int8 *a1, unsigned __int64 a2, _QWORD *a3, _QWORD *a4)\n{\n  _BYTE *v5; // rbx\n  int v6; // er12\n  _BYTE *v7; // rbx\n  int v8; // er12\n  _BYTE *v9; // rbx\n  int v10; // er12\n  _BYTE *v13; // [rsp+28h] [rbp-18h]\n\n  v13 = (_BYTE *)*a3;\n  if ( a2 <= 1 )\n    return 0LL;\n  if ( (unsigned __int8)sub_40253F(*a1) != 1 || (unsigned __int8)sub_40253F(a1[1]) != 1 )\n    return 0LL;\n  if ( *a4 )\n  {\n    v5 = v13++;\n    v6 = 4 * byte_406140[(unsigned __int8)sub_40229E(*a1)];\n    *v5 = v6 | (byte_406140[(unsigned __int8)sub_40229E(a1[1])] >> 4);\n    --*a4;\n  }\n  if ( a2 == 2 )\n  {\n    *a3 = v13;\n    return 0LL;\n  }\n  if ( a1[2] == 61 )\n  {\n    if ( a2 != 4 )\n    {\n      *a3 = v13;\n      return 0LL;\n    }\n    if ( a1[3] != 61 )\n    {\n      *a3 = v13;\n      return 0LL;\n    }\n  }\n  else\n  {\n    if ( (unsigned __int8)sub_40253F(a1[2]) != 1 )\n    {\n      *a3 = v13;\n      return 0LL;\n    }\n    if ( *a4 )\n    {\n      v7 = v13++;\n      v8 = 16 * byte_406140[(unsigned __int8)sub_40229E(a1[1])];\n      *v7 = v8 | (byte_406140[(unsigned __int8)sub_40229E(a1[2])] >> 2);\n      --*a4;\n    }\n    if ( a2 == 3 )\n    {\n      *a3 = v13;\n      return 0LL;\n    }\n    if ( a1[3] == 61 )\n    {\n      if ( a2 != 4 )\n      {\n        *a3 = v13;\n        return 0LL;\n      }\n    }\n    else\n    {\n      if ( (unsigned __int8)sub_40253F(a1[3]) != 1 )\n      {\n        *a3 = v13;\n        return 0LL;\n      }\n      if ( *a4 )\n      {\n        v9 = v13++;\n        v10 = byte_406140[(unsigned __int8)sub_40229E(a1[2])] << 6;\n        *v9 = v10 | byte_406140[(unsigned __int8)sub_40229E(a1[3])];\n        --*a4;\n      }\n    }\n  }\n  *a3 = v13;\n  return 1LL;\n}\n"], [4204972, "sub_4029AC", "bool __fastcall sub_4029AC(int *a1, char *a2, unsigned __int64 a3, __int64 a4, __int64 *a5)\n{\n  __int64 v7; // [rsp+10h] [rbp-50h] BYREF\n  unsigned __int64 v8; // [rsp+18h] [rbp-48h] BYREF\n  char *v9; // [rsp+20h] [rbp-40h] BYREF\n  int *v10; // [rsp+28h] [rbp-38h]\n  bool v11; // [rsp+3Ah] [rbp-26h]\n  bool v12; // [rsp+3Bh] [rbp-25h]\n  int v13; // [rsp+3Ch] [rbp-24h]\n  __int64 v14; // [rsp+40h] [rbp-20h] BYREF\n  __int64 v15; // [rsp+48h] [rbp-18h]\n  unsigned __int8 *v16; // [rsp+50h] [rbp-10h]\n  char *v17; // [rsp+58h] [rbp-8h]\n\n  v10 = a1;\n  v9 = a2;\n  v8 = a3;\n  v7 = a4;\n  v14 = *a5;\n  v12 = a1 != 0LL;\n  v11 = 0;\n  v13 = 0;\n  if ( a1 )\n  {\n    v13 = *v10;\n    v11 = v8 == 0;\n  }\n  while ( 1 )\n  {\n    v15 = v14;\n    if ( !v13 && !v11 )\n    {\n      while ( 1 )\n      {\n        v15 = v14;\n        if ( (unsigned __int8)sub_402692((unsigned __int8 *)v9, v8, &v7, &v14) != 1 )\n          break;\n        v9 += 4;\n        v8 -= 4LL;\n      }\n    }\n    if ( !v8 && !v11 )\n      break;\n    if ( v8 && *v9 == 10 && v12 )\n    {\n      ++v9;\n      --v8;\n    }\n    else\n    {\n      v7 += v14 - v15;\n      v14 = v15;\n      v17 = &v9[v8];\n      if ( v12 )\n        v16 = (unsigned __int8 *)sub_40257E(v10, &v9, (unsigned __int64)v17, &v8);\n      else\n        v16 = (unsigned __int8 *)v9;\n      if ( !v8 || v8 <= 3 && !v11 && v12 )\n      {\n        v8 = 0LL;\n        break;\n      }\n      if ( (unsigned __int8)sub_402692(v16, v8, &v7, &v14) != 1 )\n        break;\n      v8 = v17 - v9;\n    }\n  }\n  *a5 -= v14;\n  return v8 == 0;\n}\n"], [4205455, "sub_402B8F", "__int64 __fastcall sub_402B8F(int *a1, char *a2, unsigned __int64 a3, void **a4, size_t *a5)\n{\n  __int64 result; // rax\n  size_t size; // [rsp+38h] [rbp-8h] BYREF\n\n  size = 3 * ((a3 >> 2) + 1);\n  *a4 = malloc(size);\n  if ( !*a4 )\n    return 1LL;\n  if ( !sub_4029AC(a1, a2, a3, (__int64)*a4, (__int64 *)&size) )\n  {\n    free(*a4);\n    *a4 = 0LL;\n    result = 0LL;\n  }\n  else\n  {\n    if ( a5 )\n      *a5 = size;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4205648, "sub_402C50", "__int64 __fastcall sub_402C50(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_608280 = a1;\n  return result;\n}\n"], [4205669, "sub_402C65", "__int64 __fastcall sub_402C65(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_608288 = a1;\n  return result;\n}\n"], [4205690, "sub_402C7A", "__int64 sub_402C7A()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_405971(stdout) && (byte_608288 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_608280 )\n    {\n      v0 = (const char *)sub_4045AA(qword_608280);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_405971(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4205925, "sub_402D65", "_BYTE *__fastcall sub_402D65(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4206030, "sub_402DCE", "size_t __fastcall sub_402DCE(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4206108, "sub_402E1C", "int __fastcall sub_402E1C(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4206156, "sub_402E4C", "void __fastcall sub_402E4C(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_402E1C(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4206214, "sub_402E86", "char *__fastcall sub_402E86(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_608290 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4206445, "sub_402F6D", "__int64 __fastcall sub_402F6D(unsigned int a1, __int64 a2)\n{\n  return sub_40441C(a1, 6LL, a2);\n}\n"], [4206481, "sub_402F91", "__int64 __fastcall sub_402F91(__int64 a1)\n{\n  return sub_402F6D(0, a1);\n}\n"], [4206512, "sub_402FB0", "__int64 __fastcall sub_402FB0(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6082A0;\n  v4 = sub_4051E7(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4206585, "sub_402FF9", "__int64 __fastcall sub_402FF9(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6082A0;\n  return *(unsigned int *)v1;\n}\n"], [4206615, "sub_403017", "__int64 *__fastcall sub_403017(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6082A0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4206651, "sub_40303B", "__int64 __fastcall sub_40303B(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6082A0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4206787, "sub_4030C3", "__int64 __fastcall sub_4030C3(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6082A0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4206838, "sub_4030F6", "__int64 *__fastcall sub_4030F6(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6082A0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4206928, "sub_403150", "_QWORD *__fastcall sub_403150(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4207048, "sub_4031C8", "char *__fastcall sub_4031C8(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4207109, "sub_403205", "unsigned __int64 __fastcall sub_403205(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_4031C8((const char *)L\"`'\", a5);\n        a9 = sub_4031C8((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403205(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4210256, "sub_403E50", "unsigned __int64 __fastcall sub_403E50(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6082A0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403205(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4210416, "sub_403EF0", "__int64 __fastcall sub_403EF0(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403F22(a1, a2, 0LL, a3);\n}\n"], [4210466, "sub_403F22", "__int64 __fastcall sub_403F22(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6082A0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_403205(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_4050A9(v10);\n  sub_403205(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4210766, "sub_40404E", "void sub_40404E()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_608200;\n  for ( i = 1; i < dword_6081E0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6082E0 )\n  {\n    free(ptr[1]);\n    qword_6081F0 = 256LL;\n    off_6081F8 = &unk_6082E0;\n  }\n  if ( ptr != (void **)&qword_6081F0 )\n  {\n    free(ptr);\n    off_608200 = &qword_6081F0;\n  }\n  dword_6081E0 = 1;\n}\n"], [4210937, "sub_4040F9", "void *__fastcall sub_4040F9(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_608200;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6081E0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_608200 == &qword_6081F0;\n    if ( off_608200 == &qword_6081F0 )\n      v4 = 0LL;\n    else\n      v4 = off_608200;\n    v12 = (__int64 *)sub_4050F8(v4, 16 * v14);\n    off_608200 = v12;\n    if ( v9 )\n    {\n      v5 = off_6081F8;\n      *v12 = qword_6081F0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6081E0], 0, 16 * (v14 - (unsigned int)dword_6081E0));\n    dword_6081E0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_403205((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6082E0 )\n      free(ptr);\n    ptr = (void *)sub_4050A9(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_403205((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4211583, "sub_40437F", "void *__fastcall sub_40437F(int a1, __int64 a2)\n{\n  return sub_4040F9(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6082A0);\n}\n"], [4211626, "sub_4043AA", "void *__fastcall sub_4043AA(int a1, __int64 a2, size_t a3)\n{\n  return sub_4040F9(a1, a2, a3, (__int64)&qword_6082A0);\n}\n"], [4211670, "sub_4043D6", "void *__fastcall sub_4043D6(__int64 a1)\n{\n  return sub_40437F(0, a1);\n}\n"], [4211701, "sub_4043F5", "void *__fastcall sub_4043F5(__int64 a1, size_t a2)\n{\n  return sub_4043AA(0, a1, a2);\n}\n"], [4211740, "sub_40441C", "void *__fastcall sub_40441C(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403150(v5, a2);\n  return sub_4040F9(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4211805, "sub_40445D", "void *__fastcall sub_40445D(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403150(v7, a2);\n  return sub_4040F9(a1, a3, a4, (__int64)v7);\n}\n"], [4211868, "sub_40449C", "void *__fastcall sub_40449C(int a1, __int64 a2)\n{\n  return sub_40441C(0, a1, a2);\n}\n"], [4211904, "sub_4044C0", "void *__fastcall sub_4044C0(int a1, __int64 a2, size_t a3)\n{\n  return sub_40445D(0, a1, a2, a3);\n}\n"], [4211948, "sub_4044EC", "void *__fastcall sub_4044EC(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6082A0;\n  v4[1] = qword_6082A8;\n  v4[2] = qword_6082B0;\n  v4[3] = qword_6082B8;\n  v4[4] = qword_6082C0;\n  v4[5] = qword_6082C8;\n  v4[6] = qword_6082D0;\n  sub_40303B(v4, a3, 1);\n  return sub_4040F9(0, a1, a2, (__int64)v4);\n}\n"], [4212096, "sub_404580", "void *__fastcall sub_404580(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4044EC(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4212138, "sub_4045AA", "void *__fastcall sub_4045AA(__int64 a1)\n{\n  return sub_404580(a1, 0x3Au);\n}\n"], [4212169, "sub_4045C9", "void *__fastcall sub_4045C9(__int64 a1, size_t a2)\n{\n  return sub_4044EC(a1, a2, 0x3Au);\n}\n"], [4212211, "sub_4045F3", "__int64 __fastcall sub_4045F3(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_404629(a1, a2, a3, a4, -1LL);\n}\n"], [4212265, "sub_404629", "void *__fastcall sub_404629(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6082A0;\n  v8[1] = qword_6082A8;\n  v8[2] = qword_6082B0;\n  v8[3] = qword_6082B8;\n  v8[4] = qword_6082C0;\n  v8[5] = qword_6082C8;\n  v8[6] = qword_6082D0;\n  sub_4030F6(v8, a2, a3);\n  return sub_4040F9(a1, a4, a5, (__int64)v8);\n}\n"], [4212416, "sub_4046C0", "__int64 __fastcall sub_4046C0(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4045F3(0, a1, a2, a3);\n}\n"], [4212463, "sub_4046EF", "void *__fastcall sub_4046EF(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_404629(0, a1, a2, a3, a4);\n}\n"], [4212521, "sub_404729", "int __fastcall sub_404729(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4214036, "sub_404D14", "int __fastcall sub_404D14(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_404729(a1, a2, a3, a4, a5, i);\n}\n"], [4214146, "sub_404D82", "int __fastcall sub_404D82(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_404729(a1, a2, a3, a4, v8, i);\n}\n"], [4214363, "sub_404E5B", "int sub_404E5B(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_404D82(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4214545, "sub_404F11", "int sub_404F11()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4214650, "sub_404F7A", "__int64 __fastcall sub_404F7A(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_405245(a1, a2, v2);\n  return sub_4050C3(a2 * a1, a2, v2);\n}\n"], [4214712, "sub_404FB8", "__int64 __fastcall sub_404FB8(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_405245(a1, a2, v4);\n  return sub_4050F8(a1, a3 * a2);\n}\n"], [4214788, "sub_405004", "__int64 __fastcall sub_405004(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_405245(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_4050F8(a1, a3 * v6);\n}\n"], [4214953, "sub_4050A9", "__int64 __fastcall sub_4050A9(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4050C3(a1, a2, a3);\n}\n"], [4214979, "sub_4050C3", "void *__fastcall sub_4050C3(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_405245(a1, a2, v2);\n  return v4;\n}\n"], [4215032, "sub_4050F8", "void *__fastcall sub_4050F8(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_405245(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4215129, "sub_405159", "__int64 __fastcall sub_405159(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_405004(a1, a2, 1uLL);\n}\n"], [4215171, "sub_405183", "void *__fastcall sub_405183(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4050C3(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4215214, "sub_4051AE", "void *__fastcall sub_4051AE(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_405245(a1, a2, v2);\n  return v4;\n}\n"], [4215271, "sub_4051E7", "void *__fastcall sub_4051E7(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4050C3(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4215320, "sub_405218", "void *__fastcall sub_405218(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_4051E7(a1, v1 + 1);\n}\n"], [4215365, "sub_405245", "void __noreturn sub_405245()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4215418, "sub_40527A", "__int64 __fastcall sub_40527A(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4215513, "sub_4052D9", "__int64 __fastcall sub_4052D9(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_40527A(a1, a2) )\n    ;\n  return i;\n}\n"], [4215578, "sub_40531A", "__int64 __fastcall sub_40531A(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_4052D9(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_40527A(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_4052D9(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_40527A(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_4052D9(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_4052D9(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_40527A(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_4052D9(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_4052D9(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_4052D9(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_4052D9(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4216710, "sub_405786", "int __fastcall sub_405786(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40586E(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4216891, "sub_40583B", "__int64 __fastcall sub_40583B(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4058B9(a1, 0LL, 1LL);\n  return result;\n}\n"], [4216942, "sub_40586E", "int __fastcall sub_40586E(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40583B(a1);\n  return fflush(a1);\n}\n"], [4217017, "sub_4058B9", "int __fastcall sub_4058B9(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4217201, "sub_405971", "__int64 __fastcall sub_405971(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_405786(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4217344, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_607E18 - off_607E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_607E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4217456, "fini", "void fini(void)\n{\n  ;\n}\n"], [4217472, "sub_405A80", "int __fastcall sub_405A80(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6081C8 )\n    v1 = (void *)qword_6081C8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4217500, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]