[[4198624, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4198656, "sub_401100", "__int64 sub_401100()\n{\n  return qword_607010();\n}\n"], [4198672, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198688, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198704, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198720, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198736, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198752, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198768, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4198784, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4198800, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4198816, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4198832, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4198848, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4198864, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4198880, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4198896, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4198912, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4198928, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4198944, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4198960, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4198976, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4198992, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199008, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199024, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199040, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199056, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199072, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199088, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199104, ".mkfifo", "// attributes: thunk\nint mkfifo(const char *path, __mode_t mode)\n{\n  return mkfifo(path, mode);\n}\n"], [4199120, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199136, ".umask", "// attributes: thunk\n__mode_t umask(__mode_t mask)\n{\n  return umask(mask);\n}\n"], [4199152, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199168, ".__xmknod", "// attributes: thunk\nint __xmknod(int ver, const char *path, __mode_t mode, __dev_t *dev)\n{\n  return _xmknod(ver, path, mode, dev);\n}\n"], [4199184, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199200, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4199216, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199232, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199248, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199264, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199280, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199296, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199312, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199328, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4199344, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199360, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199376, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199392, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199408, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199424, ".gnu_dev_makedev", "// attributes: thunk\nunsigned __int64 gnu_dev_makedev(unsigned int major, unsigned int minor)\n{\n  return gnu_dev_makedev(major, minor);\n}\n"], [4199440, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199456, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4199504, "sub_401450", "signed __int64 sub_401450()\n{\n  signed __int64 result; // rax\n\n  result = &unk_6071EF - &unk_6071E8;\n  if ( (unsigned __int64)(&unk_6071EF - &unk_6071E8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199552, "sub_401480", "__int64 sub_401480()\n{\n  return 0LL;\n}\n"], [4199616, "sub_4014C0", "signed __int64 sub_4014C0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_607258 )\n  {\n    result = sub_401450();\n    byte_607258 = 1;\n  }\n  return result;\n}\n"], [4199648, "sub_4014E0", "__int64 sub_4014E0()\n{\n  return sub_401480();\n}\n"], [4199693, "sub_40150D", "__int64 sub_40150D()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4199723, "sub_40152B", "int sub_40152B()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_401FBE(qword_607270);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_401FBE(qword_607270);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_401FBE(qword_607270);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4199989, "sub_401635", "void __fastcall __noreturn sub_401635(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  char *v20; // rax\n\n  v1 = qword_607270;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... NAME TYPE [MAJOR MINOR]\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\"Create the special file NAME of the given TYPE.\\n\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\"  -m, --mode=MODE    set file permission bits to MODE, not a=rw - umask\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"  -Z, --context=CTX  set the SELinux security context of NAME to CTX\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"\\n\"\n            \"Both MAJOR and MINOR must be specified when TYPE is b, c, or u, and they\\n\"\n            \"must be omitted when TYPE is p.  If MAJOR or MINOR begins with 0x or 0X,\\n\"\n            \"it is interpreted as hexadecimal; otherwise, if it begins with 0, as octal;\\n\"\n            \"otherwise, as decimal.  TYPE may be:\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"\\n\"\n            \"  b      create a block (buffered) special file\\n\"\n            \"  c, u   create a character (unbuffered) special file\\n\"\n            \"  p      create a FIFO\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = gettext(\n            \"\\n\"\n            \"NOTE: your shell may have its own version of %s, which usually supersedes\\n\"\n            \"the version described here.  Please refer to your shell's documentation\\n\"\n            \"for details about the options it supports.\\n\");\n    printf(v20, \"mknod\");\n    sub_40152B();\n  }\n  exit(a1);\n}\n"], [4200358, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  __mode_t v4; // eax\n  char *v5; // rax\n  int v6; // eax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  char *v10; // rax\n  __int64 v11; // rbx\n  char *v12; // rax\n  char *v13; // rax\n  __int64 v14; // r12\n  char *v15; // rbx\n  int *v16; // rax\n  int v17; // eax\n  __int64 v18; // rbx\n  char *v19; // rax\n  __int64 v20; // rbx\n  char *v21; // rax\n  char *v22; // rax\n  const char *v23; // rbx\n  int *v24; // rax\n  const char *v25; // rbx\n  int *v26; // rax\n  __int64 v27; // rbx\n  char *v28; // rax\n  __mode_t mode; // [rsp+10h] [rbp-60h]\n  int v30; // [rsp+14h] [rbp-5Ch]\n  int v31; // [rsp+18h] [rbp-58h]\n  int v32; // [rsp+1Ch] [rbp-54h]\n  unsigned int major[2]; // [rsp+20h] [rbp-50h] BYREF\n  unsigned int minor[2]; // [rsp+28h] [rbp-48h] BYREF\n  __int64 v35; // [rsp+30h] [rbp-40h]\n  __int64 v36; // [rsp+38h] [rbp-38h]\n  void *ptr; // [rsp+40h] [rbp-30h]\n  char *v38; // [rsp+48h] [rbp-28h]\n  char *v39; // [rsp+50h] [rbp-20h]\n  unsigned __int64 v40; // [rsp+58h] [rbp-18h]\n\n  v35 = 0LL;\n  v36 = 0LL;\n  sub_402614(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_405210(sub_401ED3);\n  while ( 1 )\n  {\n    v31 = getopt_long(a1, a2, \"m:Z:\", &longopts, 0LL);\n    if ( v31 == -1 )\n      break;\n    if ( v31 == -130 )\n      sub_401635(0);\n    if ( v31 <= -130 )\n    {\n      if ( v31 == -131 )\n      {\n        sub_4045E9(\n          (_DWORD)stdout,\n          (unsigned int)\"mknod\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_6071B0,\n          (unsigned int)\"David MacKenzie\",\n          0,\n          (char)a2);\n        exit(0);\n      }\nLABEL_12:\n      sub_401635(1);\n    }\n    if ( v31 == 90 )\n    {\n      v36 = optarg;\n    }\n    else\n    {\n      if ( v31 != 109 )\n        goto LABEL_12;\n      v35 = optarg;\n    }\n  }\n  mode = 438;\n  if ( v35 )\n  {\n    ptr = (void *)sub_4020DD(v35);\n    if ( !ptr )\n    {\n      v3 = gettext(\"invalid mode\");\n      error(1, 0, v3);\n    }\n    v4 = umask(0);\n    mode = sub_402479(438LL, 0LL, v4, ptr, 0LL);\n    free(ptr);\n    if ( (mode & 0xFFFFFE00) != 0 )\n    {\n      v5 = gettext(\"mode must specify only file permission bits\");\n      error(1, 0, v5);\n    }\n  }\n  if ( a1 <= optind || optind + 1 < a1 && *a2[optind + 1] == 112 )\n    v6 = 2;\n  else\n    v6 = 4;\n  v32 = v6;\n  if ( a1 - optind < v6 )\n  {\n    if ( a1 > optind )\n    {\n      v8 = sub_40271F(a2[a1 - 1]);\n      v9 = gettext(\"missing operand after %s\");\n      error(0, 0, v9, v8);\n    }\n    else\n    {\n      v7 = gettext(\"missing operand\");\n      error(0, 0, v7);\n    }\n    if ( v32 == 4 && a1 - optind == 2 )\n    {\n      v10 = gettext(\"Special files require major and minor device numbers.\");\n      fprintf(stderr, \"%s\\n\", v10);\n    }\n    sub_401635(1);\n  }\n  if ( a1 - optind > v6 )\n  {\n    v11 = sub_40271F((&a2[optind])[v6]);\n    v12 = gettext(\"extra operand %s\");\n    error(0, 0, v12, v11);\n    if ( v32 == 2 && a1 - optind == 4 )\n    {\n      v13 = gettext(\"Fifos do not have major and minor device numbers.\");\n      fprintf(stderr, \"%s\\n\", v13);\n    }\n    sub_401635(1);\n  }\n  if ( v36 && (int)sub_40150D(v36) < 0 )\n  {\n    v14 = sub_40271F(v36);\n    v15 = gettext(\"failed to set default file creation context to %s\");\n    v16 = __errno_location();\n    error(1, *v16, v15, v14);\n  }\n  v17 = *a2[optind + 1];\n  if ( v17 != 99 )\n  {\n    if ( v17 <= 99 )\n    {\n      if ( v17 != 98 )\n        goto LABEL_63;\n      v30 = 24576;\n      goto LABEL_49;\n    }\n    if ( v17 == 112 )\n    {\n      if ( mkfifo(a2[optind], mode) )\n      {\n        v25 = (const char *)sub_40271F(a2[optind]);\n        v26 = __errno_location();\n        error(1, *v26, \"%s\", v25);\n      }\nLABEL_64:\n      exit(0);\n    }\n    if ( v17 != 117 )\n    {\nLABEL_63:\n      v27 = sub_40271F(a2[optind + 1]);\n      v28 = gettext(\"invalid device type %s\");\n      error(0, 0, v28, v27);\n      sub_401635(1);\n    }\n  }\n  v30 = 0x2000;\nLABEL_49:\n  v38 = a2[optind + 2];\n  v39 = a2[optind + 3];\n  if ( (unsigned int)sub_404AA8(v38, 0LL, 0LL, major, 0LL) || major[0] != *(_QWORD *)major )\n  {\n    v18 = sub_40271F(v38);\n    v19 = gettext(\"invalid major device number %s\");\n    error(1, 0, v19, v18);\n  }\n  if ( (unsigned int)sub_404AA8(v39, 0LL, 0LL, minor, 0LL) || minor[0] != *(_QWORD *)minor )\n  {\n    v20 = sub_40271F(v39);\n    v21 = gettext(\"invalid minor device number %s\");\n    error(1, 0, v21, v20);\n  }\n  v40 = gnu_dev_makedev(major[0], minor[0]);\n  if ( v40 == -1LL )\n  {\n    v22 = gettext(\"invalid device %s %s\");\n    error(1, 0, v22, v38, v39);\n  }\n  if ( (unsigned int)sub_405240(a2[optind], v30 | mode) )\n  {\n    v23 = (const char *)sub_40271F(a2[optind]);\n    v24 = __errno_location();\n    error(1, *v24, \"%s\", v23);\n  }\n  goto LABEL_64;\n}\n"], [4202174, "sub_401EBE", "__int64 __fastcall sub_401EBE(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_607268 = a1;\n  return result;\n}\n"], [4202195, "sub_401ED3", "__int64 sub_401ED3()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_404F14(stdout) && (byte_607268 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_607260 )\n    {\n      v0 = (const char *)sub_403D38(qword_607260);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_404F14(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4202430, "sub_401FBE", "_BYTE *__fastcall sub_401FBE(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4202535, "sub_402027", "size_t __fastcall sub_402027(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4202613, "sub_402075", "__int64 __fastcall sub_402075(unsigned int a1)\n{\n  return a1;\n}\n"], [4202625, "sub_402081", "__int64 __fastcall sub_402081(int a1, int a2)\n{\n  __int64 result; // rax\n\n  result = sub_404851(32LL);\n  *(_BYTE *)result = 61;\n  *(_BYTE *)(result + 1) = 1;\n  *(_DWORD *)(result + 4) = 4095;\n  *(_DWORD *)(result + 8) = a1;\n  *(_DWORD *)(result + 12) = a2;\n  *(_BYTE *)(result + 17) = 0;\n  return result;\n}\n"], [4202717, "sub_4020DD", "__int64 __fastcall sub_4020DD(char *a1)\n{\n  char *v1; // rax\n  _BOOL4 v3; // eax\n  int v4; // eax\n  char *v5; // rax\n  int v6; // eax\n  int v7; // eax\n  __int64 v8; // rax\n  int v9; // eax\n  char *v10; // [rsp+8h] [rbp-48h]\n  char v11; // [rsp+12h] [rbp-3Eh]\n  char v12; // [rsp+13h] [rbp-3Dh]\n  unsigned int v13; // [rsp+14h] [rbp-3Ch]\n  int v14; // [rsp+18h] [rbp-38h]\n  int v15; // [rsp+1Ch] [rbp-34h]\n  int v16; // [rsp+20h] [rbp-30h]\n  __int64 v17; // [rsp+28h] [rbp-28h]\n  __int64 v18; // [rsp+30h] [rbp-20h]\n  char *i; // [rsp+38h] [rbp-18h]\n  _BYTE *ptr; // [rsp+40h] [rbp-10h]\n  char *v21; // [rsp+48h] [rbp-8h]\n\n  v10 = a1;\n  v17 = 0LL;\n  if ( *a1 > 47 && *a1 <= 55 )\n  {\n    v13 = 0;\n    do\n    {\n      v1 = v10++;\n      v13 = 8 * v13 + *v1 - 48;\n      if ( v13 > 0xFFF )\n        return 0LL;\n    }\n    while ( *v10 > 47 && *v10 <= 55 );\n    if ( *v10 )\n      return 0LL;\n    v16 = sub_402075(v13);\n    return sub_402081(v16, v16 & 0xC00 | 0x3FFu);\n  }\n  v18 = 1LL;\n  for ( i = a1; *i; ++i )\n  {\n    v3 = *i == 61 || *i == 43 || *i == 45;\n    v18 += v3;\n  }\n  ptr = (_BYTE *)sub_404708(v18, 16LL);\n  while ( 2 )\n  {\n    v14 = 0;\n    while ( 1 )\n    {\n      v4 = *v10;\n      if ( v4 == 97 )\n      {\n        v14 |= 0xFFFu;\n        goto LABEL_35;\n      }\n      if ( v4 <= 97 )\n        break;\n      switch ( v4 )\n      {\n        case 'o':\n          v14 |= 0x207u;\n          break;\n        case 'u':\n          v14 |= 0x9C0u;\n          break;\n        case 'g':\n          v14 |= 0x438u;\n          break;\n        default:\n          goto LABEL_69;\n      }\nLABEL_35:\n      ++v10;\n    }\n    if ( v4 == 45 || v4 == 61 || v4 == 43 )\n    {\n      do\n      {\n        v12 = *v10;\n        v11 = 3;\n        v5 = v10 + 1;\n        v10 += 2;\n        v6 = *v5;\n        switch ( v6 )\n        {\n          case 'o':\n            v15 = 7;\n            break;\n          case 'u':\n            v15 = 448;\n            break;\n          case 'g':\n            v15 = 56;\n            break;\n          default:\n            v15 = 0;\n            v11 = 1;\n            --v10;\n            while ( 1 )\n            {\n              v7 = *v10;\n              if ( v7 == 115 )\n              {\n                v15 |= 0xC00u;\n              }\n              else if ( v7 > 115 )\n              {\n                switch ( v7 )\n                {\n                  case 'w':\n                    v15 |= 0x92u;\n                    break;\n                  case 'x':\n                    v15 |= 0x49u;\n                    break;\n                  case 't':\n                    v15 |= 0x200u;\n                    break;\n                  default:\n                    goto LABEL_59;\n                }\n              }\n              else if ( v7 == 88 )\n              {\n                v11 = 2;\n              }\n              else\n              {\n                if ( v7 != 114 )\n                  goto LABEL_59;\n                v15 |= 0x124u;\n              }\n              ++v10;\n            }\n        }\nLABEL_59:\n        v8 = v17++;\n        v21 = &ptr[16 * v8];\n        *v21 = v12;\n        v21[1] = v11;\n        *((_DWORD *)v21 + 1) = v14;\n        *((_DWORD *)v21 + 2) = v15;\n        if ( v14 )\n          v9 = v14 & v15;\n        else\n          v9 = v15;\n        *((_DWORD *)v21 + 3) = v9;\n      }\n      while ( *v10 == 61 || *v10 == 43 || *v10 == 45 );\n      if ( *v10 == 44 )\n      {\n        ++v10;\n        continue;\n      }\n      if ( !*v10 )\n      {\n        ptr[16 * v17 + 1] = 0;\n        return (__int64)ptr;\n      }\n    }\n    break;\n  }\nLABEL_69:\n  free(ptr);\n  return 0LL;\n}\n"], [4203570, "sub_402432", "__int64 __fastcall sub_402432(char *a1)\n{\n  __int64 result; // rax\n  struct stat stat_buf; // [rsp+10h] [rbp-90h] BYREF\n\n  if ( (unsigned int)sub_405230(a1, &stat_buf) )\n    result = 0LL;\n  else\n    result = sub_402081(stat_buf.st_mode, 4095);\n  return result;\n}\n"], [4203641, "sub_402479", "__int64 __fastcall sub_402479(__int16 a1, unsigned __int8 a2, int a3, char *a4, _DWORD *a5)\n{\n  int v5; // eax\n  int v6; // eax\n  int v7; // edx\n  int v8; // eax\n  int v9; // edx\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  unsigned int v17; // [rsp+28h] [rbp-18h]\n  int v18; // [rsp+2Ch] [rbp-14h]\n  int v19; // [rsp+30h] [rbp-10h]\n  int v20; // [rsp+30h] [rbp-10h]\n  int v21; // [rsp+30h] [rbp-10h]\n  int v22; // [rsp+34h] [rbp-Ch]\n  int v23; // [rsp+38h] [rbp-8h]\n\n  v17 = a1 & 0xFFF;\n  v18 = 0;\n  while ( a4[1] )\n  {\n    v22 = *((_DWORD *)a4 + 1);\n    if ( a2 )\n      v5 = 3072;\n    else\n      v5 = 0;\n    v23 = ~*((_DWORD *)a4 + 3) & v5;\n    v19 = *((_DWORD *)a4 + 2);\n    v6 = a4[1];\n    if ( v6 == 2 )\n    {\n      if ( v17 & 0x49 | a2 )\n        v19 |= 0x49u;\n    }\n    else if ( v6 == 3 )\n    {\n      v20 = v17 & v19;\n      if ( (v20 & 0x124) != 0 )\n        v7 = 292;\n      else\n        v7 = 0;\n      if ( (v20 & 0x92) != 0 )\n        v8 = 146;\n      else\n        v8 = 0;\n      v9 = v8 | v7;\n      if ( (v20 & 0x49) != 0 )\n        v10 = 73;\n      else\n        v10 = 0;\n      v19 = v9 | v10 | v20;\n    }\n    if ( v22 )\n      v11 = *((_DWORD *)a4 + 1);\n    else\n      v11 = ~a3;\n    v21 = ~v23 & v11 & v19;\n    v12 = *a4;\n    switch ( v12 )\n    {\n      case '-':\n        v18 |= v21;\n        v17 &= ~v21;\n        break;\n      case '=':\n        if ( v22 )\n          v13 = ~v22;\n        else\n          v13 = 0;\n        v18 |= ~((unsigned __int16)v23 | (unsigned __int16)v13) & 0xFFF;\n        v17 = v21 | v17 & (v23 | v13);\n        break;\n      case '+':\n        v18 |= v21;\n        v17 |= v21;\n        break;\n    }\n    a4 += 16;\n  }\n  if ( a5 )\n    *a5 = v18;\n  return v17;\n}\n"], [4204052, "sub_402614", "char *__fastcall sub_402614(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_607270 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4204283, "sub_4026FB", "__int64 __fastcall sub_4026FB(unsigned int a1, __int64 a2)\n{\n  return sub_403BAA(a1, 6LL, a2);\n}\n"], [4204319, "sub_40271F", "__int64 __fastcall sub_40271F(__int64 a1)\n{\n  return sub_4026FB(0, a1);\n}\n"], [4204350, "sub_40273E", "__int64 __fastcall sub_40273E(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_607280;\n  v4 = sub_404975(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4204423, "sub_402787", "__int64 __fastcall sub_402787(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_607280;\n  return *(unsigned int *)v1;\n}\n"], [4204453, "sub_4027A5", "__int64 *__fastcall sub_4027A5(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_607280;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4204489, "sub_4027C9", "__int64 __fastcall sub_4027C9(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_607280;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4204625, "sub_402851", "__int64 __fastcall sub_402851(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_607280;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4204676, "sub_402884", "__int64 *__fastcall sub_402884(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_607280;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4204766, "sub_4028DE", "_QWORD *__fastcall sub_4028DE(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4204886, "sub_402956", "char *__fastcall sub_402956(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4204947, "sub_402993", "unsigned __int64 __fastcall sub_402993(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_402956((const char *)L\"`'\", a5);\n        a9 = sub_402956((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_402993(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4208094, "sub_4035DE", "unsigned __int64 __fastcall sub_4035DE(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_607280;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_402993(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4208254, "sub_40367E", "__int64 __fastcall sub_40367E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4036B0(a1, a2, 0LL, a3);\n}\n"], [4208304, "sub_4036B0", "__int64 __fastcall sub_4036B0(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_607280;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_402993(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_404837(v10);\n  sub_402993(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4208604, "sub_4037DC", "void sub_4037DC()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_6071E0;\n  for ( i = 1; i < dword_6071C0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6072C0 )\n  {\n    free(ptr[1]);\n    qword_6071D0 = 256LL;\n    off_6071D8 = &unk_6072C0;\n  }\n  if ( ptr != (void **)&qword_6071D0 )\n  {\n    free(ptr);\n    off_6071E0 = &qword_6071D0;\n  }\n  dword_6071C0 = 1;\n}\n"], [4208775, "sub_403887", "void *__fastcall sub_403887(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_6071E0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6071C0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_6071E0 == &qword_6071D0;\n    if ( off_6071E0 == &qword_6071D0 )\n      v4 = 0LL;\n    else\n      v4 = off_6071E0;\n    v12 = (__int64 *)sub_404886(v4, 16 * v14);\n    off_6071E0 = v12;\n    if ( v9 )\n    {\n      v5 = off_6071D8;\n      *v12 = qword_6071D0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6071C0], 0, 16 * (v14 - (unsigned int)dword_6071C0));\n    dword_6071C0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_402993((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6072C0 )\n      free(ptr);\n    ptr = (void *)sub_404837(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_402993((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4209421, "sub_403B0D", "void *__fastcall sub_403B0D(int a1, __int64 a2)\n{\n  return sub_403887(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_607280);\n}\n"], [4209464, "sub_403B38", "void *__fastcall sub_403B38(int a1, __int64 a2, size_t a3)\n{\n  return sub_403887(a1, a2, a3, (__int64)&qword_607280);\n}\n"], [4209508, "sub_403B64", "void *__fastcall sub_403B64(__int64 a1)\n{\n  return sub_403B0D(0, a1);\n}\n"], [4209539, "sub_403B83", "void *__fastcall sub_403B83(__int64 a1, size_t a2)\n{\n  return sub_403B38(0, a1, a2);\n}\n"], [4209578, "sub_403BAA", "void *__fastcall sub_403BAA(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_4028DE(v5, a2);\n  return sub_403887(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4209643, "sub_403BEB", "void *__fastcall sub_403BEB(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_4028DE(v7, a2);\n  return sub_403887(a1, a3, a4, (__int64)v7);\n}\n"], [4209706, "sub_403C2A", "void *__fastcall sub_403C2A(int a1, __int64 a2)\n{\n  return sub_403BAA(0, a1, a2);\n}\n"], [4209742, "sub_403C4E", "void *__fastcall sub_403C4E(int a1, __int64 a2, size_t a3)\n{\n  return sub_403BEB(0, a1, a2, a3);\n}\n"], [4209786, "sub_403C7A", "void *__fastcall sub_403C7A(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_607280;\n  v4[1] = qword_607288;\n  v4[2] = qword_607290;\n  v4[3] = qword_607298;\n  v4[4] = qword_6072A0;\n  v4[5] = qword_6072A8;\n  v4[6] = qword_6072B0;\n  sub_4027C9(v4, a3, 1);\n  return sub_403887(0, a1, a2, (__int64)v4);\n}\n"], [4209934, "sub_403D0E", "void *__fastcall sub_403D0E(__int64 a1, unsigned __int8 a2)\n{\n  return sub_403C7A(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4209976, "sub_403D38", "void *__fastcall sub_403D38(__int64 a1)\n{\n  return sub_403D0E(a1, 0x3Au);\n}\n"], [4210007, "sub_403D57", "void *__fastcall sub_403D57(__int64 a1, size_t a2)\n{\n  return sub_403C7A(a1, a2, 0x3Au);\n}\n"], [4210049, "sub_403D81", "__int64 __fastcall sub_403D81(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_403DB7(a1, a2, a3, a4, -1LL);\n}\n"], [4210103, "sub_403DB7", "void *__fastcall sub_403DB7(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_607280;\n  v8[1] = qword_607288;\n  v8[2] = qword_607290;\n  v8[3] = qword_607298;\n  v8[4] = qword_6072A0;\n  v8[5] = qword_6072A8;\n  v8[6] = qword_6072B0;\n  sub_402884(v8, a2, a3);\n  return sub_403887(a1, a4, a5, (__int64)v8);\n}\n"], [4210254, "sub_403E4E", "__int64 __fastcall sub_403E4E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403D81(0, a1, a2, a3);\n}\n"], [4210301, "sub_403E7D", "void *__fastcall sub_403E7D(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_403DB7(0, a1, a2, a3, a4);\n}\n"], [4210359, "sub_403EB7", "int __fastcall sub_403EB7(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4211874, "sub_4044A2", "int __fastcall sub_4044A2(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_403EB7(a1, a2, a3, a4, a5, i);\n}\n"], [4211984, "sub_404510", "int __fastcall sub_404510(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_403EB7(a1, a2, a3, a4, v8, i);\n}\n"], [4212201, "sub_4045E9", "int sub_4045E9(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_404510(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4212383, "sub_40469F", "int sub_40469F()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4212488, "sub_404708", "__int64 __fastcall sub_404708(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4049D3(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_404851(a2 * a1);\n}\n"], [4212550, "sub_404746", "__int64 __fastcall sub_404746(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4049D3(a1, a2, v4);\n  return sub_404886(a1, a3 * a2);\n}\n"], [4212626, "sub_404792", "__int64 __fastcall sub_404792(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4049D3(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_404886(a1, a3 * v6);\n}\n"], [4212791, "sub_404837", "__int64 __fastcall sub_404837(__int64 a1)\n{\n  return sub_404851(a1);\n}\n"], [4212817, "sub_404851", "void *__fastcall sub_404851(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4049D3(a1, a2, v2);\n  return v4;\n}\n"], [4212870, "sub_404886", "void *__fastcall sub_404886(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4049D3(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4212967, "sub_4048E7", "__int64 __fastcall sub_4048E7(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_404792(a1, a2, 1uLL);\n}\n"], [4213009, "sub_404911", "void *__fastcall sub_404911(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_404851(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4213052, "sub_40493C", "void *__fastcall sub_40493C(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4049D3(a1, a2, v2);\n  return v4;\n}\n"], [4213109, "sub_404975", "void *__fastcall sub_404975(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_404851(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4213158, "sub_4049A6", "void *__fastcall sub_4049A6(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_404975(a1, v1 + 1);\n}\n"], [4213203, "sub_4049D3", "void __noreturn sub_4049D3()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4213256, "sub_404A08", "__int64 __fastcall sub_404A08(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4213351, "sub_404A67", "__int64 __fastcall sub_404A67(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_404A08(a1, a2) )\n    ;\n  return i;\n}\n"], [4213416, "sub_404AA8", "__int64 __fastcall sub_404AA8(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_404A67(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_404A08(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_404A67(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_404A08(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_404A67(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_404A67(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_404A08(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_404A67(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_404A67(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_404A67(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_404A67(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4214548, "sub_404F14", "__int64 __fastcall sub_404F14(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_404F9F(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4214687, "sub_404F9F", "int __fastcall sub_404F9F(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_405087(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4214868, "sub_405054", "__int64 __fastcall sub_405054(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4050D2(a1, 0LL, 1LL);\n  return result;\n}\n"], [4214919, "sub_405087", "int __fastcall sub_405087(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_405054(a1);\n  return fflush(a1);\n}\n"], [4214994, "sub_4050D2", "int __fastcall sub_4050D2(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4215184, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_606E18 - off_606E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_606E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4215296, "fini", "void fini(void)\n{\n  ;\n}\n"], [4215312, "sub_405210", "int __fastcall sub_405210(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6071A8 )\n    v1 = (void *)qword_6071A8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4215344, "sub_405230", "int __fastcall sub_405230(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4215360, "sub_405240", "int __fastcall sub_405240(char *path, __mode_t mode, __dev_t a3)\n{\n  __dev_t dev[2]; // [rsp+8h] [rbp-10h] BYREF\n\n  dev[0] = a3;\n  return __xmknod(0, path, mode, dev);\n}\n"], [4215392, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]