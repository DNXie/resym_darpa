[[4199520, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199552, "sub_401480", "__int64 sub_401480()\n{\n  return qword_609010();\n}\n"], [4199568, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199584, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199600, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199616, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199632, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199648, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199664, ".ferror", "// attributes: thunk\nint ferror(FILE *stream)\n{\n  return ferror(stream);\n}\n"], [4199680, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199696, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199712, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199728, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199744, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199760, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199776, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199792, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199808, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199824, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199840, "._obstack_begin", "// attributes: thunk\nint _obstack_begin(struct obstack *a1, int a2, int a3, void *(*a4)(__int64), void (*a5)(void *))\n{\n  return obstack_begin(a1, a2, a3, a4, a5);\n}\n"], [4199856, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199872, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199888, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199904, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199920, ".fgetc", "// attributes: thunk\nint fgetc(FILE *stream)\n{\n  return fgetc(stream);\n}\n"], [4199936, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199952, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199968, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4199984, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4200000, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200016, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200032, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200048, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200064, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200080, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4200096, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200112, ".feof", "// attributes: thunk\nint feof(FILE *stream)\n{\n  return feof(stream);\n}\n"], [4200128, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200144, ".obstack_free", "// attributes: thunk\nvoid obstack_free(struct obstack *obstack, void *block)\n{\n  obstack_free(obstack, block);\n}\n"], [4200160, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200176, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4200192, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200208, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4200224, ".wcwidth", "// attributes: thunk\nint wcwidth(wchar_t c)\n{\n  return wcwidth(c);\n}\n"], [4200240, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200256, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200272, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4200288, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200304, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200320, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200336, "._obstack_newchunk", "// attributes: thunk\nvoid _obstack_newchunk(struct obstack *a1, int a2)\n{\n  obstack_newchunk(a1, a2);\n}\n"], [4200352, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4200368, ".iswspace", "// attributes: thunk\nint iswspace(wint_t wc)\n{\n  return iswspace(wc);\n}\n"], [4200384, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4200400, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200416, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4200432, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200448, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200464, ".sysconf", "// attributes: thunk\n__int64 sysconf(int name)\n{\n  return sysconf(name);\n}\n"], [4200480, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200496, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200512, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200528, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200544, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200560, ".getdelim", "// attributes: thunk\n__ssize_t getdelim(char **lineptr, size_t *n, int delimiter, FILE *stream)\n{\n  return getdelim(lineptr, n, delimiter, stream);\n}\n"], [4200576, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200592, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200640, "sub_4018C0", "signed __int64 sub_4018C0()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60926F - &unk_609268;\n  if ( (unsigned __int64)(&unk_60926F - &unk_609268) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200688, "sub_4018F0", "__int64 sub_4018F0()\n{\n  return 0LL;\n}\n"], [4200752, "sub_401930", "signed __int64 sub_401930()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_6092D8 )\n  {\n    result = sub_4018C0();\n    byte_6092D8 = 1;\n  }\n  return result;\n}\n"], [4200784, "sub_401950", "__int64 sub_401950()\n{\n  return sub_4018F0();\n}\n"], [4200829, "sub_40197D", "__int64 __fastcall sub_40197D(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4200844, "sub_40198C", "int sub_40198C()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4038AA(qword_609330);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4038AA(qword_609330);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4038AA(qword_609330);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201110, "sub_401A96", "bool __fastcall sub_401A96(unsigned __int8 a1)\n{\n  return (((unsigned int)dword_4072E0[a1 >> 5] >> (a1 & 0x1F)) & 1) != 0;\n}\n"], [4201164, "sub_401ACC", "void __fastcall __noreturn sub_401ACC(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  __int64 v3; // r12\n  __int64 v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n\n  if ( a1 )\n  {\n    v1 = qword_609330;\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = qword_609330;\n    v4 = qword_609330;\n    v5 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\");\n    printf(v5, v4, v3);\n    v6 = stdout;\n    v7 = gettext(\n           \"Print newline, word, and byte counts for each FILE, and a total line if\\n\"\n           \"more than one FILE is specified.  With no FILE, or when FILE is -,\\n\"\n           \"read standard input.  A word is a non-zero-length sequence of characters\\n\"\n           \"delimited by white space.\\n\"\n           \"The options below may be used to select which counts are printed, always in\\n\"\n           \"the following order: newline, word, character, byte, maximum line length.\\n\"\n           \"  -c, --bytes            print the byte counts\\n\"\n           \"  -m, --chars            print the character counts\\n\"\n           \"  -l, --lines            print the newline counts\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"      --files0-from=F    read input from the files specified by\\n\"\n           \"                           NUL-terminated names in file F;\\n\"\n           \"                           If F is - then read names from standard input\\n\"\n           \"  -L, --max-line-length  print the length of the longest line\\n\"\n           \"  -w, --words            print the word counts\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v13, v12);\n    sub_40198C();\n  }\n  exit(a1);\n}\n"], [4201405, "sub_401BBD", "unsigned __int64 __fastcall sub_401BBD(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, const char *a6)\n{\n  const char *v6; // rax\n  __int64 v7; // rax\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  char *format; // [rsp+38h] [rbp-28h]\n  char v17[24]; // [rsp+40h] [rbp-20h] BYREF\n  unsigned __int64 v18; // [rsp+58h] [rbp-8h]\n\n  v18 = __readfsqword(0x28u);\n  format = \"%*s\";\n  if ( byte_609308 )\n  {\n    v6 = (const char *)sub_4039CB(a1, v17);\n    printf(\"%*s\", dword_609310, v6);\n    format = \" %*s\";\n  }\n  if ( byte_609309 )\n  {\n    v7 = sub_4039CB(a2, v17);\n    printf(format, (unsigned int)dword_609310, v7);\n    format = \" %*s\";\n  }\n  if ( byte_60930A )\n  {\n    v8 = sub_4039CB(a3, v17);\n    printf(format, (unsigned int)dword_609310, v8);\n    format = \" %*s\";\n  }\n  if ( byte_60930B )\n  {\n    v9 = sub_4039CB(a4, v17);\n    printf(format, (unsigned int)dword_609310, v9);\n    format = \" %*s\";\n  }\n  if ( byte_60930C )\n  {\n    v10 = sub_4039CB(a5, v17);\n    printf(format, (unsigned int)dword_609310, v10);\n  }\n  if ( a6 )\n    printf(\" %s\", a6);\n  putchar_unlocked(10);\n  return __readfsqword(0x28u) ^ v18;\n}\n"], [4201843, "sub_401D73", "__int64 __fastcall sub_401D73(unsigned int a1, const char *a2, __int64 a3)\n{\n  char *v3; // rax\n  bool v4; // al\n  bool v5; // al\n  __int64 v6; // rax\n  int *v7; // rax\n  int *v8; // rax\n  int *v9; // rax\n  int *v10; // rax\n  char *v11; // rax\n  int v12; // eax\n  const unsigned __int16 *v13; // rbx\n  const unsigned __int16 *v14; // rbx\n  unsigned __int8 v17; // [rsp+21h] [rbp-40CFh]\n  char v18; // [rsp+22h] [rbp-40CEh]\n  unsigned __int8 v19; // [rsp+23h] [rbp-40CDh]\n  unsigned __int8 v20; // [rsp+24h] [rbp-40CCh]\n  char v21; // [rsp+25h] [rbp-40CBh]\n  unsigned __int8 v22; // [rsp+26h] [rbp-40CAh]\n  bool v23; // [rsp+27h] [rbp-40C9h]\n  wchar_t pwc; // [rsp+28h] [rbp-40C8h] BYREF\n  int v25; // [rsp+2Ch] [rbp-40C4h]\n  size_t n; // [rsp+30h] [rbp-40C0h]\n  __int64 v27; // [rsp+38h] [rbp-40B8h]\n  __int64 v28; // [rsp+40h] [rbp-40B0h]\n  __int64 v29; // [rsp+48h] [rbp-40A8h]\n  __int64 v30; // [rsp+50h] [rbp-40A0h]\n  unsigned __int64 v31; // [rsp+58h] [rbp-4098h]\n  void *s; // [rsp+60h] [rbp-4090h]\n  unsigned __int64 v33; // [rsp+68h] [rbp-4088h]\n  size_t i; // [rsp+70h] [rbp-4080h]\n  char *v35; // [rsp+78h] [rbp-4078h]\n  size_t v36; // [rsp+80h] [rbp-4070h]\n  unsigned __int64 v37; // [rsp+88h] [rbp-4068h]\n  char *v38; // [rsp+90h] [rbp-4060h]\n  char *v39; // [rsp+98h] [rbp-4058h]\n  __off_t v40; // [rsp+A0h] [rbp-4050h]\n  __off_t v41; // [rsp+A8h] [rbp-4048h]\n  mbstate_t p; // [rsp+B0h] [rbp-4040h] BYREF\n  mbstate_t v43; // [rsp+C0h] [rbp-4030h]\n  char dest[16392]; // [rsp+D0h] [rbp-4020h] BYREF\n  unsigned __int64 v45; // [rsp+40D8h] [rbp-18h]\n\n  v45 = __readfsqword(0x28u);\n  v17 = 1;\n  if ( a2 )\n    v3 = (char *)a2;\n  else\n    v3 = gettext(\"standard input\");\n  v39 = v3;\n  v31 = 0LL;\n  v30 = 0LL;\n  v29 = 0LL;\n  v28 = 0LL;\n  v27 = 0LL;\n  if ( __ctype_get_mb_cur_max() <= 1 )\n  {\n    v4 = byte_60930B || byte_60930A;\n    v18 = v4;\n    v19 = 0;\n  }\n  else\n  {\n    v18 = byte_60930B;\n    v19 = byte_60930A;\n  }\n  v5 = byte_609309 || byte_60930C;\n  v23 = v5;\n  if ( v18 != 1 || v19 || byte_609308 || v23 )\n    sub_403961(a1, 0LL, 0LL, 2LL);\n  if ( v18 && v19 != 1 && byte_609308 != 1 && !v23 )\n  {\n    if ( *(int *)a3 > 0 )\n      *(_DWORD *)a3 = sub_4069C0(a1, (struct stat *)(a3 + 8));\n    if ( *(_DWORD *)a3\n      || (*(_DWORD *)(a3 + 32) & 0xF000) != 0x8000\n      || (v40 = lseek(a1, 0LL, 1), v40 == -1)\n      || (v41 = lseek(a1, 0LL, 2), v41 == -1) )\n    {\n      sub_403961(a1, 0LL, 0LL, 2LL);\n      while ( 1 )\n      {\n        n = sub_405AD0(a1, dest, 0x4000LL);\n        if ( !n )\n          break;\n        if ( n == -1LL )\n        {\n          v7 = __errno_location();\n          error(0, *v7, \"%s\", v39);\n          v17 = 0;\n          goto LABEL_124;\n        }\n        v30 += n;\n      }\n    }\n    else\n    {\n      if ( v41 < v40 )\n        v6 = 0LL;\n      else\n        v6 = v41 - v40;\n      v30 = v6;\n    }\n    goto LABEL_124;\n  }\n  if ( v19 == 1 || v23 )\n  {\n    if ( __ctype_get_mb_cur_max() > 1 )\n    {\n      v20 = 0;\n      v33 = 0LL;\n      p = 0LL;\n      v21 = 0;\n      for ( i = 0LL; ; i = n )\n      {\n        n = sub_405AD0(a1, &dest[i], 0x4000 - i);\n        if ( !n )\n        {\nLABEL_94:\n          if ( v33 > v31 )\n            v31 = v33;\n          v28 += v20;\n          goto LABEL_124;\n        }\n        if ( n == -1LL )\n        {\n          v9 = __errno_location();\n          error(0, *v9, \"%s\", v39);\n          v17 = 0;\n          goto LABEL_94;\n        }\n        v30 += n;\n        v35 = dest;\n        n += i;\n        while ( 1 )\n        {\n          if ( v21 != 1 && sub_401A96(*v35) )\n          {\n            v36 = 1LL;\n            pwc = *v35;\n            goto LABEL_67;\n          }\n          v21 = 1;\n          v43 = p;\n          v36 = mbrtowc(&pwc, v35, n, &p);\n          if ( v36 == -2LL )\n            break;\n          if ( v36 != -1LL )\n          {\n            if ( mbsinit(&p) )\n              v21 = 0;\n            if ( !v36 )\n            {\n              pwc = 0;\n              v36 = 1LL;\n            }\nLABEL_67:\n            v35 += v36;\n            n -= v36;\n            ++v29;\n            if ( pwc != 11 )\n            {\n              if ( pwc > 11 )\n              {\n                if ( pwc <= 13 )\n                  goto LABEL_76;\n                if ( pwc == 32 )\n                {\n                  ++v33;\n                }\n                else\n                {\nLABEL_82:\n                  if ( !iswprint(pwc) )\n                    goto LABEL_87;\n                  v25 = wcwidth(pwc);\n                  if ( v25 > 0 )\n                    v33 += v25;\n                  if ( !iswspace(pwc) )\n                  {\n                    v20 = 1;\n                    goto LABEL_87;\n                  }\n                }\n              }\n              else if ( pwc == 9 )\n              {\n                v33 = (v33 & 0xFFFFFFFFFFFFFFF8LL) + 8;\n              }\n              else\n              {\n                if ( pwc != 10 )\n                  goto LABEL_82;\n                ++v27;\nLABEL_76:\n                if ( v33 > v31 )\n                  v31 = v33;\n                v33 = 0LL;\n              }\n            }\n            v28 += v20;\n            v20 = 0;\n            goto LABEL_87;\n          }\n          ++v35;\n          --n;\nLABEL_87:\n          if ( !n )\n            goto LABEL_88;\n        }\n        p = v43;\nLABEL_88:\n        if ( n )\n        {\n          if ( n == 0x4000 )\n          {\n            ++v35;\n            n = 0x3FFFLL;\n          }\n          memmove(dest, v35, n);\n        }\n      }\n    }\n    v22 = 0;\n    v37 = 0LL;\nLABEL_120:\n    n = sub_405AD0(a1, dest, 0x4000LL);\n    if ( !n )\n    {\nLABEL_121:\n      if ( v37 > v31 )\n        v31 = v37;\n      v28 += v22;\n      goto LABEL_124;\n    }\n    v38 = dest;\n    if ( n == -1LL )\n    {\n      v10 = __errno_location();\n      error(0, *v10, \"%s\", v39);\n      v17 = 0;\n      goto LABEL_121;\n    }\n    v30 += n;\n    while ( 1 )\n    {\n      v11 = v38++;\n      v12 = *v11;\n      if ( v12 != 11 )\n      {\n        if ( v12 > 11 )\n        {\n          if ( v12 <= 13 )\n            goto LABEL_110;\n          if ( v12 == 32 )\n          {\n            ++v37;\n            goto LABEL_115;\n          }\n        }\n        else\n        {\n          if ( v12 == 9 )\n          {\n            v37 = (v37 & 0xFFFFFFFFFFFFFFF8LL) + 8;\n            goto LABEL_115;\n          }\n          if ( v12 == 10 )\n          {\n            ++v27;\nLABEL_110:\n            if ( v37 > v31 )\n              v31 = v37;\n            v37 = 0LL;\n            goto LABEL_115;\n          }\n        }\n        v13 = *__ctype_b_loc();\n        if ( (v13[(unsigned __int8)sub_40197D(*(v38 - 1))] & 0x4000) == 0 )\n          goto LABEL_119;\n        ++v37;\n        v14 = *__ctype_b_loc();\n        if ( (v14[(unsigned __int8)sub_40197D(*(v38 - 1))] & 0x2000) == 0 )\n        {\n          v22 = 1;\n          goto LABEL_119;\n        }\n      }\nLABEL_115:\n      v28 += v22;\n      v22 = 0;\nLABEL_119:\n      if ( !--n )\n        goto LABEL_120;\n    }\n  }\n  while ( 1 )\n  {\n    n = sub_405AD0(a1, dest, 0x4000LL);\n    if ( !n )\n      break;\n    s = dest;\n    if ( n == -1LL )\n    {\n      v8 = __errno_location();\n      error(0, *v8, \"%s\", v39);\n      v17 = 0;\n      break;\n    }\n    while ( 1 )\n    {\n      s = memchr(s, 10, &dest[n] - (_BYTE *)s);\n      if ( !s )\n        break;\n      s = (char *)s + 1;\n      ++v27;\n    }\n    v30 += n;\n  }\nLABEL_124:\n  if ( v19 < (int)(unsigned __int8)byte_60930A )\n    v29 = v30;\n  sub_401BBD(v27, v28, v29, v30, v31, a2);\n  qword_6092E0 += v27;\n  qword_6092E8 += v28;\n  qword_6092F0 += v29;\n  qword_6092F8 += v30;\n  if ( v31 > qword_609300 )\n    qword_609300 = v31;\n  return v17;\n}\n"], [4204627, "sub_402853", "__int64 __fastcall sub_402853(const char *a1, __int64 a2)\n{\n  __int64 result; // rax\n  int *v3; // rax\n  unsigned __int8 v4; // [rsp+1Bh] [rbp-5h]\n  int fd; // [rsp+1Ch] [rbp-4h]\n\n  if ( a1 && strcmp(a1, \"-\") )\n  {\n    fd = open(a1, 0);\n    if ( fd == -1 || (v4 = sub_401D73(fd, a1, a2), close(fd)) )\n    {\n      v3 = __errno_location();\n      error(0, *v3, \"%s\", a1);\n      result = 0LL;\n    }\n    else\n    {\n      result = v4;\n    }\n  }\n  else\n  {\n    byte_609314 = 1;\n    result = sub_401D73(0, a1, a2);\n  }\n  return result;\n}\n"], [4204865, "sub_402941", "_DWORD *__fastcall sub_402941(int a1, __int64 a2)\n{\n  __int64 v2; // rax\n  int v3; // eax\n  int i; // [rsp+14h] [rbp-1Ch]\n  _DWORD *v6; // [rsp+18h] [rbp-18h]\n\n  if ( a1 )\n    v2 = a1;\n  else\n    v2 = 1LL;\n  v6 = (_DWORD *)sub_406392(v2, 152LL);\n  if ( !a1\n    || a1 == 1\n    && (unsigned __int8)byte_60930B\n     + (unsigned __int8)byte_60930A\n     + (unsigned __int8)byte_609309\n     + (unsigned __int8)byte_609308\n     + (unsigned __int8)byte_60930C == 1 )\n  {\n    *v6 = 1;\n  }\n  else\n  {\n    for ( i = 0; i < a1; ++i )\n    {\n      if ( *(_QWORD *)(8LL * i + a2) && strcmp(*(const char **)(8LL * i + a2), \"-\") )\n        v3 = sub_4069B0(*(char **)(8LL * i + a2), (struct stat *)&v6[38 * i + 2]);\n      else\n        v3 = sub_4069C0(0, (struct stat *)&v6[38 * i + 2]);\n      v6[38 * i] = v3;\n    }\n  }\n  return v6;\n}\n"], [4205281, "sub_402AE1", "__int64 __fastcall sub_402AE1(int a1, int *a2)\n{\n  int v3; // [rsp+1Ch] [rbp-14h]\n  int v4; // [rsp+20h] [rbp-10h]\n  int i; // [rsp+24h] [rbp-Ch]\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v3 = 1;\n  if ( a1 > 0 && *a2 <= 0 )\n  {\n    v4 = 1;\n    v6 = 0LL;\n    for ( i = 0; i < a1; ++i )\n    {\n      if ( !a2[38 * i] )\n      {\n        if ( (a2[38 * i + 8] & 0xF000) == 0x8000 )\n          v6 += *(_QWORD *)&a2[38 * i + 14];\n        else\n          v4 = 7;\n      }\n    }\n    while ( v6 > 9 )\n    {\n      ++v3;\n      v6 /= 0xAuLL;\n    }\n    if ( v3 < v4 )\n      v3 = v4;\n  }\n  return (unsigned int)v3;\n}\n"], [4205572, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  char *v5; // rax\n  int v6; // eax\n  __int64 v7; // r12\n  char *v8; // rbx\n  int *v9; // rax\n  double v10; // xmm0_8\n  __int64 v11; // rbx\n  char *v12; // rax\n  char **v13; // rax\n  int v14; // eax\n  __int64 v15; // r12\n  char *v16; // rbx\n  int *v17; // rax\n  __int64 v18; // rbx\n  char *v19; // rax\n  char *v20; // rax\n  char *v21; // rbx\n  const char *v22; // rax\n  __int64 v23; // rax\n  char *v24; // rax\n  int *v25; // rax\n  double v26; // [rsp+8h] [rbp-228h]\n  bool v27; // [rsp+29h] [rbp-207h]\n  char v28; // [rsp+2Ah] [rbp-206h]\n  char v29; // [rsp+2Bh] [rbp-205h]\n  int v30; // [rsp+2Ch] [rbp-204h]\n  int i; // [rsp+30h] [rbp-200h]\n  int v32; // [rsp+34h] [rbp-1FCh]\n  __int64 v33; // [rsp+38h] [rbp-1F8h]\n  char *s1; // [rsp+40h] [rbp-1F0h]\n  __int64 v35; // [rsp+48h] [rbp-1E8h]\n  FILE *stream; // [rsp+50h] [rbp-1E0h]\n  int *ptr; // [rsp+58h] [rbp-1D8h]\n  char *v38; // [rsp+60h] [rbp-1D0h]\n  __int64 v39; // [rsp+68h] [rbp-1C8h]\n  struct stat stat_buf; // [rsp+70h] [rbp-1C0h] BYREF\n  __int64 v41; // [rsp+100h] [rbp-130h] BYREF\n  __int64 v42; // [rsp+108h] [rbp-128h]\n\n  s1 = 0LL;\n  sub_403B47(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_406990(sub_4037BF);\n  setvbuf(stdout, 0LL, 1, 0LL);\n  byte_60930B = 0;\n  byte_60930A = 0;\n  byte_609309 = 0;\n  byte_609308 = 0;\n  byte_60930C = 0;\n  qword_609300 = 0LL;\n  qword_6092F8 = 0LL;\n  qword_6092F0 = 0LL;\n  qword_6092E8 = 0LL;\n  qword_6092E0 = 0LL;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v32 = getopt_long(a1, a2, \"clLmw\", &longopts, 0LL);\n        if ( v32 == -1 )\n        {\n          if ( byte_609308 != 1 && byte_609309 != 1 && byte_60930A != 1 && byte_60930B != 1 && byte_60930C != 1 )\n          {\n            byte_60930B = 1;\n            byte_609309 = 1;\n            byte_609308 = 1;\n          }\n          v28 = 0;\n          if ( s1 )\n          {\n            if ( optind < a1 )\n            {\n              v3 = sub_403C52(a2[optind]);\n              v4 = gettext(\"extra operand %s\");\n              error(0, 0, v4, v3);\n              v5 = gettext(\"file operands cannot be combined with --files0-from\");\n              fprintf(stderr, \"%s\\n\", v5);\n              sub_401ACC(1);\n            }\n            if ( !strcmp(s1, \"-\") )\n            {\n              stream = (FILE *)stdin;\n              v6 = fileno((FILE *)stdin);\n            }\n            else\n            {\n              stream = fopen(s1, \"r\");\n              if ( !stream )\n              {\n                v7 = sub_403C52(s1);\n                v8 = gettext(\"cannot open %s for reading\");\n                v9 = __errno_location();\n                error(1, *v9, v8, v7);\n              }\n              v6 = fileno(stream);\n            }\n            if ( (unsigned int)sub_4069C0(v6, &stat_buf)\n              || (stat_buf.st_mode & 0xF000) != 0x8000\n              || ((v26 = (double)SLODWORD(stat_buf.st_size), sub_403AC8() / 2.0 <= 10485760.0) ? (v10 = sub_403AC8() / 2.0) : (v10 = 10485760.0),\n                  v10 < v26) )\n            {\n              v33 = 0LL;\n              v30 = 0;\n              v35 = sub_4035D2(stream);\n            }\n            else\n            {\n              v28 = 1;\n              sub_4053EA(&v41);\n              if ( (unsigned __int8)sub_4057A9(stream, &v41) != 1 || (unsigned int)sub_406692(stream) )\n              {\n                v11 = sub_403C52(s1);\n                v12 = gettext(\"cannot read file names from %s\");\n                error(1, 0, v12, v11);\n              }\n              v33 = v42;\n              v30 = v41;\n              v35 = sub_403581(v42);\n            }\n          }\n          else\n          {\n            if ( optind >= a1 )\n              v13 = (char **)&unk_609318;\n            else\n              v13 = &a2[optind];\n            v33 = (__int64)v13;\n            if ( optind >= a1 )\n              v14 = 1;\n            else\n              v14 = a1 - optind;\n            v30 = v14;\n            v35 = sub_403581(v33);\n          }\n          if ( !v35 )\n            sub_40665D();\n          ptr = sub_402941(v30, v33);\n          dword_609310 = sub_402AE1(v30, ptr);\n          v27 = 1;\n          for ( i = 0; ; ++i )\n          {\n            v29 = 0;\n            v38 = (char *)sub_40363B(v35, &stat_buf);\n            if ( !v38 )\n              break;\n            if ( s1 && !strcmp(s1, \"-\") && !strcmp(v38, \"-\") )\n            {\n              v18 = sub_403C52(v38);\n              v19 = gettext(\"when reading file names from stdin, no file name of %s allowed\");\n              error(0, 0, v19, v18);\n              v29 = 1;\n            }\n            if ( !*v38 )\n            {\n              if ( s1 )\n              {\n                v39 = sub_403722(v35);\n                v21 = gettext(\"invalid zero-length file name\");\n                v22 = (const char *)sub_40526B(s1);\n                error(0, 0, \"%s:%lu: %s\", v22, v39, v21);\n              }\n              else\n              {\n                v20 = gettext(\"invalid zero-length file name\");\n                error(0, 0, \"%s\", v20);\n              }\n              v29 = 1;\n            }\n            if ( v29 )\n            {\n              v27 = 0;\n            }\n            else\n            {\n              if ( v30 )\n                v23 = 38LL * i;\n              else\n                v23 = 0LL;\n              v27 = (v27 & (unsigned __int8)sub_402853(v38, (__int64)&ptr[v23])) != 0;\n            }\n          }\n          if ( LODWORD(stat_buf.st_dev) != 3 )\n          {\n            if ( LODWORD(stat_buf.st_dev) == 4 )\n            {\n              v15 = sub_40526B(s1);\n              v16 = gettext(\"%s: read error\");\n              v17 = __errno_location();\n              error(0, *v17, v16, v15);\n              v27 = 0;\n            }\n            else if ( LODWORD(stat_buf.st_dev) != 2 )\n            {\n              __assert_fail(\"!\\\"unexpected error code from argv_iter\\\"\", \"../../src/src/wc.c\", 0x2E5u, \"main\");\n            }\n            if ( v27 && !s1 && !sub_403722(v35) )\n              v27 = (v27 & (unsigned __int8)sub_402853(0LL, (__int64)ptr)) != 0;\n            if ( v28 )\n              sub_40548C(&v41);\n            if ( (unsigned __int64)sub_403722(v35) > 1 )\n            {\n              v24 = gettext(\"total\");\n              sub_401BBD(qword_6092E0, qword_6092E8, qword_6092F0, qword_6092F8, qword_609300, v24);\n            }\n            sub_40375F(v35);\n            free(ptr);\n            if ( byte_609314 )\n            {\n              if ( close(0) )\n              {\n                v25 = __errno_location();\n                error(1, *v25, \"-\");\n              }\n            }\n            exit(!v27);\n          }\n          sub_40665D();\n        }\n        if ( v32 != 99 )\n          break;\n        byte_60930B = 1;\n      }\n      if ( v32 <= 99 )\n        break;\n      if ( v32 == 109 )\n      {\n        byte_60930A = 1;\n      }\n      else if ( v32 > 109 )\n      {\n        if ( v32 == 119 )\n        {\n          byte_609309 = 1;\n        }\n        else\n        {\n          if ( v32 != 128 )\n            goto LABEL_23;\n          s1 = (char *)optarg;\n        }\n      }\n      else\n      {\n        if ( v32 != 108 )\n          goto LABEL_23;\n        byte_609308 = 1;\n      }\n    }\n    if ( v32 == -130 )\n      sub_401ACC(0);\n    if ( v32 != 76 )\n    {\n      if ( v32 == -131 )\n      {\n        sub_406273(\n          (_DWORD)stdout,\n          (unsigned int)\"wc\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_609230,\n          (unsigned int)\"Paul Rubin\",\n          (unsigned int)\"David MacKenzie\",\n          0);\n        exit(0);\n      }\nLABEL_23:\n      sub_401ACC(1);\n    }\n    byte_60930C = 1;\n  }\n}\n"], [4208001, "sub_403581", "_QWORD *__fastcall sub_403581(__int64 a1)\n{\n  _QWORD *v2; // [rsp+18h] [rbp-8h]\n\n  v2 = malloc(0x30uLL);\n  if ( !v2 )\n    return 0LL;\n  *v2 = 0LL;\n  v2[4] = a1;\n  v2[5] = a1;\n  return v2;\n}\n"], [4208082, "sub_4035D2", "_QWORD *__fastcall sub_4035D2(__int64 a1)\n{\n  _QWORD *v2; // [rsp+18h] [rbp-8h]\n\n  v2 = malloc(0x30uLL);\n  if ( !v2 )\n    return 0LL;\n  *v2 = a1;\n  v2[2] = 0LL;\n  v2[3] = 0LL;\n  v2[1] = 0LL;\n  v2[4] = 0LL;\n  return v2;\n}\n"], [4208187, "sub_40363B", "__int64 __fastcall sub_40363B(__int64 a1, int *a2)\n{\n  int v2; // eax\n  __int64 result; // rax\n  __int64 *v4; // rax\n\n  if ( *(_QWORD *)a1 )\n  {\n    if ( getdelim((char **)(a1 + 16), (size_t *)(a1 + 24), 0, *(FILE **)a1) >= 0 )\n    {\n      *a2 = 1;\n      ++*(_QWORD *)(a1 + 8);\n      result = *(_QWORD *)(a1 + 16);\n    }\n    else\n    {\n      if ( feof(*(FILE **)a1) )\n        v2 = 2;\n      else\n        v2 = 4;\n      *a2 = v2;\n      result = 0LL;\n    }\n  }\n  else if ( **(_QWORD **)(a1 + 40) )\n  {\n    *a2 = 1;\n    v4 = *(__int64 **)(a1 + 40);\n    *(_QWORD *)(a1 + 40) = v4 + 1;\n    result = *v4;\n  }\n  else\n  {\n    *a2 = 2;\n    result = 0LL;\n  }\n  return result;\n}\n"], [4208418, "sub_403722", "__int64 __fastcall sub_403722(_QWORD *a1)\n{\n  __int64 result; // rax\n\n  if ( *a1 )\n    result = a1[1];\n  else\n    result = (__int64)(a1[5] - a1[4]) >> 3;\n  return result;\n}\n"], [4208479, "sub_40375F", "void __fastcall sub_40375F(void **a1)\n{\n  if ( *a1 )\n    free(a1[2]);\n  free(a1);\n}\n"], [4208533, "sub_403795", "__int64 __fastcall sub_403795(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_609320 = a1;\n  return result;\n}\n"], [4208554, "sub_4037AA", "__int64 __fastcall sub_4037AA(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_609328 = a1;\n  return result;\n}\n"], [4208575, "sub_4037BF", "__int64 sub_4037BF()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40687D(stdout) && (byte_609328 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_609320 )\n    {\n      v0 = (const char *)sub_40526B(qword_609320);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40687D(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4208810, "sub_4038AA", "_BYTE *__fastcall sub_4038AA(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4208915, "sub_403913", "size_t __fastcall sub_403913(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4208993, "sub_403961", "int __fastcall sub_403961(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4209041, "sub_403991", "void __fastcall sub_403991(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_403961(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4209099, "sub_4039CB", "__int64 __fastcall sub_4039CB(unsigned __int64 a1, __int64 a2)\n{\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  do\n  {\n    *(_BYTE *)--v4 = a1 % 0xA + 48;\n    a1 /= 0xAuLL;\n  }\n  while ( a1 );\n  return v4;\n}\n"], [4209232, "sub_403A50", "double sub_403A50()\n{\n  double v0; // rax\n  double v2; // [rsp+10h] [rbp-10h]\n  double v3; // [rsp+18h] [rbp-8h]\n\n  v2 = (double)(int)sysconf(85);\n  v3 = (double)(int)sysconf(30);\n  if ( v2 < 0.0 || v3 < 0.0 )\n    v0 = 67108864.0;\n  else\n    v0 = v2 * v3;\n  return v0;\n}\n"], [4209352, "sub_403AC8", "__int64 sub_403AC8()\n{\n  double v0; // xmm0_8\n  double v2; // [rsp+10h] [rbp-10h]\n  double v3; // [rsp+18h] [rbp-8h]\n\n  v2 = (double)(int)sysconf(86);\n  v3 = (double)(int)sysconf(30);\n  if ( v2 < 0.0 || v3 < 0.0 )\n    v0 = sub_403A50() / 4.0;\n  else\n    v0 = v2 * v3;\n  return *(_QWORD *)&v0;\n}\n"], [4209479, "sub_403B47", "char *__fastcall sub_403B47(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_609330 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4209710, "sub_403C2E", "__int64 __fastcall sub_403C2E(unsigned int a1, __int64 a2)\n{\n  return sub_4050DD(a1, 6LL, a2);\n}\n"], [4209746, "sub_403C52", "__int64 __fastcall sub_403C52(__int64 a1)\n{\n  return sub_403C2E(0, a1);\n}\n"], [4209777, "sub_403C71", "__int64 __fastcall sub_403C71(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609340;\n  v4 = sub_4065FF(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4209850, "sub_403CBA", "__int64 __fastcall sub_403CBA(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609340;\n  return *(unsigned int *)v1;\n}\n"], [4209880, "sub_403CD8", "__int64 *__fastcall sub_403CD8(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_609340;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4209916, "sub_403CFC", "__int64 __fastcall sub_403CFC(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_609340;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4210052, "sub_403D84", "__int64 __fastcall sub_403D84(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_609340;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4210103, "sub_403DB7", "__int64 *__fastcall sub_403DB7(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_609340;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4210193, "sub_403E11", "_QWORD *__fastcall sub_403E11(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4210313, "sub_403E89", "char *__fastcall sub_403E89(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4210374, "sub_403EC6", "unsigned __int64 __fastcall sub_403EC6(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_403E89((const char *)L\"`'\", a5);\n        a9 = sub_403E89((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403EC6(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4213521, "sub_404B11", "unsigned __int64 __fastcall sub_404B11(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_609340;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403EC6(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4213681, "sub_404BB1", "__int64 __fastcall sub_404BB1(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404BE3(a1, a2, 0LL, a3);\n}\n"], [4213731, "sub_404BE3", "__int64 __fastcall sub_404BE3(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_609340;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_403EC6(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_4064C1(v10);\n  sub_403EC6(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4214031, "sub_404D0F", "void sub_404D0F()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_609260;\n  for ( i = 1; i < dword_609240; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_609380 )\n  {\n    free(ptr[1]);\n    qword_609250 = 256LL;\n    off_609258 = &unk_609380;\n  }\n  if ( ptr != (void **)&qword_609250 )\n  {\n    free(ptr);\n    off_609260 = &qword_609250;\n  }\n  dword_609240 = 1;\n}\n"], [4214202, "sub_404DBA", "void *__fastcall sub_404DBA(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_609260;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_609240 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_609260 == &qword_609250;\n    if ( off_609260 == &qword_609250 )\n      v4 = 0LL;\n    else\n      v4 = off_609260;\n    v12 = (__int64 *)sub_406510(v4, 16 * v14);\n    off_609260 = v12;\n    if ( v9 )\n    {\n      v5 = off_609258;\n      *v12 = qword_609250;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_609240], 0, 16 * (v14 - (unsigned int)dword_609240));\n    dword_609240 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_403EC6((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_609380 )\n      free(ptr);\n    ptr = (void *)sub_4064C1(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_403EC6((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4214848, "sub_405040", "void *__fastcall sub_405040(int a1, __int64 a2)\n{\n  return sub_404DBA(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_609340);\n}\n"], [4214891, "sub_40506B", "void *__fastcall sub_40506B(int a1, __int64 a2, size_t a3)\n{\n  return sub_404DBA(a1, a2, a3, (__int64)&qword_609340);\n}\n"], [4214935, "sub_405097", "void *__fastcall sub_405097(__int64 a1)\n{\n  return sub_405040(0, a1);\n}\n"], [4214966, "sub_4050B6", "void *__fastcall sub_4050B6(__int64 a1, size_t a2)\n{\n  return sub_40506B(0, a1, a2);\n}\n"], [4215005, "sub_4050DD", "void *__fastcall sub_4050DD(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403E11(v5, a2);\n  return sub_404DBA(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4215070, "sub_40511E", "void *__fastcall sub_40511E(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403E11(v7, a2);\n  return sub_404DBA(a1, a3, a4, (__int64)v7);\n}\n"], [4215133, "sub_40515D", "void *__fastcall sub_40515D(int a1, __int64 a2)\n{\n  return sub_4050DD(0, a1, a2);\n}\n"], [4215169, "sub_405181", "void *__fastcall sub_405181(int a1, __int64 a2, size_t a3)\n{\n  return sub_40511E(0, a1, a2, a3);\n}\n"], [4215213, "sub_4051AD", "void *__fastcall sub_4051AD(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_609340;\n  v4[1] = qword_609348;\n  v4[2] = qword_609350;\n  v4[3] = qword_609358;\n  v4[4] = qword_609360;\n  v4[5] = qword_609368;\n  v4[6] = qword_609370;\n  sub_403CFC(v4, a3, 1);\n  return sub_404DBA(0, a1, a2, (__int64)v4);\n}\n"], [4215361, "sub_405241", "void *__fastcall sub_405241(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4051AD(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4215403, "sub_40526B", "void *__fastcall sub_40526B(__int64 a1)\n{\n  return sub_405241(a1, 0x3Au);\n}\n"], [4215434, "sub_40528A", "void *__fastcall sub_40528A(__int64 a1, size_t a2)\n{\n  return sub_4051AD(a1, a2, 0x3Au);\n}\n"], [4215476, "sub_4052B4", "__int64 __fastcall sub_4052B4(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4052EA(a1, a2, a3, a4, -1LL);\n}\n"], [4215530, "sub_4052EA", "void *__fastcall sub_4052EA(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_609340;\n  v8[1] = qword_609348;\n  v8[2] = qword_609350;\n  v8[3] = qword_609358;\n  v8[4] = qword_609360;\n  v8[5] = qword_609368;\n  v8[6] = qword_609370;\n  sub_403DB7(v8, a2, a3);\n  return sub_404DBA(a1, a4, a5, (__int64)v8);\n}\n"], [4215681, "sub_405381", "__int64 __fastcall sub_405381(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4052B4(0, a1, a2, a3);\n}\n"], [4215728, "sub_4053B0", "void *__fastcall sub_4053B0(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4052EA(0, a1, a2, a3, a4);\n}\n"], [4215786, "sub_4053EA", "int __fastcall sub_4053EA(__int64 a1)\n{\n  *(_QWORD *)a1 = 0LL;\n  *(_QWORD *)(a1 + 8) = 0LL;\n  *(_QWORD *)(a1 + 16) = 0LL;\n  _obstack_begin((struct obstack *)(a1 + 24), 0, 0, (void *(*)(__int64))malloc, free);\n  _obstack_begin((struct obstack *)(a1 + 112), 0, 0, (void *(*)(__int64))malloc, free);\n  return _obstack_begin((struct obstack *)(a1 + 200), 0, 0, (void *(*)(__int64))malloc, free);\n}\n"], [4215948, "sub_40548C", "void __fastcall sub_40548C(__int64 a1)\n{\n  obstack_free((struct obstack *)(a1 + 24), 0LL);\n  obstack_free((struct obstack *)(a1 + 112), 0LL);\n  obstack_free((struct obstack *)(a1 + 200), 0LL);\n}\n"], [4216255, "sub_4055BF", "__int64 __fastcall sub_4055BF(__int64 a1)\n{\n  __int64 result; // rax\n  __int64 src[2]; // [rsp+20h] [rbp-40h] BYREF\n  __int64 v3; // [rsp+30h] [rbp-30h]\n  __int64 v4; // [rsp+38h] [rbp-28h]\n  __int64 v5; // [rsp+40h] [rbp-20h]\n  struct obstack *v6; // [rsp+48h] [rbp-18h]\n  struct obstack *v7; // [rsp+50h] [rbp-10h]\n  struct obstack *v8; // [rsp+58h] [rbp-8h]\n\n  src[1] = a1 + 24;\n  src[0] = (unsigned int)(*(_DWORD *)(a1 + 48) - *(_DWORD *)(a1 + 40) - 1);\n  v3 = a1 + 24;\n  v4 = *(_QWORD *)(a1 + 40);\n  if ( *(_QWORD *)(a1 + 48) == v4 )\n    *(_BYTE *)(v3 + 80) |= 2u;\n  *(_QWORD *)(v3 + 24) = (*(int *)(v3 + 48) + *(_QWORD *)(v3 + 24)) & ~*(_DWORD *)(v3 + 48);\n  if ( *(_QWORD *)(v3 + 24) - *(_QWORD *)(v3 + 8) > *(_QWORD *)(v3 + 32) - *(_QWORD *)(v3 + 8) )\n    *(_QWORD *)(v3 + 24) = *(_QWORD *)(v3 + 32);\n  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v3 + 24);\n  v5 = v4;\n  v6 = (struct obstack *)(a1 + 112);\n  if ( (unsigned __int64)(*(_QWORD *)(a1 + 136) + 8LL) > *(_QWORD *)(a1 + 144) )\n    _obstack_newchunk(v6, 8);\n  v7 = v6;\n  *(_QWORD *)v6->next_free = v5;\n  v7->next_free += 8;\n  v8 = (struct obstack *)(a1 + 200);\n  if ( (unsigned __int64)(*(_QWORD *)(a1 + 224) + 8LL) > *(_QWORD *)(a1 + 232) )\n    _obstack_newchunk(v8, 8);\n  memcpy(v8->next_free, src, 8uLL);\n  v8->next_free += 8;\n  result = a1;\n  ++*(_QWORD *)a1;\n  return result;\n}\n"], [4216745, "sub_4057A9", "bool __fastcall sub_4057A9(FILE *a1, __int64 a2)\n{\n  _BYTE *v2; // rax\n  _BYTE *v3; // rax\n  int v5; // [rsp+1Ch] [rbp-54h]\n  __int64 v6; // [rsp+50h] [rbp-20h]\n  __int64 v7; // [rsp+60h] [rbp-10h]\n\n  while ( 1 )\n  {\n    v5 = fgetc(a1);\n    if ( v5 == -1 )\n      break;\n    if ( (unsigned __int64)(*(_QWORD *)(a2 + 48) + 1LL) > *(_QWORD *)(a2 + 56) )\n      _obstack_newchunk((struct obstack *)(a2 + 24), 1);\n    v3 = *(_BYTE **)(a2 + 48);\n    *(_QWORD *)(a2 + 48) = v3 + 1;\n    *v3 = v5;\n    if ( !v5 )\n      sub_4055BF(a2);\n  }\n  if ( *(_DWORD *)(a2 + 48) != *(_DWORD *)(a2 + 40) )\n  {\n    if ( (unsigned __int64)(*(_QWORD *)(a2 + 48) + 1LL) > *(_QWORD *)(a2 + 56) )\n      _obstack_newchunk((struct obstack *)(a2 + 24), 1);\n    v2 = *(_BYTE **)(a2 + 48);\n    *(_QWORD *)(a2 + 48) = v2 + 1;\n    *v2 = 0;\n    sub_4055BF(a2);\n  }\n  if ( (unsigned __int64)(*(_QWORD *)(a2 + 136) + 8LL) > *(_QWORD *)(a2 + 144) )\n    _obstack_newchunk((struct obstack *)(a2 + 112), 8);\n  **(_QWORD **)(a2 + 136) = 0LL;\n  *(_QWORD *)(a2 + 136) += 8LL;\n  v6 = *(_QWORD *)(a2 + 128);\n  if ( *(_QWORD *)(a2 + 136) == v6 )\n    *(_BYTE *)(a2 + 192) |= 2u;\n  *(_QWORD *)(a2 + 136) = (*(int *)(a2 + 160) + *(_QWORD *)(a2 + 136)) & ~*(_DWORD *)(a2 + 160);\n  if ( *(_QWORD *)(a2 + 136) - *(_QWORD *)(a2 + 120) > *(_QWORD *)(a2 + 144) - *(_QWORD *)(a2 + 120) )\n    *(_QWORD *)(a2 + 136) = *(_QWORD *)(a2 + 144);\n  *(_QWORD *)(a2 + 128) = *(_QWORD *)(a2 + 136);\n  *(_QWORD *)(a2 + 8) = v6;\n  v7 = *(_QWORD *)(a2 + 216);\n  if ( *(_QWORD *)(a2 + 224) == v7 )\n    *(_BYTE *)(a2 + 280) |= 2u;\n  *(_QWORD *)(a2 + 224) = (*(int *)(a2 + 248) + *(_QWORD *)(a2 + 224)) & ~*(_DWORD *)(a2 + 248);\n  if ( *(_QWORD *)(a2 + 224) - *(_QWORD *)(a2 + 208) > *(_QWORD *)(a2 + 232) - *(_QWORD *)(a2 + 208) )\n    *(_QWORD *)(a2 + 224) = *(_QWORD *)(a2 + 232);\n  *(_QWORD *)(a2 + 216) = *(_QWORD *)(a2 + 224);\n  *(_QWORD *)(a2 + 16) = v7;\n  return ferror(a1) == 0;\n}\n"], [4217552, "sub_405AD0", "ssize_t __fastcall sub_405AD0(int a1, void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = read(a1, a2, a3); ; result = read(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4217665, "sub_405B41", "int __fastcall sub_405B41(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4219180, "sub_40612C", "int __fastcall sub_40612C(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_405B41(a1, a2, a3, a4, a5, i);\n}\n"], [4219290, "sub_40619A", "int __fastcall sub_40619A(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_405B41(a1, a2, a3, a4, v8, i);\n}\n"], [4219507, "sub_406273", "int sub_406273(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40619A(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4219689, "sub_406329", "int sub_406329()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4219794, "sub_406392", "__int64 __fastcall sub_406392(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_40665D(a1, a2, v2);\n  return sub_4064DB(a2 * a1, a2, v2);\n}\n"], [4219856, "sub_4063D0", "__int64 __fastcall sub_4063D0(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_40665D(a1, a2, v4);\n  return sub_406510(a1, a3 * a2);\n}\n"], [4219932, "sub_40641C", "__int64 __fastcall sub_40641C(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_40665D(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_406510(a1, a3 * v6);\n}\n"], [4220097, "sub_4064C1", "__int64 __fastcall sub_4064C1(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4064DB(a1, a2, a3);\n}\n"], [4220123, "sub_4064DB", "void *__fastcall sub_4064DB(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_40665D(a1, a2, v2);\n  return v4;\n}\n"], [4220176, "sub_406510", "void *__fastcall sub_406510(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_40665D(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4220273, "sub_406571", "__int64 __fastcall sub_406571(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_40641C(a1, a2, 1uLL);\n}\n"], [4220315, "sub_40659B", "void *__fastcall sub_40659B(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4064DB(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4220358, "sub_4065C6", "void *__fastcall sub_4065C6(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_40665D(a1, a2, v2);\n  return v4;\n}\n"], [4220415, "sub_4065FF", "void *__fastcall sub_4065FF(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4064DB(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4220464, "sub_406630", "void *__fastcall sub_406630(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_4065FF(a1, v1 + 1);\n}\n"], [4220509, "sub_40665D", "void __noreturn sub_40665D()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4220562, "sub_406692", "int __fastcall sub_406692(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40677A(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4220743, "sub_406747", "__int64 __fastcall sub_406747(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_4067C5(a1, 0LL, 1LL);\n  return result;\n}\n"], [4220794, "sub_40677A", "int __fastcall sub_40677A(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_406747(a1);\n  return fflush(a1);\n}\n"], [4220869, "sub_4067C5", "int __fastcall sub_4067C5(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4221053, "sub_40687D", "__int64 __fastcall sub_40687D(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_406692(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4221200, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4221312, "fini", "void fini(void)\n{\n  ;\n}\n"], [4221328, "sub_406990", "int __fastcall sub_406990(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_609228 )\n    v1 = (void *)qword_609228;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4221360, "sub_4069B0", "int __fastcall sub_4069B0(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4221376, "sub_4069C0", "int __fastcall sub_4069C0(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4221392, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]