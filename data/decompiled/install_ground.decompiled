[[4202224, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4202256, "sub_401F10", "__int64 sub_401F10()\n{\n  return qword_620010();\n}\n"], [4202272, ".endgrent", "// attributes: thunk\nvoid endgrent(void)\n{\n  endgrent();\n}\n"], [4202288, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4202304, ".raise", "// attributes: thunk\nint raise(int sig)\n{\n  return raise(sig);\n}\n"], [4202320, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4202336, ".utimensat", "// attributes: thunk\nint utimensat(int fd, const char *path, const struct timespec times[2], int flags)\n{\n  return utimensat(fd, path, times, flags);\n}\n"], [4202352, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4202368, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4202384, ".unlink", "// attributes: thunk\nint unlink(const char *name)\n{\n  return unlink(name);\n}\n"], [4202400, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4202416, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4202432, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4202448, ".mkdir", "// attributes: thunk\nint mkdir(const char *path, __mode_t mode)\n{\n  return mkdir(path, mode);\n}\n"], [4202464, ".readlink", "// attributes: thunk\nssize_t readlink(const char *path, char *buf, size_t len)\n{\n  return readlink(path, buf, len);\n}\n"], [4202480, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4202496, ".clock_gettime", "// attributes: thunk\nint clock_gettime(clockid_t clock_id, struct timespec *tp)\n{\n  return clock_gettime(clock_id, tp);\n}\n"], [4202512, ".write", "// attributes: thunk\nssize_t write(int fd, const void *buf, size_t n)\n{\n  return write(fd, buf, n);\n}\n"], [4202528, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4202544, ".pathconf", "// attributes: thunk\n__int64 pathconf(const char *path, int name)\n{\n  return pathconf(path, name);\n}\n"], [4202560, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4202576, ".opendir", "// attributes: thunk\nDIR *opendir(const char *name)\n{\n  return opendir(name);\n}\n"], [4202592, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4202608, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4202624, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4202640, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4202656, ".chdir", "// attributes: thunk\nint chdir(const char *path)\n{\n  return chdir(path);\n}\n"], [4202672, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4202688, ".getuid", "// attributes: thunk\n__uid_t getuid(void)\n{\n  return getuid();\n}\n"], [4202704, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4202720, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4202736, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4202752, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4202768, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4202784, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4202800, ".symlink", "// attributes: thunk\nint symlink(const char *from, const char *to)\n{\n  return symlink(from, to);\n}\n"], [4202816, ".snprintf", "// attributes: thunk\nint snprintf(char *s, size_t maxlen, const char *format, ...)\n{\n  return snprintf(s, maxlen, format);\n}\n"], [4202832, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4202848, ".ftruncate", "// attributes: thunk\nint ftruncate(int fd, __off_t length)\n{\n  return ftruncate(fd, length);\n}\n"], [4202864, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4202880, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4202896, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4202912, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4202928, ".geteuid", "// attributes: thunk\n__uid_t geteuid(void)\n{\n  return geteuid();\n}\n"], [4202944, ".ioctl", "// attributes: thunk\nint ioctl(int fd, unsigned __int64 request, ...)\n{\n  return ioctl(fd, request);\n}\n"], [4202960, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4202976, ".closedir", "// attributes: thunk\nint closedir(DIR *dirp)\n{\n  return closedir(dirp);\n}\n"], [4202992, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4203008, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4203024, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4203040, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4203056, ".utimes", "// attributes: thunk\nint utimes(const char *file, const struct timeval tvp[2])\n{\n  return utimes(file, tvp);\n}\n"], [4203072, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4203088, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4203104, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4203120, ".signal", "// attributes: thunk\n__sighandler_t signal(int sig, __sighandler_t handler)\n{\n  return signal(sig, handler);\n}\n"], [4203136, ".readlinkat", "// attributes: thunk\nssize_t readlinkat(int fd, const char *path, char *buf, size_t len)\n{\n  return readlinkat(fd, path, buf, len);\n}\n"], [4203152, ".dirfd", "// attributes: thunk\nint dirfd(DIR *dirp)\n{\n  return dirfd(dirp);\n}\n"], [4203168, ".fputc_unlocked", "// attributes: thunk\nint fputc_unlocked(int c, FILE *stream)\n{\n  return fputc_unlocked(c, stream);\n}\n"], [4203184, ".getpwnam", "// attributes: thunk\nstruct passwd *getpwnam(const char *name)\n{\n  return getpwnam(name);\n}\n"], [4203200, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4203216, ".rpmatch", "// attributes: thunk\nint rpmatch(const char *response)\n{\n  return rpmatch(response);\n}\n"], [4203232, ".mkfifo", "// attributes: thunk\nint mkfifo(const char *path, __mode_t mode)\n{\n  return mkfifo(path, mode);\n}\n"], [4203248, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4203264, ".umask", "// attributes: thunk\n__mode_t umask(__mode_t mask)\n{\n  return umask(mask);\n}\n"], [4203280, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4203296, ".getgrnam", "// attributes: thunk\nstruct group *getgrnam(const char *name)\n{\n  return getgrnam(name);\n}\n"], [4203312, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4203328, ".__xmknod", "// attributes: thunk\nint __xmknod(int ver, const char *path, __mode_t mode, __dev_t *dev)\n{\n  return _xmknod(ver, path, mode, dev);\n}\n"], [4203344, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4203360, ".getgid", "// attributes: thunk\n__gid_t getgid(void)\n{\n  return getgid();\n}\n"], [4203376, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4203392, ".readdir", "// attributes: thunk\nstruct dirent *readdir(DIR *dirp)\n{\n  return readdir(dirp);\n}\n"], [4203408, ".putc_unlocked", "// attributes: thunk\nint putc_unlocked(int c, FILE *stream)\n{\n  return putc_unlocked(c, stream);\n}\n"], [4203424, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4203440, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4203456, ".nl_langinfo", "// attributes: thunk\nchar *nl_langinfo(nl_item item)\n{\n  return nl_langinfo(item);\n}\n"], [4203472, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4203488, ".endpwent", "// attributes: thunk\nvoid endpwent(void)\n{\n  endpwent();\n}\n"], [4203504, ".lchown", "// attributes: thunk\nint lchown(const char *file, __uid_t owner, __gid_t group)\n{\n  return lchown(file, owner, group);\n}\n"], [4203520, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4203536, ".fchdir", "// attributes: thunk\nint fchdir(int fd)\n{\n  return fchdir(fd);\n}\n"], [4203552, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4203568, ".chown", "// attributes: thunk\nint chown(const char *file, __uid_t owner, __gid_t group)\n{\n  return chown(file, owner, group);\n}\n"], [4203584, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4203600, ".stpncpy", "// attributes: thunk\nchar *stpncpy(char *dest, const char *src, size_t n)\n{\n  return stpncpy(dest, src, n);\n}\n"], [4203616, ".linkat", "// attributes: thunk\nint linkat(int fromfd, const char *from, int tofd, const char *to, int flags)\n{\n  return linkat(fromfd, from, tofd, to, flags);\n}\n"], [4203632, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4203648, ".fchmod", "// attributes: thunk\nint fchmod(int fd, __mode_t mode)\n{\n  return fchmod(fd, mode);\n}\n"], [4203664, ".chmod", "// attributes: thunk\nint chmod(const char *file, __mode_t mode)\n{\n  return chmod(file, mode);\n}\n"], [4203680, ".mempcpy", "// attributes: thunk\nvoid *mempcpy(void *dest, const void *src, size_t n)\n{\n  return mempcpy(dest, src, n);\n}\n"], [4203696, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4203712, ".waitpid", "// attributes: thunk\n__pid_t waitpid(__pid_t pid, int *stat_loc, int options)\n{\n  return waitpid(pid, stat_loc, options);\n}\n"], [4203728, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4203744, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4203760, ".fchown", "// attributes: thunk\nint fchown(int fd, __uid_t owner, __gid_t group)\n{\n  return fchown(fd, owner, group);\n}\n"], [4203776, ".rename", "// attributes: thunk\nint rename(const char *old, const char *a2)\n{\n  return rename(old, a2);\n}\n"], [4203792, ".fdopendir", "// attributes: thunk\nDIR *fdopendir(int fd)\n{\n  return fdopendir(fd);\n}\n"], [4203808, ".futimens", "// attributes: thunk\nint futimens(int fd, const struct timespec times[2])\n{\n  return futimens(fd, times);\n}\n"], [4203824, ".euidaccess", "// attributes: thunk\nint euidaccess(const char *name, int type)\n{\n  return euidaccess(name, type);\n}\n"], [4203840, ".strtoul", "// attributes: thunk\nunsigned __int64 strtoul(const char *nptr, char **endptr, int base)\n{\n  return strtoul(nptr, endptr, base);\n}\n"], [4203856, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4203872, ".getline", "// attributes: thunk\n__ssize_t getline(char **lineptr, size_t *n, FILE *stream)\n{\n  return getline(lineptr, n, stream);\n}\n"], [4203888, ".getpagesize", "// attributes: thunk\nint getpagesize(void)\n{\n  return getpagesize();\n}\n"], [4203904, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4203920, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4203936, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4203952, ".execlp", "// attributes: thunk\nint execlp(const char *file, const char *arg, ...)\n{\n  return execlp(file, arg);\n}\n"], [4203968, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4203984, ".fork", "// attributes: thunk\n__pid_t fork(void)\n{\n  return fork();\n}\n"], [4204000, ".futimesat", "// attributes: thunk\nint futimesat(int fd, const char *file, const struct timeval tvp[2])\n{\n  return futimesat(fd, file, tvp);\n}\n"], [4204016, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4204032, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4204080, "sub_402630", "__int64 sub_402630()\n{\n  __int64 result; // rax\n\n  result = 6423591LL - (_QWORD)&program_invocation_short_name;\n  if ( (unsigned __int64)(6423591LL - (_QWORD)&program_invocation_short_name) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4204128, "sub_402660", "__int64 sub_402660()\n{\n  return 0LL;\n}\n"], [4204192, "sub_4026A0", "__int64 sub_4026A0()\n{\n  __int64 result; // rax\n\n  if ( !byte_620478 )\n  {\n    result = sub_402630();\n    byte_620478 = 1;\n  }\n  return result;\n}\n"], [4204224, "sub_4026C0", "__int64 sub_4026C0()\n{\n  return sub_402660();\n}\n"], [4204269, "sub_4026ED", "void sub_4026ED()\n{\n  ;\n}\n"], [4204279, "sub_4026F7", "__int64 sub_4026F7()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4204309, "sub_402715", "__int64 sub_402715()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4204346, "sub_40273A", "__int64 sub_40273A()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4204380, "sub_40275C", "__int64 sub_40275C()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4204414, "sub_40277E", "int sub_40277E()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_40B393(s);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_40B393(s);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_40B393(s);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4204680, "sub_402888", "_DWORD *__fastcall sub_402888(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = 0;\n  return result;\n}\n"], [4204700, "sub_40289C", "__int64 __fastcall sub_40289C(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4204722, "sub_4028B2", "__int64 __fastcall sub_4028B2(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4204744, "sub_4028C8", "__int64 __fastcall sub_4028C8(unsigned int a1, unsigned int a2)\n{\n  __int64 n; // [rsp+18h] [rbp-8h]\n\n  while ( 1 )\n  {\n    n = sub_40BB0B(a1, &unk_6214C0, 4096LL);\n    if ( !n )\n      break;\n    if ( sub_40BB0B(a2, &unk_6204C0, 4096LL) != n )\n      return 0LL;\n    if ( memcmp(&unk_6214C0, &unk_6204C0, n) )\n      return 0LL;\n  }\n  return 1LL;\n}\n"], [4204867, "sub_402943", "bool __fastcall sub_402943(int a1)\n{\n  return (a1 & 0xFFFF0E00) != 0;\n}\n"], [4204896, "sub_402960", "_BOOL8 __fastcall sub_402960(char *a1, char *a2, __int64 a3)\n{\n  _BOOL8 result; // rax\n  __uid_t v4; // ebx\n  __uid_t v5; // eax\n  __gid_t v6; // ebx\n  __gid_t v7; // eax\n  bool v9; // [rsp+26h] [rbp-14Ah]\n  char v10; // [rsp+27h] [rbp-149h]\n  int fd; // [rsp+28h] [rbp-148h]\n  int v12; // [rsp+2Ch] [rbp-144h]\n  char *s1; // [rsp+30h] [rbp-140h] BYREF\n  char *s2; // [rsp+38h] [rbp-138h] BYREF\n  struct stat stat_buf; // [rsp+40h] [rbp-130h] BYREF\n  struct stat v16; // [rsp+D0h] [rbp-A0h] BYREF\n\n  if ( sub_402943(mode) )\n    return 1LL;\n  if ( (unsigned int)sub_419BE0(a1, &stat_buf) )\n    return 1LL;\n  if ( (unsigned int)sub_419BE0(a2, &v16) )\n    return 1LL;\n  if ( (stat_buf.st_mode & 0xF000) != 0x8000\n    || (v16.st_mode & 0xF000) != 0x8000\n    || sub_402943(stat_buf.st_mode)\n    || sub_402943(v16.st_mode) )\n  {\n    return 1LL;\n  }\n  if ( stat_buf.st_size != v16.st_size || (v16.st_mode & 0xFFF) != mode )\n    return 1LL;\n  v4 = v16.st_uid;\n  v5 = owner == -1 ? getuid() : owner;\n  if ( v4 != v5 )\n    return 1LL;\n  v6 = v16.st_gid;\n  v7 = group == -1 ? getgid() : group;\n  if ( v6 != v7 )\n    return 1LL;\n  if ( !dword_620480 || !*(_BYTE *)(a3 + 34) )\n    goto LABEL_31;\n  s1 = 0LL;\n  s2 = 0LL;\n  if ( (unsigned int)sub_40273A(a1, &s1) == -1 )\n    return 1LL;\n  if ( (unsigned int)sub_40273A(a2, &s2) == -1 )\n  {\n    sub_4026ED();\n    return 1LL;\n  }\n  v9 = strcmp(s1, s2) == 0;\n  sub_4026ED();\n  sub_4026ED();\n  if ( !v9 )\n    return 1LL;\nLABEL_31:\n  fd = open(a1, 0);\n  if ( fd < 0 )\n    return 1LL;\n  v12 = open(a2, 0);\n  if ( v12 >= 0 )\n  {\n    v10 = sub_4028C8(fd, v12);\n    close(fd);\n    close(v12);\n    result = v10 == 0;\n  }\n  else\n  {\n    close(fd);\n    result = 1LL;\n  }\n  return result;\n}\n"], [4205662, "sub_402C5E", "__int64 __fastcall sub_402C5E(__int64 a1)\n{\n  __int64 result; // rax\n\n  sub_409B9C(a1);\n  *(_BYTE *)(a1 + 20) = 1;\n  *(_DWORD *)(a1 + 48) = 0;\n  *(_DWORD *)(a1 + 4) = 4;\n  *(_BYTE *)(a1 + 21) = 1;\n  *(_BYTE *)(a1 + 22) = 0;\n  *(_BYTE *)(a1 + 23) = 0;\n  *(_DWORD *)(a1 + 8) = 4;\n  *(_BYTE *)(a1 + 24) = 0;\n  *(_BYTE *)(a1 + 27) = 0;\n  *(_BYTE *)(a1 + 28) = 0;\n  *(_BYTE *)(a1 + 31) = 0;\n  *(_BYTE *)(a1 + 29) = 0;\n  *(_BYTE *)(a1 + 30) = 0;\n  *(_BYTE *)(a1 + 38) = 0;\n  *(_BYTE *)(a1 + 32) = 1;\n  *(_BYTE *)(a1 + 33) = 0;\n  *(_BYTE *)(a1 + 35) = 0;\n  *(_BYTE *)(a1 + 37) = 0;\n  *(_BYTE *)(a1 + 39) = 0;\n  *(_DWORD *)(a1 + 12) = 2;\n  *(_BYTE *)(a1 + 41) = 0;\n  *(_DWORD *)a1 = 0;\n  *(_BYTE *)(a1 + 40) = 1;\n  *(_DWORD *)(a1 + 16) = 384;\n  *(_BYTE *)(a1 + 44) = 0;\n  *(_BYTE *)(a1 + 45) = 0;\n  *(_BYTE *)(a1 + 42) = 0;\n  *(_BYTE *)(a1 + 34) = 0;\n  *(_BYTE *)(a1 + 36) = 0;\n  *(_BYTE *)(a1 + 43) = 0;\n  *(_QWORD *)(a1 + 56) = 0LL;\n  result = a1;\n  *(_QWORD *)(a1 + 64) = 0LL;\n  return result;\n}\n"], [4205969, "sub_402D91", "void __fastcall sub_402D91(char *a1)\n{\n  char *v1; // r13\n  __int64 v2; // r12\n  char *v3; // rbx\n  int *v4; // rax\n  char *s1; // [rsp+10h] [rbp-D0h] BYREF\n  _BYTE *i; // [rsp+18h] [rbp-C8h]\n  char *src; // [rsp+20h] [rbp-C0h]\n  char *dest; // [rsp+28h] [rbp-B8h]\n  struct stat stat_buf; // [rsp+30h] [rbp-B0h] BYREF\n\n  s1 = 0LL;\n  if ( dword_620480 == 1 && !(unsigned int)sub_419BE0(a1, &stat_buf) )\n  {\n    if ( byte_6203B8 )\n    {\n      if ( *a1 == 47 )\n      {\n        for ( i = a1 + 1; *i == 47; ++i )\n          ;\n        src = i - 1;\n        if ( *i )\n        {\n          do\n            ++i;\n          while ( *i && *i != 47 );\n          dest = (char *)malloc(i - src + 2);\n          if ( dest )\n          {\n            *(_WORD *)stpncpy(dest, src, i - src) = 47;\n            free(dest);\n          }\n        }\n      }\n    }\n    byte_6203B8 = 0;\n    if ( (unsigned int)sub_402715(a1, stat_buf.st_mode, &s1) || !strcmp(s1, \"<<none>>\") )\n    {\n      if ( !s1 )\n        return;\n    }\n    else if ( (int)sub_40275C(a1, s1) < 0 && *__errno_location() != 95 )\n    {\n      v1 = s1;\n      v2 = sub_40F9AB(a1);\n      v3 = gettext(\"warning: %s: failed to change context to %s\");\n      v4 = __errno_location();\n      error(0, *v4, v3, v2, v1);\n    }\n    sub_4026ED();\n  }\n}\n"], [4206561, "sub_402FE1", "_BOOL8 __fastcall sub_402FE1(char *a1)\n{\n  bool v1; // al\n  int v2; // eax\n  bool v3; // al\n  __int64 v4; // rbx\n  char *v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  bool v9; // [rsp+1Ah] [rbp-B6h]\n  bool v10; // [rsp+1Bh] [rbp-B5h]\n  int errnum; // [rsp+1Ch] [rbp-B4h]\n  char *s; // [rsp+20h] [rbp-B0h]\n  size_t v13; // [rsp+28h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+30h] [rbp-A0h] BYREF\n\n  s = (char *)sub_40B393(a1);\n  v13 = strlen(s);\n  v1 = !v13 || s[v13 - 1] == 47;\n  v9 = v1;\n  if ( (unsigned int)sub_419BC0(a1, &stat_buf) )\n    v2 = *__errno_location();\n  else\n    v2 = 0;\n  errnum = v2;\n  v3 = !v2 && (stat_buf.st_mode & 0xF000) == 0x4000;\n  v10 = v3;\n  if ( errnum && errnum != 2 )\n  {\n    v4 = sub_40E392(a1);\n    v5 = gettext(\"accessing %s\");\n    error(1, errnum, v5, v4);\n  }\n  if ( v10 < v9 )\n  {\n    v6 = sub_40E392(a1);\n    v7 = gettext(\"target %s is not a directory\");\n    error(1, errnum, v7, v6);\n  }\n  return v10;\n}\n"], [4206955, "sub_40316B", "__int64 __fastcall sub_40316B(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  int v3; // ebx\n  unsigned int v4; // eax\n  int v5; // er8\n  int v6; // er9\n\n  result = *(unsigned __int8 *)(a2 + 43);\n  if ( (_BYTE)result )\n  {\n    v3 = sub_40E392(a1);\n    v4 = (unsigned int)gettext(\"creating directory %s\");\n    result = sub_4047EB((_DWORD)stdout, v4, v3, v4, v5, v6, a2);\n  }\n  return result;\n}\n"], [4207053, "sub_4031CD", "__int64 __fastcall sub_4031CD(__int64 a1, const char *a2, __int64 a3)\n{\n  unsigned int v5; // [rsp+2Ch] [rbp-4h]\n\n  v5 = mkdir(a2, 0x1EDu);\n  if ( !v5 )\n    sub_40316B(a1, a3);\n  return v5;\n}\n"], [4207123, "sub_403213", "_BOOL8 __fastcall sub_403213(int a1, int a2, int a3)\n{\n  return (unsigned __int8)sub_40D817(\n                            a1,\n                            a2,\n                            (unsigned int)sub_4031CD,\n                            a3,\n                            dword_6203A8,\n                            (unsigned int)sub_40316B,\n                            dword_6203AC,\n                            owner,\n                            group,\n                            0) == 0;\n}\n"], [4207244, "sub_40328C", "__int64 __fastcall sub_40328C(char *a1, char *a2, __int64 a3)\n{\n  __int64 result; // rax\n  char v5; // [rsp+2Fh] [rbp-1h] BYREF\n\n  if ( byte_6204A4 && !sub_402960(a1, a2, a3) )\n    result = 1LL;\n  else\n    result = sub_409AEE(a1, a2, 0LL, a3, &v5, 0LL);\n  return result;\n}\n"], [4207355, "sub_4032FB", "__int64 __fastcall sub_4032FB(char *a1)\n{\n  __int64 v1; // r12\n  char *v2; // rbx\n  int *v3; // rax\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  unsigned __int8 v8; // [rsp+1Fh] [rbp-11h]\n\n  v8 = 0;\n  if ( owner == -1 && group == -1 || !lchown(a1, owner, group) )\n  {\n    if ( chmod(a1, mode) )\n    {\n      v4 = sub_40E392(a1);\n      v5 = gettext(\"cannot change permissions of %s\");\n      v6 = __errno_location();\n      error(0, *v6, v5, v4);\n    }\n    else\n    {\n      v8 = 1;\n    }\n  }\n  else\n  {\n    v1 = sub_40E392(a1);\n    v2 = gettext(\"cannot change ownership of %s\");\n    v3 = __errno_location();\n    error(0, *v3, v2, v1);\n  }\n  if ( byte_6203A0 )\n    sub_402D91(a1);\n  return v8;\n}\n"], [4207610, "sub_4033FA", "__int64 __fastcall sub_4033FA(__int64 a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  __int64 v3; // rdx\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  __int64 v8[6]; // [rsp+10h] [rbp-30h] BYREF\n\n  v8[0] = sub_40289C(a1);\n  v8[1] = v2;\n  v8[2] = sub_4028B2(a1);\n  v8[3] = v3;\n  if ( !(unsigned int)sub_411A21(a2, v8) )\n    return 1LL;\n  v4 = sub_40E392(a2);\n  v5 = gettext(\"cannot set time stamps for %s\");\n  v6 = __errno_location();\n  error(0, *v6, v5, v4);\n  return 0LL;\n}\n"], [4207771, "sub_40349B", "void __fastcall sub_40349B(__int64 a1)\n{\n  __pid_t v1; // eax\n  char *v2; // rbx\n  int *v3; // rax\n  char *v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  char *v7; // rbx\n  int *v8; // rax\n  char *v9; // rax\n  int stat_loc; // [rsp+28h] [rbp-18h] BYREF\n  __pid_t pid; // [rsp+2Ch] [rbp-14h]\n\n  v1 = fork();\n  pid = v1;\n  if ( v1 == -1 )\n  {\n    v2 = gettext(\"fork system call failed\");\n    v3 = __errno_location();\n    error(1, *v3, v2);\n  }\n  else if ( v1 )\n  {\n    if ( waitpid(pid, &stat_loc, 0) >= 0 )\n    {\n      if ( (stat_loc & 0x7F) != 0 || (stat_loc & 0xFF00) >> 8 )\n      {\n        v9 = gettext(\"strip process terminated abnormally\");\n        error(1, 0, v9);\n      }\n    }\n    else\n    {\n      v7 = gettext(\"waiting for strip\");\n      v8 = __errno_location();\n      error(1, *v8, v7);\n    }\n  }\n  else\n  {\n    execlp(arg, arg, a1, 0LL);\n    v4 = arg;\n    v5 = gettext(\"cannot run %s\");\n    v6 = __errno_location();\n    error(1, *v6, v5, v4);\n  }\n}\n"], [4208095, "sub_4035DF", "void sub_4035DF()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  __int64 v2; // rbx\n  char *v3; // rax\n  unsigned __int64 v4; // [rsp+8h] [rbp-28h] BYREF\n  struct passwd *v5; // [rsp+10h] [rbp-20h]\n  struct group *v6; // [rsp+18h] [rbp-18h]\n\n  if ( name )\n  {\n    v5 = getpwnam(name);\n    if ( v5 )\n    {\n      owner = v5->pw_uid;\n    }\n    else\n    {\n      if ( (unsigned int)sub_412934(name, 0LL, 0LL, &v4, 0LL) || v4 > 0xFFFFFFFF )\n      {\n        v0 = sub_40E392(name);\n        v1 = gettext(\"invalid user %s\");\n        error(1, 0, v1, v0);\n      }\n      owner = v4;\n    }\n    endpwent();\n  }\n  else\n  {\n    owner = -1;\n  }\n  if ( qword_620498 )\n  {\n    v6 = getgrnam(qword_620498);\n    if ( v6 )\n    {\n      group = v6->gr_gid;\n    }\n    else\n    {\n      if ( (unsigned int)sub_412934(qword_620498, 0LL, 0LL, &v4, 0LL) || v4 > 0xFFFFFFFF )\n      {\n        v2 = sub_40E392(qword_620498);\n        v3 = gettext(\"invalid group %s\");\n        error(1, 0, v3, v2);\n      }\n      group = v4;\n    }\n    endgrent();\n  }\n  else\n  {\n    group = -1;\n  }\n}\n"], [4208499, "sub_403773", "void __fastcall __noreturn sub_403773(int a1)\n{\n  char *v1; // rbx\n  char *v2; // rax\n  char *v3; // r14\n  char *v4; // r13\n  char *v5; // r12\n  char *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n  FILE *v22; // rbx\n  char *v23; // rax\n  FILE *v24; // rbx\n  char *v25; // rax\n  FILE *v26; // rbx\n  char *v27; // rax\n\n  if ( a1 )\n  {\n    v1 = s;\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = s;\n    v4 = s;\n    v5 = s;\n    v6 = s;\n    v7 = gettext(\n           \"Usage: %s [OPTION]... [-T] SOURCE DEST\\n\"\n           \"  or:  %s [OPTION]... SOURCE... DIRECTORY\\n\"\n           \"  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\"\n           \"  or:  %s [OPTION]... -d DIRECTORY...\\n\");\n    printf(v7, v6, v5, v4, v3);\n    v8 = stdout;\n    v9 = gettext(\n           \"\\n\"\n           \"This install program copies files (often just compiled) into destination\\n\"\n           \"locations you choose.  If you want to download and install a ready-to-use\\n\"\n           \"package on a GNU/Linux system, you should instead be using a package manager\\n\"\n           \"like yum(1) or apt-get(1).\\n\"\n           \"\\n\"\n           \"In the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\\n\"\n           \"the existing DIRECTORY, while setting permission modes and owner/group.\\n\"\n           \"In the 4th form, create all components of the given DIRECTORY(ies).\\n\"\n           \"\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"      --backup[=CONTROL]  make a backup of each existing destination file\\n\"\n            \"  -b                  like --backup but does not accept an argument\\n\"\n            \"  -c                  (ignored)\\n\"\n            \"  -C, --compare       compare each pair of source and destination files, and\\n\"\n            \"                        in some cases, do not modify the destination at all\\n\"\n            \"  -d, --directory     treat all arguments as directory names; create all\\n\"\n            \"                        components of the specified directories\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\n            \"  -D                  create all leading components of DEST except the last,\\n\"\n            \"                        then copy SOURCE to DEST\\n\"\n            \"  -g, --group=GROUP   set group ownership, instead of process' current group\\n\"\n            \"  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\\n\"\n            \"  -o, --owner=OWNER   set ownership (super-user only)\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\\n\"\n            \"                        to corresponding destination files\\n\"\n            \"  -s, --strip         strip symbol tables\\n\"\n            \"      --strip-program=PROGRAM  program used to strip binaries\\n\"\n            \"  -S, --suffix=SUFFIX  override the usual backup suffix\\n\"\n            \"  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n\"\n            \"  -T, --no-target-directory  treat DEST as a normal file\\n\"\n            \"  -v, --verbose       print the name of each directory as it is created\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"      --preserve-context  preserve SELinux security context\\n\"\n            \"  -Z, --context=CONTEXT  set SELinux security context of files and directories\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v21, v20);\n    v22 = stdout;\n    v23 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v23, v22);\n    v24 = stdout;\n    v25 = gettext(\n            \"\\n\"\n            \"The backup suffix is `~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\n\"\n            \"The version control method may be selected via the --backup option or through\\n\"\n            \"the VERSION_CONTROL environment variable.  Here are the values:\\n\"\n            \"\\n\");\n    fputs_unlocked(v25, v24);\n    v26 = stdout;\n    v27 = gettext(\n            \"  none, off       never make backups (even if --backup is given)\\n\"\n            \"  numbered, t     make numbered backups\\n\"\n            \"  existing, nil   numbered if numbered backups exist, simple otherwise\\n\"\n            \"  simple, never   always make simple backups\\n\");\n    fputs_unlocked(v27, v26);\n    sub_40277E();\n  }\n  exit(a1);\n}\n"], [4208932, "sub_403924", "__int64 __fastcall sub_403924(char *a1, char *a2, __int64 a3)\n{\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  __int64 result; // rax\n  struct stat stat_buf; // [rsp+20h] [rbp-A0h] BYREF\n\n  if ( *(_BYTE *)(a3 + 30) && (unsigned int)sub_419BC0(a1, &stat_buf) )\n  {\n    v3 = sub_40E392(a1);\n    v4 = gettext(\"cannot stat %s\");\n    v5 = __errno_location();\n    error(0, *v5, v4, v3);\n    result = 0LL;\n  }\n  else if ( (unsigned __int8)sub_40328C(a1, a2, a3) != 1 )\n  {\n    result = 0LL;\n  }\n  else\n  {\n    if ( byte_6204A5 )\n      sub_40349B((__int64)a2);\n    if ( *(_BYTE *)(a3 + 30)\n      && (byte_6204A5 || (stat_buf.st_mode & 0xF000) != 0x8000)\n      && (unsigned __int8)sub_4033FA((__int64)&stat_buf, (__int64)a2) != 1 )\n    {\n      result = 0LL;\n    }\n    else\n    {\n      result = sub_4032FB(a2);\n    }\n  }\n  return result;\n}\n"], [4209264, "sub_403A70", "_BOOL8 __fastcall sub_403A70(char *a1, char *a2, __int64 a3)\n{\n  bool v3; // al\n  char *v4; // rbx\n  int *v5; // rax\n  _BOOL8 result; // rax\n  char *v7; // rax\n  bool v8; // al\n  bool v10; // [rsp+23h] [rbp-2Dh]\n  unsigned int v11; // [rsp+24h] [rbp-2Ch]\n  int v12; // [rsp+28h] [rbp-28h]\n  int errnum; // [rsp+2Ch] [rbp-24h]\n  _DWORD v14[8]; // [rsp+30h] [rbp-20h] BYREF\n\n  v3 = *a1 != 47 || *a2 != 47;\n  v10 = v3;\n  v11 = 0;\n  sub_402888(v14);\n  if ( !v10 )\n    sub_410498(v14);\n  if ( sub_40D642(a2, v14, sub_4031CD, a3) == -1 )\n  {\n    v4 = gettext(\"cannot create directory %s\");\n    v5 = __errno_location();\n    error(0, *v5, v4, a2);\n    v11 = 1;\n  }\n  if ( !v10 )\n    goto LABEL_22;\n  v12 = sub_410338(v14, v11);\n  errnum = *__errno_location();\n  sub_410498(v14);\n  if ( v12 > 0 )\n    return 0LL;\n  if ( v12 >= 0 || v11 )\n  {\nLABEL_22:\n    v8 = !v11 && (unsigned __int8)sub_403924(a1, a2, a3);\n    result = v8;\n  }\n  else\n  {\n    v7 = gettext(\"cannot create directory %s\");\n    error(0, errnum, v7, a2);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4209628, "sub_403BDC", "__int64 __fastcall sub_403BDC(char *a1, __int64 a2, __int64 a3)\n{\n  unsigned __int8 v5; // [rsp+2Fh] [rbp-11h]\n  __int64 v6; // [rsp+30h] [rbp-10h]\n  char *ptr; // [rsp+38h] [rbp-8h]\n\n  v6 = sub_40B393(a1);\n  ptr = (char *)sub_40B8EC(a2, v6, 0LL);\n  v5 = sub_403924(a1, ptr, a3);\n  free(ptr);\n  return v5;\n}\n"], [4209736, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  __int64 v4; // r12\n  char *v5; // rbx\n  int *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  char *v9; // rax\n  char *v10; // rax\n  char *v11; // rax\n  char *v12; // rax\n  __int64 v13; // rbx\n  char *v14; // rax\n  char *v15; // rax\n  int v16; // eax\n  __int64 v17; // r12\n  char *v18; // rbx\n  int *v19; // rax\n  int v20; // eax\n  char *v21; // rax\n  __int64 v22; // rbx\n  char *v23; // rax\n  char *v24; // rax\n  __int64 v25; // rbx\n  char *v26; // rax\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // rbx\n  char *v30; // rax\n  char *v31; // rax\n  char *v32; // rax\n  char *v33; // rax\n  char *v34; // rax\n  char v35; // al\n  char v36; // [rsp+14h] [rbp-13Ch]\n  char v37; // [rsp+15h] [rbp-13Bh]\n  char v38; // [rsp+16h] [rbp-13Ah]\n  char v39; // [rsp+17h] [rbp-139h]\n  int status; // [rsp+18h] [rbp-138h]\n  int statusa; // [rsp+18h] [rbp-138h]\n  int v42; // [rsp+1Ch] [rbp-134h]\n  int i; // [rsp+20h] [rbp-130h]\n  int v44; // [rsp+24h] [rbp-12Ch]\n  char *v45; // [rsp+28h] [rbp-128h]\n  char *v46; // [rsp+30h] [rbp-120h]\n  char *v47; // [rsp+38h] [rbp-118h]\n  char *v48; // [rsp+40h] [rbp-110h]\n  char *v49; // [rsp+48h] [rbp-108h]\n  char **v50; // [rsp+50h] [rbp-100h]\n  void *ptr; // [rsp+58h] [rbp-F8h]\n  int v52[7]; // [rsp+60h] [rbp-F0h] BYREF\n  char v53; // [rsp+7Eh] [rbp-D2h]\n  char v54; // [rsp+82h] [rbp-CEh]\n  char v55; // [rsp+8Bh] [rbp-C5h]\n  struct stat stat_buf; // [rsp+B0h] [rbp-A0h] BYREF\n\n  status = 0;\n  v45 = 0LL;\n  v36 = 0;\n  v47 = 0LL;\n  v37 = 0;\n  v48 = 0LL;\n  v38 = 0;\n  v39 = 0;\n  v49 = 0LL;\n  dword_620480 = 0;\n  sub_40E287(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_419BA0(sub_40AF70);\n  sub_402C5E((__int64)v52);\n  name = 0LL;\n  qword_620498 = 0LL;\n  byte_6204A5 = 0;\n  byte_6204A6 = 0;\n  umask(0);\n  v46 = getenv(\"SIMPLE_BACKUP_SUFFIX\");\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v44 = getopt_long(a1, a2, \"bcCsDdg:m:o:pt:TvS:Z:\", &longopts, 0LL);\n        if ( v44 == -1 )\n        {\n          if ( byte_6204A6 && byte_6204A5 )\n          {\n            v11 = gettext(\"the strip option may not be used when installing a directory\");\n            error(1, 0, v11);\n          }\n          if ( byte_6204A6 && v48 )\n          {\n            v12 = gettext(\"target directory not allowed when installing a directory\");\n            error(1, 0, v12);\n          }\n          if ( v54 && v49 )\n          {\n            v13 = sub_40E392(v49);\n            v14 = gettext(\"cannot force target context to %s and preserve it\");\n            error(1, 0, v14, v13);\n          }\n          if ( v46 )\n            src = (char *)sub_412832(v46);\n          if ( v36 )\n          {\n            v15 = gettext(\"backup type\");\n            v16 = sub_40AF0B(v15, v47);\n          }\n          else\n          {\n            v16 = 0;\n          }\n          v52[0] = v16;\n          if ( v49 && (int)sub_4026F7(v49) < 0 )\n          {\n            v17 = sub_40E392(v49);\n            v18 = gettext(\"failed to set default file creation context to %s\");\n            v19 = __errno_location();\n            error(1, *v19, v18, v17);\n          }\n          v42 = a1 - optind;\n          v50 = &a2[optind];\n          v20 = byte_6204A6 != 1 && !v48;\n          if ( v20 >= v42 )\n          {\n            if ( v42 > 0 )\n            {\n              v22 = sub_40E392(*v50);\n              v23 = gettext(\"missing destination file operand after %s\");\n              error(0, 0, v23, v22);\n            }\n            else\n            {\n              v21 = gettext(\"missing file operand\");\n              error(0, 0, v21);\n            }\n            sub_403773(1);\n          }\n          if ( v38 )\n          {\n            if ( v48 )\n            {\n              v24 = gettext(\"cannot combine --target-directory (-t) and --no-target-directory (-T)\");\n              error(1, 0, v24);\n            }\n            if ( v42 > 2 )\n            {\n              v25 = sub_40E392(v50[2]);\n              v26 = gettext(\"extra operand %s\");\n              error(0, 0, v26, v25);\n              sub_403773(1);\n            }\n          }\n          else if ( byte_6204A6 != 1 && !v48 )\n          {\n            if ( v42 > 1 && sub_402FE1(v50[v42 - 1]) )\n            {\n              v48 = v50[--v42];\n            }\n            else if ( v42 > 2 )\n            {\n              v27 = sub_40E392(v50[v42 - 1]);\n              v28 = gettext(\"target %s is not a directory\");\n              error(1, 0, v28, v27);\n            }\n          }\n          if ( v45 )\n          {\n            ptr = (void *)sub_40DD50(v45);\n            if ( !ptr )\n            {\n              v29 = sub_40E392(v45);\n              v30 = gettext(\"invalid mode %s\");\n              error(1, 0, v30, v29);\n            }\n            mode = sub_40E0EC(0LL, 0LL, 0LL, ptr, 0LL);\n            dword_6203A8 = sub_40E0EC(0LL, 1LL, 0LL, ptr, &dword_6203AC);\n            free(ptr);\n          }\n          if ( v39 && byte_6204A5 != 1 )\n          {\n            v31 = gettext(\"WARNING: ignoring --strip-program option as -s option was not specified\");\n            error(0, 0, v31);\n          }\n          if ( byte_6204A4 && v53 )\n          {\n            v32 = gettext(\"options --compare (-C) and --preserve-timestamps are mutually exclusive\");\n            error(0, 0, v32);\n            sub_403773(1);\n          }\n          if ( byte_6204A4 && byte_6204A5 )\n          {\n            v33 = gettext(\"options --compare (-C) and --strip are mutually exclusive\");\n            error(0, 0, v33);\n            sub_403773(1);\n          }\n          if ( byte_6204A4 && sub_402943(mode) )\n          {\n            v34 = gettext(\"the --compare (-C) option is ignored when you specify a mode with non-permission bits\");\n            error(0, 0, v34);\n          }\n          sub_4035DF();\n          if ( byte_6204A6 )\n          {\n            statusa = sub_41054D((unsigned int)v42, v50, sub_403213, v52);\n            exit(statusa);\n          }\n          sub_409E92();\n          if ( v48 )\n          {\n            sub_4070B9(v52);\n            for ( i = 0; i < v42; ++i )\n            {\n              if ( (unsigned __int8)sub_403BDC(v50[i], (__int64)v48, (__int64)v52) != 1 )\n                status = 1;\n            }\n          }\n          else\n          {\n            if ( v37 )\n              v35 = !sub_403A70(*v50, v50[1], (__int64)v52);\n            else\n              v35 = sub_403924(*v50, v50[1], (__int64)v52) ^ 1;\n            if ( v35 )\n              exit(1);\n          }\n          exit(status);\n        }\n        if ( v44 != 100 )\n          break;\n        byte_6204A6 = 1;\n      }\n      if ( v44 <= 100 )\n        break;\n      if ( v44 == 115 )\n      {\n        byte_6204A5 = 1;\n        signal(17, 0LL);\n      }\n      else if ( v44 > 115 )\n      {\n        if ( v44 == 118 )\n        {\n          v55 = 1;\n        }\n        else if ( v44 > 118 )\n        {\n          if ( v44 == 128 )\n          {\n            if ( dword_620480 )\n            {\n              v54 = 1;\n              byte_6203A0 = 0;\n            }\n            else\n            {\n              v9 = gettext(\"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\");\n              error(0, 0, v9);\n            }\n          }\n          else\n          {\n            if ( v44 != 129 )\n              goto LABEL_66;\n            arg = (char *)sub_412832(optarg);\n            v39 = 1;\n          }\n        }\n        else\n        {\n          if ( v44 != 116 )\n            goto LABEL_66;\n          if ( v48 )\n          {\n            v3 = gettext(\"multiple target directories specified\");\n            error(1, 0, v3);\n          }\n          else\n          {\n            if ( (unsigned int)sub_419BC0(optarg, &stat_buf) )\n            {\n              v4 = sub_40E392(optarg);\n              v5 = gettext(\"accessing %s\");\n              v6 = __errno_location();\n              error(1, *v6, v5, v4);\n            }\n            if ( (stat_buf.st_mode & 0xF000) != 0x4000 )\n            {\n              v7 = sub_40E392(optarg);\n              v8 = gettext(\"target %s is not a directory\");\n              error(1, 0, v8, v7);\n            }\n          }\n          v48 = optarg;\n        }\n      }\n      else if ( v44 == 109 )\n      {\n        v45 = optarg;\n      }\n      else if ( v44 > 109 )\n      {\n        if ( v44 == 111 )\n        {\n          name = optarg;\n        }\n        else\n        {\n          if ( v44 != 112 )\n            goto LABEL_66;\n          v53 = 1;\n        }\n      }\n      else\n      {\n        if ( v44 != 103 )\n          goto LABEL_66;\n        qword_620498 = optarg;\n      }\n    }\n    if ( v44 == 83 )\n    {\n      v36 = 1;\n      v46 = optarg;\n    }\n    else if ( v44 > 83 )\n    {\n      if ( v44 == 90 )\n      {\n        if ( dword_620480 )\n        {\n          v49 = optarg;\n          byte_6203A0 = 0;\n        }\n        else\n        {\n          v10 = gettext(\"WARNING: ignoring --context (-Z); this kernel is not SELinux-enabled\");\n          error(0, 0, v10);\n        }\n      }\n      else if ( v44 > 90 )\n      {\n        if ( v44 == 98 )\n        {\n          v36 = 1;\n          if ( optarg )\n            v47 = optarg;\n        }\n        else if ( v44 != 99 )\n        {\n          goto LABEL_66;\n        }\n      }\n      else\n      {\n        if ( v44 != 84 )\n          goto LABEL_66;\n        v38 = 1;\n      }\n    }\n    else\n    {\n      if ( v44 == -130 )\n        sub_403773(0);\n      if ( v44 <= -130 )\n      {\n        if ( v44 == -131 )\n        {\n          sub_412434(\n            (_DWORD)stdout,\n            (unsigned int)\"install\",\n            (unsigned int)\"GNU coreutils\",\n            off_6203D0[0],\n            (unsigned int)\"David MacKenzie\",\n            0,\n            (char)a2);\n          exit(0);\n        }\nLABEL_66:\n        sub_403773(1);\n      }\n      if ( v44 == 67 )\n      {\n        byte_6204A4 = 1;\n      }\n      else\n      {\n        if ( v44 != 68 )\n          goto LABEL_66;\n        v37 = 1;\n      }\n    }\n  }\n}\n"], [4212715, "sub_4047EB", "int sub_4047EB(FILE *a1, __int64 a2, ...)\n{\n  gcc_va_list va; // [rsp+18h] [rbp-C8h] BYREF\n\n  va_start(va, a2);\n  fputs_unlocked(s, a1);\n  fwrite_unlocked(\": \", 1uLL, 2uLL, a1);\n  sub_413569(a1, a2, va);\n  return fputc_unlocked(10, a1);\n}\n"], [4212958, "sub_4048DE", "void sub_4048DE()\n{\n  ;\n}\n"], [4212968, "sub_4048E8", "__int64 sub_4048E8()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4212998, "sub_404906", "__int64 sub_404906()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4213028, "sub_404924", "__int64 sub_404924()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4213062, "sub_404946", "__int64 sub_404946()\n{\n  *__errno_location() = 95;\n  return 0xFFFFFFFFLL;\n}\n"], [4213095, "sub_404967", "_BOOL8 __fastcall sub_404967(_BYTE *a1)\n{\n  __int64 v1; // rax\n  char v4; // [rsp+17h] [rbp-1h]\n\n  if ( *a1 != 46 )\n    return 0LL;\n  if ( a1[1] == 46 )\n    v1 = 2LL;\n  else\n    v1 = 1LL;\n  v4 = a1[v1];\n  return !v4 || v4 == 47;\n}\n"], [4213190, "sub_4049C6", "unsigned __int64 __fastcall sub_4049C6(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v5; // [rsp+18h] [rbp-8h]\n\n  do\n  {\n    v5 = a1 % a2;\n    a1 = a2;\n    a2 = v5;\n  }\n  while ( v5 );\n  return a1;\n}\n"], [4213248, "sub_404A00", "unsigned __int64 __fastcall sub_404A00(unsigned __int64 a1, unsigned __int64 a2)\n{\n  return a1 * (a2 / sub_4049C6(a1, a2));\n}\n"], [4213305, "sub_404A39", "unsigned __int64 __fastcall sub_404A39(__int64 a1, unsigned __int64 a2)\n{\n  return a2 - 1 + a1 - (a2 - 1 + a1) % a2;\n}\n"], [4213375, "sub_404A7F", "__int64 __fastcall sub_404A7F(__int64 a1)\n{\n  __int64 result; // rax\n\n  free(*(void **)(a1 + 32));\n  *(_QWORD *)(a1 + 32) = 0LL;\n  result = a1;\n  *(_DWORD *)(a1 + 20) = 0;\n  return result;\n}\n"], [4213428, "sub_404AB4", "__int64 __fastcall sub_404AB4(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, __int64 a14)\n{\n  __int64 result; // rax\n\n  if ( a14 <= 0 || (unsigned __int64)a14 > 0x2000000000000000LL || a14 <= 0x7FFF )\n    result = 0x8000LL;\n  else\n    result = a14;\n  return result;\n}\n"], [4213526, "sub_404B16", "__int64 __fastcall sub_404B16(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4213548, "sub_404B2C", "__int64 __fastcall sub_404B2C(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4213570, "sub_404B42", "__int64 __fastcall sub_404B42(__int64 a1, __int64 a2)\n{\n  unsigned int v3; // [rsp+1Ch] [rbp-4h]\n\n  v3 = sub_411A48(a1, a2);\n  if ( v3 && *__errno_location() == 38 )\n    v3 = 0;\n  return v3;\n}\n"], [4213638, "sub_404B86", "__int64 __fastcall sub_404B86(int a1, unsigned int a2, char *a3, unsigned __int64 a4, char a5, __int64 a6, __int64 a7, unsigned __int64 a8, _QWORD *a9, _BYTE *a10)\n{\n  size_t v10; // rax\n  __int64 v11; // r12\n  char *v12; // rbx\n  int *v13; // rax\n  _QWORD *v15; // rax\n  char *v16; // rax\n  __int64 v17; // r12\n  char *v18; // rbx\n  int *v19; // rax\n  __int64 v20; // r12\n  char *v21; // rbx\n  int *v22; // rax\n  _QWORD *v27; // [rsp+30h] [rbp-30h]\n  char *v28; // [rsp+38h] [rbp-28h]\n  ssize_t offset; // [rsp+40h] [rbp-20h]\n\n  *a10 = 0;\n  *a9 = 0LL;\n  while ( a8 )\n  {\n    v27 = 0LL;\n    v10 = a8;\n    if ( a4 <= a8 )\n      v10 = a4;\n    offset = read(a1, a3, v10);\n    if ( offset >= 0 )\n    {\n      if ( !offset )\n        return 1LL;\n      a8 -= offset;\n      *a9 += offset;\n      if ( a5 )\n      {\n        a3[offset] = 1;\n        v27 = a3;\n        do\n          v15 = v27++;\n        while ( !*v15 );\n        v28 = (char *)(v27 - 1);\n        do\n          v16 = v28++;\n        while ( !*v16 );\n        if ( &a3[offset] < v28 )\n        {\n          if ( lseek(a2, offset, 1) < 0 )\n          {\n            v17 = sub_40E392(a7);\n            v18 = gettext(\"cannot lseek %s\");\n            v19 = __errno_location();\n            error(0, *v19, v18, v17);\n            return 0LL;\n          }\n          *a10 = 1;\n        }\n        else\n        {\n          v27 = 0LL;\n        }\n      }\n      if ( !v27 )\n      {\n        if ( sub_40BB8B(a2, a3, offset) != offset )\n        {\n          v20 = sub_40E392(a7);\n          v21 = gettext(\"writing %s\");\n          v22 = __errno_location();\n          error(0, *v22, v21, v20);\n          return 0LL;\n        }\n        *a10 = 0;\n      }\n    }\n    else if ( *__errno_location() != 4 )\n    {\n      v11 = sub_40E392(a6);\n      v12 = gettext(\"reading %s\");\n      v13 = __errno_location();\n      error(0, *v13, v12, v11);\n      return 0LL;\n    }\n  }\n  return 1LL;\n}\n"], [4214225, "sub_404DD1", "int __fastcall sub_404DD1(int a1, unsigned int a2)\n{\n  return ioctl(a1, 0x40049409uLL, a2);\n}\n"], [4214264, "sub_404DF8", "__int64 __fastcall sub_404DF8(unsigned int a1, size_t a2)\n{\n  size_t v2; // rax\n  size_t v5; // [rsp+18h] [rbp-8h]\n\n  if ( !qword_6224D0 )\n  {\n    qword_6224D0 = (__int64)calloc(nmemb, 1uLL);\n    if ( !qword_6224D0 )\n    {\n      qword_6224D0 = (__int64)&unk_6224E0;\n      nmemb = 1024LL;\n    }\n  }\n  while ( a2 )\n  {\n    v2 = nmemb;\n    if ( a2 <= nmemb )\n      v2 = a2;\n    v5 = v2;\n    if ( sub_40BB8B(a1, qword_6224D0, v2) != v2 )\n      return 0LL;\n    a2 -= v5;\n  }\n  return 1LL;\n}\n"], [4214435, "sub_404EA3", "__int64 __fastcall sub_404EA3(unsigned int a1, unsigned int a2, char *a3, unsigned __int64 a4, __off_t a5, int a6, __int64 a7, __int64 a8, _BYTE *a9)\n{\n  __int64 v10; // r12\n  char *v11; // rbx\n  int *v12; // rax\n  __int64 v13; // r12\n  char *v14; // rbx\n  int *v15; // rax\n  __int64 v16; // r12\n  char *v17; // rbx\n  int *v18; // rax\n  unsigned __int64 v19; // rax\n  __int64 v20; // r12\n  char *v21; // rbx\n  int *v22; // rax\n  __off_t v23; // rax\n  char v24; // al\n  __int64 v25; // r12\n  char *v26; // rbx\n  int *v27; // rax\n  char v32; // [rsp+59h] [rbp-87h] BYREF\n  char v33; // [rsp+5Ah] [rbp-86h]\n  char v34; // [rsp+5Bh] [rbp-85h]\n  unsigned int i; // [rsp+5Ch] [rbp-84h]\n  __int64 v36; // [rsp+60h] [rbp-80h] BYREF\n  __off_t v37; // [rsp+68h] [rbp-78h]\n  unsigned __int64 v38; // [rsp+70h] [rbp-70h]\n  __off_t v39; // [rsp+78h] [rbp-68h]\n  __off_t offset; // [rsp+80h] [rbp-60h]\n  unsigned __int64 v41; // [rsp+88h] [rbp-58h]\n  size_t v42; // [rsp+90h] [rbp-50h]\n  unsigned __int64 v43; // [rsp+98h] [rbp-48h]\n  char v44[20]; // [rsp+A0h] [rbp-40h] BYREF\n  unsigned int v45; // [rsp+B4h] [rbp-2Ch]\n  char v46; // [rsp+B8h] [rbp-28h]\n  char v47; // [rsp+B9h] [rbp-27h]\n  __int64 v48; // [rsp+C0h] [rbp-20h]\n\n  v37 = 0LL;\n  v38 = 0LL;\n  v39 = 0LL;\n  sub_409EEF(a1, v44);\n  *a9 = 0;\n  v32 = 1;\n  while ( 1 )\n  {\n    v34 = sub_409F4B(v44);\n    if ( v34 != 1 )\n      break;\n    v33 = 0;\n    for ( i = 0; ; ++i )\n    {\n      if ( v45 <= i && !v33 )\n        goto LABEL_38;\n      if ( v45 <= i )\n      {\n        offset = *(_QWORD *)(v48 + 24LL * --i + 8) + v37;\n        v41 = 0LL;\n      }\n      else\n      {\n        offset = *(_QWORD *)(v48 + 24LL * i);\n        v41 = *(_QWORD *)(v48 + 24LL * i + 8);\n      }\n      v43 = offset - v37 - v38;\n      v32 = 0;\n      if ( offset - v37 != v38 )\n      {\n        if ( lseek(a1, offset, 0) < 0 )\n        {\n          v13 = sub_40E392(a7);\n          v14 = gettext(\"cannot lseek %s\");\n          v15 = __errno_location();\n          error(0, *v15, v14, v13);\nLABEL_15:\n          sub_404A7F((__int64)v44);\n          return 0LL;\n        }\n        if ( v33 && a6 == 3 || v33 != 1 && a6 != 1 )\n        {\n          if ( lseek(a2, offset, 0) < 0 )\n          {\n            v16 = sub_40E392(a8);\n            v17 = gettext(\"cannot lseek %s\");\n            v18 = __errno_location();\n            error(0, *v18, v17, v16);\n            goto LABEL_15;\n          }\n          v32 = 1;\n        }\n        else\n        {\n          v42 = v43;\n          if ( v33 )\n          {\n            v19 = v43;\n            if ( a5 - v39 <= v43 )\n              v19 = a5 - v39;\n            v42 = v19;\n          }\n          if ( (unsigned __int8)sub_404DF8(a2, v42) != 1 )\n          {\n            v20 = sub_40E392(a8);\n            v21 = gettext(\"%s: write failed\");\n            v22 = __errno_location();\n            error(0, *v22, v21, v20);\n            goto LABEL_15;\n          }\n          v23 = a5;\n          if ( offset <= a5 )\n            v23 = offset;\n          v39 = v23;\n        }\n      }\n      v37 = offset;\n      v33 = 0;\n      v38 = v41;\n      if ( (unsigned __int8)sub_404B86(a1, a2, a3, a4, a6 == 3, a7, a8, v41, &v36, &v32) != 1 )\n        goto LABEL_15;\n      v39 = v36 + offset;\n      if ( v36 + offset == a5 )\n        break;\n    }\n    v47 = 1;\nLABEL_38:\n    sub_404A7F((__int64)v44);\n    if ( v47 == 1 )\n    {\nLABEL_39:\n      if ( v39 >= a5 && !v32 )\n        return 1LL;\n      v24 = a6 == 1 ? sub_404DF8(a2, a5 - v39) ^ 1 : ftruncate(a2, a5) != 0;\n      if ( !v24 )\n        return 1LL;\n      v25 = sub_40E392(a8);\n      v26 = gettext(\"failed to extend %s\");\n      v27 = __errno_location();\n      error(0, *v27, v26, v25);\n      return 0LL;\n    }\n  }\n  if ( v47 )\n    goto LABEL_39;\n  if ( v46 )\n  {\n    *a9 = 1;\n  }\n  else\n  {\n    v10 = sub_40E392(a7);\n    v11 = gettext(\"%s: failed to get extents info\");\n    v12 = __errno_location();\n    error(0, *v12, v11, v10);\n  }\n  return 0LL;\n}\n"], [4215706, "sub_40539A", "__int64 __fastcall sub_40539A(_QWORD *a1, _QWORD *a2)\n{\n  while ( a2 )\n  {\n    if ( a2[1] == a1[1] && a2[2] == *a1 )\n      return 1LL;\n    a2 = (_QWORD *)*a2;\n  }\n  return 0LL;\n}\n"], [4215793, "sub_4053F1", "_BOOL8 __fastcall sub_4053F1(int a1)\n{\n  return a1 == 95 || a1 == 61;\n}\n"], [4215829, "sub_405415", "__int64 sub_405415()\n{\n  return 1LL;\n}\n"], [4215858, "sub_405432", "_BOOL8 __fastcall sub_405432(__int64 a1, __int64 a2, unsigned __int8 a3, _QWORD *a4, int a5, __int64 a6, char *a7, bool *a8)\n{\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  _BOOL8 result; // rax\n  bool v12; // bl\n  size_t v13; // rax\n  unsigned __int8 v18; // [rsp+5Ch] [rbp-84h] BYREF\n  unsigned __int8 v19; // [rsp+5Dh] [rbp-83h] BYREF\n  bool v20; // [rsp+5Eh] [rbp-82h]\n  bool v21; // [rsp+5Fh] [rbp-81h]\n  char *s; // [rsp+60h] [rbp-80h]\n  void *v23; // [rsp+68h] [rbp-78h]\n  void *v24; // [rsp+70h] [rbp-70h]\n  void *ptr; // [rsp+78h] [rbp-68h]\n  __int64 v26[12]; // [rsp+80h] [rbp-60h] BYREF\n\n  v26[0] = *(_QWORD *)a6;\n  v26[1] = *(_QWORD *)(a6 + 8);\n  v26[2] = *(_QWORD *)(a6 + 16);\n  v26[3] = *(_QWORD *)(a6 + 24);\n  v26[4] = *(_QWORD *)(a6 + 32);\n  v26[5] = *(_QWORD *)(a6 + 40);\n  v26[6] = *(_QWORD *)(a6 + 48);\n  v26[7] = *(_QWORD *)(a6 + 56);\n  v26[8] = *(_QWORD *)(a6 + 64);\n  v20 = 1;\n  v23 = (void *)sub_410008(a1);\n  if ( v23 )\n  {\n    if ( *(_DWORD *)(a6 + 4) == 3 )\n      HIDWORD(v26[0]) = 2;\n    v21 = 0;\n    for ( s = (char *)v23; *s; s += v13 + 1 )\n    {\n      v24 = (void *)sub_40B8EC(a1, s, 0LL);\n      ptr = (void *)sub_40B8EC(a2, s, 0LL);\n      v19 = *a7;\n      v12 = v20;\n      v20 = (v12 & (unsigned __int8)sub_40743B(\n                                      (_DWORD)v24,\n                                      (_DWORD)ptr,\n                                      a3,\n                                      *a4,\n                                      a5,\n                                      (unsigned int)v26,\n                                      0,\n                                      (__int64)&v19,\n                                      (__int64)&v18,\n                                      0LL)) != 0;\n      *a8 = (*a8 | v18) != 0;\n      free(ptr);\n      free(v24);\n      if ( v18 )\n        break;\n      v21 = (v21 | v19) != 0;\n      v13 = strlen(s);\n    }\n    free(v23);\n    *a7 = v21;\n    result = v20;\n  }\n  else\n  {\n    v8 = sub_40E392(a1);\n    v9 = gettext(\"cannot access %s\");\n    v10 = __errno_location();\n    error(0, *v10, v9, v8);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4216498, "sub_4056B2", "__int64 __fastcall sub_4056B2(__int64 a1, const char *a2, unsigned int a3, _DWORD *a4, char a5, __int64 a6)\n{\n  int v6; // eax\n  unsigned __int16 v7; // ax\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  __int64 result; // rax\n  __int64 v12; // r12\n  char *v13; // rbx\n  int *v14; // rax\n  __uid_t owner; // [rsp+3Ch] [rbp-34h]\n  __gid_t group; // [rsp+40h] [rbp-30h]\n  int v18; // [rsp+44h] [rbp-2Ch]\n  unsigned int v19; // [rsp+4Ch] [rbp-24h]\n  int v20; // [rsp+50h] [rbp-20h]\n  int v21; // [rsp+58h] [rbp-18h]\n\n  owner = a4[7];\n  group = a4[8];\n  if ( a5 != 1\n    && (*(_BYTE *)(a1 + 29) || *(_BYTE *)(a1 + 24) || *(_BYTE *)(a1 + 40))\n    && ((v18 = *(_DWORD *)(a6 + 24), !*(_BYTE *)(a1 + 29)) && !*(_BYTE *)(a1 + 24) ? (v6 = *(_DWORD *)(a1 + 16)) : (v6 = a4[6]),\n        (v19 = (unsigned __int16)v18 & (unsigned __int16)v6 & 0x1C0,\n         v7 = ~(_WORD)v6,\n         HIBYTE(v7) |= 0xEu,\n         ((unsigned __int16)v18 & v7 & 0xFFF) != 0)\n     && (unsigned int)sub_40A65C(a2, a3, v19)) )\n  {\n    if ( (unsigned __int8)sub_409C24(a1) != 1 )\n    {\n      v8 = sub_40E392(a2);\n      v9 = gettext(\"clearing permissions for %s\");\n      v10 = __errno_location();\n      error(0, *v10, v9, v8);\n    }\n    result = (unsigned int)-*(unsigned __int8 *)(a1 + 33);\n  }\n  else\n  {\n    if ( a3 == -1 )\n    {\n      if ( !lchown(a2, owner, group) )\n        return 1LL;\n      if ( *__errno_location() == 1 || *__errno_location() == 22 )\n      {\n        v21 = *__errno_location();\n        lchown(a2, 0xFFFFFFFF, group);\n        *__errno_location() = v21;\n      }\n    }\n    else\n    {\n      if ( !fchown(a3, owner, group) )\n        return 1LL;\n      if ( *__errno_location() == 1 || *__errno_location() == 22 )\n      {\n        v20 = *__errno_location();\n        fchown(a3, 0xFFFFFFFF, group);\n        *__errno_location() = v20;\n      }\n    }\n    if ( (unsigned __int8)sub_409BE0(a1) != 1\n      && (v12 = sub_40E392(a2),\n          v13 = gettext(\"failed to preserve ownership for %s\"),\n          v14 = __errno_location(),\n          error(0, *v14, v13, v12),\n          *(_BYTE *)(a1 + 33)) )\n    {\n      result = 0xFFFFFFFFLL;\n    }\n    else\n    {\n      result = 0LL;\n    }\n  }\n  return result;\n}\n"], [4217137, "sub_405931", "void sub_405931()\n{\n  ;\n}\n"], [4217154, "sub_405942", "int __fastcall sub_405942(int a1, const char *a2, __mode_t a3)\n{\n  int result; // eax\n\n  if ( a1 < 0 )\n    result = chmod(a2, a3);\n  else\n    result = fchmod(a1, a3);\n  return result;\n}\n"], [4217214, "sub_40597E", "_BOOL8 __fastcall sub_40597E(__int64 a1)\n{\n  return (*(_DWORD *)(a1 + 24) & 0xF000) == 0x8000 && *(_QWORD *)(a1 + 64) < *(_QWORD *)(a1 + 48) / 512LL;\n}\n"], [4217297, "sub_4059D1", "__int64 __fastcall sub_4059D1(__int64 a1, char *a2, __int64 a3, __mode_t a4, int a5, char *a6, __int64 a7)\n{\n  int v7; // eax\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  int v12; // ecx\n  int v13; // er8\n  int v14; // er9\n  __int64 v15; // r12\n  char *v16; // rbx\n  int *v17; // rax\n  __int64 v18; // rbx\n  char *v19; // rax\n  bool v20; // al\n  bool v21; // al\n  int *v22; // rax\n  char *v23; // rbx\n  int *v24; // rax\n  int *v25; // rax\n  __int64 v26; // r13\n  __int64 v27; // r12\n  char *v28; // rbx\n  int *v29; // rax\n  __int64 v30; // r12\n  char *v31; // rbx\n  int *v32; // rax\n  __int64 v33; // rbx\n  char *v34; // rax\n  int v35; // er8\n  int v36; // er9\n  __int64 v37; // rbx\n  char *v38; // rax\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r12\n  char *v42; // rbx\n  int *v43; // rax\n  int v44; // eax\n  __int64 v45; // r13\n  __int64 v46; // r12\n  char *v47; // rbx\n  int *v48; // rax\n  int v49; // eax\n  __int64 v50; // r8\n  __int64 v51; // r9\n  __int64 v52; // r8\n  __int64 v53; // r9\n  __int64 v54; // rax\n  int v55; // eax\n  __int64 v56; // r12\n  char *v57; // rbx\n  int *v58; // rax\n  __off_t v59; // rdx\n  __off_t v60; // rdx\n  __int64 v61; // r12\n  char *v62; // rbx\n  int *v63; // rax\n  int v64; // eax\n  __int64 v65; // rsi\n  char *v66; // rdi\n  int v67; // eax\n  __int64 v68; // r12\n  char *v69; // rbx\n  int *v70; // rax\n  __int64 v71; // r12\n  char *v72; // rbx\n  int *v73; // rax\n  __int64 v74; // r12\n  char *v75; // rbx\n  int *v76; // rax\n  __int64 v77[18]; // [rsp+0h] [rbp-280h] BYREF\n  __int64 v78; // [rsp+90h] [rbp-1F0h] BYREF\n  char *v79; // [rsp+98h] [rbp-1E8h]\n  int v80; // [rsp+A0h] [rbp-1E0h]\n  __mode_t v81; // [rsp+A4h] [rbp-1DCh]\n  __int64 v82; // [rsp+A8h] [rbp-1D8h]\n  char *name; // [rsp+B0h] [rbp-1D0h]\n  __int64 v84; // [rsp+B8h] [rbp-1C8h]\n  char v85; // [rsp+C3h] [rbp-1BDh] BYREF\n  unsigned __int8 v86; // [rsp+C4h] [rbp-1BCh]\n  char v87; // [rsp+C5h] [rbp-1BBh]\n  char v88; // [rsp+C6h] [rbp-1BAh]\n  bool v89; // [rsp+C7h] [rbp-1B9h]\n  bool v90; // [rsp+C8h] [rbp-1B8h]\n  bool v91; // [rsp+C9h] [rbp-1B7h]\n  bool v92; // [rsp+CAh] [rbp-1B6h]\n  bool v93; // [rsp+CBh] [rbp-1B5h]\n  int fd; // [rsp+CCh] [rbp-1B4h]\n  int errnum; // [rsp+D0h] [rbp-1B0h]\n  unsigned int v96; // [rsp+D4h] [rbp-1ACh]\n  int fildes; // [rsp+D8h] [rbp-1A8h]\n  int v98; // [rsp+DCh] [rbp-1A4h]\n  void *ptr; // [rsp+E0h] [rbp-1A0h]\n  unsigned __int64 v100; // [rsp+E8h] [rbp-198h]\n  void *v101; // [rsp+F0h] [rbp-190h]\n  unsigned __int64 v102; // [rsp+F8h] [rbp-188h]\n  __int64 v103; // [rsp+100h] [rbp-180h]\n  unsigned __int64 v104; // [rsp+108h] [rbp-178h]\n  unsigned __int64 v105; // [rsp+110h] [rbp-170h]\n  char *v106; // [rsp+118h] [rbp-168h]\n  __off_t length[4]; // [rsp+120h] [rbp-160h] BYREF\n  struct stat stat_buf; // [rsp+140h] [rbp-140h] BYREF\n  struct stat v109; // [rsp+1D0h] [rbp-B0h] BYREF\n  __int64 v110; // [rsp+260h] [rbp-20h] BYREF\n\n  v84 = a1;\n  name = a2;\n  v82 = a3;\n  v81 = a4;\n  v80 = a5;\n  v79 = a6;\n  ptr = 0LL;\n  v101 = 0LL;\n  v96 = *(_DWORD *)(a7 + 24);\n  v86 = 1;\n  v87 = *(_BYTE *)(a3 + 32);\n  if ( *(_DWORD *)(a3 + 4) == 2 )\n    v7 = 0x20000;\n  else\n    v7 = 0;\n  fildes = sub_40B44A(v84, v7, v84, a4, a5, (_DWORD)a6, v77[0]);\n  if ( fildes < 0 )\n  {\n    v8 = sub_40E392(v84);\n    v9 = gettext(\"cannot open %s for reading\");\n    v10 = __errno_location();\n    error(0, *v10, v9, v8);\n    return 0LL;\n  }\n  if ( !(unsigned int)sub_419BD0(fildes, &stat_buf) )\n  {\n    if ( *(_QWORD *)(a7 + 8) != stat_buf.st_ino || *(_QWORD *)a7 != stat_buf.st_dev )\n    {\n      v18 = sub_40E392(v84);\n      v19 = gettext(\"skipping file %s, as it was replaced while being copied\");\n      error(0, 0, v19, v18);\n      v86 = 0;\n      goto LABEL_134;\n    }\n    if ( *v79 != 1 )\n    {\n      fd = sub_40B44A((_DWORD)name, 513, *(_QWORD *)a7, v12, v13, v14, v77[0]);\n      errnum = *__errno_location();\n      if ( *(_BYTE *)(v82 + 34) && fd >= 0 )\n      {\n        v20 = *(_BYTE *)(v82 + 32) != 1 || *(_BYTE *)(v82 + 35);\n        v91 = v20;\n        v21 = !v20 && *(_BYTE *)(v82 + 38) != 1;\n        v92 = v21;\n        v109.st_dev = 0LL;\n        if ( (int)sub_4048E8(&v109) < 0 )\n        {\n          if ( v91 || v92 && (v22 = __errno_location(), !sub_4053F1(*v22)) )\n          {\n            v23 = gettext(\"failed to get file system create context\");\n            v24 = __errno_location();\n            error(0, *v24, v23);\n          }\n          if ( *(_BYTE *)(v82 + 35) )\n          {\n            v86 = 0;\n            goto LABEL_132;\n          }\n        }\n        if ( v109.st_dev )\n        {\n          if ( (int)sub_404946((unsigned int)fd, v109.st_dev) < 0 )\n          {\n            if ( v91 || v92 && (v25 = __errno_location(), !sub_4053F1(*v25)) )\n            {\n              v26 = sub_40E36E(1LL, v109.st_dev);\n              v27 = sub_40E36E(0LL, name);\n              v28 = gettext(\"failed to set the security context of %s to %s\");\n              v29 = __errno_location();\n              error(0, *v29, v28, v27, v26);\n            }\n            if ( *(_BYTE *)(v82 + 35) )\n            {\n              v86 = 0;\n              sub_4048DE();\n              goto LABEL_132;\n            }\n          }\n          sub_4048DE();\n        }\n      }\n      if ( fd < 0 && *(_BYTE *)(v82 + 22) )\n      {\n        if ( unlink(name) )\n        {\n          v30 = sub_40E392(name);\n          v31 = gettext(\"cannot remove %s\");\n          v32 = __errno_location();\n          error(0, *v32, v31, v30);\n          v86 = 0;\n          goto LABEL_134;\n        }\n        if ( *(_BYTE *)(v82 + 43) )\n        {\n          v33 = sub_40E392(name);\n          v34 = gettext(\"removed %s\\n\");\n          printf(v34, v33);\n        }\n        *v79 = 1;\n      }\n    }\n    if ( *v79 )\n    {\n      v98 = 65;\n      fd = sub_40B44A((_DWORD)name, 193, v81 & ~v80, 193, v13, v14, v77[0]);\n      errnum = *__errno_location();\n      if ( fd < 0\n        && errnum == 17\n        && *(_BYTE *)(v82 + 24) != 1\n        && !(unsigned int)sub_419BE0(name, &v109)\n        && (v109.st_mode & 0xF000) == 40960 )\n      {\n        if ( !*(_BYTE *)(v82 + 45) )\n        {\n          v37 = sub_40E392(name);\n          v38 = gettext(\"not writing through dangling symlink %s\");\n          error(0, 0, v38, v37);\n          v86 = 0;\n          goto LABEL_134;\n        }\n        fd = sub_40B44A((_DWORD)name, v98, v81 & ~v80, v98, v35, v36, v77[0]);\n        errnum = *__errno_location();\n      }\n      if ( fd < 0 && errnum == 21 && *name && name[strlen(name) - 1] == 47 )\n        errnum = 20;\n    }\n    else\n    {\n      v80 = 0;\n    }\n    if ( fd < 0 )\n    {\n      v39 = sub_40E392(name);\n      v40 = gettext(\"cannot create regular file %s\");\n      error(0, errnum, v40, v39);\n      v86 = 0;\n      goto LABEL_134;\n    }\n    if ( (unsigned int)sub_419BD0(fd, &v109) )\n    {\n      v41 = sub_40E392(name);\n      v42 = gettext(\"cannot fstat %s\");\n      v43 = __errno_location();\n      error(0, *v43, v42, v41);\n      v86 = 0;\n      goto LABEL_132;\n    }\n    if ( v87 )\n    {\n      if ( *(_DWORD *)(v82 + 48) )\n      {\n        v44 = sub_404DD1(fd, fildes);\n        v93 = v44 == 0;\n        if ( !v44 || *(_DWORD *)(v82 + 48) == 2 )\n        {\n          if ( !v93 )\n          {\n            v45 = sub_40E36E(1LL, v84);\n            v46 = sub_40E36E(0LL, name);\n            v47 = gettext(\"failed to clone %s from %s\");\n            v48 = __errno_location();\n            error(0, *v48, v47, v46, v45);\n            v86 = 0;\n            goto LABEL_132;\n          }\n          v87 = 0;\n        }\n      }\n    }\n    if ( v87 )\n    {\n      v49 = getpagesize();\n      v102 = sub_404A00(v49, 8uLL);\n      v103 = v102 + 7;\n      qmemcpy(v77, &v109, sizeof(v77));\n      v100 = sub_404AB4(\n               (__int64)&v78,\n               (__int64)&v110,\n               (__int64)v77,\n               0LL,\n               v50,\n               v51,\n               v77[0],\n               v77[1],\n               v77[2],\n               v77[3],\n               v77[4],\n               v77[5],\n               v77[6],\n               v77[7]);\n      v88 = 0;\n      v89 = 0;\n      if ( (v109.st_mode & 0xF000) == 0x8000 )\n      {\n        if ( *(_DWORD *)(v82 + 12) == 3 )\n          v88 = 1;\n        v89 = sub_40597E((__int64)&stat_buf);\n        if ( *(_DWORD *)(v82 + 12) == 2 && v89 )\n          v88 = 1;\n      }\n      if ( v88 != 1 )\n      {\n        v104 = 0x7FFFFFFFFFFFFFFFLL - v103;\n        qmemcpy(v77, &stat_buf, sizeof(v77));\n        v54 = sub_404AB4(\n                (__int64)&v78,\n                (__int64)&v109,\n                (__int64)v77,\n                0LL,\n                v52,\n                v53,\n                v77[0],\n                v77[1],\n                v77[2],\n                v77[3],\n                v77[4],\n                v77[5],\n                v77[6],\n                v77[7]);\n        v105 = sub_412E1B(v54, v100, v104);\n        if ( (stat_buf.st_mode & 0xF000) == 0x8000 && stat_buf.st_size < v100 )\n          v100 = stat_buf.st_size + 1;\n        v100 = v105 + v100 - 1;\n        v100 -= v100 % v105;\n        if ( !v100 || v104 < v100 )\n          v100 = v105;\n      }\n      ptr = (void *)sub_4126DD(v100 + v103);\n      v106 = (char *)sub_404A39((__int64)ptr, v102);\n      if ( v89 )\n      {\n        if ( (v109.st_mode & 0xF000) == 0x8000 )\n          v55 = *(_DWORD *)(v82 + 12);\n        else\n          v55 = 1;\n        if ( (unsigned __int8)sub_404EA3(fildes, fd, v106, v100, stat_buf.st_size, v55, v84, (__int64)name, length) )\n          goto LABEL_97;\n        if ( LOBYTE(length[0]) != 1 )\n        {\n          v86 = 0;\n          goto LABEL_132;\n        }\n      }\n      if ( (unsigned __int8)sub_404B86(\n                              fildes,\n                              fd,\n                              v106,\n                              v100,\n                              v88,\n                              v84,\n                              (__int64)name,\n                              0xFFFFFFFFFFFFFFFFLL,\n                              length,\n                              &v85) != 1\n        || v85 && ftruncate(fd, length[0]) < 0 )\n      {\n        v56 = sub_40E392(name);\n        v57 = gettext(\"failed to extend %s\");\n        v58 = __errno_location();\n        error(0, *v58, v57, v56);\n        v86 = 0;\n        goto LABEL_132;\n      }\n    }\nLABEL_97:\n    if ( *(_BYTE *)(v82 + 30) )\n    {\n      length[0] = sub_404B16(a7);\n      length[1] = v59;\n      length[2] = sub_404B2C(a7);\n      length[3] = v60;\n      if ( (unsigned int)sub_4113D2((unsigned int)fd, name, length) )\n      {\n        v61 = sub_40E392(name);\n        v62 = gettext(\"preserving times for %s\");\n        v63 = __errno_location();\n        error(0, *v63, v62, v61);\n        if ( *(_BYTE *)(v82 + 33) )\n        {\n          v86 = 0;\n          goto LABEL_132;\n        }\n      }\n    }\n    if ( *(_BYTE *)(v82 + 28) && (*(_DWORD *)(a7 + 28) != v109.st_uid || *(_DWORD *)(a7 + 32) != v109.st_gid) )\n    {\n      v64 = sub_4056B2(v82, name, fd, (_DWORD *)a7, *v79, (__int64)&v109);\n      if ( v64 == -1 )\n      {\n        v86 = 0;\nLABEL_132:\n        if ( close(fd) < 0 )\n        {\n          v71 = sub_40E392(name);\n          v72 = gettext(\"closing %s\");\n          v73 = __errno_location();\n          error(0, *v73, v72, v71);\n          v86 = 0;\n        }\n        goto LABEL_134;\n      }\n      if ( !v64 )\n        v96 &= 0xFFFFF1FF;\n    }\n    if ( *(_BYTE *)(v82 + 36) )\n    {\n      v90 = 0;\n      if ( (v109.st_mode & 0x80) == 0 && geteuid() )\n        v90 = sub_405942(fd, name, 0x180u) == 0;\n      if ( (unsigned __int8)sub_405415(v84, (unsigned int)fildes, name, (unsigned int)fd, v82) != 1\n        && *(_BYTE *)(v82 + 37) )\n      {\n        v86 = 0;\n      }\n      if ( v90 )\n        sub_405942(fd, name, v81 & ~v80);\n    }\n    v65 = (unsigned int)fd;\n    v66 = name;\n    sub_405931();\n    if ( *(_BYTE *)(v82 + 29) || *(_BYTE *)(v82 + 24) )\n    {\n      if ( (unsigned int)sub_40A72C(v84, (unsigned int)fildes, name, (unsigned int)fd, v96) && *(_BYTE *)(v82 + 33) )\n        v86 = 0;\n    }\n    else if ( *(_BYTE *)(v82 + 40) )\n    {\n      if ( (unsigned int)sub_40A684(name, (unsigned int)fd, *(unsigned int *)(v82 + 16)) )\n        v86 = 0;\n    }\n    else if ( v80 )\n    {\n      v67 = sub_409C68(v66, v65);\n      v80 &= ~v67;\n      if ( v80 )\n      {\n        if ( sub_405942(fd, name, v81) )\n        {\n          v68 = sub_40E392(name);\n          v69 = gettext(\"preserving permissions for %s\");\n          v70 = __errno_location();\n          error(0, *v70, v69, v68);\n          if ( *(_BYTE *)(v82 + 33) )\n            v86 = 0;\n        }\n      }\n    }\n    goto LABEL_132;\n  }\n  v15 = sub_40E392(v84);\n  v16 = gettext(\"cannot fstat %s\");\n  v17 = __errno_location();\n  error(0, *v17, v16, v15);\n  v86 = 0;\nLABEL_134:\n  if ( close(fildes) < 0 )\n  {\n    v74 = sub_40E392(v84);\n    v75 = gettext(\"closing %s\");\n    v76 = __errno_location();\n    error(0, *v76, v75, v74);\n    v86 = 0;\n  }\n  free(ptr);\n  free(v101);\n  return v86;\n}\n"], [4221358, "sub_4069AE", "bool __fastcall sub_4069AE(char *a1, struct stat *a2, char *a3, struct stat *a4, __int64 a5, _BYTE *a6, _BYTE *a7)\n{\n  bool v7; // al\n  bool result; // al\n  bool v9; // al\n  bool v13; // [rsp+3Eh] [rbp-132h]\n  struct stat *v14; // [rsp+40h] [rbp-130h]\n  struct stat *v15; // [rsp+48h] [rbp-128h]\n  struct stat v16; // [rsp+50h] [rbp-120h] BYREF\n  struct stat stat_buf; // [rsp+E0h] [rbp-90h] BYREF\n\n  v7 = a2->st_ino == a4->st_ino && a2->st_dev == a4->st_dev;\n  *a6 = 0;\n  *a7 = 0;\n  if ( v7 && *(_BYTE *)(a5 + 23) )\n  {\n    *a6 = 1;\n    return 1;\n  }\n  if ( *(_DWORD *)(a5 + 4) == 2 )\n  {\n    v13 = v7;\n    if ( (a2->st_mode & 0xF000) == 40960 && (a4->st_mode & 0xF000) == 40960 )\n      return (unsigned __int8)sub_40FC0C(a1, a3) == 0;\n    v14 = a2;\n    v15 = a4;\n  }\n  else\n  {\n    if ( !v7 )\n      return 1;\n    if ( (unsigned int)sub_419BE0(a3, &v16) || (unsigned int)sub_419BE0(a1, &stat_buf) )\n      return 1;\n    v14 = &stat_buf;\n    v15 = &v16;\n    v9 = stat_buf.st_ino == v16.st_ino && stat_buf.st_dev == v16.st_dev;\n    v13 = v9;\n    if ( (stat_buf.st_mode & 0xF000) == 40960 && (v16.st_mode & 0xF000) == 40960 && *(_BYTE *)(a5 + 21) )\n      return 1;\n  }\n  if ( *(_DWORD *)a5 )\n  {\n    if ( !v13 )\n      result = *(_BYTE *)(a5 + 24) == 1\n            || *(_DWORD *)(a5 + 4) == 2\n            || (v14->st_mode & 0xF000) != 40960\n            || (v15->st_mode & 0xF000) == 40960;\n    else\n      result = (unsigned __int8)sub_40FC0C(a1, a3) == 0;\n  }\n  else\n  {\n    if ( !*(_BYTE *)(a5 + 24) && !*(_BYTE *)(a5 + 21) )\n      goto LABEL_72;\n    if ( (v15->st_mode & 0xF000) == 40960 )\n      return 1;\n    if ( v13 && v15->st_nlink > 1 && (unsigned __int8)sub_40FC0C(a1, a3) != 1 )\n    {\n      if ( *(_BYTE *)(a5 + 24) )\n      {\n        *a7 = 1;\n        *a6 = 1;\n      }\n      result = 1;\n    }\n    else\n    {\nLABEL_72:\n      if ( (v14->st_mode & 0xF000) != 40960 && (v15->st_mode & 0xF000) != 40960 )\n      {\n        if ( v14->st_ino != v15->st_ino || v14->st_dev != v15->st_dev )\n          return 1;\n        if ( *(_BYTE *)(a5 + 23) )\n        {\n          *a6 = 1;\n          return 1;\n        }\n      }\n      if ( *(_BYTE *)(a5 + 21) && (v15->st_mode & 0xF000) == 40960 )\n        return v15->st_dev == v14->st_dev;\n      if ( *(_DWORD *)(a5 + 4) != 2 )\n        goto LABEL_69;\n      if ( (v14->st_mode & 0xF000) == 40960 )\n      {\n        if ( (unsigned int)sub_419BC0(a1, &stat_buf) )\n          return 1;\n      }\n      else\n      {\n        qmemcpy(&stat_buf, v14, sizeof(stat_buf));\n      }\n      if ( (v15->st_mode & 0xF000) == 40960 )\n      {\n        if ( (unsigned int)sub_419BC0(a3, &v16) )\n          return 1;\n      }\n      else\n      {\n        qmemcpy(&v16, v15, sizeof(v16));\n      }\n      if ( stat_buf.st_ino != v16.st_ino || stat_buf.st_dev != v16.st_dev )\n        return 1;\n      if ( *(_BYTE *)(a5 + 23) )\n      {\n        *a6 = 1;\n        result = 1;\n      }\n      else\n      {\nLABEL_69:\n        result = 0;\n      }\n    }\n  }\n  return result;\n}\n"], [4222809, "sub_406F59", "_BOOL8 __fastcall sub_406F59(const char *a1, __int16 a2)\n{\n  return (a2 & 0xF000) == 40960 || (unsigned __int8)sub_412553() || !euidaccess(a1, 2);\n}\n"], [4222886, "sub_406FA6", "unsigned __int64 __fastcall sub_406FA6(const char *a1, __int64 a2)\n{\n  __int64 v2; // r13\n  __int64 v3; // r12\n  char *v4; // rbx\n  char *v5; // rax\n  __int64 v6; // r12\n  char *v7; // rbx\n  char *v8; // rax\n  char v10; // [rsp+10h] [rbp-40h] BYREF\n  _BYTE v11[23]; // [rsp+11h] [rbp-3Fh] BYREF\n  unsigned __int64 v12; // [rsp+28h] [rbp-28h]\n\n  v12 = __readfsqword(0x28u);\n  if ( !sub_406F59(a1, *(_DWORD *)(a2 + 24)) )\n  {\n    sub_40B6FE(*(unsigned int *)(a2 + 24), &v10);\n    v11[9] = 0;\n    v2 = *(_DWORD *)(a2 + 24) & 0xFFF;\n    v3 = sub_40E392(a1);\n    v4 = s;\n    v5 = gettext(\"%s: try to overwrite %s, overriding mode %04lo (%s)? \");\n    fprintf(stderr, v5, v4, v3, v2, v11);\n  }\n  else\n  {\n    v6 = sub_40E392(a1);\n    v7 = s;\n    v8 = gettext(\"%s: overwrite %s? \");\n    fprintf(stderr, v8, v7, v6);\n  }\n  return __readfsqword(0x28u) ^ v12;\n}\n"], [4223161, "sub_4070B9", "__int64 __fastcall sub_4070B9(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = sub_40C51D(61LL, 0LL, sub_40D4AB, sub_40D521, sub_40D611);\n  *(_QWORD *)(a1 + 56) = result;\n  return result;\n}\n"], [4223214, "sub_4070EE", "__int64 __fastcall sub_4070EE(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = sub_40C51D(61LL, 0LL, sub_40D4F7, sub_40D521, sub_40D611);\n  *(_QWORD *)(a1 + 64) = result;\n  return result;\n}\n"], [4223267, "sub_407123", "_BOOL8 __fastcall sub_407123(__int64 a1, const char *a2, __int64 a3)\n{\n  bool v3; // al\n\n  if ( !*(_BYTE *)(a1 + 24) )\n    __assert_fail(\"x->move_mode\", \"../../src/src/copy.c\", 0x5B6u, \"abandon_move\");\n  v3 = 1;\n  if ( *(_DWORD *)(a1 + 8) != 2 )\n  {\n    if ( *(_DWORD *)(a1 + 8) != 3\n      && (*(_DWORD *)(a1 + 8) != 4 || !*(_BYTE *)(a1 + 44) || sub_406F59(a2, *(_DWORD *)(a3 + 24)))\n      || (sub_406FA6(a2, a3), (unsigned __int8)sub_412DA0() == 1) )\n    {\n      v3 = 0;\n    }\n  }\n  return v3;\n}\n"], [4223448, "sub_4071D8", "int __fastcall sub_4071D8(__int64 a1, __int64 a2, __int64 a3)\n{\n  const char *v3; // rbx\n  const char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n\n  v3 = (const char *)sub_40E36E(1LL, a2);\n  v4 = (const char *)sub_40E36E(0LL, a1);\n  printf(\"%s -> %s\", v4, v3);\n  if ( a3 )\n  {\n    v5 = sub_40E392(a3);\n    v6 = gettext(\" (backup: %s)\");\n    printf(v6, v5);\n  }\n  return putchar_unlocked(10);\n}\n"], [4223592, "sub_407268", "void sub_407268()\n{\n  char *v0; // rbx\n  int *v1; // rax\n\n  if ( (unsigned int)sub_404906(0LL) )\n  {\n    v0 = gettext(\"failed to restore the default file creation context\");\n    v1 = __errno_location();\n    error(1, *v1, v0);\n  }\n}\n"], [4223662, "sub_4072AE", "__int64 __fastcall sub_4072AE(__int64 a1, const char *a2, char a3, char a4)\n{\n  int v4; // eax\n  __int64 v5; // r12\n  char *v6; // rbx\n  int *v7; // rax\n  __int64 v9; // rbx\n  char *v10; // rax\n  __int64 v11; // r13\n  __int64 v12; // r12\n  char *v13; // rbx\n  int *v14; // rax\n  bool v17; // [rsp+2Fh] [rbp-21h]\n\n  v4 = sub_4134A3(4294967196LL, a1, 4294967196LL, a2, 0LL);\n  v17 = v4 != 0;\n  if ( v4 && a3 && *__errno_location() == 17 )\n  {\n    if ( unlink(a2) )\n    {\n      v5 = sub_40E392(a2);\n      v6 = gettext(\"cannot remove %s\");\n      v7 = __errno_location();\n      error(0, *v7, v6, v5);\n      return 0LL;\n    }\n    if ( a4 )\n    {\n      v9 = sub_40E392(a2);\n      v10 = gettext(\"removed %s\\n\");\n      printf(v10, v9);\n    }\n    v17 = (unsigned int)sub_4134A3(4294967196LL, a1, 4294967196LL, a2, 0LL) != 0;\n  }\n  if ( !v17 )\n    return 1LL;\n  v11 = sub_40E36E(1LL, a1);\n  v12 = sub_40E36E(0LL, a2);\n  v13 = gettext(\"cannot create hard link %s to %s\");\n  v14 = __errno_location();\n  error(0, *v14, v13, v12, v11);\n  return 0LL;\n}\n"], [4224059, "sub_40743B", "__int64 __fastcall sub_40743B(char *a1, char *a2, char a3, __int64 a4, _QWORD *a5, unsigned int *a6, char a7, char *a8, bool *a9, _BYTE *a10)\n{\n  bool v10; // al\n  __int64 v11; // r12\n  char *v12; // rbx\n  int *v13; // rax\n  __int64 v15; // rbx\n  char *v16; // rax\n  __int64 v17; // rbx\n  char *v18; // rax\n  bool v19; // al\n  bool v20; // al\n  __int64 v21; // r12\n  char *v22; // rbx\n  int *v23; // rax\n  __int64 v24; // r12\n  __int64 v25; // rbx\n  char *v26; // rax\n  _BOOL4 v27; // eax\n  __int64 v28; // rbx\n  char *v29; // rax\n  __int64 v30; // r12\n  char *v31; // rbx\n  int *v32; // rax\n  __int64 v33; // r12\n  __int64 v34; // rbx\n  char *v35; // rax\n  __int64 v36; // r12\n  __int64 v37; // rbx\n  char *v38; // rax\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r12\n  __int64 v42; // rbx\n  char *v43; // rax\n  _BYTE *v44; // rax\n  char *v45; // rax\n  __int64 v46; // rbx\n  __int64 v47; // rax\n  size_t v48; // rax\n  void *v49; // rsp\n  __int64 v50; // r12\n  char *v51; // rbx\n  int *v52; // rax\n  __int64 v53; // r12\n  char *v54; // rbx\n  int *v55; // rax\n  __int64 v56; // rbx\n  char *v57; // rax\n  __int64 v58; // r12\n  __int64 v59; // rbx\n  char *v60; // rax\n  char *v61; // rax\n  __int64 v62; // r12\n  __int64 v63; // rbx\n  char *v64; // rax\n  __int64 v65; // r12\n  __int64 v66; // rbx\n  char *v67; // rax\n  char *v68; // rax\n  __int64 v69; // r12\n  __int64 v70; // rbx\n  char *v71; // rax\n  __int64 v72; // r13\n  __int64 v73; // r12\n  char *v74; // rbx\n  int *v75; // rax\n  __int64 v76; // r13\n  __int64 v77; // r12\n  char *v78; // rbx\n  int *v79; // rax\n  int v80; // eax\n  int v81; // eax\n  bool v82; // al\n  bool v83; // al\n  int *v84; // rax\n  __int64 v85; // r12\n  char *v86; // rbx\n  int *v87; // rax\n  int *v88; // rax\n  __int64 v89; // r12\n  char *v90; // rbx\n  int *v91; // rax\n  __int64 v92; // rbx\n  char *v93; // rax\n  void *v94; // rsp\n  __int64 v95; // r12\n  char *v96; // rbx\n  int *v97; // rax\n  __int64 v98; // r12\n  char *v99; // rbx\n  int *v100; // rax\n  __int64 v101; // r12\n  char *v102; // rbx\n  int *v103; // rax\n  bool v104; // al\n  __int64 v105; // rbx\n  char *v106; // rax\n  __int64 v107; // r13\n  __int64 v108; // r12\n  char *v109; // rbx\n  int *v110; // rax\n  int v111; // eax\n  __int64 v112; // r12\n  char *v113; // rbx\n  int *v114; // rax\n  __int64 v115; // r12\n  char *v116; // rbx\n  int *v117; // rax\n  __int64 v118; // r12\n  char *v119; // rbx\n  int *v120; // rax\n  __off_t v121; // rbx\n  __int64 v122; // rbx\n  char *v123; // rax\n  char *v124; // rbx\n  int *v125; // rax\n  __int64 v126; // rbx\n  char *v127; // rax\n  __ino_t v128; // rdx\n  __int64 v129; // rdx\n  __int64 v131; // r12\n  char *v132; // rbx\n  int *v133; // rax\n  int v134; // eax\n  char *v135; // rdi\n  int v136; // eax\n  __int64 v137; // r12\n  char *v138; // rbx\n  int *v139; // rax\n  __int64 v140; // r12\n  char *v141; // rbx\n  int *v142; // rax\n  __int64 v143; // r12\n  char *v144; // rbx\n  int *v145; // rax\n  __int64 v146; // r12\n  __int64 v147; // rbx\n  char *v148; // rax\n  _QWORD *v150; // [rsp+18h] [rbp-318h] BYREF\n  __int64 v151; // [rsp+20h] [rbp-310h]\n  char v152; // [rsp+28h] [rbp-308h]\n  char v153[4]; // [rsp+2Ch] [rbp-304h] BYREF\n  char *old; // [rsp+30h] [rbp-300h]\n  char *name; // [rsp+38h] [rbp-2F8h]\n  char v156; // [rsp+4Ch] [rbp-2E4h]\n  char v157; // [rsp+4Dh] [rbp-2E3h]\n  bool v158; // [rsp+4Eh] [rbp-2E2h]\n  char v159; // [rsp+4Fh] [rbp-2E1h]\n  char v160; // [rsp+50h] [rbp-2E0h]\n  bool v161; // [rsp+51h] [rbp-2DFh]\n  char v162; // [rsp+52h] [rbp-2DEh]\n  char v163; // [rsp+53h] [rbp-2DDh]\n  bool v164; // [rsp+54h] [rbp-2DCh]\n  bool v165; // [rsp+55h] [rbp-2DBh]\n  bool v166; // [rsp+56h] [rbp-2DAh]\n  bool v167; // [rsp+57h] [rbp-2D9h]\n  __mode_t v168; // [rsp+58h] [rbp-2D8h]\n  __int64 v169; // [rsp+5Ch] [rbp-2D4h]\n  _BOOL4 v170; // [rsp+64h] [rbp-2CCh]\n  int v171; // [rsp+68h] [rbp-2C8h]\n  int errnum; // [rsp+6Ch] [rbp-2C4h]\n  __int64 v173; // [rsp+70h] [rbp-2C0h]\n  char *newa; // [rsp+78h] [rbp-2B8h]\n  struct stat *v175; // [rsp+80h] [rbp-2B0h]\n  char *s1; // [rsp+88h] [rbp-2A8h]\n  char *format; // [rsp+90h] [rbp-2A0h]\n  char *s; // [rsp+98h] [rbp-298h]\n  size_t n; // [rsp+A0h] [rbp-290h]\n  void *dest; // [rsp+A8h] [rbp-288h]\n  _QWORD *v181; // [rsp+B0h] [rbp-280h]\n  char *s2; // [rsp+B8h] [rbp-278h]\n  char *from; // [rsp+C0h] [rbp-270h]\n  char *v184; // [rsp+C8h] [rbp-268h]\n  struct stat stat_buf; // [rsp+D0h] [rbp-260h] BYREF\n  struct stat v186; // [rsp+160h] [rbp-1D0h] BYREF\n  struct stat v187; // [rsp+1F0h] [rbp-140h] BYREF\n  struct stat v188; // [rsp+280h] [rbp-B0h] BYREF\n\n  name = a1;\n  old = a2;\n  v151 = a4;\n  v150 = a5;\n  v153[0] = a3;\n  v152 = a7;\n  v156 = 0;\n  v173 = 0LL;\n  newa = 0LL;\n  v157 = 0;\n  v159 = 0;\n  v160 = 0;\n  v161 = 0;\n  if ( *((_BYTE *)a6 + 24) && a10 )\n    *a10 = 0;\n  *a9 = 0;\n  if ( a6[1] == 2 )\n    v10 = (unsigned int)sub_419BE0(name, &stat_buf) != 0;\n  else\n    v10 = (unsigned int)sub_419BC0(name, &stat_buf) != 0;\n  if ( v10 )\n  {\n    v11 = sub_40E392(name);\n    v12 = gettext(\"cannot stat %s\");\n    v13 = __errno_location();\n    error(0, *v13, v12, v11);\n    return 0LL;\n  }\n  v168 = stat_buf.st_mode;\n  if ( (stat_buf.st_mode & 0xF000) == 0x4000 && *((_BYTE *)a6 + 39) != 1 )\n  {\n    v15 = sub_40E392(name);\n    v16 = gettext(\"omitting directory %s\");\n    error(0, 0, v16, v15);\n    return 0LL;\n  }\n  if ( v152 )\n  {\n    if ( (stat_buf.st_mode & 0xF000) != 0x4000\n      && !*a6\n      && (unsigned __int8)sub_40B5F7(*((_QWORD *)a6 + 8), name, &stat_buf) )\n    {\n      v17 = sub_40E392(name);\n      v18 = gettext(\"warning: source file %s specified more than once\");\n      error(0, 0, v18, v17);\n      return 1LL;\n    }\n    sub_40B55C(*((_QWORD *)a6 + 8), name, &stat_buf);\n  }\n  if ( v153[0] != 1 )\n  {\n    v19 = ((v168 & 0xF000) == 0x8000 || *((_BYTE *)a6 + 20) && (v168 & 0xF000) != 0x4000 && (v168 & 0xF000) != 40960)\n       && *((_BYTE *)a6 + 24) != 1\n       && *((_BYTE *)a6 + 41) != 1\n       && *((_BYTE *)a6 + 23) != 1\n       && !*a6\n       && *((_BYTE *)a6 + 21) != 1;\n    v164 = v19;\n    if ( v19 )\n      v20 = (unsigned int)sub_419BC0(old, &v186) != 0;\n    else\n      v20 = (unsigned int)sub_419BE0(old, &v186) != 0;\n    if ( v20 )\n    {\n      if ( *__errno_location() != 2 )\n      {\n        v21 = sub_40E392(old);\n        v22 = gettext(\"cannot stat %s\");\n        v23 = __errno_location();\n        error(0, *v23, v22, v21);\n        return 0LL;\n      }\n      v153[0] = 1;\n    }\n    else\n    {\n      v161 = !v164;\n      if ( !sub_4069AE(name, &stat_buf, old, &v186, (__int64)a6, &v187, &v188) )\n      {\n        v24 = sub_40E36E(1LL, old);\n        v25 = sub_40E36E(0LL, name);\n        v26 = gettext(\"%s and %s are the same file\");\n        error(0, 0, v26, v25, v24);\n        return 0LL;\n      }\n      if ( (v168 & 0xF000) != 0x4000 && *((_BYTE *)a6 + 42) )\n      {\n        v27 = *((_BYTE *)a6 + 30) && (*((_BYTE *)a6 + 24) != 1 || v186.st_dev != stat_buf.st_dev);\n        v170 = v27;\n        if ( (int)sub_4107B4(old, &v186, &stat_buf, v27) >= 0 )\n        {\n          if ( a10 )\n            *a10 = 1;\n          v173 = sub_409DF5(old, stat_buf.st_ino, stat_buf.st_dev);\n          if ( !v173 || (unsigned __int8)sub_4072AE(v173, old, 1, *((_BYTE *)a6 + 43)) == 1 )\n            return 1LL;\n          goto LABEL_340;\n        }\n      }\n      if ( *((_BYTE *)a6 + 24) )\n      {\n        if ( sub_407123((__int64)a6, old, (__int64)&v186) || LOBYTE(v188.st_dev) && !unlink(name) )\n        {\n          if ( a10 )\n            *a10 = 1;\n          if ( LOBYTE(v188.st_dev) && *((_BYTE *)a6 + 43) )\n          {\n            v28 = sub_40E392(name);\n            v29 = gettext(\"removed %s\\n\");\n            printf(v29, v28);\n          }\n          return 1LL;\n        }\n        if ( LOBYTE(v188.st_dev) )\n        {\n          v30 = sub_40E392(name);\n          v31 = gettext(\"cannot remove %s\");\n          v32 = __errno_location();\n          error(0, *v32, v31, v30);\n          return 0LL;\n        }\n      }\n      else if ( (v168 & 0xF000) != 0x4000 )\n      {\n        if ( a6[2] == 2 )\n          return 1LL;\n        if ( a6[2] == 3 )\n        {\n          sub_406FA6(old, (__int64)&v186);\n          if ( (unsigned __int8)sub_412DA0() != 1 )\n            return 1LL;\n        }\n      }\n      if ( LOBYTE(v187.st_dev) )\n        return 1LL;\n      if ( (v186.st_mode & 0xF000) != 0x4000 )\n      {\n        if ( (v168 & 0xF000) == 0x4000 && (!*((_BYTE *)a6 + 24) || !*a6) )\n        {\n          v33 = sub_40E36E(1LL, name);\n          v34 = sub_40E36E(0LL, old);\n          v35 = gettext(\"cannot overwrite non-directory %s with directory %s\");\n          error(0, 0, v35, v34, v33);\n          return 0LL;\n        }\n        if ( v152 && *a6 != 3 && (unsigned __int8)sub_40B5F7(*((_QWORD *)a6 + 7), old, &v186) )\n        {\n          v36 = sub_40E36E(1LL, name);\n          v37 = sub_40E36E(0LL, old);\n          v38 = gettext(\"will not overwrite just-created %s with %s\");\n          error(0, 0, v38, v37, v36);\n          return 0LL;\n        }\n      }\n      if ( (v168 & 0xF000) != 0x4000 && (v186.st_mode & 0xF000) == 0x4000 && (!*((_BYTE *)a6 + 24) || !*a6) )\n      {\n        v39 = sub_40E392(old);\n        v40 = gettext(\"cannot overwrite directory %s with non-directory\");\n        error(0, 0, v40, v39);\n        return 0LL;\n      }\n      if ( *((_BYTE *)a6 + 24) && (stat_buf.st_mode & 0xF000) == 0x4000 && (v186.st_mode & 0xF000) != 0x4000 && !*a6 )\n      {\n        v41 = sub_40E36E(0LL, old);\n        v42 = sub_40E36E(0LL, name);\n        v43 = gettext(\"cannot move directory onto non-directory: %s -> %s\");\n        error(0, 0, v43, v42, v41);\n        return 0LL;\n      }\n      if ( *a6\n        && (v44 = (_BYTE *)sub_40B393(name), !sub_404967(v44))\n        && (*((_BYTE *)a6 + 24) || (v186.st_mode & 0xF000) != 0x4000) )\n      {\n        s1 = (char *)sub_40AD96(old, *a6);\n        if ( !strcmp(s1, name) )\n        {\n          if ( *((_BYTE *)a6 + 24) )\n            v45 = gettext(\"backing up %s would destroy source;  %s not moved\");\n          else\n            v45 = gettext(\"backing up %s would destroy source;  %s not copied\");\n          format = v45;\n          v46 = sub_40E36E(1LL, name);\n          v47 = sub_40E36E(0LL, old);\n          error(0, 0, format, v47, v46);\n          free(s1);\n          return 0LL;\n        }\n        s = s1;\n        v48 = strlen(s1);\n        n = v48 + 1;\n        v49 = alloca(16 * ((v48 + 31) / 0x10));\n        dest = (void *)(16 * (((unsigned __int64)&v150 + 7) >> 4));\n        newa = (char *)memcpy(dest, s1, v48 + 1);\n        free(s1);\n        if ( rename(old, newa) )\n        {\n          if ( *__errno_location() != 2 )\n          {\n            v50 = sub_40E392(old);\n            v51 = gettext(\"cannot backup %s\");\n            v52 = __errno_location();\n            error(0, *v52, v51, v50);\n            return 0LL;\n          }\n          newa = 0LL;\n        }\n        else\n        {\n          v157 = 1;\n        }\n        v153[0] = 1;\n      }\n      else if ( (v186.st_mode & 0xF000) != 0x4000\n             && *((_BYTE *)a6 + 24) != 1\n             && (*((_BYTE *)a6 + 21)\n              || *((_BYTE *)a6 + 31) && v186.st_nlink > 1\n              || a6[1] == 2 && (stat_buf.st_mode & 0xF000) != 0x8000) )\n      {\n        if ( unlink(old) && *__errno_location() != 2 )\n        {\n          v53 = sub_40E392(old);\n          v54 = gettext(\"cannot remove %s\");\n          v55 = __errno_location();\n          error(0, *v55, v54, v53);\n          return 0LL;\n        }\n        v153[0] = 1;\n        if ( *((_BYTE *)a6 + 43) )\n        {\n          v56 = sub_40E392(old);\n          v57 = gettext(\"removed %s\\n\");\n          printf(v57, v56);\n        }\n      }\n    }\n  }\n  if ( v152 && *((_QWORD *)a6 + 7) && *((_BYTE *)a6 + 24) != 1 && !*a6 )\n  {\n    v162 = 1;\n    if ( v161 )\n    {\n      v175 = &v186;\n    }\n    else if ( (unsigned int)sub_419BE0(old, &v188) )\n    {\n      v162 = 0;\n    }\n    else\n    {\n      v175 = &v188;\n    }\n    if ( v162 && (v175->st_mode & 0xF000) == 40960 && (unsigned __int8)sub_40B5F7(*((_QWORD *)a6 + 7), old, v175) )\n    {\n      v58 = sub_40E36E(1LL, old);\n      v59 = sub_40E36E(0LL, name);\n      v60 = gettext(\"will not copy %s through just-created symlink %s\");\n      error(0, 0, v60, v59, v58);\n      return 0LL;\n    }\n  }\n  if ( *((_BYTE *)a6 + 43) && (v168 & 0xF000) != 0x4000 )\n  {\n    if ( v157 )\n      v61 = newa;\n    else\n      v61 = 0LL;\n    sub_4071D8((__int64)name, (__int64)old, (__int64)v61);\n  }\n  if ( *((_BYTE *)a6 + 24) && stat_buf.st_nlink == 1 )\n    goto LABEL_149;\n  if ( *((_BYTE *)a6 + 31) && *((_BYTE *)a6 + 23) != 1 && (stat_buf.st_nlink > 1 || v152 && a6[1] == 3 || a6[1] == 4) )\n    goto LABEL_148;\n  if ( !*((_BYTE *)a6 + 39) || (v168 & 0xF000) != 0x4000 )\n    goto LABEL_150;\n  if ( v152 )\nLABEL_148:\n    v173 = sub_409DF5(old, stat_buf.st_ino, stat_buf.st_dev);\n  else\nLABEL_149:\n    v173 = sub_409DA3(stat_buf.st_ino, stat_buf.st_dev);\nLABEL_150:\n  if ( v173 )\n  {\n    if ( (v168 & 0xF000) != 0x4000 )\n    {\n      if ( (unsigned __int8)sub_4072AE(v173, old, 1, *((_BYTE *)a6 + 43)) == 1 )\n        return 1LL;\n      goto LABEL_340;\n    }\n    if ( (unsigned __int8)sub_40FC0C(name, v173) )\n    {\n      v62 = sub_40E36E(1LL, qword_6224C8);\n      v63 = sub_40E36E(0LL, qword_6224C0);\n      v64 = gettext(\"cannot copy a directory, %s, into itself, %s\");\n      error(0, 0, v64, v63, v62);\n      *a9 = 1;\nLABEL_340:\n      if ( *((_BYTE *)a6 + 34) )\n        sub_407268();\n      if ( !v173 )\n        sub_409D4C(stat_buf.st_ino, stat_buf.st_dev);\n      if ( newa )\n      {\n        if ( rename(newa, old) )\n        {\n          v143 = sub_40E392(old);\n          v144 = gettext(\"cannot un-backup %s\");\n          v145 = __errno_location();\n          error(0, *v145, v144, v143);\n        }\n        else if ( *((_BYTE *)a6 + 43) )\n        {\n          v146 = sub_40E36E(1LL, old);\n          v147 = sub_40E36E(0LL, newa);\n          v148 = gettext(\"%s -> %s (unbackup)\\n\");\n          printf(v148, v147, v146);\n        }\n      }\n      return 0LL;\n    }\n    if ( a6[1] != 4 )\n    {\n      v65 = sub_40E36E(1LL, v173);\n      v66 = sub_40E36E(0LL, old);\n      v67 = gettext(\"will not create hard link %s to directory %s\");\n      error(0, 0, v67, v66, v65);\n      goto LABEL_340;\n    }\n  }\n  if ( *((_BYTE *)a6 + 24) )\n  {\n    if ( !rename(name, old) )\n    {\n      if ( *((_BYTE *)a6 + 43) && (v168 & 0xF000) == 0x4000 )\n      {\n        if ( v157 )\n          v68 = newa;\n        else\n          v68 = 0LL;\n        sub_4071D8((__int64)name, (__int64)old, (__int64)v68);\n      }\n      if ( a10 )\n        *a10 = 1;\n      if ( v152 )\n        sub_40B55C(*((_QWORD *)a6 + 7), old, &stat_buf);\n      return 1LL;\n    }\n    if ( *__errno_location() == 22 )\n    {\n      v69 = sub_40E36E(1LL, qword_6224C8);\n      v70 = sub_40E36E(0LL, qword_6224C0);\n      v71 = gettext(\"cannot move %s to a subdirectory of itself, %s\");\n      error(0, 0, v71, v70, v69);\n      *a9 = 1;\n      return 1LL;\n    }\n    if ( *__errno_location() != 18 )\n    {\n      v72 = sub_40E36E(1LL, old);\n      v73 = sub_40E36E(0LL, name);\n      v74 = gettext(\"cannot move %s to %s\");\n      v75 = __errno_location();\n      error(0, *v75, v74, v73, v72);\n      sub_409D4C(stat_buf.st_ino, stat_buf.st_dev);\n      return 0LL;\n    }\n    if ( unlink(old) && *__errno_location() != 2 )\n    {\n      v76 = sub_40E36E(1LL, old);\n      v77 = sub_40E36E(0LL, name);\n      v78 = gettext(\"inter-device move failed: %s to %s; unable to remove target\");\n      v79 = __errno_location();\n      error(0, *v79, v78, v77, v76);\n      sub_409D4C(stat_buf.st_ino, stat_buf.st_dev);\n      return 0LL;\n    }\n    v153[0] = 1;\n  }\n  if ( *((_BYTE *)a6 + 40) )\n    v80 = a6[4] & 0xFFF;\n  else\n    v80 = v168 & 0xFFF;\n  v171 = v80;\n  if ( *((_BYTE *)a6 + 28) != 1 )\n  {\n    if ( (v168 & 0xF000) == 0x4000 )\n      v81 = 18;\n    else\n      v81 = 0;\n  }\n  else\n  {\n    v81 = 63;\n  }\n  HIDWORD(v169) = v171 & v81;\n  v158 = 1;\n  if ( *((_BYTE *)a6 + 34) )\n  {\n    v82 = *((_BYTE *)a6 + 32) != 1 || *((_BYTE *)a6 + 35);\n    v165 = v82;\n    v83 = !v82 && *((_BYTE *)a6 + 38) != 1;\n    v166 = v83;\n    if ( (int)sub_404924(name, &v188) < 0 )\n    {\n      if ( v165 || v166 && (v88 = __errno_location(), !sub_4053F1(*v88)) )\n      {\n        v89 = sub_40E392(name);\n        v90 = gettext(\"failed to get security context of %s\");\n        v91 = __errno_location();\n        error(0, *v91, v90, v89);\n      }\n      if ( *((_BYTE *)a6 + 35) )\n        return 0LL;\n    }\n    else\n    {\n      if ( (int)sub_404906(v188.st_dev) < 0 )\n      {\n        if ( v165 || v166 && (v84 = __errno_location(), !sub_4053F1(*v84)) )\n        {\n          v85 = sub_40E392(v188.st_dev);\n          v86 = gettext(\"failed to set default file creation context to %s\");\n          v87 = __errno_location();\n          error(0, *v87, v86, v85);\n        }\n        if ( *((_BYTE *)a6 + 35) )\n        {\n          sub_4048DE();\n          return 0LL;\n        }\n      }\n      sub_4048DE();\n    }\n  }\n  if ( (v168 & 0xF000) == 0x4000 )\n  {\n    if ( (unsigned __int8)sub_40539A(&stat_buf, v150) )\n    {\n      v92 = sub_40E392(name);\n      v93 = gettext(\"cannot copy cyclic symbolic link %s\");\n      error(0, 0, v93, v92);\n      goto LABEL_340;\n    }\n    v94 = alloca(48LL);\n    v181 = (_QWORD *)(16 * (((unsigned __int64)&v150 + 7) >> 4));\n    *v181 = v150;\n    v181[1] = stat_buf.st_ino;\n    v181[2] = stat_buf.st_dev;\n    if ( !v153[0] && (v186.st_mode & 0xF000) == 0x4000 )\n    {\n      HIDWORD(v169) = 0;\n    }\n    else\n    {\n      if ( mkdir(old, v171 & ~HIDWORD(v169)) )\n      {\n        v95 = sub_40E392(old);\n        v96 = gettext(\"cannot create directory %s\");\n        v97 = __errno_location();\n        error(0, *v97, v96, v95);\n        goto LABEL_340;\n      }\n      if ( (unsigned int)sub_419BE0(old, &v186) )\n      {\n        v98 = sub_40E392(old);\n        v99 = gettext(\"cannot stat %s\");\n        v100 = __errno_location();\n        error(0, *v100, v99, v98);\n        goto LABEL_340;\n      }\n      if ( (v186.st_mode & 0x1C0) != 448 )\n      {\n        LODWORD(v169) = v186.st_mode;\n        v156 = 1;\n        if ( chmod(old, v186.st_mode | 0x1C0) )\n        {\n          v101 = sub_40E392(old);\n          v102 = gettext(\"setting permissions for %s\");\n          v103 = __errno_location();\n          error(0, *v103, v102, v101);\n          goto LABEL_340;\n        }\n      }\n      if ( *a8 != 1 )\n      {\n        sub_409DF5(old, v186.st_ino, v186.st_dev);\n        *a8 = 1;\n      }\n      if ( *((_BYTE *)a6 + 43) )\n        sub_4071D8((__int64)name, (__int64)old, 0LL);\n    }\n    if ( !*((_BYTE *)a6 + 27) || !v151 || stat_buf.st_dev == v151 )\n      v158 = sub_405432((__int64)name, (__int64)old, v153[0], &stat_buf, (int)v181, (__int64)a6, a8, a9);\n  }\n  else if ( *((_BYTE *)a6 + 41) )\n  {\n    v160 = 1;\n    if ( *name != 47 )\n    {\n      s2 = (char *)sub_40B245(old);\n      v104 = !strcmp(\".\", s2)\n          || (unsigned int)sub_419BC0(\".\", &v187)\n          || (unsigned int)sub_419BC0(s2, &v188)\n          || v187.st_ino == v188.st_ino && v187.st_dev == v188.st_dev;\n      v167 = v104;\n      free(s2);\n      if ( !v167 )\n      {\n        v105 = sub_40E392(old);\n        v106 = gettext(\"%s: can make relative symbolic links only in current directory\");\n        error(0, 0, v106, v105);\n        goto LABEL_340;\n      }\n    }\n    if ( symlink(name, old) )\n    {\n      v107 = sub_40E36E(1LL, name);\n      v108 = sub_40E36E(0LL, old);\n      v109 = gettext(\"cannot create symbolic link %s to %s\");\n      v110 = __errno_location();\n      error(0, *v110, v109, v108, v107);\n      goto LABEL_340;\n    }\n  }\n  else if ( *((_BYTE *)a6 + 23) )\n  {\n    if ( (unsigned __int8)sub_4072AE((__int64)name, old, 0, 0) != 1 )\n      goto LABEL_340;\n  }\n  else if ( (v168 & 0xF000) == 0x8000 || *((_BYTE *)a6 + 20) && (v168 & 0xF000) != 40960 )\n  {\n    v159 = 1;\n    if ( (unsigned __int8)sub_4059D1(\n                            (__int64)name,\n                            old,\n                            (__int64)a6,\n                            v168 & 0x1FF,\n                            SHIDWORD(v169),\n                            v153,\n                            (__int64)&stat_buf) != 1 )\n      goto LABEL_340;\n  }\n  else\n  {\n    switch ( v168 & 0xF000 )\n    {\n      case 0x1000u:\n        if ( (unsigned int)sub_419BF0(old, v168 & ~HIDWORD(v169)) )\n        {\n          v111 = v168 & ~HIDWORD(v169);\n          BYTE1(v111) &= 0xEFu;\n          if ( mkfifo(old, v111) )\n          {\n            v112 = sub_40E392(old);\n            v113 = gettext(\"cannot create fifo %s\");\n            v114 = __errno_location();\n            error(0, *v114, v113, v112);\n            goto LABEL_340;\n          }\n        }\n        break;\n      case 0x6000u:\n      case 0x2000u:\n      case 0xC000u:\n        if ( (unsigned int)sub_419BF0(old, v168 & ~HIDWORD(v169)) )\n        {\n          v115 = sub_40E392(old);\n          v116 = gettext(\"cannot create special file %s\");\n          v117 = __errno_location();\n          error(0, *v117, v116, v115);\n          goto LABEL_340;\n        }\n        break;\n      case 0xA000u:\n        from = (char *)sub_40A7FC(name, stat_buf.st_size);\n        v160 = 1;\n        if ( !from )\n        {\n          v118 = sub_40E392(name);\n          v119 = gettext(\"cannot read symbolic link %s\");\n          v120 = __errno_location();\n          error(0, *v120, v119, v118);\n          goto LABEL_340;\n        }\n        if ( symlink(from, old) )\n        {\n          errnum = *__errno_location();\n          v163 = 0;\n          if ( *((_BYTE *)a6 + 42) )\n          {\n            if ( v153[0] != 1 && (v186.st_mode & 0xF000) == 40960 )\n            {\n              v121 = v186.st_size;\n              if ( v121 == strlen(from) )\n              {\n                v184 = (char *)sub_40A7FC(old, v186.st_size);\n                if ( v184 && !strcmp(v184, from) )\n                  v163 = 1;\n                free(v184);\n              }\n            }\n          }\n          free(from);\n          if ( v163 != 1 )\n          {\n            v122 = sub_40E392(old);\n            v123 = gettext(\"cannot create symbolic link %s\");\n            error(0, errnum, v123, v122);\n            goto LABEL_340;\n          }\n        }\n        else\n        {\n          free(from);\n        }\n        if ( *((_BYTE *)a6 + 34) )\n          sub_407268();\n        if ( *((_BYTE *)a6 + 28)\n          && lchown(old, stat_buf.st_uid, stat_buf.st_gid)\n          && (unsigned __int8)sub_409BE0(a6) != 1 )\n        {\n          v124 = gettext(\"failed to preserve ownership for %s\");\n          v125 = __errno_location();\n          error(0, *v125, v124, old);\n          goto LABEL_340;\n        }\n        break;\n      default:\n        v126 = sub_40E392(name);\n        v127 = gettext(\"%s has unknown file type\");\n        error(0, 0, v127, v126);\n        goto LABEL_340;\n    }\n  }\n  if ( v152 && *((_QWORD *)a6 + 7) && !(unsigned int)sub_419BE0(old, &v188) )\n    sub_40B55C(*((_QWORD *)a6 + 7), old, &v188);\n  if ( *((_BYTE *)a6 + 23) && (v168 & 0xF000) != 0x4000 )\n    return v158;\n  if ( v159 )\n    return v158;\n  if ( *((_BYTE *)a6 + 30) )\n  {\n    v188.st_dev = sub_404B16((__int64)&stat_buf);\n    v188.st_ino = v128;\n    v188.st_nlink = sub_404B2C((__int64)&stat_buf);\n    *(_QWORD *)&v188.st_mode = v129;\n    if ( v160 ? (unsigned int)sub_404B42((__int64)old, (__int64)&v188) != 0 : (unsigned int)sub_411A21(old, &v188) != 0 )\n    {\n      v131 = sub_40E392(old);\n      v132 = gettext(\"preserving times for %s\");\n      v133 = __errno_location();\n      error(0, *v133, v132, v131);\n      if ( *((_BYTE *)a6 + 33) )\n        return 0LL;\n    }\n  }\n  if ( v160 )\n    return v158;\n  if ( *((_BYTE *)a6 + 28) && (v153[0] || stat_buf.st_uid != v186.st_uid || stat_buf.st_gid != v186.st_gid) )\n  {\n    v134 = sub_4056B2((__int64)a6, old, 0xFFFFFFFF, &stat_buf, v153[0], (__int64)&v186);\n    if ( v134 == -1 )\n      return 0LL;\n    if ( !v134 )\n      v168 &= 0xFFFFF1FF;\n  }\n  v135 = old;\n  sub_405931();\n  if ( *((_BYTE *)a6 + 36) )\n  {\n    v135 = name;\n    if ( (unsigned __int8)sub_405415(name, 0xFFFFFFFFLL, old, 0xFFFFFFFFLL, a6) != 1 )\n    {\n      if ( *((_BYTE *)a6 + 37) )\n        return 0LL;\n    }\n  }\n  if ( *((_BYTE *)a6 + 29) || *((_BYTE *)a6 + 24) )\n  {\n    if ( (unsigned int)sub_40A72C(name, 0xFFFFFFFFLL, old, 0xFFFFFFFFLL, v168) && *((_BYTE *)a6 + 33) )\n      return 0LL;\n  }\n  else if ( *((_BYTE *)a6 + 40) )\n  {\n    if ( (unsigned int)sub_40A684(old, 0xFFFFFFFFLL, a6[4]) )\n      return 0LL;\n  }\n  else\n  {\n    if ( HIDWORD(v169) )\n    {\n      v136 = sub_409C68(v135, 0xFFFFFFFFLL);\n      HIDWORD(v169) &= ~v136;\n      if ( HIDWORD(v169) )\n      {\n        if ( v156 != 1 )\n        {\n          if ( v153[0] && (unsigned int)sub_419BE0(old, &v186) )\n          {\n            v137 = sub_40E392(old);\n            v138 = gettext(\"cannot stat %s\");\n            v139 = __errno_location();\n            error(0, *v139, v138, v137);\n            return 0LL;\n          }\n          LODWORD(v169) = v186.st_mode;\n          if ( (HIDWORD(v169) & ~v186.st_mode) != 0 )\n            v156 = 1;\n        }\n      }\n    }\n    if ( v156 )\n    {\n      if ( chmod(old, HIDWORD(v169) | v169) )\n      {\n        v140 = sub_40E392(old);\n        v141 = gettext(\"preserving permissions for %s\");\n        v142 = __errno_location();\n        error(0, *v142, v141, v140);\n        if ( *((_BYTE *)a6 + 33) )\n          return 0LL;\n      }\n    }\n  }\n  return v158;\n}\n"], [4233660, "sub_4099BC", "__int64 __fastcall sub_4099BC(__int64 a1)\n{\n  if ( !a1 )\n    __assert_fail(\"co != ((void *)0)\", \"../../src/src/copy.c\", 0xA11u, \"valid_options\");\n  if ( *(_DWORD *)a1 > 3u )\n    __assert_fail(\n      \"((unsigned int) (co->backup_type) <= numbered_backups)\",\n      \"../../src/src/copy.c\",\n      0xA12u,\n      \"valid_options\");\n  if ( *(_DWORD *)(a1 + 12) != 1 && *(_DWORD *)(a1 + 12) != 2 && *(_DWORD *)(a1 + 12) != 3 )\n    __assert_fail(\n      \"((co->sparse_mode) == SPARSE_NEVER || (co->sparse_mode) == SPARSE_AUTO || (co->sparse_mode) == SPARSE_ALWAYS)\",\n      \"../../src/src/copy.c\",\n      0xA13u,\n      \"valid_options\");\n  if ( *(_DWORD *)(a1 + 48) && *(_DWORD *)(a1 + 48) != 1 && *(_DWORD *)(a1 + 48) != 2 )\n    __assert_fail(\n      \"((co->reflink_mode) == REFLINK_NEVER || (co->reflink_mode) == REFLINK_AUTO || (co->reflink_mode) == REFLINK_ALWAYS)\",\n      \"../../src/src/copy.c\",\n      0xA14u,\n      \"valid_options\");\n  if ( *(_BYTE *)(a1 + 23) && *(_BYTE *)(a1 + 41) )\n    __assert_fail(\"!(co->hard_link && co->symbolic_link)\", \"../../src/src/copy.c\", 0xA15u, \"valid_options\");\n  if ( *(_DWORD *)(a1 + 48) == 2 && *(_DWORD *)(a1 + 12) != 2 )\n    __assert_fail(\n      \"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\",\n      \"../../src/src/copy.c\",\n      0xA18u,\n      \"valid_options\");\n  return 1LL;\n}\n"], [4233966, "sub_409AEE", "__int64 __fastcall sub_409AEE(char *a1, char *a2, char a3, unsigned int *a4, bool *a5, _BYTE *a6)\n{\n  char v11; // [rsp+5Fh] [rbp-1h] BYREF\n\n  if ( !(unsigned __int8)sub_4099BC((__int64)a4) )\n    __assert_fail(\"valid_options (options)\", \"../../src/src/copy.c\", 0xA2Au, \"copy\");\n  qword_6224C0 = (__int64)a1;\n  qword_6224C8 = (__int64)a2;\n  v11 = 0;\n  return sub_40743B(a1, a2, a3, 0LL, 0LL, a4, 1, &v11, a5, a6);\n}\n"], [4234140, "sub_409B9C", "_BYTE *__fastcall sub_409B9C(_BYTE *a1)\n{\n  _BYTE *result; // rax\n\n  memset(a1, 0, 0x48uLL);\n  a1[26] = geteuid() == 0;\n  result = a1;\n  a1[25] = a1[26];\n  return result;\n}\n"], [4234208, "sub_409BE0", "_BOOL8 __fastcall sub_409BE0(__int64 a1)\n{\n  return (*__errno_location() == 1 || *__errno_location() == 22) && *(_BYTE *)(a1 + 25) != 1;\n}\n"], [4234276, "sub_409C24", "_BOOL8 __fastcall sub_409C24(__int64 a1)\n{\n  return (*__errno_location() == 1 || *__errno_location() == 22) && *(_BYTE *)(a1 + 26) != 1;\n}\n"], [4234344, "sub_409C68", "__int64 sub_409C68()\n{\n  if ( mask == -1 )\n  {\n    mask = umask(0);\n    umask(mask);\n  }\n  return mask;\n}\n"], [4234396, "sub_409C9C", "unsigned __int64 __fastcall sub_409C9C(_QWORD *a1, unsigned __int64 a2)\n{\n  return *a1 % a2;\n}\n"], [4234437, "sub_409CC5", "_BOOL8 __fastcall sub_409CC5(_QWORD *a1, _QWORD *a2)\n{\n  return *a1 == *a2 && a1[1] == a2[1];\n}\n"], [4234522, "sub_409D1A", "void __fastcall sub_409D1A(void **a1)\n{\n  free(a1[2]);\n  free(a1);\n}\n"], [4234572, "sub_409D4C", "void __fastcall sub_409D4C(__int64 a1, __int64 a2)\n{\n  void **v2; // [rsp+18h] [rbp-28h]\n  __int64 v3[4]; // [rsp+20h] [rbp-20h] BYREF\n\n  v3[0] = a1;\n  v3[1] = a2;\n  v3[2] = 0LL;\n  v2 = (void **)sub_40D1FC(qword_6228E0, v3);\n  if ( v2 )\n    sub_409D1A(v2);\n}\n"], [4234659, "sub_409DA3", "__int64 __fastcall sub_409DA3(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  __int64 v3; // [rsp+18h] [rbp-28h]\n  __int64 v4[4]; // [rsp+20h] [rbp-20h] BYREF\n\n  v4[0] = a1;\n  v4[1] = a2;\n  v3 = sub_40BEE4(qword_6228E0, v4);\n  if ( v3 )\n    result = *(_QWORD *)(v3 + 16);\n  else\n    result = 0LL;\n  return result;\n}\n"], [4234741, "sub_409DF5", "__int64 __fastcall sub_409DF5(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // [rsp+20h] [rbp-10h]\n  __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v5 = sub_4126DD(24LL);\n  *(_QWORD *)(v5 + 16) = sub_412832(a1);\n  *(_QWORD *)v5 = a2;\n  *(_QWORD *)(v5 + 8) = a3;\n  v6 = sub_40D1B3(qword_6228E0, v5);\n  if ( !v6 )\n    sub_41285F();\n  if ( v6 == v5 )\n    return 0LL;\n  sub_409D1A((void **)v5);\n  return *(_QWORD *)(v6 + 16);\n}\n"], [4234898, "sub_409E92", "__int64 sub_409E92()\n{\n  __int64 result; // rax\n\n  qword_6228E0 = sub_40C51D(103LL, 0LL, sub_409C9C, sub_409CC5, sub_409D1A);\n  result = qword_6228E0;\n  if ( !qword_6228E0 )\n    sub_41285F();\n  return result;\n}\n"], [4234959, "sub_409ECF", "__int64 sub_409ECF()\n{\n  return sub_40C788(qword_6228E0);\n}\n"], [4234980, "sub_409EE4", "__int64 sub_409EE4()\n{\n  return 1LL;\n}\n"], [4234991, "sub_409EEF", "__int64 __fastcall sub_409EEF(int a1, __int64 a2)\n{\n  int v2; // edx\n  __int64 result; // rax\n\n  *(_DWORD *)a2 = a1;\n  *(_DWORD *)(a2 + 20) = 0;\n  *(_QWORD *)(a2 + 32) = 0LL;\n  *(_QWORD *)(a2 + 8) = 0LL;\n  *(_BYTE *)(a2 + 24) = 0;\n  *(_BYTE *)(a2 + 25) = 0;\n  v2 = (unsigned __int8)sub_409EE4();\n  result = a2;\n  *(_DWORD *)(a2 + 16) = v2;\n  return result;\n}\n"], [4235083, "sub_409F4B", "bool __fastcall sub_409F4B(__int64 a1)\n{\n  unsigned int v2; // [rsp+10h] [rbp-1050h]\n  unsigned int i; // [rsp+14h] [rbp-104Ch]\n  __int64 v4; // [rsp+18h] [rbp-1048h]\n  __int64 v5; // [rsp+20h] [rbp-1040h]\n  unsigned __int64 v6; // [rsp+38h] [rbp-1028h]\n  _QWORD s[2]; // [rsp+40h] [rbp-1020h] BYREF\n  int v8; // [rsp+50h] [rbp-1010h]\n  unsigned int v9; // [rsp+54h] [rbp-100Ch]\n  int v10; // [rsp+58h] [rbp-1008h]\n  _QWORD v11[512]; // [rsp+60h] [rbp-1000h] BYREF\n\n  v11[509] = __readfsqword(0x28u);\n  v2 = 0;\n  while ( 1 )\n  {\n    memset(s, 0, 0x1000uLL);\n    s[0] = *(_QWORD *)(a1 + 8);\n    v8 = *(_DWORD *)(a1 + 16);\n    v10 = 72;\n    s[1] = ~*(_QWORD *)(a1 + 8);\n    if ( ioctl(*(_DWORD *)a1, 0xC020660BuLL, s) < 0 )\n      break;\n    if ( !v9 )\n    {\n      *(_BYTE *)(a1 + 25) = 1;\n      return *(_QWORD *)(a1 + 8) != 0LL;\n    }\n    if ( *(unsigned int *)(a1 + 20) > ~(unsigned __int64)v9 )\n      __assert_fail(\n        \"scan->ei_count <= (18446744073709551615UL) - fiemap->fm_mapped_extents\",\n        \"../../src/src/extent-scan.c\",\n        0x80u,\n        \"extent_scan_read\");\n    *(_DWORD *)(a1 + 20) += v9;\n    *(_QWORD *)(a1 + 32) = sub_4125D2(*(_QWORD *)(a1 + 32), *(unsigned int *)(a1 + 20), 24LL);\n    for ( i = 0; v9 > i; ++i )\n    {\n      if ( v11[7 * i] > (unsigned __int64)(0x7FFFFFFFFFFFFFFFLL - v11[7 * i + 2]) )\n        __assert_fail(\n          \"fm_extents[i].fe_logical <= ((off_t) (! (! ((off_t) 0 < (off_t) -1)) ? (off_t) -1 : ((((off_t) 1 << (sizeof (o\"\n          \"ff_t) * 8 - 2)) - 1) * 2 + 1))) - fm_extents[i].fe_length\",\n          \"../../src/src/extent-scan.c\",\n          0x89u,\n          \"extent_scan_read\");\n      if ( v2\n        && *(_DWORD *)(v4 + 16) == (v11[7 * i + 5] & 0xFFFFFFFE)\n        && *(_QWORD *)v4 + *(_QWORD *)(v4 + 8) == v11[7 * i] )\n      {\n        *(_QWORD *)(v4 + 8) += v11[7 * i + 2];\n        *(_DWORD *)(v4 + 16) = v11[7 * i + 5];\n      }\n      else if ( (v2 || *(_QWORD *)(a1 + 8) <= v11[7 * i]) && (!v2 || *(_QWORD *)v4 + *(_QWORD *)(v4 + 8) <= v11[7 * i]) )\n      {\n        v4 = *(_QWORD *)(a1 + 32) + 24LL * v2;\n        *(_QWORD *)v4 = v11[7 * i];\n        *(_QWORD *)(v4 + 8) = v11[7 * i + 2];\n        *(_DWORD *)(v4 + 16) = v11[7 * i + 5];\n        ++v2;\n      }\n      else\n      {\n        if ( v2 )\n          v5 = *(_QWORD *)v4 + *(_QWORD *)(v4 + 8);\n        else\n          v5 = *(_QWORD *)(a1 + 8);\n        v6 = v5 - v11[7 * i];\n        if ( v11[7 * i + 2] > v6 )\n        {\n          if ( !*(_QWORD *)(a1 + 8) )\n            *(_BYTE *)(a1 + 24) = 1;\n          return 0;\n        }\n        v11[7 * i] = v5;\n        v11[7 * i-- + 2] -= v6;\n      }\n    }\n    if ( (*(_DWORD *)(v4 + 16) & 1) != 0 )\n      *(_BYTE *)(a1 + 25) = 1;\n    if ( v2 > 0x48 && *(_BYTE *)(a1 + 25) != 1 )\n      v4 = *(_QWORD *)(a1 + 32) + 24LL * --v2 - 24;\n    *(_DWORD *)(a1 + 20) = v2;\n    if ( !*(_BYTE *)(a1 + 25) )\n    {\n      *(_QWORD *)(a1 + 8) = *(_QWORD *)v4 + *(_QWORD *)(v4 + 8);\n      if ( v2 <= 0x47 )\n        continue;\n    }\n    return 1;\n  }\n  if ( !*(_QWORD *)(a1 + 8) )\n    *(_BYTE *)(a1 + 24) = 1;\n  return 0;\n}\n"], [4236832, "sub_40A620", "int __fastcall sub_40A620(const char *a1, int a2, __mode_t a3)\n{\n  int result; // eax\n\n  if ( a2 == -1 )\n    result = chmod(a1, a3);\n  else\n    result = fchmod(a2, a3);\n  return result;\n}\n"], [4236892, "sub_40A65C", "int __fastcall sub_40A65C(const char *a1, int a2, __mode_t a3)\n{\n  return sub_40A620(a1, a2, a3);\n}\n"], [4236932, "sub_40A684", "__int64 __fastcall sub_40A684(const char *a1, int a2, __mode_t a3)\n{\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  unsigned int v7; // [rsp+1Ch] [rbp-14h]\n\n  v7 = sub_40A65C(a1, a2, a3);\n  if ( v7 )\n  {\n    v3 = sub_40E392(a1);\n    v4 = gettext(\"setting permissions for %s\");\n    v5 = __errno_location();\n    error(0, *v5, v4, v3);\n  }\n  return v7;\n}\n"], [4237052, "sub_40A6FC", "int __fastcall sub_40A6FC(__int64 a1, __int64 a2, const char *a3, int a4, __mode_t a5)\n{\n  return sub_40A65C(a3, a4, a5);\n}\n"], [4237100, "sub_40A72C", "__int64 __fastcall sub_40A72C(__int64 a1, unsigned int a2, const char *a3, int a4, __mode_t a5)\n{\n  int v5; // eax\n  const char *v6; // rbx\n  int *v7; // rax\n  __int64 v8; // r12\n  char *v9; // rbx\n  int *v10; // rax\n  __int64 result; // rax\n\n  v5 = sub_40A6FC(a1, a2, a3, a4, a5);\n  if ( v5 == -2 )\n  {\n    v6 = (const char *)sub_40E392(a1);\n    v7 = __errno_location();\n    error(0, *v7, \"%s\", v6);\n    result = 0xFFFFFFFFLL;\n  }\n  else if ( v5 == -1 )\n  {\n    v8 = sub_40E392(a3);\n    v9 = gettext(\"preserving permissions for %s\");\n    v10 = __errno_location();\n    error(0, *v10, v9, v8);\n    result = 0xFFFFFFFFLL;\n  }\n  else\n  {\n    result = 0LL;\n  }\n  return result;\n}\n"], [4237308, "sub_40A7FC", "char *__fastcall sub_40A7FC(const char *a1, unsigned __int64 a2)\n{\n  __int64 v2; // rax\n  char *i; // rax\n  int v5; // [rsp+14h] [rbp-3Ch]\n  size_t size; // [rsp+18h] [rbp-38h]\n  char *buf; // [rsp+38h] [rbp-18h]\n  ssize_t v8; // [rsp+48h] [rbp-8h]\n\n  if ( a2 >= 0x401 )\n    v2 = 1025LL;\n  else\n    v2 = a2 + 1;\n  size = v2;\nLABEL_5:\n  for ( i = (char *)malloc(size); ; i = (char *)malloc(0x7FFFFFFFFFFFFFFFuLL) )\n  {\n    buf = i;\n    if ( !i )\n      return 0LL;\n    v8 = readlink(a1, i, size);\n    if ( v8 < 0 && *__errno_location() != 34 )\n    {\n      v5 = *__errno_location();\n      free(buf);\n      *__errno_location() = v5;\n      return 0LL;\n    }\n    if ( v8 < size )\n    {\n      buf[v8] = 0;\n      return buf;\n    }\n    free(buf);\n    if ( size <= 0x3FFFFFFFFFFFFFFFLL )\n    {\n      size *= 2LL;\n      goto LABEL_5;\n    }\n    if ( size > 0x7FFFFFFFFFFFFFFELL )\n      break;\n    size = 0x7FFFFFFFFFFFFFFFLL;\n  }\n  *__errno_location() = 12;\n  return 0LL;\n}\n"], [4237643, "sub_40A94B", "char *__fastcall sub_40A94B(const char *a1, __int64 a2, char a3)\n{\n  char *result; // rax\n  __int16 v5; // [rsp+20h] [rbp-30h]\n  unsigned __int64 v6; // [rsp+28h] [rbp-28h]\n  unsigned __int64 v7; // [rsp+28h] [rbp-28h]\n  unsigned __int64 v8; // [rsp+30h] [rbp-20h]\n  char *v9; // [rsp+38h] [rbp-18h]\n  __int64 v10; // [rsp+40h] [rbp-10h]\n\n  v9 = (char *)sub_40B393(a1);\n  v6 = sub_40B3FC(v9);\n  v8 = 255LL;\n  if ( v6 > 0xE )\n  {\n    v5 = *(_WORD *)v9;\n    *(_WORD *)v9 = 46;\n    *__errno_location() = 0;\n    v10 = pathconf(a1, 3);\n    if ( v10 >= 0 || !*__errno_location() )\n      v8 = v10;\n    *(_WORD *)v9 = v5;\n  }\n  result = (char *)v8;\n  if ( v8 < v6 )\n  {\n    v7 = &a1[a2] - v9;\n    if ( v8 <= v7 )\n      v7 = v8 - 1;\n    v9[v7] = a3;\n    result = &v9[v7 + 1];\n    *result = 0;\n  }\n  return result;\n}\n"], [4237923, "sub_40AA63", "__int64 __fastcall sub_40AA63(__int64 *a1, unsigned __int64 a2, __int64 a3)\n{\n  bool v6; // [rsp+2Fh] [rbp-61h]\n  __int16 v7; // [rsp+30h] [rbp-60h]\n  unsigned int v8; // [rsp+34h] [rbp-5Ch]\n  __int64 v9; // [rsp+38h] [rbp-58h]\n  unsigned __int64 v10; // [rsp+40h] [rbp-50h]\n  _BYTE *desta; // [rsp+48h] [rbp-48h]\n  char *destb; // [rsp+48h] [rbp-48h]\n  char *dest; // [rsp+48h] [rbp-48h]\n  size_t n; // [rsp+50h] [rbp-40h]\n  char *v15; // [rsp+58h] [rbp-38h]\n  char *v16; // [rsp+60h] [rbp-30h]\n  __int64 v17; // [rsp+68h] [rbp-28h]\n  DIR *dirp; // [rsp+70h] [rbp-20h]\n  struct dirent *v19; // [rsp+78h] [rbp-18h]\n  char *s2; // [rsp+80h] [rbp-10h]\n  unsigned __int64 v21; // [rsp+88h] [rbp-8h]\n\n  v8 = 2;\n  v9 = *a1;\n  v10 = 1LL;\n  v15 = (char *)sub_40B393(*a1);\n  v16 = &v15[-v9];\n  v17 = sub_40B3FC(v15);\n  v7 = *(_WORD *)v15;\n  *(_WORD *)v15 = 46;\n  dirp = (DIR *)sub_40B18F(v9);\n  *(_WORD *)v15 = v7;\n  strcpy(&v15[v17], \".~1~\");\n  if ( !dirp )\n    return 2LL;\n  while ( 1 )\n  {\n    v19 = readdir(dirp);\n    if ( !v19 )\n      break;\n    if ( v19->d_ino )\n    {\n      if ( strlen(v19->d_name) >= v17 + 4 && !memcmp(&v16[v9], v19->d_name, v17 + 2) )\n      {\n        s2 = &v19->d_name[v17 + 2];\n        if ( *s2 > 48 && *s2 <= 57 )\n        {\n          v6 = *s2 == 57;\n          for ( n = 1LL; (unsigned int)(s2[n] - 48) <= 9; ++n )\n            v6 = v6 && s2[n] == 57;\n          if ( s2[n] == 126 && !s2[n + 1] && (v10 < n || v10 == n && memcmp((const void *)(a3 + 2 + v9), s2, n) <= 0) )\n          {\n            v10 = v6 + n;\n            v8 = v6;\n            v21 = a3 + v10 + 3;\n            if ( a2 <= v21 )\n            {\n              v9 = sub_4125D2(v9, 2LL, v21);\n              a2 = 2 * v21;\n            }\n            *(_BYTE *)(v9 + a3) = 46;\n            desta = (_BYTE *)(v9 + a3 + 2);\n            *(_BYTE *)(v9 + a3 + 1) = 126;\n            *desta = 48;\n            destb = &desta[v6];\n            memcpy(destb, s2, n + 2);\n            for ( dest = &destb[n]; *--dest == 57; *dest = 48 )\n              ;\n            ++*dest;\n          }\n        }\n      }\n    }\n  }\n  closedir(dirp);\n  *a1 = v9;\n  return v8;\n}\n"], [4238742, "sub_40AD96", "void *__fastcall sub_40AD96(const char *a1, int a2)\n{\n  int v2; // eax\n  bool v4; // [rsp+17h] [rbp-29h]\n  void *dest; // [rsp+18h] [rbp-28h] BYREF\n  size_t v6; // [rsp+20h] [rbp-20h]\n  __int64 v7; // [rsp+28h] [rbp-18h]\n  size_t n; // [rsp+30h] [rbp-10h]\n  unsigned __int64 v9; // [rsp+38h] [rbp-8h]\n\n  v7 = strlen(a1);\n  v4 = 1;\n  n = strlen(src) + 1;\n  v6 = n;\n  if ( n <= 8 )\n    v6 = 9LL;\n  v9 = v7 + v6 + 1;\n  dest = (void *)sub_4126DD(v9);\n  memcpy(dest, a1, v7 + 1);\n  if ( a2 != 1 )\n  {\n    v2 = sub_40AA63((__int64 *)&dest, v9, v7);\n    switch ( v2 )\n    {\n      case 1:\n        v4 = 0;\n        break;\n      case 0:\n        return dest;\n      case 2:\n        v4 = a2 == 2;\n        break;\n    }\n  }\n  if ( v4 )\n    memcpy((char *)dest + v7, src, n);\n  sub_40A94B((const char *)dest, v7, 126);\n  return dest;\n}\n"], [4239023, "sub_40AEAF", "__int64 __fastcall sub_40AEAF(__int64 a1, _BYTE *a2)\n{\n  __int64 result; // rax\n\n  if ( a2 && *a2 )\n    result = (unsigned int)dword_41BCE0[sub_413A0C(a1, a2, off_41BC80, dword_41BCE0, 4LL, off_620418)];\n  else\n    result = 2LL;\n  return result;\n}\n"], [4239115, "sub_40AF0B", "__int64 __fastcall sub_40AF0B(__int64 a1, _BYTE *a2)\n{\n  char *v3; // rax\n\n  if ( a2 && *a2 )\n    return sub_40AEAF(a1, a2);\n  v3 = getenv(\"VERSION_CONTROL\");\n  return sub_40AEAF((__int64)\"$VERSION_CONTROL\", v3);\n}\n"], [4239195, "sub_40AF5B", "__int64 __fastcall sub_40AF5B(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_6228E8 = a1;\n  return result;\n}\n"], [4239216, "sub_40AF70", "__int64 sub_40AF70()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char v4; // [rsp+7h] [rbp-19h]\n  char *v5; // [rsp+8h] [rbp-18h]\n\n  v4 = 0;\n  if ( sub_40BA9A(stdin) && !(unsigned int)sub_41321E(stdin, 0LL, 1LL) && (unsigned int)sub_4131D3(stdin) )\n    v4 = 1;\n  if ( (unsigned int)sub_413EC3(stdin) )\n    v4 = 1;\n  if ( v4 )\n  {\n    v5 = gettext(\"error closing file\");\n    if ( qword_6228E8 )\n    {\n      v0 = (const char *)sub_40F9AB(qword_6228E8);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v5);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v5);\n    }\n  }\n  result = sub_40B0A4();\n  if ( v4 )\n    _exit(status);\n  return result;\n}\n"], [4239482, "sub_40B07A", "__int64 __fastcall sub_40B07A(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_6228F0 = a1;\n  return result;\n}\n"], [4239503, "sub_40B08F", "__int64 __fastcall sub_40B08F(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_6228F8 = a1;\n  return result;\n}\n"], [4239524, "sub_40B0A4", "__int64 sub_40B0A4()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_413EC3(stdout) && (byte_6228F8 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_6228F0 )\n    {\n      v0 = (const char *)sub_40F9AB(qword_6228F0);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_413EC3(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4239759, "sub_40B18F", "DIR *__fastcall sub_40B18F(const char *a1)\n{\n  int v2; // [rsp+14h] [rbp-1Ch]\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  DIR *dirp; // [rsp+20h] [rbp-10h]\n  DIR *v6; // [rsp+28h] [rbp-8h]\n\n  dirp = opendir(a1);\n  if ( dirp )\n  {\n    v3 = dirfd(dirp);\n    if ( v3 >= 0 && v3 <= 2 )\n    {\n      fd = sub_4106B0((unsigned int)v3);\n      if ( fd >= 0 )\n      {\n        v6 = fdopendir(fd);\n        v2 = *__errno_location();\n        if ( !v6 )\n          close(fd);\n      }\n      else\n      {\n        v2 = *__errno_location();\n        v6 = 0LL;\n      }\n      closedir(dirp);\n      *__errno_location() = v2;\n      dirp = v6;\n    }\n  }\n  return dirp;\n}\n"], [4239941, "sub_40B245", "__int64 __fastcall sub_40B245(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  v2 = sub_40B2FC(a1);\n  if ( !v2 )\n    sub_41285F();\n  return v2;\n}\n"], [4239987, "sub_40B273", "unsigned __int64 __fastcall sub_40B273(_BYTE *a1)\n{\n  unsigned __int64 i; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = *a1 == 47;\n  for ( i = sub_40B393(a1) - (_QWORD)a1; v3 < i && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4240124, "sub_40B2FC", "_BYTE *__fastcall sub_40B2FC(_BYTE *a1)\n{\n  unsigned __int64 n; // [rsp+20h] [rbp-10h]\n  _BYTE *dest; // [rsp+28h] [rbp-8h]\n\n  n = sub_40B273(a1);\n  dest = malloc((n == 0) + n + 1);\n  if ( !dest )\n    return 0LL;\n  memcpy(dest, a1, n);\n  if ( !n )\n  {\n    n = 1LL;\n    *dest = 46;\n  }\n  dest[n] = 0;\n  return dest;\n}\n"], [4240275, "sub_40B393", "_BYTE *__fastcall sub_40B393(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4240380, "sub_40B3FC", "size_t __fastcall sub_40B3FC(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4240458, "sub_40B44A", "__int64 __fastcall sub_40B44A(const char *a1, char a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  unsigned int v5; // [rsp+14h] [rbp-CCh]\n\n  v5 = 0;\n  if ( (a2 & 0x40) != 0 )\n    v5 = a3;\n  v3 = open(a1, a2, v5);\n  return sub_4106D6(v3);\n}\n"], [4240732, "sub_40B55C", "void __fastcall sub_40B55C(__int64 a1, __int64 a2, _QWORD *a3)\n{\n  _QWORD *v4; // [rsp+20h] [rbp-10h]\n  __int64 v5; // [rsp+28h] [rbp-8h]\n\n  if ( a1 )\n  {\n    v4 = (_QWORD *)sub_4126DD(24LL);\n    *v4 = sub_412832(a2);\n    v4[1] = a3[1];\n    v4[2] = *a3;\n    v5 = sub_40D1B3(a1, v4);\n    if ( !v5 )\n      sub_41285F();\n    if ( (_QWORD *)v5 != v4 )\n      sub_40D611(v4);\n  }\n}\n"], [4240887, "sub_40B5F7", "bool __fastcall sub_40B5F7(__int64 a1, __int64 a2, __int64 *a3)\n{\n  __int64 v4[4]; // [rsp+20h] [rbp-20h] BYREF\n\n  if ( !a1 )\n    return 0;\n  v4[0] = a2;\n  v4[1] = a3[1];\n  v4[2] = *a3;\n  return sub_40BEE4(a1, v4) != 0;\n}\n"], [4240979, "sub_40B653", "__int64 __fastcall sub_40B653(__int16 a1)\n{\n  switch ( a1 & 0xF000 )\n  {\n    case 32768:\n      return 45LL;\n    case 16384:\n      return 100LL;\n    case 24576:\n      return 98LL;\n    case 8192:\n      return 99LL;\n    case 40960:\n      return 108LL;\n    case 4096:\n      return 112LL;\n    case 49152:\n      return 115LL;\n  }\n  return 63LL;\n}\n"], [4241150, "sub_40B6FE", "_BYTE *__fastcall sub_40B6FE(__int16 a1, _BYTE *a2)\n{\n  char v2; // al\n  char v3; // al\n  char v4; // al\n  char v5; // al\n  char v6; // al\n  char v7; // al\n  char v8; // al\n  char v9; // al\n  char v10; // al\n  _BYTE *result; // rax\n\n  *a2 = sub_40B653(a1);\n  if ( (a1 & 0x100) != 0 )\n    v2 = 114;\n  else\n    v2 = 45;\n  a2[1] = v2;\n  if ( (a1 & 0x80) != 0 )\n    v3 = 119;\n  else\n    v3 = 45;\n  a2[2] = v3;\n  if ( (a1 & 0x800) != 0 )\n  {\n    if ( (a1 & 0x40) != 0 )\n      v4 = 115;\n    else\n      v4 = 83;\n  }\n  else if ( (a1 & 0x40) != 0 )\n  {\n    v4 = 120;\n  }\n  else\n  {\n    v4 = 45;\n  }\n  a2[3] = v4;\n  if ( (a1 & 0x20) != 0 )\n    v5 = 114;\n  else\n    v5 = 45;\n  a2[4] = v5;\n  if ( (a1 & 0x10) != 0 )\n    v6 = 119;\n  else\n    v6 = 45;\n  a2[5] = v6;\n  if ( (a1 & 0x400) != 0 )\n  {\n    if ( (a1 & 8) != 0 )\n      v7 = 115;\n    else\n      v7 = 83;\n  }\n  else if ( (a1 & 8) != 0 )\n  {\n    v7 = 120;\n  }\n  else\n  {\n    v7 = 45;\n  }\n  a2[6] = v7;\n  if ( (a1 & 4) != 0 )\n    v8 = 114;\n  else\n    v8 = 45;\n  a2[7] = v8;\n  if ( (a1 & 2) != 0 )\n    v9 = 119;\n  else\n    v9 = 45;\n  a2[8] = v9;\n  if ( (a1 & 0x200) != 0 )\n  {\n    if ( (a1 & 1) != 0 )\n      v10 = 116;\n    else\n      v10 = 84;\n  }\n  else if ( (a1 & 1) != 0 )\n  {\n    v10 = 120;\n  }\n  else\n  {\n    v10 = 45;\n  }\n  a2[9] = v10;\n  a2[10] = 32;\n  result = a2 + 11;\n  a2[11] = 0;\n  return result;\n}\n"], [4241605, "sub_40B8C5", "_BYTE *__fastcall sub_40B8C5(__int64 a1, _BYTE *a2)\n{\n  return sub_40B6FE(*(_DWORD *)(a1 + 24), a2);\n}\n"], [4241644, "sub_40B8EC", "__int64 __fastcall sub_40B8EC(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // [rsp+28h] [rbp-8h]\n\n  v4 = sub_40B94D(a1, a2, a3);\n  if ( !v4 )\n    sub_41285F();\n  return v4;\n}\n"], [4241709, "sub_40B92D", "_BYTE *__fastcall sub_40B92D(_BYTE *a1)\n{\n  while ( *a1 == 47 )\n    ++a1;\n  return a1;\n}\n"], [4241741, "sub_40B94D", "void *__fastcall sub_40B94D(_BYTE *a1, _BYTE *a2, _QWORD *a3)\n{\n  _BOOL4 v3; // eax\n  const char *v6; // [rsp+20h] [rbp-40h]\n  size_t v7; // [rsp+28h] [rbp-38h]\n  size_t n; // [rsp+30h] [rbp-30h]\n  _BOOL8 v9; // [rsp+38h] [rbp-28h]\n  char *s; // [rsp+40h] [rbp-20h]\n  size_t v11; // [rsp+48h] [rbp-18h]\n  void *dest; // [rsp+50h] [rbp-10h]\n  _BYTE *v13; // [rsp+58h] [rbp-8h]\n  char *v14; // [rsp+58h] [rbp-8h]\n\n  v6 = sub_40B393(a1);\n  v7 = sub_40B3FC(v6);\n  n = v6 - a1 + v7;\n  v3 = v7 && v6[v7 - 1] != 47;\n  v9 = v3;\n  s = sub_40B92D(a2);\n  v11 = strlen(s);\n  dest = malloc(v9 + n + v11 + 1);\n  if ( !dest )\n    return 0LL;\n  v13 = mempcpy(dest, a1, n);\n  *v13 = 47;\n  v14 = &v13[v9];\n  if ( a3 )\n    *a3 = &v14[-(*a2 == 47)];\n  *(_BYTE *)mempcpy(v14, s, v11) = 0;\n  return dest;\n}\n"], [4242074, "sub_40BA9A", "__int64 __fastcall sub_40BA9A(__int64 a1)\n{\n  __int64 v2; // rax\n\n  if ( *(_QWORD *)(a1 + 40) > *(_QWORD *)(a1 + 32) )\n    return 0LL;\n  if ( (*(_DWORD *)a1 & 0x100) != 0 )\n    v2 = *(_QWORD *)(a1 + 88) - *(_QWORD *)(a1 + 72);\n  else\n    v2 = 0LL;\n  return *(_QWORD *)(a1 + 16) - *(_QWORD *)(a1 + 8) + v2;\n}\n"], [4242187, "sub_40BB0B", "__int64 __fastcall sub_40BB0B(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  __int64 v7; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  while ( a3 )\n  {\n    v7 = sub_40FB2A(a1, a2, a3);\n    if ( v7 == -1 )\n      break;\n    if ( !v7 )\n    {\n      *__errno_location() = 0;\n      return v5;\n    }\n    v5 += v7;\n    a2 += v7;\n    a3 -= v7;\n  }\n  return v5;\n}\n"], [4242315, "sub_40BB8B", "__int64 __fastcall sub_40BB8B(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  __int64 v7; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  while ( a3 )\n  {\n    v7 = sub_40FB9B(a1, a2, a3);\n    if ( v7 == -1 )\n      break;\n    if ( !v7 )\n    {\n      *__errno_location() = 28;\n      return v5;\n    }\n    v5 += v7;\n    a2 += v7;\n    a3 -= v7;\n  }\n  return v5;\n}\n"], [4242443, "sub_40BC0B", "__int64 __fastcall sub_40BC0B(__int64 a1, char a2)\n{\n  return __ROR8__(a1, a2);\n}\n"], [4242471, "sub_40BC27", "__int64 __fastcall sub_40BC27(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 16);\n}\n"], [4242489, "sub_40BC39", "__int64 __fastcall sub_40BC39(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 24);\n}\n"], [4242507, "sub_40BC4B", "__int64 __fastcall sub_40BC4B(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 32);\n}\n"], [4242525, "sub_40BC5D", "unsigned __int64 __fastcall sub_40BC5D(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  unsigned __int64 v3; // [rsp+10h] [rbp-18h]\n  _QWORD *v4; // [rsp+18h] [rbp-10h]\n  unsigned __int64 j; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v4 = i;\n      for ( j = 1LL; ; ++j )\n      {\n        v4 = (_QWORD *)v4[1];\n        if ( !v4 )\n          break;\n      }\n      if ( j > v3 )\n        v3 = j;\n    }\n  }\n  return v3;\n}\n"], [4242651, "sub_40BCDB", "_BOOL8 __fastcall sub_40BCDB(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  __int64 v3; // [rsp+10h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-10h]\n  _QWORD *v5; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  v4 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v5 = i;\n      ++v3;\n      ++v4;\n      while ( 1 )\n      {\n        v5 = (_QWORD *)v5[1];\n        if ( !v5 )\n          break;\n        ++v4;\n      }\n    }\n  }\n  return *(_QWORD *)(a1 + 24) == v3 && *(_QWORD *)(a1 + 32) == v4;\n}\n"], [4242805, "sub_40BD75", "int __fastcall sub_40BD75(__int64 a1, FILE *a2)\n{\n  double v2; // xmm0_8\n  double v3; // xmm1_8\n  double v4; // xmm0_8\n  __int64 v6; // [rsp+10h] [rbp-20h]\n  __int64 v7; // [rsp+18h] [rbp-18h]\n  __int64 v8; // [rsp+20h] [rbp-10h]\n  unsigned __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v6 = sub_40BC4B(a1);\n  v7 = sub_40BC27(a1);\n  v8 = sub_40BC39(a1);\n  v9 = sub_40BC5D(a1);\n  fprintf(a2, \"# entries:         %lu\\n\", v6);\n  fprintf(a2, \"# buckets:         %lu\\n\", v7);\n  if ( v8 < 0 )\n    v2 = (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1)) + (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1));\n  else\n    v2 = (double)(int)v8;\n  v3 = 100.0 * v2;\n  if ( v7 < 0 )\n    v4 = (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1)) + (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1));\n  else\n    v4 = (double)(int)v7;\n  fprintf(a2, \"# buckets used:    %lu (%.2f%%)\\n\", v8, v3 / v4);\n  return fprintf(a2, \"max bucket length: %lu\\n\", v9);\n}\n"], [4243085, "sub_40BE8D", "__int64 __fastcall sub_40BE8D(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = (*(__int64 (__fastcall **)(__int64, _QWORD))(a1 + 48))(a2, *(_QWORD *)(a1 + 16));\n  if ( *(_QWORD *)(a1 + 16) <= v3 )\n    abort();\n  return 16 * v3 + *(_QWORD *)a1;\n}\n"], [4243172, "sub_40BEE4", "__int64 __fastcall sub_40BEE4(__int64 a1, __int64 a2)\n{\n  _QWORD *i; // [rsp+10h] [rbp-10h]\n  _QWORD *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = (_QWORD *)sub_40BE8D(a1, a2);\n  if ( !*v4 )\n    return 0LL;\n  for ( i = v4; i; i = (_QWORD *)i[1] )\n  {\n    if ( *i == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *i) )\n      return *i;\n  }\n  return 0LL;\n}\n"], [4243319, "sub_40BF77", "__int64 __fastcall sub_40BF77(unsigned __int64 *a1)\n{\n  unsigned __int64 i; // [rsp+18h] [rbp-8h]\n\n  if ( !a1[4] )\n    return 0LL;\n  for ( i = *a1; ; i += 16LL )\n  {\n    if ( a1[1] <= i )\n      abort();\n    if ( *(_QWORD *)i )\n      break;\n  }\n  return *(_QWORD *)i;\n}\n"], [4243411, "sub_40BFD3", "__int64 __fastcall sub_40BFD3(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = sub_40BE8D(a1, a2);\n  v4 = v3;\n  do\n  {\n    if ( *(_QWORD *)v4 == a2 && *(_QWORD *)(v4 + 8) )\n      return **(_QWORD **)(v4 + 8);\n    v4 = *(_QWORD *)(v4 + 8);\n  }\n  while ( v4 );\n  while ( 1 )\n  {\n    v3 += 16LL;\n    if ( v3 >= *(_QWORD *)(a1 + 8) )\n      break;\n    if ( *(_QWORD *)v3 )\n      return *(_QWORD *)v3;\n  }\n  return 0LL;\n}\n"], [4243565, "sub_40C06D", "unsigned __int64 __fastcall sub_40C06D(__int64 a1, __int64 a2, unsigned __int64 a3)\n{\n  __int64 v4; // rax\n  unsigned __int64 v5; // [rsp+20h] [rbp-18h]\n  _QWORD *i; // [rsp+28h] [rbp-10h]\n  _QWORD *j; // [rsp+30h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( v5 >= a3 )\n          return v5;\n        v4 = v5++;\n        *(_QWORD *)(a2 + 8 * v4) = *j;\n      }\n    }\n  }\n  return v5;\n}\n"], [4243721, "sub_40C109", "__int64 __fastcall sub_40C109(__int64 a1, unsigned __int8 (__fastcall *a2)(_QWORD, __int64), __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  _QWORD *i; // [rsp+30h] [rbp-10h]\n  _QWORD *j; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( a2(*j, a3) != 1 )\n          return v5;\n        ++v5;\n      }\n    }\n  }\n  return v5;\n}\n"], [4243869, "sub_40C19D", "unsigned __int64 __fastcall sub_40C19D(_BYTE *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( *a1 )\n    v4 = (31 * v4 + (unsigned __int8)*a1++) % a2;\n  return v4;\n}\n"], [4243955, "sub_40C1F3", "bool __fastcall sub_40C1F3(unsigned __int64 a1)\n{\n  unsigned __int64 v2; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+10h] [rbp-8h]\n\n  v2 = 3LL;\n  v4 = 9LL;\n  while ( v4 < a1 && a1 % v2 )\n  {\n    v3 = v2 + 1;\n    v4 += 4 * v3;\n    v2 = v3 + 1;\n  }\n  return a1 % v2 != 0;\n}\n"], [4244063, "sub_40C25F", "__int64 __fastcall sub_40C25F(unsigned __int64 a1)\n{\n  __int64 v2; // [rsp+0h] [rbp-8h]\n  __int64 i; // [rsp+0h] [rbp-8h]\n\n  v2 = a1;\n  if ( a1 <= 9 )\n    v2 = 10LL;\n  for ( i = v2 | 1; i != -1 && !sub_40C1F3(i); i += 2LL )\n    ;\n  return i;\n}\n"], [4244134, "sub_40C2A6", "__int64 __fastcall sub_40C2A6(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)a1 = 0;\n  *(_DWORD *)(a1 + 4) = 1065353216;\n  *(_DWORD *)(a1 + 8) = 1061997773;\n  *(_DWORD *)(a1 + 12) = 1068826100;\n  result = a1;\n  *(_BYTE *)(a1 + 16) = 0;\n  return result;\n}\n"], [4244203, "sub_40C2EB", "unsigned __int64 __fastcall sub_40C2EB(__int64 a1, unsigned __int64 a2)\n{\n  return sub_40BC0B(a1, 3) % a2;\n}\n"], [4244258, "sub_40C322", "bool __fastcall sub_40C322(__int64 a1, __int64 a2)\n{\n  return a1 == a2;\n}\n"], [4244283, "sub_40C33B", "__int64 __fastcall sub_40C33B(__int64 a1)\n{\n  __int64 v2; // [rsp+10h] [rbp-8h]\n\n  v2 = *(_QWORD *)(a1 + 40);\n  if ( (_UNKNOWN *)v2 == &unk_41BD60 )\n    return 1LL;\n  if ( *(float *)(v2 + 8) > 0.1\n    && (float)(1.0 - 0.1) > *(float *)(v2 + 8)\n    && *(float *)(v2 + 12) > (float)(0.1 + 1.0)\n    && *(float *)v2 >= 0.0\n    && *(float *)(v2 + 4) > (float)(*(float *)v2 + 0.1)\n    && *(float *)(v2 + 4) <= 1.0\n    && *(float *)(v2 + 8) > (float)(*(float *)v2 + 0.1) )\n  {\n    return 1LL;\n  }\n  *(_QWORD *)(a1 + 40) = &unk_41BD60;\n  return 0LL;\n}\n"], [4244531, "sub_40C433", "unsigned __int64 __fastcall sub_40C433(__int64 a1, __int64 a2)\n{\n  float v2; // xmm0_4\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // [rsp+8h] [rbp-18h]\n  unsigned __int64 v5; // [rsp+8h] [rbp-18h]\n  float v6; // [rsp+1Ch] [rbp-4h]\n\n  v4 = a1;\n  if ( *(_BYTE *)(a2 + 16) != 1 )\n  {\n    if ( a1 < 0 )\n      v2 = (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1))\n         + (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1));\n    else\n      v2 = (float)(int)a1;\n    v6 = v2 / *(float *)(a2 + 8);\n    if ( v6 >= 1.8446744e19 )\n      return 0LL;\n    if ( v6 >= 9.223372e18 )\n      v4 = (unsigned int)(int)(float)(v6 - 9.223372e18) ^ 0x8000000000000000LL;\n    else\n      v4 = (unsigned int)(int)v6;\n  }\n  v5 = sub_40C25F(v4);\n  if ( v5 <= 0x1FFFFFFFFFFFFFFFLL )\n    result = v5;\n  else\n    result = 0LL;\n  return result;\n}\n"], [4244765, "sub_40C51D", "size_t *__fastcall sub_40C51D(__int64 a1, void *a2, unsigned __int64 (__fastcall *a3)(__int64 a1, unsigned __int64 a2), bool (__fastcall *a4)(__int64 a1, __int64 a2), size_t a5)\n{\n  size_t *result; // rax\n  bool (__fastcall *v7)(__int64, __int64); // [rsp+10h] [rbp-30h]\n  unsigned __int64 (__fastcall *v8)(__int64, unsigned __int64); // [rsp+18h] [rbp-28h]\n  void *v9; // [rsp+20h] [rbp-20h]\n  size_t *ptr; // [rsp+38h] [rbp-8h]\n\n  v9 = a2;\n  v8 = a3;\n  v7 = a4;\n  if ( !a3 )\n    v8 = sub_40C2EB;\n  if ( !a4 )\n    v7 = sub_40C322;\n  ptr = (size_t *)malloc(0x50uLL);\n  if ( !ptr )\n    return 0LL;\n  if ( !a2 )\n    v9 = &unk_41BD60;\n  ptr[5] = (size_t)v9;\n  if ( (unsigned __int8)sub_40C33B((__int64)ptr) == 1\n    && (ptr[2] = sub_40C433(a1, (__int64)v9)) != 0\n    && (*ptr = (size_t)calloc(ptr[2], 0x10uLL)) != 0 )\n  {\n    ptr[1] = 16 * ptr[2] + *ptr;\n    ptr[3] = 0LL;\n    ptr[4] = 0LL;\n    ptr[6] = (size_t)v8;\n    ptr[7] = (size_t)v7;\n    ptr[8] = a5;\n    ptr[9] = 0LL;\n    result = ptr;\n  }\n  else\n  {\n    free(ptr);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4245122, "sub_40C682", "__int64 __fastcall sub_40C682(__int64 a1)\n{\n  __int64 result; // rax\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+20h] [rbp-10h]\n  _QWORD *v4; // [rsp+28h] [rbp-8h]\n\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (_QWORD *)i[1]; j; j = v4 )\n      {\n        if ( *(_QWORD *)(a1 + 64) )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*j);\n        *j = 0LL;\n        v4 = (_QWORD *)j[1];\n        j[1] = *(_QWORD *)(a1 + 72);\n        *(_QWORD *)(a1 + 72) = j;\n      }\n      if ( *(_QWORD *)(a1 + 64) )\n        (*(void (__fastcall **)(_QWORD))(a1 + 64))(*i);\n      *i = 0LL;\n      i[1] = 0LL;\n    }\n  }\n  *(_QWORD *)(a1 + 24) = 0LL;\n  result = a1;\n  *(_QWORD *)(a1 + 32) = 0LL;\n  return result;\n}\n"], [4245384, "sub_40C788", "void __fastcall sub_40C788(__int64 a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+18h] [rbp-18h]\n  _QWORD *ptr; // [rsp+20h] [rbp-10h]\n  _QWORD *ptra; // [rsp+20h] [rbp-10h]\n  _QWORD *ptrb; // [rsp+20h] [rbp-10h]\n  _QWORD *v6; // [rsp+28h] [rbp-8h]\n  _QWORD *v7; // [rsp+28h] [rbp-8h]\n\n  if ( *(_QWORD *)(a1 + 64) && *(_QWORD *)(a1 + 32) )\n  {\n    for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n    {\n      if ( *i )\n      {\n        for ( ptr = i; ptr; ptr = (_QWORD *)ptr[1] )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*ptr);\n      }\n    }\n  }\n  for ( j = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)j; j += 2 )\n  {\n    for ( ptra = (_QWORD *)j[1]; ptra; ptra = v6 )\n    {\n      v6 = (_QWORD *)ptra[1];\n      free(ptra);\n    }\n  }\n  for ( ptrb = *(_QWORD **)(a1 + 72); ptrb; ptrb = v7 )\n  {\n    v7 = (_QWORD *)ptrb[1];\n    free(ptrb);\n  }\n  free(*(void **)a1);\n  free((void *)a1);\n}\n"], [4245682, "sub_40C8B2", "void *__fastcall sub_40C8B2(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  if ( !*(_QWORD *)(a1 + 72) )\n    return malloc(0x10uLL);\n  v2 = *(_QWORD *)(a1 + 72);\n  *(_QWORD *)(a1 + 72) = *(_QWORD *)(v2 + 8);\n  return (void *)v2;\n}\n"], [4245757, "sub_40C8FD", "__int64 __fastcall sub_40C8FD(__int64 a1, _QWORD *a2)\n{\n  __int64 result; // rax\n\n  *a2 = 0LL;\n  a2[1] = *(_QWORD *)(a1 + 72);\n  result = a1;\n  *(_QWORD *)(a1 + 72) = a2;\n  return result;\n}\n"], [4245810, "sub_40C932", "__int64 __fastcall sub_40C932(__int64 a1, __int64 a2, _QWORD *a3, char a4)\n{\n  __int64 result; // rax\n  __int64 v5; // rdx\n  _QWORD *i; // [rsp+20h] [rbp-30h]\n  _QWORD *v9; // [rsp+28h] [rbp-28h]\n  __int64 v10; // [rsp+30h] [rbp-20h]\n  _QWORD *v11; // [rsp+38h] [rbp-18h]\n  __int64 v12; // [rsp+40h] [rbp-10h]\n  _QWORD *v13; // [rsp+48h] [rbp-8h]\n\n  v9 = (_QWORD *)sub_40BE8D(a1, a2);\n  *a3 = v9;\n  if ( !*v9 )\n    return 0LL;\n  if ( *v9 == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *v9) )\n  {\n    v12 = *v9;\n    if ( a4 )\n    {\n      if ( v9[1] )\n      {\n        v13 = (_QWORD *)v9[1];\n        v5 = v13[1];\n        *v9 = *v13;\n        v9[1] = v5;\n        sub_40C8FD(a1, v13);\n      }\n      else\n      {\n        *v9 = 0LL;\n      }\n    }\n    result = v12;\n  }\n  else\n  {\n    for ( i = v9; ; i = (_QWORD *)i[1] )\n    {\n      if ( !i[1] )\n        return 0LL;\n      if ( *(_QWORD *)i[1] == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *(_QWORD *)i[1]) )\n        break;\n    }\n    v10 = *(_QWORD *)i[1];\n    if ( a4 )\n    {\n      v11 = (_QWORD *)i[1];\n      i[1] = v11[1];\n      sub_40C8FD(a1, v11);\n    }\n    result = v10;\n  }\n  return result;\n}\n"], [4246215, "sub_40CAC7", "__int64 __fastcall sub_40CAC7(__int64 a1, __int64 a2, char a3)\n{\n  __int64 *i; // [rsp+20h] [rbp-30h]\n  __int64 *j; // [rsp+28h] [rbp-28h]\n  __int64 v7; // [rsp+30h] [rbp-20h]\n  __int64 v8; // [rsp+30h] [rbp-20h]\n  _QWORD *v9; // [rsp+38h] [rbp-18h]\n  _QWORD *v10; // [rsp+38h] [rbp-18h]\n  __int64 *v11; // [rsp+40h] [rbp-10h]\n  _QWORD *v12; // [rsp+48h] [rbp-8h]\n\n  for ( i = *(__int64 **)a2; *(_QWORD *)(a2 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (__int64 *)i[1]; j; j = v11 )\n      {\n        v7 = *j;\n        v9 = (_QWORD *)sub_40BE8D(a1, *j);\n        v11 = (__int64 *)j[1];\n        if ( *v9 )\n        {\n          j[1] = v9[1];\n          v9[1] = j;\n        }\n        else\n        {\n          *v9 = v7;\n          ++*(_QWORD *)(a1 + 24);\n          sub_40C8FD(a1, j);\n        }\n      }\n      v8 = *i;\n      i[1] = 0LL;\n      if ( !a3 )\n      {\n        v10 = (_QWORD *)sub_40BE8D(a1, v8);\n        if ( *v10 )\n        {\n          v12 = sub_40C8B2(a1);\n          if ( !v12 )\n            return 0LL;\n          *v12 = v8;\n          v12[1] = v10[1];\n          v10[1] = v12;\n        }\n        else\n        {\n          *v10 = v8;\n          ++*(_QWORD *)(a1 + 24);\n        }\n        *i = 0LL;\n        --*(_QWORD *)(a2 + 24);\n      }\n    }\n  }\n  return 1LL;\n}\n"], [4246677, "sub_40CC95", "__int64 __fastcall sub_40CC95(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  unsigned __int64 nmemb; // [rsp+10h] [rbp-60h]\n  void *v4; // [rsp+20h] [rbp-50h] BYREF\n  __int64 v5; // [rsp+28h] [rbp-48h]\n  unsigned __int64 v6; // [rsp+30h] [rbp-40h]\n  __int64 v7; // [rsp+38h] [rbp-38h]\n  __int64 v8; // [rsp+40h] [rbp-30h]\n  __int64 v9; // [rsp+48h] [rbp-28h]\n  __int64 v10; // [rsp+50h] [rbp-20h]\n  __int64 v11; // [rsp+58h] [rbp-18h]\n  __int64 v12; // [rsp+60h] [rbp-10h]\n  __int64 v13; // [rsp+68h] [rbp-8h]\n\n  nmemb = sub_40C433(a2, *(_QWORD *)(a1 + 40));\n  if ( !nmemb )\n    return 0LL;\n  if ( *(_QWORD *)(a1 + 16) == nmemb )\n    return 1LL;\n  v4 = calloc(nmemb, 0x10uLL);\n  if ( !v4 )\n    return 0LL;\n  v6 = nmemb;\n  v5 = (__int64)v4 + 16 * nmemb;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = *(_QWORD *)(a1 + 40);\n  v10 = *(_QWORD *)(a1 + 48);\n  v11 = *(_QWORD *)(a1 + 56);\n  v12 = *(_QWORD *)(a1 + 64);\n  v13 = *(_QWORD *)(a1 + 72);\n  if ( (unsigned __int8)sub_40CAC7((__int64)&v4, a1, 0) )\n  {\n    free(*(void **)a1);\n    *(_QWORD *)a1 = v4;\n    *(_QWORD *)(a1 + 8) = v5;\n    *(_QWORD *)(a1 + 16) = v6;\n    *(_QWORD *)(a1 + 24) = v7;\n    *(_QWORD *)(a1 + 72) = v13;\n    result = 1LL;\n  }\n  else\n  {\n    *(_QWORD *)(a1 + 72) = v13;\n    if ( (unsigned __int8)sub_40CAC7(a1, (__int64)&v4, 1) != 1 || (unsigned __int8)sub_40CAC7(a1, (__int64)&v4, 0) != 1 )\n      abort();\n    free(v4);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4247193, "sub_40CE99", "__int64 __fastcall sub_40CE99(_QWORD *a1, __int64 a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  __int64 v4; // rax\n  float v5; // xmm0_4\n  __int64 v6; // rdx\n  __int64 v7; // rax\n  float v8; // xmm1_4\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  float v11; // xmm0_4\n  __int64 v12; // rdx\n  __int64 v13; // rax\n  float v14; // xmm1_4\n  __int64 v15; // rdx\n  __int64 v16; // rax\n  float v17; // xmm0_4\n  __int64 v18; // rdx\n  float v19; // xmm0_4\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  __int64 v23; // rax\n  __int64 *v25; // [rsp+30h] [rbp-20h] BYREF\n  __int64 v26; // [rsp+38h] [rbp-18h]\n  __int64 v27; // [rsp+40h] [rbp-10h]\n  _QWORD *v28; // [rsp+48h] [rbp-8h]\n\n  if ( !a2 )\n    abort();\n  v26 = sub_40C932((__int64)a1, a2, &v25, 0);\n  if ( v26 )\n  {\n    if ( a3 )\n      *a3 = v26;\n    result = 0LL;\n  }\n  else\n  {\n    v4 = a1[3];\n    if ( v4 < 0 )\n    {\n      v6 = a1[3] & 1LL | ((unsigned __int64)v4 >> 1);\n      v5 = (float)(int)v6 + (float)(int)v6;\n    }\n    else\n    {\n      v5 = (float)(int)v4;\n    }\n    v7 = a1[2];\n    if ( v7 < 0 )\n    {\n      v9 = a1[2] & 1LL | ((unsigned __int64)v7 >> 1);\n      v8 = (float)(int)v9 + (float)(int)v9;\n    }\n    else\n    {\n      v8 = (float)(int)v7;\n    }\n    if ( v5 > (float)(v8 * *(float *)(a1[5] + 8LL)) )\n    {\n      sub_40C33B((__int64)a1);\n      v10 = a1[3];\n      if ( v10 < 0 )\n      {\n        v12 = a1[3] & 1LL | ((unsigned __int64)v10 >> 1);\n        v11 = (float)(int)v12 + (float)(int)v12;\n      }\n      else\n      {\n        v11 = (float)(int)v10;\n      }\n      v13 = a1[2];\n      if ( v13 < 0 )\n      {\n        v15 = a1[2] & 1LL | ((unsigned __int64)v13 >> 1);\n        v14 = (float)(int)v15 + (float)(int)v15;\n      }\n      else\n      {\n        v14 = (float)(int)v13;\n      }\n      if ( v11 > (float)(v14 * *(float *)(a1[5] + 8LL)) )\n      {\n        v27 = a1[5];\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v16 = a1[2];\n          if ( v16 < 0 )\n          {\n            v18 = a1[2] & 1LL | ((unsigned __int64)v16 >> 1);\n            v17 = (float)(int)v18 + (float)(int)v18;\n          }\n          else\n          {\n            v17 = (float)(int)v16;\n          }\n          v19 = v17 * *(float *)(v27 + 12);\n        }\n        else\n        {\n          v20 = a1[2];\n          if ( v20 < 0 )\n          {\n            v22 = a1[2] & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v19 = (float)(v21 * *(float *)(v27 + 12)) * *(float *)(v27 + 8);\n        }\n        if ( v19 >= 1.8446744e19 )\n          return 0xFFFFFFFFLL;\n        if ( v19 >= 9.223372e18 )\n          v23 = (unsigned int)(int)(float)(v19 - 9.223372e18) ^ 0x8000000000000000LL;\n        else\n          v23 = (unsigned int)(int)v19;\n        if ( (unsigned __int8)sub_40CC95((__int64)a1, v23) != 1 )\n          return 0xFFFFFFFFLL;\n        if ( sub_40C932((__int64)a1, a2, &v25, 0) )\n          abort();\n      }\n    }\n    if ( *v25 )\n    {\n      v28 = sub_40C8B2((__int64)a1);\n      if ( v28 )\n      {\n        *v28 = a2;\n        v28[1] = v25[1];\n        v25[1] = (__int64)v28;\n        ++a1[4];\n        result = 1LL;\n      }\n      else\n      {\n        result = 0xFFFFFFFFLL;\n      }\n    }\n    else\n    {\n      *v25 = a2;\n      ++a1[4];\n      ++a1[3];\n      result = 1LL;\n    }\n  }\n  return result;\n}\n"], [4247987, "sub_40D1B3", "__int64 __fastcall sub_40D1B3(_QWORD *a1, __int64 a2)\n{\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h] BYREF\n\n  v3 = sub_40CE99(a1, a2, &v4);\n  if ( v3 == -1 )\n    return 0LL;\n  if ( v3 )\n    return a2;\n  return v4;\n}\n"], [4248060, "sub_40D1FC", "__int64 __fastcall sub_40D1FC(__int64 a1, __int64 a2)\n{\n  __int64 v3; // rax\n  float v4; // xmm0_4\n  __int64 v5; // rdx\n  __int64 v6; // rax\n  float v7; // xmm1_4\n  __int64 v8; // rdx\n  __int64 v9; // rax\n  float v10; // xmm0_4\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  float v13; // xmm1_4\n  __int64 v14; // rdx\n  __int64 v15; // rax\n  float v16; // xmm0_4\n  __int64 v17; // rdx\n  float v18; // xmm0_4\n  __int64 v19; // rax\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  float v23; // xmm0_4\n  _QWORD *v24; // [rsp+10h] [rbp-30h] BYREF\n  void *ptr; // [rsp+18h] [rbp-28h]\n  __int64 v26; // [rsp+20h] [rbp-20h]\n  __int64 v27; // [rsp+28h] [rbp-18h]\n  __int64 v28; // [rsp+30h] [rbp-10h]\n  void *v29; // [rsp+38h] [rbp-8h]\n\n  v26 = sub_40C932(a1, a2, &v24, 1);\n  if ( !v26 )\n    return 0LL;\n  --*(_QWORD *)(a1 + 32);\n  if ( !*v24 )\n  {\n    v3 = --*(_QWORD *)(a1 + 24);\n    if ( v3 < 0 )\n    {\n      v5 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v3 >> 1);\n      v4 = (float)(int)v5 + (float)(int)v5;\n    }\n    else\n    {\n      v4 = (float)(int)v3;\n    }\n    v6 = *(_QWORD *)(a1 + 16);\n    if ( v6 < 0 )\n    {\n      v8 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v6 >> 1);\n      v7 = (float)(int)v8 + (float)(int)v8;\n    }\n    else\n    {\n      v7 = (float)(int)v6;\n    }\n    if ( (float)(v7 * **(float **)(a1 + 40)) > v4 )\n    {\n      sub_40C33B(a1);\n      v9 = *(_QWORD *)(a1 + 24);\n      if ( v9 < 0 )\n      {\n        v11 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v9 >> 1);\n        v10 = (float)(int)v11 + (float)(int)v11;\n      }\n      else\n      {\n        v10 = (float)(int)v9;\n      }\n      v12 = *(_QWORD *)(a1 + 16);\n      if ( v12 < 0 )\n      {\n        v14 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v12 >> 1);\n        v13 = (float)(int)v14 + (float)(int)v14;\n      }\n      else\n      {\n        v13 = (float)(int)v12;\n      }\n      if ( (float)(v13 * **(float **)(a1 + 40)) > v10 )\n      {\n        v27 = *(_QWORD *)(a1 + 40);\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v15 = *(_QWORD *)(a1 + 16);\n          if ( v15 < 0 )\n          {\n            v17 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v15 >> 1);\n            v16 = (float)(int)v17 + (float)(int)v17;\n          }\n          else\n          {\n            v16 = (float)(int)v15;\n          }\n          v18 = v16 * *(float *)(v27 + 4);\n          if ( v18 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v18 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v18;\n        }\n        else\n        {\n          v20 = *(_QWORD *)(a1 + 16);\n          if ( v20 < 0 )\n          {\n            v22 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v23 = (float)(v21 * *(float *)(v27 + 4)) * *(float *)(v27 + 8);\n          if ( v23 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v23 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v23;\n        }\n        v28 = v19;\n        if ( (unsigned __int8)sub_40CC95(a1, v19) != 1 )\n        {\n          for ( ptr = *(void **)(a1 + 72); ptr; ptr = v29 )\n          {\n            v29 = (void *)*((_QWORD *)ptr + 1);\n            free(ptr);\n          }\n          *(_QWORD *)(a1 + 72) = 0LL;\n        }\n      }\n    }\n  }\n  return v26;\n}\n"], [4248747, "sub_40D4AB", "unsigned __int64 __fastcall sub_40D4AB(_QWORD *a1, unsigned __int64 a2)\n{\n  return ((unsigned __int64)sub_413FBD(*a1, a2) ^ a1[1]) % a2;\n}\n"], [4248823, "sub_40D4F7", "unsigned __int64 __fastcall sub_40D4F7(__int64 a1, unsigned __int64 a2)\n{\n  return *(_QWORD *)(a1 + 8) % a2;\n}\n"], [4248865, "sub_40D521", "_BOOL8 __fastcall sub_40D521(_QWORD *a1, _QWORD *a2)\n{\n  return a1[1] == a2[1] && a1[2] == a2[2] && (unsigned __int8)sub_40FC0C(*a1, *a2);\n}\n"], [4248985, "sub_40D599", "_BOOL8 __fastcall sub_40D599(__int64 a1, __int64 a2)\n{\n  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)\n      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)\n      && !strcmp(*(const char **)a1, *(const char **)a2);\n}\n"], [4249105, "sub_40D611", "void __fastcall sub_40D611(void **a1)\n{\n  free(*a1);\n  free(a1);\n}\n"], [4249154, "sub_40D642", "_BYTE *__fastcall sub_40D642(char *a1, __int64 a2, __int64 (__fastcall *a3)(char *, char *, __int64), __int64 a4)\n{\n  int v4; // eax\n  char *v6; // rax\n  char v9; // [rsp+2Ah] [rbp-26h]\n  char v10; // [rsp+2Bh] [rbp-25h]\n  int v11; // [rsp+2Ch] [rbp-24h]\n  unsigned int v12; // [rsp+30h] [rbp-20h]\n  int v13; // [rsp+34h] [rbp-1Ch]\n  char *v14; // [rsp+38h] [rbp-18h]\n  char *v15; // [rsp+40h] [rbp-10h]\n  char *v16; // [rsp+48h] [rbp-8h]\n\n  v14 = 0LL;\n  v15 = a1;\n  v16 = a1;\n  v9 = 0;\n  while ( 1 )\n  {\n    do\n    {\n      while ( 1 )\n      {\n        v6 = v16++;\n        v10 = *v6;\n        if ( !*v6 )\n          return (_BYTE *)(v15 - a1);\n        if ( *v16 != 47 )\n          break;\n        if ( v10 != 47 )\n          v14 = v16;\n      }\n    }\n    while ( v10 != 47 || !*v16 || !v14 );\n    if ( v14 - v15 != 1 || *v15 != 46 )\n      break;\nLABEL_29:\n    v15 = v16;\n  }\n  v11 = 0;\n  v12 = 0;\n  *v14 = 0;\n  if ( v14 - v15 == 2 && *v15 == 46 && v15[1] == 46 )\n  {\n    v9 = 0;\n    goto LABEL_20;\n  }\n  v4 = a3(a1, v15, a4);\n  switch ( v4 )\n  {\n    case 0:\n      v12 = 2;\n      goto LABEL_19;\n    case 1:\nLABEL_19:\n      v9 = 1;\n      break;\n    case -1:\n      v11 = *__errno_location();\n      break;\n  }\nLABEL_20:\n  if ( v9 )\n    v12 |= 1u;\n  v13 = sub_410184(a2, v15, v12, 0LL);\n  if ( v13 != -1 )\n    *v14 = 47;\n  if ( !v13 )\n    goto LABEL_29;\n  if ( v11 && *__errno_location() == 2 )\n    *__errno_location() = v11;\n  return (_BYTE *)v13;\n}\n"], [4249588, "sub_40D7F4", "__int64 __fastcall sub_40D7F4(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  if ( *a1 == 4 )\n    result = (unsigned int)a1[1];\n  else\n    result = 0LL;\n  return result;\n}\n"], [4249623, "sub_40D817", "__int64 __fastcall sub_40D817(char *a1, _DWORD *a2, __int64 (__fastcall *a3)(char *, char *, __int64), __int64 a4, unsigned int a5, void (__fastcall *a6)(char *, __int64), int a7, int a8, int a9, bool a10)\n{\n  int v10; // eax\n  bool v12; // al\n  int v13; // eax\n  bool v14; // al\n  void *v15; // rax\n  __int64 v16; // r12\n  const char *v17; // rax\n  char *v18; // rbx\n  int v19; // eax\n  __int64 v20; // rbx\n  char *v21; // rax\n  bool v27; // [rsp+44h] [rbp-CCh]\n  bool v28; // [rsp+47h] [rbp-C9h]\n  int errnum; // [rsp+48h] [rbp-C8h]\n  unsigned int v30; // [rsp+4Ch] [rbp-C4h]\n  unsigned int mode; // [rsp+50h] [rbp-C0h]\n  int v32; // [rsp+54h] [rbp-BCh]\n  int v33; // [rsp+58h] [rbp-B8h]\n  __int64 v34; // [rsp+60h] [rbp-B0h]\n  struct stat stat_buf; // [rsp+70h] [rbp-A0h] BYREF\n\n  if ( *a1 == 47 )\n    v10 = 0;\n  else\n    v10 = sub_40D7F4(a2);\n  errnum = v10;\n  if ( v10 )\n    goto LABEL_64;\n  v34 = 0LL;\n  v30 = 4;\n  if ( a3 )\n  {\n    v34 = (__int64)sub_40D642(a1, (__int64)a2, a3, a4);\n    if ( v34 < 0 )\n    {\n      if ( v34 < -1 )\n        return 1LL;\n      errnum = *__errno_location();\n    }\n  }\n  if ( v34 < 0 )\n  {\nLABEL_64:\n    v20 = sub_40E392(a1);\n    v21 = gettext(\"cannot create directory %s\");\n    error(0, errnum, v21, v20);\n    return 0LL;\n  }\n  v12 = a8 == -1 && a9 == -1;\n  v27 = v12;\n  mode = a5;\n  if ( v12 )\n  {\n    if ( a7 & 0xC00 | a5 & 0x200 )\n      mode = a5 & 0xFFFFFFED;\n  }\n  else\n  {\n    mode = a5 & 0xFFFFFFC0;\n  }\n  if ( mkdir(&a1[v34], mode) )\n  {\n    errnum = *__errno_location();\n    mode = -1;\n  }\n  else\n  {\n    a6(a1, a4);\n    a10 = v27 && (a7 & 0xC00 | a5 & 0x200) == 0;\n    if ( (a5 & 0x100) != 0 )\n      v13 = 3;\n    else\n      v13 = 1;\n    v30 = v13 | 4;\n  }\n  if ( a10 )\n  {\n    if ( !errnum\n      || errnum != 2 && a3 && !(unsigned int)sub_419BC0(&a1[v34], &stat_buf) && (stat_buf.st_mode & 0xF000) == 0x4000 )\n    {\n      return 1LL;\n    }\n    goto LABEL_64;\n  }\n  v32 = sub_410184(a2, &a1[v34], v30, &stat_buf);\n  if ( v32 < -1 )\n    return 1LL;\n  v33 = *__errno_location();\n  v14 = !errnum && (v32 && (a5 & 0x40) != 0 || SLODWORD(stat_buf.st_dev) < 0 && (a5 & 0x100) != 0);\n  v28 = v14;\n  if ( v14 )\n  {\n    if ( SLODWORD(stat_buf.st_dev) >= 0 )\n      close(stat_buf.st_dev);\n  }\n  else\n  {\n    if ( v32 )\n      LODWORD(v15) = v34 + (_DWORD)a1;\n    else\n      v15 = &unk_41BE10;\n    if ( !(unsigned int)sub_414017(stat_buf.st_dev, (_DWORD)v15, mode, a8, a9, a5, a7) )\n      return 1LL;\n  }\n  if ( errnum && (errnum == 2 || !a3 || *__errno_location() == 20) )\n    goto LABEL_64;\n  v16 = sub_40E392(a1);\n  if ( v27 )\n    v17 = \"cannot change permissions of %s\";\n  else\n    v17 = \"cannot change owner and permissions of %s\";\n  v18 = gettext(v17);\n  if ( !v28 )\n  {\n    v19 = *__errno_location();\n  }\n  else if ( v32 && (a5 & 0x40) != 0 )\n  {\n    v19 = v33;\n  }\n  else\n  {\n    v19 = HIDWORD(stat_buf.st_dev);\n  }\n  error(0, v19, v18, v16);\n  return 0LL;\n}\n"], [4250856, "sub_40DCE8", "__int64 __fastcall sub_40DCE8(unsigned int a1)\n{\n  return a1;\n}\n"], [4250868, "sub_40DCF4", "__int64 __fastcall sub_40DCF4(int a1, int a2)\n{\n  __int64 result; // rax\n\n  result = sub_4126DD(32LL);\n  *(_BYTE *)result = 61;\n  *(_BYTE *)(result + 1) = 1;\n  *(_DWORD *)(result + 4) = 4095;\n  *(_DWORD *)(result + 8) = a1;\n  *(_DWORD *)(result + 12) = a2;\n  *(_BYTE *)(result + 17) = 0;\n  return result;\n}\n"], [4250960, "sub_40DD50", "__int64 __fastcall sub_40DD50(char *a1)\n{\n  char *v1; // rax\n  _BOOL4 v3; // eax\n  int v4; // eax\n  char *v5; // rax\n  int v6; // eax\n  int v7; // eax\n  __int64 v8; // rax\n  int v9; // eax\n  char *v10; // [rsp+8h] [rbp-48h]\n  char v11; // [rsp+12h] [rbp-3Eh]\n  char v12; // [rsp+13h] [rbp-3Dh]\n  unsigned int v13; // [rsp+14h] [rbp-3Ch]\n  int v14; // [rsp+18h] [rbp-38h]\n  int v15; // [rsp+1Ch] [rbp-34h]\n  int v16; // [rsp+20h] [rbp-30h]\n  __int64 v17; // [rsp+28h] [rbp-28h]\n  __int64 v18; // [rsp+30h] [rbp-20h]\n  char *i; // [rsp+38h] [rbp-18h]\n  _BYTE *ptr; // [rsp+40h] [rbp-10h]\n  char *v21; // [rsp+48h] [rbp-8h]\n\n  v10 = a1;\n  v17 = 0LL;\n  if ( *a1 > 47 && *a1 <= 55 )\n  {\n    v13 = 0;\n    do\n    {\n      v1 = v10++;\n      v13 = 8 * v13 + *v1 - 48;\n      if ( v13 > 0xFFF )\n        return 0LL;\n    }\n    while ( *v10 > 47 && *v10 <= 55 );\n    if ( *v10 )\n      return 0LL;\n    v16 = sub_40DCE8(v13);\n    return sub_40DCF4(v16, v16 & 0xC00 | 0x3FFu);\n  }\n  v18 = 1LL;\n  for ( i = a1; *i; ++i )\n  {\n    v3 = *i == 61 || *i == 43 || *i == 45;\n    v18 += v3;\n  }\n  ptr = (_BYTE *)sub_412594(v18, 16LL);\n  while ( 2 )\n  {\n    v14 = 0;\n    while ( 1 )\n    {\n      v4 = *v10;\n      if ( v4 == 97 )\n      {\n        v14 |= 0xFFFu;\n        goto LABEL_35;\n      }\n      if ( v4 <= 97 )\n        break;\n      switch ( v4 )\n      {\n        case 'o':\n          v14 |= 0x207u;\n          break;\n        case 'u':\n          v14 |= 0x9C0u;\n          break;\n        case 'g':\n          v14 |= 0x438u;\n          break;\n        default:\n          goto LABEL_69;\n      }\nLABEL_35:\n      ++v10;\n    }\n    if ( v4 == 45 || v4 == 61 || v4 == 43 )\n    {\n      do\n      {\n        v12 = *v10;\n        v11 = 3;\n        v5 = v10 + 1;\n        v10 += 2;\n        v6 = *v5;\n        switch ( v6 )\n        {\n          case 'o':\n            v15 = 7;\n            break;\n          case 'u':\n            v15 = 448;\n            break;\n          case 'g':\n            v15 = 56;\n            break;\n          default:\n            v15 = 0;\n            v11 = 1;\n            --v10;\n            while ( 1 )\n            {\n              v7 = *v10;\n              if ( v7 == 115 )\n              {\n                v15 |= 0xC00u;\n              }\n              else if ( v7 > 115 )\n              {\n                switch ( v7 )\n                {\n                  case 'w':\n                    v15 |= 0x92u;\n                    break;\n                  case 'x':\n                    v15 |= 0x49u;\n                    break;\n                  case 't':\n                    v15 |= 0x200u;\n                    break;\n                  default:\n                    goto LABEL_59;\n                }\n              }\n              else if ( v7 == 88 )\n              {\n                v11 = 2;\n              }\n              else\n              {\n                if ( v7 != 114 )\n                  goto LABEL_59;\n                v15 |= 0x124u;\n              }\n              ++v10;\n            }\n        }\nLABEL_59:\n        v8 = v17++;\n        v21 = &ptr[16 * v8];\n        *v21 = v12;\n        v21[1] = v11;\n        *((_DWORD *)v21 + 1) = v14;\n        *((_DWORD *)v21 + 2) = v15;\n        if ( v14 )\n          v9 = v14 & v15;\n        else\n          v9 = v15;\n        *((_DWORD *)v21 + 3) = v9;\n      }\n      while ( *v10 == 61 || *v10 == 43 || *v10 == 45 );\n      if ( *v10 == 44 )\n      {\n        ++v10;\n        continue;\n      }\n      if ( !*v10 )\n      {\n        ptr[16 * v17 + 1] = 0;\n        return (__int64)ptr;\n      }\n    }\n    break;\n  }\nLABEL_69:\n  free(ptr);\n  return 0LL;\n}\n"], [4251813, "sub_40E0A5", "__int64 __fastcall sub_40E0A5(char *a1)\n{\n  __int64 result; // rax\n  struct stat stat_buf; // [rsp+10h] [rbp-90h] BYREF\n\n  if ( (unsigned int)sub_419BC0(a1, &stat_buf) )\n    result = 0LL;\n  else\n    result = sub_40DCF4(stat_buf.st_mode, 4095);\n  return result;\n}\n"], [4251884, "sub_40E0EC", "__int64 __fastcall sub_40E0EC(__int16 a1, unsigned __int8 a2, int a3, char *a4, _DWORD *a5)\n{\n  int v5; // eax\n  int v6; // eax\n  int v7; // edx\n  int v8; // eax\n  int v9; // edx\n  int v10; // eax\n  int v11; // eax\n  int v12; // eax\n  int v13; // eax\n  unsigned int v17; // [rsp+28h] [rbp-18h]\n  int v18; // [rsp+2Ch] [rbp-14h]\n  int v19; // [rsp+30h] [rbp-10h]\n  int v20; // [rsp+30h] [rbp-10h]\n  int v21; // [rsp+30h] [rbp-10h]\n  int v22; // [rsp+34h] [rbp-Ch]\n  int v23; // [rsp+38h] [rbp-8h]\n\n  v17 = a1 & 0xFFF;\n  v18 = 0;\n  while ( a4[1] )\n  {\n    v22 = *((_DWORD *)a4 + 1);\n    if ( a2 )\n      v5 = 3072;\n    else\n      v5 = 0;\n    v23 = ~*((_DWORD *)a4 + 3) & v5;\n    v19 = *((_DWORD *)a4 + 2);\n    v6 = a4[1];\n    if ( v6 == 2 )\n    {\n      if ( v17 & 0x49 | a2 )\n        v19 |= 0x49u;\n    }\n    else if ( v6 == 3 )\n    {\n      v20 = v17 & v19;\n      if ( (v20 & 0x124) != 0 )\n        v7 = 292;\n      else\n        v7 = 0;\n      if ( (v20 & 0x92) != 0 )\n        v8 = 146;\n      else\n        v8 = 0;\n      v9 = v8 | v7;\n      if ( (v20 & 0x49) != 0 )\n        v10 = 73;\n      else\n        v10 = 0;\n      v19 = v9 | v10 | v20;\n    }\n    if ( v22 )\n      v11 = *((_DWORD *)a4 + 1);\n    else\n      v11 = ~a3;\n    v21 = ~v23 & v11 & v19;\n    v12 = *a4;\n    switch ( v12 )\n    {\n      case '-':\n        v18 |= v21;\n        v17 &= ~v21;\n        break;\n      case '=':\n        if ( v22 )\n          v13 = ~v22;\n        else\n          v13 = 0;\n        v18 |= ~((unsigned __int16)v23 | (unsigned __int16)v13) & 0xFFF;\n        v17 = v21 | v17 & (v23 | v13);\n        break;\n      case '+':\n        v18 |= v21;\n        v17 |= v21;\n        break;\n    }\n    a4 += 16;\n  }\n  if ( a5 )\n    *a5 = v18;\n  return v17;\n}\n"], [4252295, "sub_40E287", "char *__fastcall sub_40E287(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  ::s = s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4252526, "sub_40E36E", "__int64 __fastcall sub_40E36E(unsigned int a1, __int64 a2)\n{\n  return sub_40F81D(a1, 6LL, a2);\n}\n"], [4252562, "sub_40E392", "__int64 __fastcall sub_40E392(__int64 a1)\n{\n  return sub_40E36E(0, a1);\n}\n"], [4252593, "sub_40E3B1", "__int64 __fastcall sub_40E3B1(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_622920;\n  v4 = sub_412801(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4252666, "sub_40E3FA", "__int64 __fastcall sub_40E3FA(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_622920;\n  return *(unsigned int *)v1;\n}\n"], [4252696, "sub_40E418", "__int64 *__fastcall sub_40E418(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_622920;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4252732, "sub_40E43C", "__int64 __fastcall sub_40E43C(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_622920;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4252868, "sub_40E4C4", "__int64 __fastcall sub_40E4C4(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_622920;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4252919, "sub_40E4F7", "__int64 *__fastcall sub_40E4F7(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_622920;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4253009, "sub_40E551", "_QWORD *__fastcall sub_40E551(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4253129, "sub_40E5C9", "char *__fastcall sub_40E5C9(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)asc_41BFA0;\n  return v3;\n}\n"], [4253190, "sub_40E606", "unsigned __int64 __fastcall sub_40E606(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_40E5C9((const char *)&asc_41BFA0[1], a5);\n        a9 = sub_40E5C9((const char *)&asc_41BFA0[2], a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)asc_41BFA0;\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(asc_41BFA0 + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_40E606(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4256337, "sub_40F251", "unsigned __int64 __fastcall sub_40F251(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_622920;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_40E606(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4256497, "sub_40F2F1", "__int64 __fastcall sub_40F2F1(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40F323(a1, a2, 0LL, a3);\n}\n"], [4256547, "sub_40F323", "__int64 __fastcall sub_40F323(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_622920;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_40E606(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_4126C3(v10);\n  sub_40E606(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4256847, "sub_40F44F", "void sub_40F44F()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_620410;\n  for ( i = 1; i < dword_6203F0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_622960 )\n  {\n    free(ptr[1]);\n    qword_620400 = 256LL;\n    off_620408 = &unk_622960;\n  }\n  if ( ptr != (void **)&qword_620400 )\n  {\n    free(ptr);\n    off_620410 = (__int64)&qword_620400;\n  }\n  dword_6203F0 = 1;\n}\n"], [4257018, "sub_40F4FA", "void *__fastcall sub_40F4FA(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  _QWORD *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = (_QWORD *)off_620410;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6203F0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_620410 == (_QWORD)&qword_620400;\n    if ( (__int64 *)off_620410 == &qword_620400 )\n      v4 = 0LL;\n    else\n      v4 = off_620410;\n    v12 = (_QWORD *)sub_412712(v4, 16 * v14);\n    off_620410 = (__int64)v12;\n    if ( v9 )\n    {\n      v5 = off_620408;\n      *v12 = qword_620400;\n      v12[1] = v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6203F0], 0, 16 * (v14 - (unsigned int)dword_6203F0));\n    dword_6203F0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_40E606((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_622960 )\n      free(ptr);\n    ptr = (void *)sub_4126C3(v16);\n    v12[2 * a1 + 1] = ptr;\n    sub_40E606((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4257664, "sub_40F780", "void *__fastcall sub_40F780(int a1, __int64 a2)\n{\n  return sub_40F4FA(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_622920);\n}\n"], [4257707, "sub_40F7AB", "void *__fastcall sub_40F7AB(int a1, __int64 a2, size_t a3)\n{\n  return sub_40F4FA(a1, a2, a3, (__int64)&qword_622920);\n}\n"], [4257751, "sub_40F7D7", "void *__fastcall sub_40F7D7(__int64 a1)\n{\n  return sub_40F780(0, a1);\n}\n"], [4257782, "sub_40F7F6", "void *__fastcall sub_40F7F6(__int64 a1, size_t a2)\n{\n  return sub_40F7AB(0, a1, a2);\n}\n"], [4257821, "sub_40F81D", "void *__fastcall sub_40F81D(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_40E551(v5, a2);\n  return sub_40F4FA(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4257886, "sub_40F85E", "void *__fastcall sub_40F85E(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_40E551(v7, a2);\n  return sub_40F4FA(a1, a3, a4, (__int64)v7);\n}\n"], [4257949, "sub_40F89D", "void *__fastcall sub_40F89D(int a1, __int64 a2)\n{\n  return sub_40F81D(0, a1, a2);\n}\n"], [4257985, "sub_40F8C1", "void *__fastcall sub_40F8C1(int a1, __int64 a2, size_t a3)\n{\n  return sub_40F85E(0, a1, a2, a3);\n}\n"], [4258029, "sub_40F8ED", "void *__fastcall sub_40F8ED(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_622920;\n  v4[1] = qword_622928;\n  v4[2] = qword_622930;\n  v4[3] = qword_622938;\n  v4[4] = qword_622940;\n  v4[5] = qword_622948;\n  v4[6] = qword_622950;\n  sub_40E43C(v4, a3, 1);\n  return sub_40F4FA(0, a1, a2, (__int64)v4);\n}\n"], [4258177, "sub_40F981", "void *__fastcall sub_40F981(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40F8ED(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4258219, "sub_40F9AB", "void *__fastcall sub_40F9AB(__int64 a1)\n{\n  return sub_40F981(a1, 0x3Au);\n}\n"], [4258250, "sub_40F9CA", "void *__fastcall sub_40F9CA(__int64 a1, size_t a2)\n{\n  return sub_40F8ED(a1, a2, 0x3Au);\n}\n"], [4258292, "sub_40F9F4", "__int64 __fastcall sub_40F9F4(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_40FA2A(a1, a2, a3, a4, -1LL);\n}\n"], [4258346, "sub_40FA2A", "void *__fastcall sub_40FA2A(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_622920;\n  v8[1] = qword_622928;\n  v8[2] = qword_622930;\n  v8[3] = qword_622938;\n  v8[4] = qword_622940;\n  v8[5] = qword_622948;\n  v8[6] = qword_622950;\n  sub_40E4F7(v8, a2, a3);\n  return sub_40F4FA(a1, a4, a5, (__int64)v8);\n}\n"], [4258497, "sub_40FAC1", "__int64 __fastcall sub_40FAC1(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40F9F4(0, a1, a2, a3);\n}\n"], [4258544, "sub_40FAF0", "void *__fastcall sub_40FAF0(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_40FA2A(0, a1, a2, a3, a4);\n}\n"], [4258602, "sub_40FB2A", "ssize_t __fastcall sub_40FB2A(int a1, void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = read(a1, a2, a3); ; result = read(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4258715, "sub_40FB9B", "ssize_t __fastcall sub_40FB9B(int a1, const void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = write(a1, a2, a3); ; result = write(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4258828, "sub_40FC0C", "_BOOL8 __fastcall sub_40FC0C(_BYTE *a1, _BYTE *a2)\n{\n  bool v2; // al\n  int *v3; // rax\n  int *v4; // rax\n  bool v5; // al\n  bool v7; // [rsp+1Dh] [rbp-153h]\n  const char *s1; // [rsp+20h] [rbp-150h]\n  const char *s2; // [rsp+28h] [rbp-148h]\n  size_t v10; // [rsp+30h] [rbp-140h]\n  size_t n; // [rsp+38h] [rbp-138h]\n  char *ptr; // [rsp+40h] [rbp-130h]\n  char *filename; // [rsp+48h] [rbp-128h]\n  struct stat stat_buf; // [rsp+50h] [rbp-120h] BYREF\n  struct stat v15; // [rsp+E0h] [rbp-90h] BYREF\n\n  s1 = sub_40B393(a1);\n  s2 = sub_40B393(a2);\n  v10 = sub_40B3FC(s1);\n  n = sub_40B3FC(s2);\n  v2 = v10 == n && !memcmp(s1, s2, n);\n  v7 = 0;\n  if ( v2 )\n  {\n    ptr = (char *)sub_40B245((__int64)a1);\n    filename = (char *)sub_40B245((__int64)a2);\n    if ( (unsigned int)sub_419BC0(ptr, &stat_buf) )\n    {\n      v3 = __errno_location();\n      error(1, *v3, \"%s\", ptr);\n    }\n    if ( (unsigned int)sub_419BC0(filename, &v15) )\n    {\n      v4 = __errno_location();\n      error(1, *v4, \"%s\", filename);\n    }\n    v5 = stat_buf.st_ino == v15.st_ino && stat_buf.st_dev == v15.st_dev;\n    v7 = v5;\n    free(ptr);\n    free(filename);\n  }\n  return v7;\n}\n"], [4259333, "sub_40FE05", "_BYTE *__fastcall sub_40FE05(DIR *a1)\n{\n  __int64 v2; // rax\n  int v3; // [rsp+1Ch] [rbp-34h]\n  _BYTE *ptr; // [rsp+20h] [rbp-30h]\n  unsigned __int64 v5; // [rsp+28h] [rbp-28h]\n  size_t v6; // [rsp+30h] [rbp-20h]\n  struct dirent *v7; // [rsp+38h] [rbp-18h]\n  char *src; // [rsp+40h] [rbp-10h]\n  size_t n; // [rsp+48h] [rbp-8h]\n\n  v5 = 512LL;\n  v6 = 0LL;\n  if ( !a1 )\n    return 0LL;\n  ptr = (_BYTE *)sub_4126DD(512LL);\n  while ( 1 )\n  {\n    *__errno_location() = 0;\n    v7 = readdir(a1);\n    if ( !v7 )\n      break;\n    src = v7->d_name;\n    if ( v7->d_name[0] == 46 )\n    {\n      if ( v7->d_name[1] == 46 )\n        v2 = 2LL;\n      else\n        v2 = 1LL;\n    }\n    else\n    {\n      v2 = 0LL;\n    }\n    if ( src[v2] )\n    {\n      n = strlen(v7->d_name) + 1;\n      if ( v6 + n < v6 )\n        sub_41285F();\n      if ( v6 + n >= v5 )\n      {\n        do\n        {\n          if ( 2 * v5 < v5 )\n            sub_41285F();\n          v5 *= 2LL;\n        }\n        while ( v6 + n >= v5 );\n        ptr = (_BYTE *)sub_412712(ptr, v5);\n      }\n      memcpy(&ptr[v6], src, n);\n      v6 += n;\n    }\n  }\n  ptr[v6] = 0;\n  v3 = *__errno_location();\n  if ( !v3 )\n    return ptr;\n  free(ptr);\n  *__errno_location() = v3;\n  return 0LL;\n}\n"], [4259752, "sub_40FFA8", "_BYTE *__fastcall sub_40FFA8(DIR *a1)\n{\n  int v2; // [rsp+14h] [rbp-Ch]\n  _BYTE *ptr; // [rsp+18h] [rbp-8h]\n\n  ptr = sub_40FE05(a1);\n  if ( !a1 || !closedir(a1) )\n    return ptr;\n  v2 = *__errno_location();\n  free(ptr);\n  *__errno_location() = v2;\n  return 0LL;\n}\n"], [4259848, "sub_410008", "_BYTE *__fastcall sub_410008(const char *a1)\n{\n  DIR *v1; // rax\n\n  v1 = sub_40B18F(a1);\n  return sub_40FFA8(v1);\n}\n"], [4259882, "sub_41002A", "_BYTE *__fastcall sub_41002A(int a1)\n{\n  DIR *v1; // rax\n\n  v1 = fdopendir(a1);\n  return sub_40FFA8(v1);\n}\n"], [4259913, "sub_410049", "_DWORD *__fastcall sub_410049(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = 0;\n  return result;\n}\n"], [4259933, "sub_41005D", "__int64 __fastcall sub_41005D(unsigned int *a1, __int64 a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  int v4; // eax\n\n  v3 = *a1;\n  if ( *a1 > 2 )\n  {\n    if ( v3 != 3 )\n    {\n      if ( v3 > 5 )\n        __assert_fail(\"0\", \"../../src/lib/savewd.c\", 0x59u, \"savewd_save\");\n      return 0LL;\n    }\n    goto LABEL_13;\n  }\n  if ( !v3 )\n  {\n    v4 = sub_40B44A(\".\", 0, a3);\n    if ( v4 >= 0 )\n    {\n      *a1 = 1;\n      a1[1] = v4;\n      return 0LL;\n    }\n    if ( *__errno_location() != 13 && *__errno_location() != 116 )\n    {\nLABEL_11:\n      *a1 = 4;\n      a1[1] = *__errno_location();\n      return 0LL;\n    }\n    *a1 = 3;\n    a1[1] = -1;\nLABEL_13:\n    if ( (a1[1] & 0x80000000) == 0 )\n      return 0LL;\n    a1[1] = fork();\n    if ( !a1[1] )\n      return 0LL;\n    if ( (int)a1[1] > 0 )\n      return 1LL;\n    goto LABEL_11;\n  }\n  return 0LL;\n}\n"], [4260228, "sub_410184", "__int64 __fastcall sub_410184(unsigned int *a1, __int64 a2, char a3, int *a4)\n{\n  unsigned int v4; // eax\n  int v5; // eax\n  unsigned int v6; // eax\n  int *v8; // [rsp+0h] [rbp-40h]\n  char *file; // [rsp+10h] [rbp-30h]\n  int fd; // [rsp+24h] [rbp-1Ch]\n  unsigned int v12; // [rsp+28h] [rbp-18h]\n  int v13; // [rsp+2Ch] [rbp-14h]\n\n  file = (char *)a2;\n  v8 = a4;\n  fd = -1;\n  v12 = 0;\n  if ( a4 || (a3 & 1) != 0 )\n  {\n    if ( (a3 & 1) != 0 )\n      v4 = 198912;\n    else\n      v4 = 67840;\n    a2 = v4;\n    fd = open(file, v4);\n    if ( v8 )\n    {\n      *v8 = fd;\n      v8[1] = *__errno_location();\n    }\n    if ( fd < 0 && (*__errno_location() != 13 || (a3 & 2) != 0) )\n      v12 = -1;\n  }\n  if ( !v12 && (fd < 0 || (a3 & 4) == 0) )\n  {\n    if ( (unsigned __int8)sub_41005D(a1, a2, a3) )\n    {\n      v8 = 0LL;\n      v12 = -2;\n      goto LABEL_33;\n    }\n    if ( fd >= 0 )\n      v5 = fchdir(fd);\n    else\n      v5 = chdir(file);\n    v12 = v5;\n    if ( v5 )\n      goto LABEL_33;\n    v6 = *a1;\n    if ( *a1 == 3 )\n    {\n      if ( a1[1] )\n        __assert_fail(\"wd->val.child == 0\", \"../../src/lib/savewd.c\", 0x91u, \"savewd_chdir\");\n    }\n    else\n    {\n      if ( v6 > 3 )\n      {\n        if ( v6 <= 5 )\n          goto LABEL_33;\n        goto LABEL_32;\n      }\n      if ( v6 == 1 )\n      {\n        *a1 = 2;\n        goto LABEL_33;\n      }\n      if ( v6 != 2 )\nLABEL_32:\n        __assert_fail(\"0\", \"../../src/lib/savewd.c\", 0x95u, \"savewd_chdir\");\n    }\n  }\nLABEL_33:\n  if ( fd >= 0 && !v8 )\n  {\n    v13 = *__errno_location();\n    close(fd);\n    *__errno_location() = v13;\n  }\n  return v12;\n}\n"], [4260664, "sub_410338", "__int64 __fastcall sub_410338(unsigned int *a1, int a2)\n{\n  unsigned int v2; // eax\n  int stat_loc; // [rsp+34h] [rbp-Ch] BYREF\n  int v5; // [rsp+38h] [rbp-8h]\n  __pid_t pid; // [rsp+3Ch] [rbp-4h]\n\n  v2 = *a1;\n  if ( *a1 == 2 )\n  {\n    if ( fchdir(a1[1]) )\n    {\n      v5 = *__errno_location();\n      close(a1[1]);\n      *a1 = 4;\n      a1[1] = v5;\nLABEL_9:\n      *__errno_location() = a1[1];\n      return 0xFFFFFFFFLL;\n    }\n    *a1 = 1;\n    return 0LL;\n  }\n  if ( v2 < 2 )\n    return 0LL;\n  if ( v2 != 3 )\n  {\n    if ( v2 != 4 )\n      __assert_fail(\"0\", \"../../src/lib/savewd.c\", 0xD8u, \"savewd_restore\");\n    goto LABEL_9;\n  }\n  pid = a1[1];\n  if ( !pid )\n    _exit(a2);\n  if ( pid <= 0 )\n    return 0LL;\n  while ( waitpid(pid, &stat_loc, 0) < 0 )\n  {\n    if ( *__errno_location() != 4 )\n      __assert_fail(\"(*__errno_location ()) == 4\", \"../../src/lib/savewd.c\", 0xCEu, \"savewd_restore\");\n  }\n  a1[1] = -1;\n  if ( (stat_loc & 0x7F) != 0 )\n    raise(stat_loc & 0x7F);\n  return (stat_loc & 0xFF00) >> 8;\n}\n"], [4261016, "sub_410498", "_DWORD *__fastcall sub_410498(_DWORD *a1)\n{\n  int v1; // eax\n  _DWORD *result; // rax\n\n  v1 = *a1;\n  if ( *a1 > 2u )\n  {\n    if ( v1 == 3 )\n    {\n      if ( (int)a1[1] >= 0 )\n        __assert_fail(\"wd->val.child < 0\", \"../../src/lib/savewd.c\", 0xEDu, \"savewd_finish\");\n    }\n    else if ( v1 != 4 )\n    {\n      __assert_fail(\"0\", \"../../src/lib/savewd.c\", 0xF1u, \"savewd_finish\");\n    }\n  }\n  else if ( v1 )\n  {\n    close(a1[1]);\n  }\n  result = a1;\n  *a1 = 5;\n  return result;\n}\n"], [4261150, "sub_41051E", "_BOOL8 __fastcall sub_41051E(_DWORD *a1)\n{\n  return *a1 == 3 && (int)a1[1] > 0;\n}\n"], [4261197, "sub_41054D", "__int64 __fastcall sub_41054D(int a1, __int64 a2, __int64 (__fastcall *a3)(_QWORD, unsigned int *, __int64), __int64 a4)\n{\n  int v7; // [rsp+28h] [rbp-28h]\n  int i; // [rsp+2Ch] [rbp-24h]\n  int v9; // [rsp+30h] [rbp-20h]\n  int v10; // [rsp+34h] [rbp-1Ch]\n  int v11; // [rsp+38h] [rbp-18h]\n  int v12; // [rsp+3Ch] [rbp-14h]\n  unsigned int v13[4]; // [rsp+40h] [rbp-10h] BYREF\n\n  v7 = 0;\n  v9 = 0;\n  sub_410049(v13);\n  for ( i = a1 - 1; i >= 0 && **(_BYTE **)(8LL * i + a2) == 47; --i )\n    ;\n  while ( v7 < i )\n  {\n    if ( !sub_41051E(v13) )\n    {\n      v10 = a3(*(_QWORD *)(8LL * v7 + a2), v13, a4);\n      if ( v9 < v10 )\n        v9 = v10;\n    }\n    if ( **(_BYTE **)(8 * (v7 + 1LL) + a2) != 47 )\n    {\n      v11 = sub_410338(v13, v9);\n      if ( v9 < v11 )\n        v9 = v11;\n    }\n    ++v7;\n  }\n  sub_410498(v13);\n  while ( v7 < a1 )\n  {\n    v12 = a3(*(_QWORD *)(8LL * v7 + a2), v13, a4);\n    if ( v9 < v12 )\n      v9 = v12;\n    ++v7;\n  }\n  return (unsigned int)v9;\n}\n"], [4261552, "sub_4106B0", "__int64 __fastcall sub_4106B0(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_412EE6(a1, 0, 3, a4, a5, a6);\n}\n"], [4261590, "sub_4106D6", "__int64 __fastcall sub_4106D6(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  unsigned int fd; // [rsp+Ch] [rbp-14h]\n  unsigned int v8; // [rsp+18h] [rbp-8h]\n  int v9; // [rsp+1Ch] [rbp-4h]\n\n  fd = a1;\n  if ( a1 >= 0 && a1 <= 2 )\n  {\n    v8 = sub_4106B0(a1, a2, a3, a4, a5, a6);\n    v9 = *__errno_location();\n    close(a1);\n    *__errno_location() = v9;\n    fd = v8;\n  }\n  return fd;\n}\n"], [4261667, "sub_410723", "__int64 __fastcall sub_410723(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 80);\n}\n"], [4261685, "sub_410735", "__int64 __fastcall sub_410735(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 112);\n}\n"], [4261703, "sub_410747", "__int64 __fastcall sub_410747(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 96);\n}\n"], [4261721, "sub_410759", "unsigned __int64 __fastcall sub_410759(_QWORD *a1, unsigned __int64 a2)\n{\n  return *a1 % a2;\n}\n"], [4261762, "sub_410782", "bool __fastcall sub_410782(_QWORD *a1, _QWORD *a2)\n{\n  return *a1 == *a2;\n}\n"], [4261812, "sub_4107B4", "__int64 __fastcall sub_4107B4(char *a1, __int64 a2, __int64 a3, char a4)\n{\n  bool v5; // al\n  int v6; // eax\n  __time_t v7; // rbx\n  int v8; // ebx\n  int v11; // [rsp+24h] [rbp-13Ch]\n  int v12; // [rsp+28h] [rbp-138h]\n  int v13; // [rsp+2Ch] [rbp-134h]\n  int v14; // [rsp+30h] [rbp-130h]\n  int v15; // [rsp+30h] [rbp-130h]\n  int i; // [rsp+34h] [rbp-12Ch]\n  int j; // [rsp+38h] [rbp-128h]\n  int v18; // [rsp+3Ch] [rbp-124h]\n  int v19; // [rsp+40h] [rbp-120h]\n  int v20; // [rsp+50h] [rbp-110h]\n  int v21; // [rsp+54h] [rbp-10Ch]\n  __int64 v22; // [rsp+58h] [rbp-108h]\n  __int64 *v23; // [rsp+60h] [rbp-100h]\n  __int64 v24; // [rsp+68h] [rbp-F8h]\n  __int64 v25; // [rsp+70h] [rbp-F0h]\n  __int64 v26; // [rsp+78h] [rbp-E8h]\n  __int64 v27; // [rsp+88h] [rbp-D8h]\n  __int64 v28; // [rsp+90h] [rbp-D0h] BYREF\n  int v29; // [rsp+98h] [rbp-C8h]\n  char v30; // [rsp+9Ch] [rbp-C4h]\n  __int64 v31[2]; // [rsp+A0h] [rbp-C0h] BYREF\n  __int64 v32; // [rsp+B0h] [rbp-B0h]\n  __int64 v33; // [rsp+B8h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+C0h] [rbp-A0h] BYREF\n\n  v24 = *(_QWORD *)(a2 + 88);\n  v22 = *(_QWORD *)(a3 + 88);\n  v18 = sub_410747(a2);\n  v11 = sub_410747(a3);\n  if ( (a4 & 1) == 0 )\n    goto LABEL_64;\n  v23 = 0LL;\n  if ( v24 == v22 && v18 == v11 )\n    return 0LL;\n  if ( v22 - 2 >= v24 )\n    return 0xFFFFFFFFLL;\n  if ( v24 - 2 >= v22 )\n    return 1LL;\n  if ( !qword_622A60 )\n    qword_622A60 = (__int64)sub_40C51D(\n                              16LL,\n                              0LL,\n                              (unsigned __int64 (__fastcall *)(__int64, unsigned __int64))sub_410759,\n                              (bool (__fastcall *)(__int64, __int64))sub_410782,\n                              (size_t)free);\n  if ( !qword_622A60 )\n    goto LABEL_18;\n  if ( !qword_622A68 )\n  {\n    qword_622A68 = (__int64)malloc(0x10uLL);\n    if ( !qword_622A68 )\n    {\nLABEL_18:\n      if ( qword_622A60 )\n      {\n        v28 = *(_QWORD *)a2;\n        v23 = (__int64 *)sub_40BEE4(qword_622A60, (__int64)&v28);\n      }\n      if ( !v23 )\n      {\n        v23 = &v28;\n        v29 = 2000000000;\n        v30 = 0;\n      }\n      goto LABEL_22;\n    }\n    *(_DWORD *)(qword_622A68 + 8) = 2000000000;\n    *(_BYTE *)(qword_622A68 + 12) = 0;\n  }\n  *(_QWORD *)qword_622A68 = *(_QWORD *)a2;\n  v23 = (__int64 *)sub_40D1B3((_QWORD *)qword_622A60, qword_622A68);\n  if ( !v23 )\n    goto LABEL_18;\n  if ( v23 == (__int64 *)qword_622A68 )\n    qword_622A68 = 0LL;\nLABEL_22:\n  v12 = *((_DWORD *)v23 + 2);\n  if ( *((_BYTE *)v23 + 12) != 1 )\n  {\n    v25 = *(_QWORD *)(a2 + 72);\n    v26 = *(_QWORD *)(a2 + 104);\n    v19 = sub_410723(a2);\n    v14 = sub_410735(a2);\n    if ( (v14 % 10) | (v19 % 10) | (v18 % 10) )\n    {\n      v12 = 1;\n    }\n    else\n    {\n      v12 = 10;\n      v13 = v19 / 10;\n      v15 = v14 / 10;\n      for ( i = v18 / 10; *((_DWORD *)v23 + 2) > v12 && !((i % 10) | (v15 % 10) | (v13 % 10)); i /= 10 )\n      {\n        if ( v12 == 1000000000 )\n        {\n          if ( (((unsigned __int8)v24 | (unsigned __int8)(v25 | v26)) & 1) == 0 )\n            v12 = 2000000000;\n          break;\n        }\n        v12 *= 10;\n        v13 /= 10;\n        v15 /= 10;\n      }\n    }\n    *((_DWORD *)v23 + 2) = v12;\n    if ( v12 > 1 )\n    {\n      v27 = v22 & ~(v12 == 2000000000);\n      if ( v22 < v24 || v22 == v24 && v11 <= v18 )\n        return 1LL;\n      if ( v24 < v27 || v24 == v27 && v11 - v11 % v12 > v18 )\n        return 0xFFFFFFFFLL;\n      v31[0] = v25;\n      v31[1] = v19;\n      v32 = v24 | (v12 == 2000000000);\n      v33 = v12 / 9 + v18;\n      if ( (*(_DWORD *)(a2 + 24) & 0xF000) == 40960 )\n        v5 = (unsigned int)sub_411A48(a1, v31) != 0;\n      else\n        v5 = (unsigned int)sub_411A21(a1, v31) != 0;\n      if ( v5 )\n        return 4294967294LL;\n      if ( (*(_DWORD *)(a2 + 24) & 0xF000) == 40960 )\n        v6 = sub_419BE0(a1, &stat_buf);\n      else\n        v6 = sub_419BC0(a1, &stat_buf);\n      v20 = v6;\n      v7 = v24 ^ stat_buf.st_mtim.tv_sec | v6;\n      if ( v7 | v18 ^ (unsigned __int64)sub_410747((__int64)&stat_buf) )\n      {\n        v32 = v24;\n        v33 = v18;\n        if ( (*(_DWORD *)(a2 + 24) & 0xF000) == 40960 )\n          sub_411A48(a1, v31);\n        else\n          sub_411A21(a1, v31);\n      }\n      if ( v20 )\n        return 4294967294LL;\n      v21 = v12;\n      v8 = 1000000000 * (stat_buf.st_mtim.tv_sec & 1);\n      v12 = 1;\n      for ( j = v8 + sub_410747((__int64)&stat_buf); !(j % 10); j /= 10 )\n      {\n        if ( v12 == 1000000000 )\n        {\n          v12 = 2000000000;\n          break;\n        }\n        v12 *= 10;\n        if ( v12 == v21 )\n          break;\n      }\n    }\n    *((_DWORD *)v23 + 2) = v12;\n    *((_BYTE *)v23 + 12) = 1;\n  }\n  v22 = ~(v12 == 2000000000) & (unsigned __int64)v22;\n  v11 -= v11 % v12;\nLABEL_64:\n  if ( v24 < v22 )\n    return 0xFFFFFFFFLL;\n  if ( v24 > v22 )\n    return 1LL;\n  if ( v18 < v11 )\n    return 0xFFFFFFFFLL;\n  return v18 > v11;\n}\n"], [4264147, "sub_4110D3", "__int64 __fastcall sub_4110D3(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 80);\n}\n"], [4264165, "sub_4110E5", "__int64 __fastcall sub_4110E5(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 96);\n}\n"], [4264183, "sub_4110F7", "__int64 __fastcall sub_4110F7(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4264205, "sub_41110D", "__int64 __fastcall sub_41110D(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4264227, "sub_411123", "__int64 __fastcall sub_411123(_QWORD *a1)\n{\n  __int64 result; // rax\n  int v2; // [rsp+18h] [rbp-8h]\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v2 = 0;\n  v3 = 0;\n  if ( !a1 )\n    __assert_fail(\"timespec\", \"../../src/lib/utimens.c\", 0x59u, \"validate_timespec\");\n  if ( (a1[1] == 0x3FFFFFFFLL || a1[1] == 1073741822LL || (__int64)a1[1] >= 0 && (__int64)a1[1] <= 999999999)\n    && (a1[3] == 0x3FFFFFFFLL || a1[3] == 1073741822LL || (__int64)a1[3] >= 0 && (__int64)a1[3] <= 999999999) )\n  {\n    if ( a1[1] == 0x3FFFFFFFLL || a1[1] == 1073741822LL )\n    {\n      *a1 = 0LL;\n      v2 = 1;\n      if ( a1[1] == 1073741822LL )\n        v3 = 1;\n    }\n    if ( a1[3] == 0x3FFFFFFFLL || a1[3] == 1073741822LL )\n    {\n      a1[2] = 0LL;\n      v2 = 1;\n      if ( a1[3] == 1073741822LL )\n        ++v3;\n    }\n    result = (unsigned int)(v3 == 1) + v2;\n  }\n  else\n  {\n    *__errno_location() = 22;\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4264617, "sub_4112A9", "__int64 __fastcall sub_4112A9(__int64 a1, __int64 **a2)\n{\n  __int64 result; // rax\n  __int64 v3; // rdx\n  __int64 v4; // rdx\n  __int64 *v5; // [rsp+18h] [rbp-18h]\n\n  v5 = *a2;\n  if ( (*a2)[1] == 1073741822 && v5[3] == 1073741822 )\n    return 1LL;\n  if ( v5[1] == 0x3FFFFFFF && v5[3] == 0x3FFFFFFF )\n  {\n    *a2 = 0LL;\n    result = 0LL;\n  }\n  else\n  {\n    if ( v5[1] == 1073741822 )\n    {\n      *v5 = sub_4110F7(a1);\n      v5[1] = v3;\n    }\n    else if ( v5[1] == 0x3FFFFFFF )\n    {\n      sub_413F69(v5);\n    }\n    if ( v5[3] == 1073741822 )\n    {\n      v5[2] = sub_41110D(a1);\n      v5[3] = v4;\n    }\n    else if ( v5[3] == 0x3FFFFFFF )\n    {\n      sub_413F69(v5 + 2);\n    }\n    result = 0LL;\n  }\n  return result;\n}\n"], [4264914, "sub_4113D2", "int __fastcall sub_4113D2(int a1, char *a2, __int64 *a3)\n{\n  struct timespec *v3; // rax\n  __int64 v4; // rdx\n  __int64 v5; // rdx\n  int result; // eax\n  bool v7; // al\n  struct timespec *v8; // rbx\n  __syscall_slong_t v9; // rdx\n  struct timespec *v10; // rbx\n  __syscall_slong_t v11; // rdx\n  __suseconds_t v13; // rdx\n  __suseconds_t v14; // rdx\n  bool v16; // [rsp+2Eh] [rbp-132h]\n  bool v17; // [rsp+2Fh] [rbp-131h]\n  int v18; // [rsp+30h] [rbp-130h]\n  int v19; // [rsp+34h] [rbp-12Ch]\n  int v20; // [rsp+34h] [rbp-12Ch]\n  struct timespec *times; // [rsp+38h] [rbp-128h] BYREF\n  struct timeval *tvp; // [rsp+40h] [rbp-120h]\n  struct timeval *v23; // [rsp+48h] [rbp-118h]\n  __time_t v24; // [rsp+50h] [rbp-110h]\n  __time_t v25; // [rsp+58h] [rbp-108h]\n  __int64 v26[4]; // [rsp+60h] [rbp-100h] BYREF\n  __int64 v27[4]; // [rsp+80h] [rbp-E0h] BYREF\n  __time_t v28; // [rsp+A0h] [rbp-C0h] BYREF\n  __suseconds_t v29; // [rsp+A8h] [rbp-B8h]\n  __time_t v30; // [rsp+B0h] [rbp-B0h]\n  __suseconds_t v31; // [rsp+B8h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+C0h] [rbp-A0h] BYREF\n\n  if ( a3 )\n    v3 = (struct timespec *)v26;\n  else\n    v3 = 0LL;\n  times = v3;\n  v18 = 0;\n  if ( v3 )\n  {\n    v4 = a3[1];\n    v26[0] = *a3;\n    v26[1] = v4;\n    v5 = a3[3];\n    v26[2] = a3[2];\n    v26[3] = v5;\n    v18 = sub_411123(times);\n  }\n  if ( v18 < 0 )\n    return -1;\n  if ( !a2 )\n  {\n    if ( a1 < 0 )\n    {\n      *__errno_location() = 9;\n      return -1;\n    }\n    if ( dup2(a1, a1) != a1 )\n      return -1;\n  }\n  if ( dword_622A70 >= 0 )\n  {\n    if ( v18 == 2 )\n    {\n      if ( a1 >= 0 )\n        v7 = (unsigned int)sub_419BD0(a1, &stat_buf) != 0;\n      else\n        v7 = (unsigned int)sub_419BC0(a2, &stat_buf) != 0;\n      if ( v7 )\n        return -1;\n      if ( times->tv_nsec == 1073741822 )\n      {\n        v8 = times;\n        times->tv_sec = sub_4110F7((__int64)&stat_buf);\n        v8->tv_nsec = v9;\n      }\n      else if ( times[1].tv_nsec == 1073741822 )\n      {\n        v10 = times + 1;\n        times[1].tv_sec = sub_41110D((__int64)&stat_buf);\n        v10->tv_nsec = v11;\n      }\n      v18 = 3;\n    }\n    if ( a1 < 0 )\n    {\n      v19 = utimensat(-100, a2, times, 0);\n      if ( v19 > 0 )\n        *__errno_location() = 38;\n      if ( !v19 || *__errno_location() != 38 )\n      {\n        dword_622A70 = 1;\n        return v19;\n      }\n    }\n    if ( a1 >= 0 )\n    {\n      v20 = futimens(a1, times);\n      if ( v20 > 0 )\n        *__errno_location() = 38;\n      if ( !v20 || *__errno_location() != 38 )\n      {\n        dword_622A70 = 1;\n        return v20;\n      }\n    }\n  }\n  dword_622A70 = -1;\n  dword_622A74 = -1;\n  if ( !v18 )\n    goto LABEL_47;\n  if ( v18 != 3 )\n  {\n    if ( a1 >= 0 ? (unsigned int)sub_419BD0(a1, &stat_buf) != 0 : (unsigned int)sub_419BC0(a2, &stat_buf) != 0 )\n      return -1;\n  }\n  if ( times && (unsigned __int8)sub_4112A9((__int64)&stat_buf, (__int64 **)&times) )\n    return 0;\nLABEL_47:\n  if ( times )\n  {\n    v27[0] = times->tv_sec;\n    v27[1] = times->tv_nsec / 1000;\n    v27[2] = times[1].tv_sec;\n    v27[3] = times[1].tv_nsec / 1000;\n    tvp = (struct timeval *)v27;\n  }\n  else\n  {\n    tvp = 0LL;\n  }\n  if ( a1 < 0 )\n    return futimesat(-100, a2, tvp);\n  if ( futimesat(a1, 0LL, tvp) )\n  {\n    if ( a2 )\n      result = utimes(a2, tvp);\n    else\n      result = -1;\n  }\n  else\n  {\n    if ( tvp )\n    {\n      v16 = tvp->tv_usec > 499999;\n      v17 = tvp[1].tv_usec > 499999;\n      if ( (v16 || v17) && !(unsigned int)sub_419BD0(a1, &stat_buf) )\n      {\n        v24 = stat_buf.st_atim.tv_sec - tvp->tv_sec;\n        v25 = stat_buf.st_mtim.tv_sec - tvp[1].tv_sec;\n        v23 = 0LL;\n        v13 = tvp->tv_usec;\n        v28 = tvp->tv_sec;\n        v29 = v13;\n        v14 = tvp[1].tv_usec;\n        v30 = tvp[1].tv_sec;\n        v31 = v14;\n        if ( v16 && v24 == 1 && !sub_4110D3((__int64)&stat_buf) )\n        {\n          v23 = (struct timeval *)&v28;\n          v29 = 0LL;\n        }\n        if ( v17 && v25 == 1 && !sub_4110E5((__int64)&stat_buf) )\n        {\n          v23 = (struct timeval *)&v28;\n          v31 = 0LL;\n        }\n        if ( v23 )\n          futimesat(a1, 0LL, v23);\n      }\n    }\n    result = 0;\n  }\n  return result;\n}\n"], [4266529, "sub_411A21", "int __fastcall sub_411A21(char *a1, __int64 *a2)\n{\n  return sub_4113D2(-1, a1, a2);\n}\n"], [4266568, "sub_411A48", "int __fastcall sub_411A48(char *a1, __int64 *a2)\n{\n  struct timespec *v2; // rax\n  __int64 v3; // rdx\n  __int64 v4; // rdx\n  struct timespec *v6; // rbx\n  __syscall_slong_t v7; // rdx\n  struct timespec *v8; // rbx\n  __syscall_slong_t v9; // rdx\n  int v10; // [rsp+10h] [rbp-D0h]\n  int v11; // [rsp+14h] [rbp-CCh]\n  struct timespec *times; // [rsp+18h] [rbp-C8h] BYREF\n  __int64 v13[4]; // [rsp+20h] [rbp-C0h] BYREF\n  struct stat stat_buf; // [rsp+40h] [rbp-A0h] BYREF\n\n  if ( a2 )\n    v2 = (struct timespec *)v13;\n  else\n    v2 = 0LL;\n  times = v2;\n  v10 = 0;\n  if ( v2 )\n  {\n    v3 = a2[1];\n    v13[0] = *a2;\n    v13[1] = v3;\n    v4 = a2[3];\n    v13[2] = a2[2];\n    v13[3] = v4;\n    v10 = sub_411123(times);\n  }\n  if ( v10 < 0 )\n    return -1;\n  if ( dword_622A74 >= 0 )\n  {\n    if ( v10 == 2 )\n    {\n      if ( (unsigned int)sub_419BE0(a1, &stat_buf) )\n        return -1;\n      if ( times->tv_nsec == 1073741822 )\n      {\n        v6 = times;\n        times->tv_sec = sub_4110F7((__int64)&stat_buf);\n        v6->tv_nsec = v7;\n      }\n      else if ( times[1].tv_nsec == 1073741822 )\n      {\n        v8 = times + 1;\n        times[1].tv_sec = sub_41110D((__int64)&stat_buf);\n        v8->tv_nsec = v9;\n      }\n      v10 = 3;\n    }\n    v11 = utimensat(-100, a1, times, 256);\n    if ( v11 > 0 )\n      *__errno_location() = 38;\n    if ( !v11 || *__errno_location() != 38 )\n    {\n      dword_622A70 = 1;\n      dword_622A74 = 1;\n      return v11;\n    }\n  }\n  dword_622A74 = -1;\n  if ( !v10 )\n    goto LABEL_37;\n  if ( v10 != 3 && (unsigned int)sub_419BE0(a1, &stat_buf) )\n    return -1;\n  if ( times && (unsigned __int8)sub_4112A9((__int64)&stat_buf, (__int64 **)&times) )\n    return 0;\nLABEL_37:\n  if ( !v10 && (unsigned int)sub_419BE0(a1, &stat_buf) )\n    return -1;\n  if ( (stat_buf.st_mode & 0xF000) != 40960 )\n    return sub_4113D2(-1, a1, &times->tv_sec);\n  *__errno_location() = 38;\n  return -1;\n}\n"], [4267266, "sub_411D02", "int __fastcall sub_411D02(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4268781, "sub_4122ED", "int __fastcall sub_4122ED(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_411D02(a1, a2, a3, a4, a5, i);\n}\n"], [4268891, "sub_41235B", "int __fastcall sub_41235B(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_411D02(a1, a2, a3, a4, v8, i);\n}\n"], [4269108, "sub_412434", "int sub_412434(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_41235B(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4269290, "sub_4124EA", "int sub_4124EA()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4269395, "sub_412553", "__int64 sub_412553()\n{\n  if ( byte_622A78 != 1 )\n  {\n    byte_622A79 = geteuid() == 0;\n    byte_622A78 = 1;\n  }\n  return (unsigned __int8)byte_622A79;\n}\n"], [4269460, "sub_412594", "__int64 __fastcall sub_412594(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_41285F(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_4126DD(a2 * a1);\n}\n"], [4269522, "sub_4125D2", "__int64 __fastcall sub_4125D2(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_41285F(a1, a2, v4);\n  return sub_412712(a1, a3 * a2);\n}\n"], [4269598, "sub_41261E", "__int64 __fastcall sub_41261E(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_41285F(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_412712(a1, a3 * v6);\n}\n"], [4269763, "sub_4126C3", "__int64 __fastcall sub_4126C3(__int64 a1)\n{\n  return sub_4126DD(a1);\n}\n"], [4269789, "sub_4126DD", "void *__fastcall sub_4126DD(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_41285F(a1, a2, v2);\n  return v4;\n}\n"], [4269842, "sub_412712", "void *__fastcall sub_412712(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_41285F(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4269939, "sub_412773", "__int64 __fastcall sub_412773(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_41261E(a1, a2, 1uLL);\n}\n"], [4269981, "sub_41279D", "void *__fastcall sub_41279D(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4126DD(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4270024, "sub_4127C8", "void *__fastcall sub_4127C8(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_41285F(a1, a2, v2);\n  return v4;\n}\n"], [4270081, "sub_412801", "void *__fastcall sub_412801(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4126DD(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4270130, "sub_412832", "void *__fastcall sub_412832(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_412801(a1, v1 + 1);\n}\n"], [4270175, "sub_41285F", "void __noreturn sub_41285F()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4270228, "sub_412894", "__int64 __fastcall sub_412894(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4270323, "sub_4128F3", "__int64 __fastcall sub_4128F3(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_412894(a1, a2) )\n    ;\n  return i;\n}\n"], [4270388, "sub_412934", "__int64 __fastcall sub_412934(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  unsigned __int64 v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoul\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoul(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_4128F3(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_412894(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_4128F3(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_412894(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_4128F3(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_4128F3(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_412894(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_4128F3(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_4128F3(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_4128F3(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_4128F3(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4271520, "sub_412DA0", "_BOOL8 sub_412DA0()\n{\n  bool v1; // [rsp+7h] [rbp-19h]\n  char *lineptr; // [rsp+8h] [rbp-18h] BYREF\n  size_t n; // [rsp+10h] [rbp-10h] BYREF\n  __ssize_t v4; // [rsp+18h] [rbp-8h]\n\n  lineptr = 0LL;\n  n = 0LL;\n  v4 = getline(&lineptr, &n, stdin);\n  if ( v4 > 0 )\n  {\n    lineptr[v4 - 1] = 0;\n    v1 = rpmatch(lineptr) > 0;\n  }\n  else\n  {\n    v1 = 0;\n  }\n  free(lineptr);\n  return v1;\n}\n"], [4271643, "sub_412E1B", "unsigned __int64 __fastcall sub_412E1B(unsigned __int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  __int64 v3; // rax\n  unsigned __int64 result; // rax\n  unsigned __int64 v5; // [rsp+18h] [rbp-30h]\n  unsigned __int64 v6; // [rsp+20h] [rbp-28h]\n  unsigned __int64 i; // [rsp+28h] [rbp-20h]\n  unsigned __int64 v8; // [rsp+30h] [rbp-18h]\n\n  if ( a1 )\n  {\n    if ( a2 )\n    {\n      v6 = a1;\n      for ( i = a2; ; i = v8 )\n      {\n        v8 = v6 % i;\n        if ( !(v6 % i) )\n          break;\n        v6 = i;\n      }\n      if ( a2 * (a1 / i) <= a3 && a2 * (a1 / i) / a2 == a1 / i )\n        return a2 * (a1 / i);\n    }\n    v5 = a1;\n  }\n  else\n  {\n    if ( a2 )\n      v3 = a2;\n    else\n      v3 = 0x2000LL;\n    v5 = v3;\n  }\n  result = a3;\n  if ( v5 <= a3 )\n    result = v5;\n  return result;\n}\n"], [4271846, "sub_412EE6", "__int64 __fastcall sub_412EE6(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_622A7C < 0 )\n  {\n    v18 = sub_412EE6(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_412EE6(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_622A7C = -1;\n    }\n    else\n    {\n      dword_622A7C = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_622A7C == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4272544, "sub_4131A0", "__int64 __fastcall sub_4131A0(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_41321E(a1, 0LL, 1LL);\n  return result;\n}\n"], [4272595, "sub_4131D3", "int __fastcall sub_4131D3(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_4131A0(a1);\n  return fflush(a1);\n}\n"], [4272670, "sub_41321E", "int __fastcall sub_41321E(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4272854, "sub_4132D6", "__int64 __fastcall sub_4132D6(unsigned int a1, _BYTE *a2, int a3, const char *a4)\n{\n  __int64 result; // rax\n  int v8; // [rsp+28h] [rbp-28h]\n  int v9; // [rsp+2Ch] [rbp-24h]\n  unsigned int v10; // [rsp+30h] [rbp-20h]\n  int v11; // [rsp+34h] [rbp-1Ch]\n  _BYTE *ptr; // [rsp+38h] [rbp-18h]\n  _BYTE *v13; // [rsp+40h] [rbp-10h]\n  _BYTE *v14; // [rsp+48h] [rbp-8h]\n\n  ptr = a2;\n  v8 = 20;\n  while ( v8-- )\n  {\n    v13 = (_BYTE *)sub_4136DD(a1, ptr);\n    if ( !v13 )\n      break;\n    if ( *v13 == 47 )\n    {\n      if ( ptr != a2 )\n        free(ptr);\n      ptr = v13;\n    }\n    else\n    {\n      v14 = sub_40B2FC(ptr);\n      if ( ptr != a2 )\n        free(ptr);\n      if ( !v14 )\n      {\n        free(v13);\n        *__errno_location() = 12;\n        return 0xFFFFFFFFLL;\n      }\n      ptr = sub_40B94D(v14, v13, 0LL);\n      free(v14);\n      free(v13);\n      if ( !ptr )\n      {\n        *__errno_location() = 12;\n        return 0xFFFFFFFFLL;\n      }\n    }\n  }\n  if ( v8 < 0 )\n  {\n    v13 = 0LL;\n    *__errno_location() = 40;\n  }\n  if ( v13 || *__errno_location() == 22 )\n  {\n    v10 = linkat(a1, ptr, a3, a4, 0);\n    if ( ptr != a2 )\n    {\n      v11 = *__errno_location();\n      free(ptr);\n      *__errno_location() = v11;\n    }\n    result = v10;\n  }\n  else\n  {\n    if ( ptr != a2 )\n    {\n      v9 = *__errno_location();\n      free(ptr);\n      *__errno_location() = v9;\n    }\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4273315, "sub_4134A3", "int __fastcall sub_4134A3(unsigned int a1, char *a2, int a3, const char *a4, int a5)\n{\n  int v5; // eax\n  int v9; // [rsp+2Ch] [rbp-4h]\n\n  v5 = a5;\n  BYTE1(v5) = BYTE1(a5) & 0xFB;\n  if ( v5 )\n  {\n    *__errno_location() = 22;\n    return -1;\n  }\n  if ( !a5 )\n    return linkat(a1, a2, a3, a4, 0);\n  if ( dword_622A80 >= 0 )\n  {\n    v9 = linkat(a1, a2, a3, a4, a5);\n    if ( v9 != -1 || *__errno_location() != 22 )\n    {\n      dword_622A80 = 1;\n      return v9;\n    }\n    dword_622A80 = -1;\n  }\n  return sub_4132D6(a1, a2, a3, a4);\n}\n"], [4273513, "sub_413569", "size_t __fastcall sub_413569(FILE *a1, __int64 a2, __int64 a3)\n{\n  size_t result; // rax\n  size_t v4; // rax\n  int v5; // [rsp+24h] [rbp-80Ch]\n  size_t v6; // [rsp+28h] [rbp-808h] BYREF\n  void *ptr; // [rsp+30h] [rbp-800h]\n  size_t n; // [rsp+38h] [rbp-7F8h]\n  char v9[2008]; // [rsp+40h] [rbp-7F0h] BYREF\n  unsigned __int64 v10; // [rsp+818h] [rbp-18h]\n\n  v10 = __readfsqword(0x28u);\n  v6 = 2000LL;\n  ptr = (void *)sub_41445C(v9, &v6, a2, a3);\n  n = v6;\n  if ( ptr )\n  {\n    v4 = fwrite(ptr, 1uLL, n, a1);\n    if ( v4 >= n )\n    {\n      if ( ptr != v9 )\n        free(ptr);\n      if ( n <= 0x7FFFFFFF )\n      {\n        result = n;\n      }\n      else\n      {\n        *__errno_location() = 75;\n        sub_413F4E(a1);\n        result = 0xFFFFFFFFLL;\n      }\n    }\n    else\n    {\n      if ( ptr != v9 )\n      {\n        v5 = *__errno_location();\n        free(ptr);\n        *__errno_location() = v5;\n      }\n      result = 0xFFFFFFFFLL;\n    }\n  }\n  else\n  {\n    sub_413F4E(a1);\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4273885, "sub_4136DD", "__int64 __fastcall sub_4136DD(unsigned int a1, __int64 a2)\n{\n  return sub_413B59(a1, a2, 0LL, 0LL, 0LL, readlinkat, a2);\n}\n"], [4273938, "sub_413712", "void __noreturn sub_413712()\n{\n  sub_403773(1);\n}\n"], [4273954, "sub_413722", "__int64 __fastcall sub_413722(const char *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 result; // rax\n  char v7; // [rsp+27h] [rbp-19h]\n  __int64 i; // [rsp+28h] [rbp-18h]\n  __int64 v9; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v7 = 0;\n  n = strlen(a1);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !strncmp(*(const char **)(8 * i + a2), a1, n) )\n    {\n      if ( strlen(*(const char **)(8 * i + a2)) == n )\n        return i;\n      if ( v9 == -1 )\n      {\n        v9 = i;\n      }\n      else if ( !a3 || memcmp((const void *)(a4 * v9 + a3), (const void *)(i * a4 + a3), a4) )\n      {\n        v7 = 1;\n      }\n    }\n  }\n  if ( v7 )\n    result = -2LL;\n  else\n    result = v9;\n  return result;\n}\n"], [4274257, "sub_413851", "void __fastcall sub_413851(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  void *v5; // rax\n  char *format; // [rsp+28h] [rbp-18h]\n\n  if ( a3 == -1 )\n    v3 = gettext(\"invalid argument %s for %s\");\n  else\n    v3 = gettext(\"ambiguous argument %s for %s\");\n  format = v3;\n  v4 = sub_40E36E(1u, a1);\n  v5 = sub_40F81D(0, 6, a2);\n  error(0, 0, format, v5, v4);\n}\n"], [4274396, "sub_4138DC", "int __fastcall sub_4138DC(__int64 a1, __int64 a2, size_t a3)\n{\n  char *v3; // rax\n  __int64 i; // [rsp+20h] [rbp-10h]\n  void *s1; // [rsp+28h] [rbp-8h]\n\n  s1 = 0LL;\n  v3 = gettext(\"Valid arguments are:\");\n  fprintf(stderr, v3);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a1); ++i )\n  {\n    if ( i && !memcmp(s1, (const void *)(i * a3 + a2), a3) )\n    {\n      fprintf(stderr, \", `%s'\", *(const char **)(8 * i + a1));\n    }\n    else\n    {\n      fprintf(stderr, \"\\n  - `%s'\", *(const char **)(8 * i + a1));\n      s1 = (void *)(i * a3 + a2);\n    }\n  }\n  return putc_unlocked(10, stderr);\n}\n"], [4274700, "sub_413A0C", "__int64 __fastcall sub_413A0C(__int64 a1, const char *a2, __int64 a3, __int64 a4, size_t a5, void (*a6)(void))\n{\n  __int64 v11; // [rsp+38h] [rbp-8h]\n\n  v11 = sub_413722(a2, a3, a4, a5);\n  if ( v11 >= 0 )\n    return v11;\n  sub_413851(a1, (__int64)a2, v11);\n  sub_4138DC(a3, a4, a5);\n  a6();\n  return -1LL;\n}\n"], [4274834, "sub_413A92", "__int64 __fastcall sub_413A92(const void *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 i; // [rsp+28h] [rbp-8h]\n\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !memcmp(a1, (const void *)(i * a4 + a3), a4) )\n      return *(_QWORD *)(8 * i + a2);\n  }\n  return 0LL;\n}\n"], [4274974, "sub_413B1E", "ssize_t __fastcall sub_413B1E(int a1, const char *a2, char *a3, size_t a4)\n{\n  if ( a1 != -100 )\n    abort();\n  return readlink(a2, a3, a4);\n}\n"], [4275033, "sub_413B59", "char *__fastcall sub_413B59(unsigned int a1, __int64 a2, char *a3, __int64 a4, void *(**a5)(size_t size), __int64 (__fastcall *a6)(_QWORD, __int64, char *, unsigned __int64))\n{\n  __int64 v7; // rax\n  void *(**v9)(size_t); // [rsp+8h] [rbp-488h]\n  __int64 v10; // [rsp+10h] [rbp-480h]\n  int v12; // [rsp+34h] [rbp-45Ch]\n  char *src; // [rsp+38h] [rbp-458h]\n  unsigned __int64 v14; // [rsp+40h] [rbp-450h]\n  __int64 v15; // [rsp+50h] [rbp-440h]\n  size_t n; // [rsp+58h] [rbp-438h]\n  void *dest; // [rsp+60h] [rbp-430h]\n  __int64 v18; // [rsp+68h] [rbp-428h]\n  char v19[1032]; // [rsp+70h] [rbp-420h] BYREF\n  unsigned __int64 v20; // [rsp+478h] [rbp-18h]\n\n  v10 = a4;\n  v9 = a5;\n  v20 = __readfsqword(0x28u);\n  if ( !a5 )\n    v9 = &off_41C4C0;\n  if ( !a4 )\n  {\n    a3 = v19;\n    v10 = 1024LL;\n  }\n  src = a3;\n  v14 = v10;\n  while ( 1 )\n  {\n    v15 = a6(a1, a2, src, v14);\n    if ( v15 < 0 )\n    {\n      v12 = *__errno_location();\n      if ( v12 != 34 )\n      {\n        if ( src != a3 )\n        {\n          v9[2]((size_t)src);\n          *__errno_location() = v12;\n        }\n        return 0LL;\n      }\n    }\n    if ( v15 < v14 )\n      break;\n    if ( src != a3 )\n      v9[2]((size_t)src);\n    if ( v14 > 0x4000000000000000LL )\n    {\n      if ( v14 >= 0x8000000000000000LL )\n      {\n        *__errno_location() = 36;\n        return 0LL;\n      }\n      v14 = 0x8000000000000000LL;\n      v7 = (__int64)(*v9)(0x8000000000000000LL);\n    }\n    else\n    {\n      v14 *= 2LL;\n      v7 = (__int64)(*v9)(v14);\n    }\n    src = (char *)v7;\n    if ( !v7 )\n      goto LABEL_29;\n  }\n  n = v15 + 1;\n  src[v15] = 0;\n  if ( src != v19 )\n  {\n    if ( n < v14 && src != a3 )\n    {\n      if ( v9[1] )\n      {\n        v18 = ((__int64 (__fastcall *)(char *, size_t))v9[1])(src, n);\n        if ( v18 )\n          src = (char *)v18;\n      }\n    }\n    return src;\n  }\n  dest = (*v9)(n);\n  v14 = v15 + 1;\n  if ( dest )\n  {\n    memcpy(dest, src, n);\n    return (char *)dest;\n  }\nLABEL_29:\n  if ( v9[3] )\n    v9[3](v14);\n  *__errno_location() = 12;\n  return 0LL;\n}\n"], [4275907, "sub_413EC3", "__int64 __fastcall sub_413EC3(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_414297(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4276046, "sub_413F4E", "_DWORD *__fastcall sub_413F4E(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 |= 0x20u;\n  return result;\n}\n"], [4276073, "sub_413F69", "int __fastcall sub_413F69(struct timespec *a1)\n{\n  int result; // eax\n  struct timeval tv; // [rsp+10h] [rbp-10h] BYREF\n\n  result = clock_gettime(0, a1);\n  if ( result )\n  {\n    gettimeofday(&tv, 0LL);\n    a1->tv_sec = tv.tv_sec;\n    result = (int)a1;\n    a1->tv_nsec = 1000 * tv.tv_usec;\n  }\n  return result;\n}\n"], [4276157, "sub_413FBD", "unsigned __int64 __fastcall sub_413FBD(_BYTE *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( *a1 )\n    v4 = __ROR8__(v4, 55) + (char)*a1++;\n  return v4 % a2;\n}\n"], [4276247, "sub_414017", "__int64 __fastcall sub_414017(int a1, char *a2, int a3, __uid_t a4, __gid_t a5, int a6, int a7)\n{\n  unsigned int v7; // eax\n  int v8; // eax\n  int v9; // eax\n  unsigned int v15; // [rsp+2Ch] [rbp-A4h]\n  int v16; // [rsp+30h] [rbp-A0h]\n  __mode_t v17; // [rsp+34h] [rbp-9Ch]\n  int mode; // [rsp+38h] [rbp-98h]\n  int v19; // [rsp+3Ch] [rbp-94h]\n  struct stat stat_buf; // [rsp+40h] [rbp-90h] BYREF\n\n  if ( a1 >= 0 )\n    v7 = sub_419BD0(a1, &stat_buf);\n  else\n    v7 = sub_419BC0(a2, &stat_buf);\n  v15 = v7;\n  if ( !v7 )\n  {\n    v17 = stat_buf.st_mode;\n    if ( (stat_buf.st_mode & 0xF000) == 0x4000 )\n    {\n      v16 = 0;\n      if ( a4 != -1 && stat_buf.st_uid != a4 || a5 != -1 && stat_buf.st_gid != a5 )\n      {\n        if ( a1 < 0 )\n          v8 = a3 == -1 ? chown(a2, a4, a5) : lchown(a2, a4, a5);\n        else\n          v8 = fchown(a1, a4, a5);\n        v15 = v8;\n        if ( !v8 && (v17 & 0x49) != 0 )\n          v16 = v17 & 0xC00;\n      }\n      if ( !v15 && (a7 & (v16 | v17 ^ a6)) != 0 )\n      {\n        mode = a6 | (unsigned __int16)v17 & (unsigned __int16)~(_WORD)a7 & 0xFFF;\n        if ( a1 < 0 )\n          v9 = chmod(a2, mode);\n        else\n          v9 = fchmod(a1, mode);\n        v15 = v9;\n      }\n    }\n    else\n    {\n      *__errno_location() = 20;\n      v15 = -1;\n    }\n  }\n  if ( a1 >= 0 )\n  {\n    if ( v15 )\n    {\n      v19 = *__errno_location();\n      close(a1);\n      *__errno_location() = v19;\n    }\n    else\n    {\n      v15 = close(a1);\n    }\n  }\n  return v15;\n}\n"], [4276887, "sub_414297", "int __fastcall sub_414297(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( sub_4131D3(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4277068, "sub_41434C", "__int64 __fastcall sub_41434C(unsigned __int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a1 + a2 < a1 )\n    result = -1LL;\n  else\n    result = a1 + a2;\n  return result;\n}\n"], [4277120, "sub_414380", "__int64 __fastcall sub_414380(unsigned __int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  __int64 v4; // rax\n  __int64 v5; // rax\n\n  v4 = sub_41434C(a1, a2);\n  v5 = sub_41434C(v4, a3);\n  return sub_41434C(v5, a4);\n}\n"], [4277195, "sub_4143CB", "unsigned __int64 __fastcall sub_4143CB(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 result; // rax\n\n  result = a2;\n  if ( a1 >= a2 )\n    result = a1;\n  return result;\n}\n"], [4277222, "sub_4143E6", "__int64 sub_4143E6()\n{\n  __int64 result; // rax\n  char *v1; // [rsp+8h] [rbp-8h]\n\n  v1 = nl_langinfo(0x10000);\n  if ( *v1 )\n    result = (unsigned __int8)*v1;\n  else\n    result = 46LL;\n  return result;\n}\n"], [4277271, "sub_414417", "_BOOL8 __fastcall sub_414417(int a1, int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, __int64 a11, int a12, int a13, int a14, long double a15)\n{\n  return (unsigned int)sub_417C17(a1, a2, DWORD2(a15), a12, a13, a14, *(__int64 *)&a15, DWORD2(a15)) || a15 == a15 + a15;\n}\n"], [4277340, "sub_41445C", "void *__fastcall sub_41445C(void *a1, unsigned __int64 *a2, void *a3, __int64 a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)\n{\n  int v13; // esi\n  int v14; // edi\n  int v15; // ecx\n  int v16; // er8\n  int v17; // er9\n  double v18; // xmm4_8\n  double v19; // xmm5_8\n  void *v20; // rsp\n  unsigned __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  unsigned __int64 v23; // rax\n  unsigned int v24; // eax\n  char *v25; // rax\n  char *v26; // rax\n  __int64 v27; // rcx\n  unsigned __int64 v28; // rax\n  char *v29; // rax\n  __int64 v30; // rcx\n  unsigned __int64 v31; // rax\n  int v32; // edi\n  int v33; // ecx\n  int v34; // er8\n  int v35; // er9\n  char *v36; // rax\n  int v37; // edx\n  char *v38; // rax\n  char *v39; // rax\n  char *v40; // rax\n  char *v41; // rax\n  char *v42; // rax\n  char *v43; // rax\n  __int16 v44; // ax\n  __int16 v45; // fps\n  char *v47; // rax\n  char *v48; // rax\n  char *v49; // rax\n  char *v50; // rax\n  char *v51; // rax\n  char *v52; // rax\n  char *v53; // rax\n  char *v54; // rax\n  char *v55; // rax\n  char *v56; // rax\n  char *v57; // rbx\n  char *v58; // rax\n  char *v59; // rax\n  char *v60; // rbx\n  char *v61; // rax\n  char *v62; // rax\n  char *v63; // rax\n  char *v64; // rax\n  char *v65; // rax\n  char *v66; // rax\n  __int64 v67; // rax\n  char *v68; // rbx\n  char *v69; // rax\n  char *v70; // rax\n  char *v71; // rax\n  char *v72; // rax\n  char *v73; // rbx\n  char *v74; // rax\n  char *v75; // rax\n  char *v76; // rax\n  char *v77; // rax\n  char *v78; // rax\n  char *v79; // rax\n  char *v80; // rax\n  unsigned __int64 v81; // rax\n  _BYTE *v82; // rax\n  _BYTE *v83; // rax\n  _BYTE *v84; // rax\n  _BYTE *v85; // rax\n  _BYTE *v86; // rax\n  _BYTE *v87; // rax\n  _BYTE *v88; // rax\n  _BYTE *v89; // rax\n  _BYTE *v90; // rax\n  _BYTE *v91; // rax\n  unsigned int v92; // eax\n  unsigned int v93; // eax\n  unsigned __int64 v94; // rax\n  __int64 v95; // rax\n  unsigned __int64 v96; // rax\n  char *v97; // rax\n  int v98; // edx\n  int *v99; // rdx\n  int v100; // eax\n  unsigned __int64 v101; // rbx\n  __int64 v102; // rax\n  unsigned __int64 v103; // rax\n  __int64 v104; // rax\n  unsigned __int64 v105; // rax\n  long double v106; // [rsp+0h] [rbp-8E0h]\n  __int64 v107; // [rsp+18h] [rbp-8C8h] BYREF\n  __int64 v108; // [rsp+20h] [rbp-8C0h]\n  void *v109; // [rsp+28h] [rbp-8B8h]\n  unsigned __int64 *v110; // [rsp+30h] [rbp-8B0h]\n  void *v111; // [rsp+38h] [rbp-8A8h]\n  __int16 v112; // [rsp+4Ah] [rbp-896h]\n  int v113; // [rsp+4Ch] [rbp-894h] BYREF\n  int v114; // [rsp+50h] [rbp-890h]\n  int v115; // [rsp+54h] [rbp-88Ch]\n  int v116; // [rsp+58h] [rbp-888h]\n  int v117; // [rsp+5Ch] [rbp-884h]\n  unsigned int v118; // [rsp+60h] [rbp-880h]\n  int v119; // [rsp+64h] [rbp-87Ch]\n  int v120; // [rsp+68h] [rbp-878h]\n  int v121; // [rsp+6Ch] [rbp-874h]\n  unsigned int v122; // [rsp+70h] [rbp-870h]\n  int v123; // [rsp+74h] [rbp-86Ch]\n  int v124; // [rsp+78h] [rbp-868h]\n  unsigned int v125; // [rsp+7Ch] [rbp-864h]\n  unsigned int v126; // [rsp+80h] [rbp-860h]\n  unsigned int v127; // [rsp+84h] [rbp-85Ch]\n  unsigned int v128; // [rsp+88h] [rbp-858h]\n  unsigned int v129; // [rsp+8Ch] [rbp-854h]\n  unsigned int v130; // [rsp+90h] [rbp-850h]\n  unsigned int v131; // [rsp+94h] [rbp-84Ch]\n  unsigned int v132; // [rsp+98h] [rbp-848h]\n  int v133; // [rsp+9Ch] [rbp-844h]\n  unsigned int v134; // [rsp+A0h] [rbp-840h]\n  unsigned int v135; // [rsp+A4h] [rbp-83Ch]\n  char *format; // [rsp+A8h] [rbp-838h]\n  void *v137; // [rsp+B0h] [rbp-830h]\n  void *v138; // [rsp+B8h] [rbp-828h]\n  __int64 v139; // [rsp+C0h] [rbp-820h]\n  char *i; // [rsp+C8h] [rbp-818h]\n  void *src; // [rsp+D0h] [rbp-810h]\n  unsigned __int64 v142; // [rsp+D8h] [rbp-808h]\n  size_t n; // [rsp+E0h] [rbp-800h]\n  void *dest; // [rsp+E8h] [rbp-7F8h]\n  void *v145; // [rsp+F0h] [rbp-7F0h]\n  unsigned __int64 v146; // [rsp+F8h] [rbp-7E8h]\n  unsigned __int64 v147; // [rsp+100h] [rbp-7E0h]\n  unsigned __int64 v148; // [rsp+108h] [rbp-7D8h]\n  void *v149; // [rsp+110h] [rbp-7D0h]\n  unsigned __int64 v150; // [rsp+118h] [rbp-7C8h]\n  char *v151; // [rsp+120h] [rbp-7C0h]\n  char *v152; // [rsp+128h] [rbp-7B8h]\n  char *v153; // [rsp+130h] [rbp-7B0h]\n  __int64 v154; // [rsp+138h] [rbp-7A8h]\n  unsigned __int64 v155; // [rsp+140h] [rbp-7A0h]\n  _BYTE *v156; // [rsp+148h] [rbp-798h]\n  _BYTE *v157; // [rsp+150h] [rbp-790h]\n  void *v158; // [rsp+158h] [rbp-788h]\n  void *v159; // [rsp+160h] [rbp-780h]\n  void *v160; // [rsp+168h] [rbp-778h]\n  size_t maxlen; // [rsp+170h] [rbp-770h]\n  void *v162; // [rsp+178h] [rbp-768h]\n  void *v163; // [rsp+180h] [rbp-760h]\n  unsigned __int64 v164; // [rsp+188h] [rbp-758h]\n  size_t size; // [rsp+190h] [rbp-750h]\n  size_t v166; // [rsp+198h] [rbp-748h]\n  unsigned __int64 v167; // [rsp+1A0h] [rbp-740h]\n  size_t v168; // [rsp+1A8h] [rbp-738h]\n  size_t v169; // [rsp+1B0h] [rbp-730h]\n  void *v170; // [rsp+1B8h] [rbp-728h]\n  unsigned __int64 v171; // [rsp+1C0h] [rbp-720h]\n  size_t v172; // [rsp+1C8h] [rbp-718h]\n  size_t v173; // [rsp+1D0h] [rbp-710h]\n  _BYTE *v174; // [rsp+1D8h] [rbp-708h]\n  size_t v175; // [rsp+1E0h] [rbp-700h]\n  unsigned __int64 v176; // [rsp+1E8h] [rbp-6F8h]\n  size_t v177; // [rsp+1F0h] [rbp-6F0h]\n  size_t v178; // [rsp+1F8h] [rbp-6E8h]\n  size_t v179; // [rsp+200h] [rbp-6E0h]\n  size_t v180; // [rsp+208h] [rbp-6D8h]\n  __int64 v181; // [rsp+210h] [rbp-6D0h]\n  __int64 v182; // [rsp+218h] [rbp-6C8h]\n  __int64 v183; // [rsp+220h] [rbp-6C0h]\n  __int64 v184; // [rsp+228h] [rbp-6B8h]\n  double v185; // [rsp+230h] [rbp-6B0h]\n  __int64 v186; // [rsp+238h] [rbp-6A8h]\n  __int64 v187; // [rsp+240h] [rbp-6A0h]\n  __int64 v188; // [rsp+248h] [rbp-698h]\n  unsigned __int64 v189; // [rsp+250h] [rbp-690h]\n  size_t v190; // [rsp+258h] [rbp-688h]\n  long double v191; // [rsp+260h] [rbp-680h]\n  __int64 v192; // [rsp+270h] [rbp-670h]\n  int v193; // [rsp+278h] [rbp-668h]\n  char v194[8]; // [rsp+280h] [rbp-660h] BYREF\n  void *v195; // [rsp+288h] [rbp-658h]\n  _BYTE v196[224]; // [rsp+290h] [rbp-650h] BYREF\n  __int64 v197; // [rsp+370h] [rbp-570h] BYREF\n  void *ptr; // [rsp+378h] [rbp-568h]\n  __int64 v199; // [rsp+380h] [rbp-560h]\n  __int64 v200; // [rsp+388h] [rbp-558h]\n  _BYTE v201[624]; // [rsp+390h] [rbp-550h] BYREF\n  char v202[712]; // [rsp+600h] [rbp-2E0h] BYREF\n  unsigned __int64 v203; // [rsp+8C8h] [rbp-18h]\n\n  v111 = a1;\n  v110 = a2;\n  v109 = a3;\n  v108 = a4;\n  v203 = __readfsqword(0x28u);\n  if ( (int)sub_418581(a3, &v197, v194) < 0 )\n    return 0LL;\n  if ( (int)sub_417C6F(v108, v194) < 0 )\n  {\n    if ( ptr != v201 )\n      free(ptr);\n    if ( v195 != v196 )\n      free(v195);\n    *__errno_location() = 22;\n    return 0LL;\n  }\n  v13 = v199;\n  v14 = 7;\n  v164 = sub_414380(7uLL, v199, v200, 6LL);\n  if ( v164 > 0xF9F )\n  {\n    size = v164;\n    if ( v164 == -1LL )\n      goto LABEL_530;\n    v14 = size;\n    format = (char *)malloc(size);\n    if ( !format )\n      goto LABEL_530;\n    v137 = format;\n  }\n  else\n  {\n    v20 = alloca(16 * ((v164 + 30) / 0x10));\n    format = (char *)(16 * (((unsigned __int64)&v107 + 7) >> 4));\n    v137 = 0LL;\n  }\n  if ( v111 )\n  {\n    src = v111;\n    v142 = *v110;\n  }\n  else\n  {\n    src = 0LL;\n    v142 = 0LL;\n  }\n  n = 0LL;\n  v138 = v109;\n  v139 = 0LL;\n  for ( i = (char *)ptr; ; i += 88 )\n  {\n    if ( *(void **)i != v138 )\n    {\n      v166 = *(_QWORD *)i - (_QWORD)v138;\n      v167 = sub_41434C(n, v166);\n      if ( v167 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v21 = -1LL;\n          else\n            v21 = 2 * v142;\n        }\n        else\n        {\n          v21 = 12LL;\n        }\n        v142 = v21;\n        if ( v167 > v21 )\n          v142 = v167;\n        v168 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        dest = src != v111 && src ? realloc(src, v168) : malloc(v168);\n        if ( !dest )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(dest, src, n);\n        src = dest;\n      }\n      v13 = (int)v138;\n      v14 = (_DWORD)src + n;\n      memcpy((char *)src + n, v138, v166);\n      n = v167;\n    }\n    if ( v197 == v139 )\n    {\n      v22 = sub_41434C(n, 1LL);\n      if ( v22 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v104 = -1LL;\n          else\n            v104 = 2 * v142;\n        }\n        else\n        {\n          v104 = 12LL;\n        }\n        v142 = v104;\n        v105 = sub_41434C(n, 1LL);\n        if ( v105 > v142 )\n          v142 = sub_41434C(n, 1LL);\n        v169 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        v163 = src != v111 && src ? realloc(src, v169) : malloc(v169);\n        if ( !v163 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(v163, src, n);\n        src = v163;\n      }\n      *((_BYTE *)src + n) = 0;\n      if ( src != v111 && n + 1 < v142 )\n      {\n        v170 = realloc(src, n + 1);\n        if ( v170 )\n          src = v170;\n      }\n      if ( v137 )\n        free(v137);\n      if ( ptr != v201 )\n        free(ptr);\n      if ( v195 != v196 )\n        free(v195);\n      *v110 = n;\n      return src;\n    }\n    if ( i[72] == 37 )\n    {\n      if ( *((_QWORD *)i + 10) != -1LL )\n        abort();\n      v13 = 1;\n      v14 = n;\n      v171 = sub_41434C(n, 1LL);\n      if ( v171 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v23 = -1LL;\n          else\n            v23 = 2 * v142;\n        }\n        else\n        {\n          v23 = 12LL;\n        }\n        v142 = v23;\n        if ( v171 > v23 )\n          v142 = v171;\n        v172 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        if ( src != v111 && src )\n        {\n          v13 = v172;\n          v14 = (int)src;\n          v145 = realloc(src, v172);\n        }\n        else\n        {\n          v14 = v172;\n          v145 = malloc(v172);\n        }\n        if ( !v145 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n        {\n          v13 = (int)src;\n          v14 = (int)v145;\n          memcpy(v145, src, n);\n        }\n        src = v145;\n      }\n      *((_BYTE *)src + n) = 37;\n      n = v171;\n      goto LABEL_487;\n    }\n    if ( *((_QWORD *)i + 10) == -1LL )\n      abort();\n    if ( i[72] == 110 )\n    {\n      v24 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10));\n      if ( v24 == 20 )\n      {\n        **((_DWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n        goto LABEL_487;\n      }\n      if ( v24 > 0x14 )\n      {\n        if ( v24 == 21 )\n        {\n          **((_QWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n        if ( v24 == 22 )\n        {\n          **((_QWORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n      }\n      else\n      {\n        if ( v24 == 18 )\n        {\n          **((_BYTE **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n        if ( v24 == 19 )\n        {\n          **((_WORD **)v195 + 4 * *((_QWORD *)i + 10) + 2) = n;\n          goto LABEL_487;\n        }\n      }\n      abort();\n    }\n    if ( i[72] != 102\n      && i[72] != 70\n      && i[72] != 101\n      && i[72] != 69\n      && i[72] != 103\n      && i[72] != 71\n      && i[72] != 97\n      && i[72] != 65 )\n    {\n      break;\n    }\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10)) != 12 )\n      break;\n    v25 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n    *(_QWORD *)&v106 = *((_QWORD *)v25 + 2);\n    DWORD2(v106) = *((_DWORD *)v25 + 6);\n    if ( !sub_414417(v14, v13, a5, a6, a7, a8, v18, v19, a11, a12, DWORD2(v106), v15, v16, v17, v106) )\n      break;\n    v114 = *((_DWORD *)i + 4);\n    v115 = 0;\n    v146 = 0LL;\n    if ( *((_QWORD *)i + 3) != *((_QWORD *)i + 4) )\n    {\n      if ( *((_QWORD *)i + 5) == -1LL )\n      {\n        v152 = (char *)*((_QWORD *)i + 3);\n        do\n        {\n          v26 = v152++;\n          v27 = *v26 - 48;\n          if ( v146 > 0x1999999999999999LL )\n            v28 = -1LL;\n          else\n            v28 = 10 * v146;\n          v146 = sub_41434C(v28, v27);\n        }\n        while ( *((char **)i + 4) != v152 );\n      }\n      else\n      {\n        if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5)) != 5 )\n          abort();\n        v120 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5) + 4);\n        if ( v120 >= 0 )\n        {\n          v146 = v120;\n        }\n        else\n        {\n          v114 |= 2u;\n          v146 = (unsigned int)-v120;\n        }\n      }\n      v115 = 1;\n    }\n    v116 = 0;\n    v147 = 0LL;\n    if ( *((_QWORD *)i + 6) != *((_QWORD *)i + 7) )\n    {\n      if ( *((_QWORD *)i + 8) == -1LL )\n      {\n        v153 = (char *)(*((_QWORD *)i + 6) + 1LL);\n        v147 = 0LL;\n        while ( *((char **)i + 7) != v153 )\n        {\n          v29 = v153++;\n          v30 = *v29 - 48;\n          if ( v147 > 0x1999999999999999LL )\n            v31 = -1LL;\n          else\n            v31 = 10 * v147;\n          v147 = sub_41434C(v31, v30);\n        }\n        v116 = 1;\n      }\n      else\n      {\n        if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8)) != 5 )\n          abort();\n        v121 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8) + 4);\n        if ( v121 >= 0 )\n        {\n          v147 = v121;\n          v116 = 1;\n        }\n      }\n    }\n    if ( !v116 && i[72] != 97 && i[72] != 65 )\n      v147 = 6LL;\n    v148 = 0LL;\n    if ( v147 )\n      v148 = v147;\n    v148 = sub_41434C(v148, 12LL);\n    if ( v148 < v146 )\n      v148 = v146;\n    v32 = v148;\n    v148 = sub_41434C(v148, 1LL);\n    if ( v148 > 0x2BC )\n    {\n      v173 = v148;\n      if ( v148 == -1LL )\n        goto LABEL_525;\n      v32 = v173;\n      v149 = malloc(v173);\n      if ( !v149 )\n        goto LABEL_525;\n    }\n    else\n    {\n      v149 = v202;\n    }\n    v150 = 0LL;\n    v151 = (char *)v149;\n    v36 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n    v37 = *((_DWORD *)v36 + 6);\n    *(_QWORD *)&v191 = *((_QWORD *)v36 + 2);\n    DWORD2(v191) = v37;\n    if ( (unsigned int)sub_417C17(v32, 1, v37, v33, v34, v35, *(__int64 *)&v191, v37) )\n    {\n      if ( i[72] <= 64 || i[72] > 90 )\n      {\n        v41 = v151++;\n        *v41 = 110;\n        v42 = v151++;\n        *v42 = 97;\n        v43 = v151++;\n        *v43 = 110;\n      }\n      else\n      {\n        v38 = v151++;\n        *v38 = 78;\n        v39 = v151++;\n        *v39 = 65;\n        v40 = v151++;\n        *v40 = 78;\n      }\n    }\n    else\n    {\n      v117 = 0;\n      v112 = v134;\n      LOBYTE(v44) = v134;\n      HIBYTE(v44) = BYTE1(v134) | 3;\n      LOWORD(v134) = v44;\n      _FST7 = v191;\n      __asm { fxam }\n      if ( (v45 & 0x200) != 0 )\n      {\n        v117 = -1;\n        v191 = -v191;\n      }\n      if ( v117 >= 0 )\n      {\n        if ( (v114 & 4) != 0 )\n        {\n          v48 = v151++;\n          *v48 = 43;\n        }\n        else if ( (v114 & 8) != 0 )\n        {\n          v49 = v151++;\n          *v49 = 32;\n        }\n      }\n      else\n      {\n        v47 = v151++;\n        *v47 = 45;\n      }\n      if ( v191 > 0.0 && v191 == v191 + v191 )\n      {\n        if ( i[72] <= 64 || i[72] > 90 )\n        {\n          v53 = v151++;\n          *v53 = 105;\n          v54 = v151++;\n          *v54 = 110;\n          v55 = v151++;\n          *v55 = 102;\n        }\n        else\n        {\n          v50 = v151++;\n          *v50 = 73;\n          v51 = v151++;\n          *v51 = 78;\n          v52 = v151++;\n          *v52 = 70;\n        }\n      }\n      else\n      {\n        if ( 0.0 != v191 )\n          abort();\n        v150 = (unsigned __int64)v151;\n        switch ( i[72] )\n        {\n          case 'f':\n          case 'F':\n            v56 = v151++;\n            *v56 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v57 = v151++;\n              *v57 = sub_4143E6();\n              while ( v147 )\n              {\n                v58 = v151++;\n                *v58 = 48;\n                --v147;\n              }\n            }\n            break;\n          case 'e':\n          case 'E':\n            v59 = v151++;\n            *v59 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v60 = v151++;\n              *v60 = sub_4143E6();\n              while ( v147 )\n              {\n                v61 = v151++;\n                *v61 = 48;\n                --v147;\n              }\n            }\n            v62 = v151++;\n            *v62 = i[72];\n            v63 = v151++;\n            *v63 = 43;\n            v64 = v151++;\n            *v64 = 48;\n            v65 = v151++;\n            *v65 = 48;\n            break;\n          case 'g':\n          case 'G':\n            v66 = v151++;\n            *v66 = 48;\n            if ( (v114 & 0x10) != 0 )\n            {\n              if ( v147 )\n                v67 = v147 - 1;\n              else\n                v67 = 0LL;\n              v154 = v67;\n              v68 = v151++;\n              *v68 = sub_4143E6();\n              while ( v154 )\n              {\n                v69 = v151++;\n                *v69 = 48;\n                --v154;\n              }\n            }\n            break;\n          case 'a':\n          case 'A':\n            v70 = v151++;\n            *v70 = 48;\n            v71 = v151++;\n            *v71 = i[72] + 23;\n            v150 = (unsigned __int64)v151;\n            v72 = v151++;\n            *v72 = 48;\n            if ( (v114 & 0x10) != 0 || v147 )\n            {\n              v73 = v151++;\n              *v73 = sub_4143E6();\n              while ( v147 )\n              {\n                v74 = v151++;\n                *v74 = 48;\n                --v147;\n              }\n            }\n            v75 = v151++;\n            *v75 = i[72] + 15;\n            v76 = v151++;\n            *v76 = 43;\n            v77 = v151++;\n            *v77 = 48;\n            break;\n          default:\n            abort();\n        }\n      }\n      LOWORD(v134) = v112;\n    }\n    if ( v115 && v151 - (_BYTE *)v149 < v146 )\n    {\n      v155 = (_BYTE *)v149 - v151 + v146;\n      v174 = (char *)v149 + v146;\n      if ( (v114 & 2) != 0 )\n      {\n        while ( v155 )\n        {\n          v78 = v151++;\n          *v78 = 32;\n          --v155;\n        }\n      }\n      else if ( (v114 & 0x20) != 0 && v150 )\n      {\n        v156 = v174;\n        while ( (unsigned __int64)v151 > v150 )\n          *--v156 = *--v151;\n        while ( v155 )\n        {\n          v79 = v151++;\n          *v79 = 48;\n          --v155;\n        }\n      }\n      else\n      {\n        v157 = v174;\n        while ( v151 > v149 )\n          *--v157 = *--v151;\n        while ( v155 )\n        {\n          v80 = v151++;\n          *v80 = 32;\n          --v155;\n        }\n      }\n      v151 = v174;\n    }\n    v175 = v151 - (_BYTE *)v149;\n    if ( v151 - (_BYTE *)v149 >= v148 )\n      abort();\n    if ( v142 - n <= v175 )\n    {\n      v176 = sub_41434C(n, v175);\n      if ( v176 > v142 )\n      {\n        if ( v142 )\n        {\n          if ( (v142 & 0x8000000000000000LL) != 0LL )\n            v81 = -1LL;\n          else\n            v81 = 2 * v142;\n        }\n        else\n        {\n          v81 = 12LL;\n        }\n        v142 = v81;\n        if ( v176 > v81 )\n          v142 = v176;\n        v177 = v142;\n        if ( v142 == -1LL )\n          goto LABEL_525;\n        v158 = src != v111 && src ? realloc(src, v177) : malloc(v177);\n        if ( !v158 )\n          goto LABEL_525;\n        if ( src == v111 && n )\n          memcpy(v158, src, n);\n        src = v158;\n      }\n    }\n    v13 = (int)v149;\n    v14 = (_DWORD)src + n;\n    memcpy((char *)src + n, v149, v175);\n    if ( v149 != v202 )\n    {\n      v14 = (int)v149;\n      free(v149);\n    }\n    n += v175;\nLABEL_487:\n    v138 = (void *)*((_QWORD *)i + 1);\n    ++v139;\n  }\n  v122 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10));\n  v123 = *((_DWORD *)i + 4);\n  v159 = format + 1;\n  *format = 37;\n  if ( (v123 & 1) != 0 )\n  {\n    v82 = v159;\n    v159 = (char *)v159 + 1;\n    *v82 = 39;\n  }\n  if ( (v123 & 2) != 0 )\n  {\n    v83 = v159;\n    v159 = (char *)v159 + 1;\n    *v83 = 45;\n  }\n  if ( (v123 & 4) != 0 )\n  {\n    v84 = v159;\n    v159 = (char *)v159 + 1;\n    *v84 = 43;\n  }\n  if ( (v123 & 8) != 0 )\n  {\n    v85 = v159;\n    v159 = (char *)v159 + 1;\n    *v85 = 32;\n  }\n  if ( (v123 & 0x10) != 0 )\n  {\n    v86 = v159;\n    v159 = (char *)v159 + 1;\n    *v86 = 35;\n  }\n  if ( (v123 & 0x40) != 0 )\n  {\n    v87 = v159;\n    v159 = (char *)v159 + 1;\n    *v87 = 73;\n  }\n  if ( (v123 & 0x20) != 0 )\n  {\n    v88 = v159;\n    v159 = (char *)v159 + 1;\n    *v88 = 48;\n  }\n  if ( *((_QWORD *)i + 3) != *((_QWORD *)i + 4) )\n  {\n    v178 = *((_QWORD *)i + 4) - *((_QWORD *)i + 3);\n    memcpy(v159, *((const void **)i + 3), v178);\n    v159 = (char *)v159 + v178;\n  }\n  if ( *((_QWORD *)i + 6) != *((_QWORD *)i + 7) )\n  {\n    v179 = *((_QWORD *)i + 7) - *((_QWORD *)i + 6);\n    memcpy(v159, *((const void **)i + 6), v179);\n    v159 = (char *)v159 + v179;\n  }\n  if ( v122 > 0xA )\n  {\n    if ( v122 == 14 || v122 == 16 )\n      goto LABEL_260;\n    if ( v122 == 12 )\n    {\n      v91 = v159;\n      v159 = (char *)v159 + 1;\n      *v91 = 76;\n    }\n  }\n  else\n  {\n    if ( v122 >= 9 )\n    {\n      v89 = v159;\n      v159 = (char *)v159 + 1;\n      *v89 = 108;\n      goto LABEL_260;\n    }\n    if ( v122 >= 7 )\n    {\nLABEL_260:\n      v90 = v159;\n      v159 = (char *)v159 + 1;\n      *v90 = 108;\n    }\n  }\n  *(_WORD *)v159 = (unsigned __int8)i[72];\n  v118 = 0;\n  if ( *((_QWORD *)i + 5) != -1LL )\n  {\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5)) != 5 )\n      abort();\n    v92 = v118++;\n    *(&v134 + v92) = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 5) + 4);\n  }\n  if ( *((_QWORD *)i + 8) != -1LL )\n  {\n    if ( *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8)) != 5 )\n      abort();\n    v93 = v118++;\n    *(&v134 + v93) = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 8) + 4);\n  }\n  v94 = sub_41434C(n, 2LL);\n  if ( v94 > v142 )\n  {\n    if ( v142 )\n    {\n      if ( (v142 & 0x8000000000000000LL) != 0LL )\n        v95 = -1LL;\n      else\n        v95 = 2 * v142;\n    }\n    else\n    {\n      v95 = 12LL;\n    }\n    v142 = v95;\n    v96 = sub_41434C(n, 2LL);\n    if ( v96 > v142 )\n      v142 = sub_41434C(n, 2LL);\n    v180 = v142;\n    if ( v142 != -1LL )\n    {\n      v160 = src != v111 && src ? realloc(src, v180) : malloc(v180);\n      if ( v160 )\n      {\n        if ( src == v111 && n )\n          memcpy(v160, src, n);\n        src = v160;\n        goto LABEL_288;\n      }\n    }\nLABEL_525:\n    if ( src != v111 && src )\n      free(src);\n    if ( v137 )\n      free(v137);\nLABEL_530:\n    if ( ptr != v201 )\n      free(ptr);\n    if ( v195 != v196 )\n      free(v195);\n    *__errno_location() = 12;\n    return 0LL;\n  }\nLABEL_288:\n  *((_BYTE *)src + n) = 0;\n  v124 = *__errno_location();\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      v113 = -1;\n      v119 = 0;\n      maxlen = v142 - n;\n      if ( v142 - n > 0x7FFFFFFF )\n        maxlen = 0x7FFFFFFFLL;\n      *__errno_location() = 0;\n      if ( v122 == 9 )\n      {\n        v183 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v183, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v183, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v183, &v113);\n        }\n      }\n      else if ( v122 > 9 )\n      {\n        if ( v122 == 13 )\n        {\n          v131 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v131, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v131, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v131, &v113);\n          }\n        }\n        else if ( v122 > 0xD )\n        {\n          if ( v122 == 15 )\n          {\n            v186 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v186, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v186, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v186, &v113);\n            }\n          }\n          else if ( v122 < 0xF )\n          {\n            v132 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v132, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v132, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v132, &v113);\n            }\n          }\n          else if ( v122 == 16 )\n          {\n            v187 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v187, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v187, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v187, &v113);\n            }\n          }\n          else\n          {\n            if ( v122 != 17 )\nLABEL_432:\n              abort();\n            v188 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n            if ( v118 == 1 )\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v188, &v113);\n            }\n            else if ( v118 )\n            {\n              if ( v118 != 2 )\n                abort();\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v188, &v113);\n            }\n            else\n            {\n              v14 = (_DWORD)src + n;\n              v13 = maxlen;\n              v119 = snprintf((char *)src + n, maxlen, format, v188, &v113);\n            }\n          }\n        }\n        else if ( v122 == 11 )\n        {\n          v185 = *((double *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, &v113, v185);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, &v113, v185);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            HIBYTE(v107) = HIBYTE(v185);\n            a5 = v185;\n            v119 = snprintf((char *)src + n, maxlen, format, &v113, v185);\n          }\n        }\n        else if ( v122 > 0xB )\n        {\n          v97 = (char *)v195 + 32 * *((_QWORD *)i + 10);\n          v98 = *((_DWORD *)v97 + 6);\n          v192 = *((_QWORD *)v97 + 2);\n          v193 = v98;\n          if ( v118 == 1 )\n          {\n            v13 = maxlen;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v13 = maxlen;\n            DWORD2(v106) = v193;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, &v113, v192, *((_QWORD *)&v106 + 1));\n          }\n          else\n          {\n            v13 = maxlen;\n            v14 = (_DWORD)src + n;\n            v119 = snprintf((char *)src + n, maxlen, format, &v113);\n          }\n        }\n        else\n        {\n          v184 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v184, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v184, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v184, &v113);\n          }\n        }\n      }\n      else if ( v122 == 4 )\n      {\n        v128 = *((unsigned __int16 *)v195 + 16 * *((_QWORD *)i + 10) + 8);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v128, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v128, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v128, &v113);\n        }\n      }\n      else if ( v122 > 4 )\n      {\n        if ( v122 == 6 )\n        {\n          v130 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v130, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v130, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v130, &v113);\n          }\n        }\n        else if ( v122 < 6 )\n        {\n          v129 = *((_DWORD *)v195 + 8 * *((_QWORD *)i + 10) + 4);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v129, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v129, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v129, &v113);\n          }\n        }\n        else if ( v122 == 7 )\n        {\n          v181 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v181, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v181, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v181, &v113);\n          }\n        }\n        else\n        {\n          v182 = *((_QWORD *)v195 + 4 * *((_QWORD *)i + 10) + 2);\n          if ( v118 == 1 )\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v182, &v113);\n          }\n          else if ( v118 )\n          {\n            if ( v118 != 2 )\n              abort();\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v182, &v113);\n          }\n          else\n          {\n            v14 = (_DWORD)src + n;\n            v13 = maxlen;\n            v119 = snprintf((char *)src + n, maxlen, format, v182, &v113);\n          }\n        }\n      }\n      else if ( v122 == 2 )\n      {\n        v126 = *((unsigned __int8 *)v195 + 32 * *((_QWORD *)i + 10) + 16);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v126, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v126, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v126, &v113);\n        }\n      }\n      else if ( v122 > 2 )\n      {\n        v127 = *((__int16 *)v195 + 16 * *((_QWORD *)i + 10) + 8);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v127, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v127, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v127, &v113);\n        }\n      }\n      else\n      {\n        if ( v122 != 1 )\n          goto LABEL_432;\n        v125 = *((char *)v195 + 32 * *((_QWORD *)i + 10) + 16);\n        if ( v118 == 1 )\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v125, &v113);\n        }\n        else if ( v118 )\n        {\n          if ( v118 != 2 )\n            abort();\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v134, v135, v125, &v113);\n        }\n        else\n        {\n          v14 = (_DWORD)src + n;\n          v13 = maxlen;\n          v119 = snprintf((char *)src + n, maxlen, format, v125, &v113);\n        }\n      }\n      if ( v113 >= 0 )\n      {\n        if ( v113 < maxlen && *((_BYTE *)src + n + v113) )\n          abort();\n        if ( v119 > v113 )\n          v113 = v119;\n        goto LABEL_443;\n      }\n      if ( !*((_BYTE *)v159 + 1) )\n        break;\n      *((_BYTE *)v159 + 1) = 0;\n    }\n    if ( v119 >= 0 )\n      v113 = v119;\nLABEL_443:\n    if ( v113 < 0 )\n    {\n      v133 = *__errno_location();\n      if ( src != v111 && src )\n        free(src);\n      if ( v137 )\n        free(v137);\n      if ( ptr != v201 )\n        free(ptr);\n      if ( v195 != v196 )\n        free(v195);\n      v99 = __errno_location();\n      if ( v133 )\n      {\n        v100 = v133;\n      }\n      else if ( i[72] == 99 || i[72] == 115 )\n      {\n        v100 = 84;\n      }\n      else\n      {\n        v100 = 22;\n      }\n      *v99 = v100;\n      return 0LL;\n    }\n    if ( (unsigned int)(v113 + 1) < maxlen )\n    {\n      n += v113;\n      *__errno_location() = v124;\n      goto LABEL_487;\n    }\n    if ( maxlen == 0x7FFFFFFF )\n      break;\n    if ( (v142 & 0x8000000000000000LL) != 0LL )\n      v101 = -1LL;\n    else\n      v101 = 2 * v142;\n    v102 = sub_41434C(n, (unsigned int)(v113 + 2));\n    v189 = sub_4143CB(v102, v101);\n    if ( v189 > v142 )\n    {\n      if ( v142 )\n      {\n        if ( (v142 & 0x8000000000000000LL) != 0LL )\n          v103 = -1LL;\n        else\n          v103 = 2 * v142;\n      }\n      else\n      {\n        v103 = 12LL;\n      }\n      v142 = v103;\n      if ( v189 > v103 )\n        v142 = v189;\n      v190 = v142;\n      if ( v142 == -1LL )\n        goto LABEL_525;\n      v162 = src != v111 && src ? realloc(src, v190) : malloc(v190);\n      if ( !v162 )\n        goto LABEL_525;\n      if ( src == v111 && n )\n        memcpy(v162, src, n);\n      src = v162;\n    }\n  }\n  if ( src != v111 && src )\n    free(src);\n  if ( v137 )\n    free(v137);\n  if ( ptr != v201 )\n    free(ptr);\n  if ( v195 != v196 )\n    free(v195);\n  *__errno_location() = 75;\n  return 0LL;\n}\n"], [4291607, "sub_417C17", "_BOOL8 __fastcall sub_417C17(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int16 a8)\n{\n  if ( (a8 & 0x7FFF) == 0 )\n    return HIDWORD(a7) >> 31;\n  if ( (a8 & 0x7FFF) == 0x7FFF )\n    return (HIDWORD(a7) ^ 0x80000000 | (unsigned int)a7) != 0;\n  return a7 >= 0;\n}\n"], [4291695, "sub_417C6F", "__int64 __fastcall sub_417C6F(unsigned int *a1, unsigned __int64 *a2)\n{\n  unsigned int v2; // eax\n  _DWORD *v3; // rax\n  _DWORD *v4; // rax\n  _DWORD *v5; // rax\n  _DWORD *v6; // rax\n  _DWORD *v7; // rax\n  _DWORD *v8; // rax\n  _QWORD *v9; // rax\n  _QWORD *v10; // rax\n  _QWORD *v11; // rax\n  _QWORD *v12; // rax\n  _QWORD *v13; // rax\n  unsigned __int64 v14; // rdx\n  __int64 v15; // rax\n  _DWORD *v16; // rax\n  _DWORD *v17; // rax\n  _QWORD *v18; // rax\n  _QWORD *v19; // rax\n  _QWORD *v20; // rax\n  _QWORD *v21; // rax\n  _QWORD *v22; // rax\n  _QWORD *v23; // rax\n  _QWORD *v24; // rax\n  _QWORD *v25; // rax\n  unsigned __int64 v27; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v28; // [rsp+18h] [rbp-8h]\n\n  v27 = 0LL;\n  v28 = a2[1];\n  while ( *a2 > v27 )\n  {\n    v2 = *(_DWORD *)v28;\n    if ( *(_DWORD *)v28 == 11 )\n    {\n      if ( a1[1] >= 0xB0 )\n      {\n        v13 = (_QWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v13 + 1;\n      }\n      else\n      {\n        v13 = (_QWORD *)(*((_QWORD *)a1 + 2) + a1[1]);\n        a1[1] += 16;\n      }\n      *(_QWORD *)(v28 + 16) = *v13;\n    }\n    else if ( v2 > 0xB )\n    {\n      if ( v2 == 17 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v20 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v20 + 1;\n        }\n        else\n        {\n          v20 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v20;\n      }\n      else if ( v2 > 0x11 )\n      {\n        if ( v2 == 20 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v23 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v23 + 1;\n          }\n          else\n          {\n            v23 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v23;\n        }\n        else if ( v2 > 0x14 )\n        {\n          if ( v2 == 21 )\n          {\n            if ( *a1 >= 0x30 )\n            {\n              v24 = (_QWORD *)*((_QWORD *)a1 + 1);\n              *((_QWORD *)a1 + 1) = v24 + 1;\n            }\n            else\n            {\n              v24 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n              *a1 += 8;\n            }\n            *(_QWORD *)(v28 + 16) = *v24;\n          }\n          else\n          {\n            if ( v2 != 22 )\n              return 0xFFFFFFFFLL;\n            if ( *a1 >= 0x30 )\n            {\n              v25 = (_QWORD *)*((_QWORD *)a1 + 1);\n              *((_QWORD *)a1 + 1) = v25 + 1;\n            }\n            else\n            {\n              v25 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n              *a1 += 8;\n            }\n            *(_QWORD *)(v28 + 16) = *v25;\n          }\n        }\n        else if ( v2 == 18 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v21 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v21 + 1;\n          }\n          else\n          {\n            v21 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v21;\n        }\n        else\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v22 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v22 + 1;\n          }\n          else\n          {\n            v22 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v22;\n        }\n      }\n      else if ( v2 == 14 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v17 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v17 + 2;\n        }\n        else\n        {\n          v17 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v17;\n      }\n      else if ( v2 > 0xE )\n      {\n        if ( v2 == 15 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v18 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v18 + 1;\n          }\n          else\n          {\n            v18 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v18;\n          if ( !*(_QWORD *)(v28 + 16) )\n            *(_QWORD *)(v28 + 16) = \"(NULL)\";\n        }\n        else\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v19 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v19 + 1;\n          }\n          else\n          {\n            v19 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v19;\n          if ( !*(_QWORD *)(v28 + 16) )\n            *(_QWORD *)(v28 + 16) = \"(\";\n        }\n      }\n      else if ( v2 == 12 )\n      {\n        v14 = (*((_QWORD *)a1 + 1) + 15LL) & 0xFFFFFFFFFFFFFFF0LL;\n        *((_QWORD *)a1 + 1) = v14 + 16;\n        v15 = *(_QWORD *)v14;\n        LODWORD(v14) = *(_DWORD *)(v14 + 8);\n        *(_QWORD *)(v28 + 16) = v15;\n        *(_DWORD *)(v28 + 24) = v14;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v16 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v16 + 2;\n        }\n        else\n        {\n          v16 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v16;\n      }\n    }\n    else if ( v2 == 5 )\n    {\n      if ( *a1 >= 0x30 )\n      {\n        v7 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v7 + 2;\n      }\n      else\n      {\n        v7 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_DWORD *)(v28 + 16) = *v7;\n    }\n    else if ( v2 > 5 )\n    {\n      if ( v2 == 8 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v10 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v10 + 1;\n        }\n        else\n        {\n          v10 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v10;\n      }\n      else if ( v2 > 8 )\n      {\n        if ( v2 == 9 )\n        {\n          if ( *a1 >= 0x30 )\n          {\n            v11 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v11 + 1;\n          }\n          else\n          {\n            v11 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v11;\n        }\n        else\n        {\n          if ( v2 != 10 )\n            return 0xFFFFFFFFLL;\n          if ( *a1 >= 0x30 )\n          {\n            v12 = (_QWORD *)*((_QWORD *)a1 + 1);\n            *((_QWORD *)a1 + 1) = v12 + 1;\n          }\n          else\n          {\n            v12 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n            *a1 += 8;\n          }\n          *(_QWORD *)(v28 + 16) = *v12;\n        }\n      }\n      else if ( v2 == 6 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v8 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v8 + 2;\n        }\n        else\n        {\n          v8 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_DWORD *)(v28 + 16) = *v8;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v9 = (_QWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v9 + 1;\n        }\n        else\n        {\n          v9 = (_QWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_QWORD *)(v28 + 16) = *v9;\n      }\n    }\n    else if ( v2 == 2 )\n    {\n      if ( *a1 >= 0x30 )\n      {\n        v4 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v4 + 2;\n      }\n      else\n      {\n        v4 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_BYTE *)(v28 + 16) = *v4;\n    }\n    else if ( v2 > 2 )\n    {\n      if ( v2 == 3 )\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v5 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v5 + 2;\n        }\n        else\n        {\n          v5 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_WORD *)(v28 + 16) = *v5;\n      }\n      else\n      {\n        if ( *a1 >= 0x30 )\n        {\n          v6 = (_DWORD *)*((_QWORD *)a1 + 1);\n          *((_QWORD *)a1 + 1) = v6 + 2;\n        }\n        else\n        {\n          v6 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n          *a1 += 8;\n        }\n        *(_WORD *)(v28 + 16) = *v6;\n      }\n    }\n    else\n    {\n      if ( v2 != 1 )\n        return 0xFFFFFFFFLL;\n      if ( *a1 >= 0x30 )\n      {\n        v3 = (_DWORD *)*((_QWORD *)a1 + 1);\n        *((_QWORD *)a1 + 1) = v3 + 2;\n      }\n      else\n      {\n        v3 = (_DWORD *)(*((_QWORD *)a1 + 2) + *a1);\n        *a1 += 8;\n      }\n      *(_BYTE *)(v28 + 16) = *v3;\n    }\n    ++v27;\n    v28 += 32LL;\n  }\n  return 0LL;\n}\n"], [4293965, "sub_41854D", "__int64 __fastcall sub_41854D(unsigned __int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  if ( a1 + a2 < a1 )\n    result = -1LL;\n  else\n    result = a1 + a2;\n  return result;\n}\n"], [4294017, "sub_418581", "__int64 __fastcall sub_418581(char *a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  unsigned __int64 v4; // rax\n  unsigned __int64 v5; // rax\n  __int64 v6; // rax\n  unsigned __int64 v7; // rax\n  size_t v8; // rax\n  void *v9; // rax\n  __int64 v10; // rsi\n  __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  __int64 v13; // rax\n  unsigned __int64 v14; // rax\n  size_t v15; // rax\n  void *v16; // rax\n  __int64 v17; // rsi\n  __int64 v18; // rax\n  char *v19; // rax\n  int v20; // eax\n  __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  size_t v23; // rax\n  void *v24; // rax\n  __int64 v25; // rsi\n  __int64 v26; // rax\n  unsigned __int64 v27; // rax\n  size_t v28; // rax\n  void *v29; // rax\n  char v33; // [rsp+2Fh] [rbp-E1h]\n  int v34; // [rsp+30h] [rbp-E0h]\n  int ii; // [rsp+34h] [rbp-DCh]\n  __int64 v37; // [rsp+40h] [rbp-D0h]\n  __int64 v38; // [rsp+48h] [rbp-C8h]\n  __int64 v39; // [rsp+50h] [rbp-C0h]\n  unsigned __int64 v40; // [rsp+58h] [rbp-B8h]\n  unsigned __int64 v41; // [rsp+60h] [rbp-B0h]\n  __int64 v42; // [rsp+68h] [rbp-A8h]\n  char *i; // [rsp+70h] [rbp-A0h]\n  char *j; // [rsp+70h] [rbp-A0h]\n  unsigned __int64 v45; // [rsp+78h] [rbp-98h]\n  char *k; // [rsp+80h] [rbp-90h]\n  char *l; // [rsp+80h] [rbp-90h]\n  unsigned __int64 v48; // [rsp+88h] [rbp-88h]\n  char *m; // [rsp+90h] [rbp-80h]\n  char *n; // [rsp+90h] [rbp-80h]\n  unsigned __int64 v51; // [rsp+98h] [rbp-78h]\n  __int64 v52; // [rsp+A0h] [rbp-70h]\n  unsigned __int64 v53; // [rsp+A8h] [rbp-68h]\n  void *dest; // [rsp+B8h] [rbp-58h]\n  unsigned __int64 v55; // [rsp+C8h] [rbp-48h]\n  void *v56; // [rsp+D8h] [rbp-38h]\n  unsigned __int64 v57; // [rsp+E8h] [rbp-28h]\n  void *v58; // [rsp+F8h] [rbp-18h]\n  void *v59; // [rsp+108h] [rbp-8h]\n\n  v37 = 0LL;\n  v40 = 0LL;\n  v41 = 0LL;\n  *(_QWORD *)a2 = 0LL;\n  v38 = 7LL;\n  *(_QWORD *)(a2 + 8) = a2 + 32;\n  *(_QWORD *)a3 = 0LL;\n  v39 = 7LL;\n  *(_QWORD *)(a3 + 8) = a3 + 16;\n  while ( 1 )\n  {\n    do\n    {\n      if ( !*a1 )\n      {\n        *(_QWORD *)(*(_QWORD *)(a2 + 8) + 88LL * *(_QWORD *)a2) = a1;\n        *(_QWORD *)(a2 + 16) = v40;\n        *(_QWORD *)(a2 + 24) = v41;\n        return 0LL;\n      }\n      v3 = a1++;\n    }\n    while ( *v3 != 37 );\n    v42 = -1LL;\n    v52 = *(_QWORD *)(a2 + 8) + 88LL * *(_QWORD *)a2;\n    *(_QWORD *)v52 = a1 - 1;\n    *(_DWORD *)(v52 + 16) = 0;\n    *(_QWORD *)(v52 + 24) = 0LL;\n    *(_QWORD *)(v52 + 32) = 0LL;\n    *(_QWORD *)(v52 + 40) = -1LL;\n    *(_QWORD *)(v52 + 48) = 0LL;\n    *(_QWORD *)(v52 + 56) = 0LL;\n    *(_QWORD *)(v52 + 64) = -1LL;\n    *(_QWORD *)(v52 + 80) = -1LL;\n    if ( *a1 > 47 && *a1 <= 57 )\n    {\n      for ( i = a1; *i > 47 && *i <= 57; ++i )\n        ;\n      if ( *i == 36 )\n      {\n        v45 = 0LL;\n        for ( j = a1; *j > 47 && *j <= 57; ++j )\n        {\n          if ( v45 > 0x1999999999999999LL )\n            v4 = -1LL;\n          else\n            v4 = 10 * v45;\n          v45 = sub_41854D(v4, *j - 48);\n        }\n        if ( !v45 || v45 == -1LL )\n        {\nLABEL_272:\n          if ( *(_QWORD *)(a3 + 8) != a3 + 16 )\n            free(*(void **)(a3 + 8));\n          if ( *(_QWORD *)(a2 + 8) != a2 + 32 )\n            free(*(void **)(a2 + 8));\n          *__errno_location() = 22;\n          return 0xFFFFFFFFLL;\n        }\n        v42 = v45 - 1;\n        a1 = j + 1;\n      }\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              while ( 1 )\n              {\n                while ( *a1 == 39 )\n                {\n                  *(_DWORD *)(v52 + 16) |= 1u;\n                  ++a1;\n                }\n                if ( *a1 != 45 )\n                  break;\n                *(_DWORD *)(v52 + 16) |= 2u;\n                ++a1;\n              }\n              if ( *a1 != 43 )\n                break;\n              *(_DWORD *)(v52 + 16) |= 4u;\n              ++a1;\n            }\n            if ( *a1 != 32 )\n              break;\n            *(_DWORD *)(v52 + 16) |= 8u;\n            ++a1;\n          }\n          if ( *a1 != 35 )\n            break;\n          *(_DWORD *)(v52 + 16) |= 0x10u;\n          ++a1;\n        }\n        if ( *a1 != 48 )\n          break;\n        *(_DWORD *)(v52 + 16) |= 0x20u;\n        ++a1;\n      }\n      if ( *a1 != 73 )\n        break;\n      *(_DWORD *)(v52 + 16) |= 0x40u;\n      ++a1;\n    }\n    if ( *a1 != 42 )\n    {\n      if ( *a1 > 47 && *a1 <= 57 )\n      {\n        *(_QWORD *)(v52 + 24) = a1;\n        while ( *a1 > 47 && *a1 <= 57 )\n          ++a1;\n        *(_QWORD *)(v52 + 32) = a1;\n        if ( v40 < *(_QWORD *)(v52 + 32) - *(_QWORD *)(v52 + 24) )\n          v40 = *(_QWORD *)(v52 + 32) - *(_QWORD *)(v52 + 24);\n      }\n      goto LABEL_88;\n    }\n    *(_QWORD *)(v52 + 24) = a1++;\n    *(_QWORD *)(v52 + 32) = a1;\n    if ( !v40 )\n      v40 = 1LL;\n    if ( *a1 > 47 && *a1 <= 57 )\n    {\n      for ( k = a1; *k > 47 && *k <= 57; ++k )\n        ;\n      if ( *k == 36 )\n      {\n        v48 = 0LL;\n        for ( l = a1; *l > 47 && *l <= 57; ++l )\n        {\n          if ( v48 > 0x1999999999999999LL )\n            v5 = -1LL;\n          else\n            v5 = 10 * v48;\n          v48 = sub_41854D(v5, *l - 48);\n        }\n        if ( !v48 || v48 == -1LL )\n          goto LABEL_272;\n        *(_QWORD *)(v52 + 40) = v48 - 1;\n        a1 = l + 1;\n      }\n    }\n    if ( *(_QWORD *)(v52 + 40) == -1LL )\n    {\n      v6 = v37++;\n      *(_QWORD *)(v52 + 40) = v6;\n      if ( *(_QWORD *)(v52 + 40) == -1LL )\n        goto LABEL_272;\n    }\n    v53 = *(_QWORD *)(v52 + 40);\n    if ( v53 >= v39 )\n      break;\nLABEL_75:\n    while ( *(_QWORD *)a3 <= v53 )\n    {\n      v10 = *(_QWORD *)(a3 + 8);\n      v11 = (*(_QWORD *)a3)++;\n      *(_DWORD *)(v10 + 32 * v11) = 0;\n    }\n    if ( *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) )\n    {\n      if ( *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) != 5 )\n        goto LABEL_272;\n    }\n    else\n    {\n      *(_DWORD *)(32 * v53 + *(_QWORD *)(a3 + 8)) = 5;\n    }\nLABEL_88:\n    if ( *a1 == 46 )\n    {\n      if ( *++a1 == 42 )\n      {\n        *(_QWORD *)(v52 + 48) = a1++ - 1;\n        *(_QWORD *)(v52 + 56) = a1;\n        if ( v41 <= 1 )\n          v41 = 2LL;\n        if ( *a1 > 47 && *a1 <= 57 )\n        {\n          for ( m = a1; *m > 47 && *m <= 57; ++m )\n            ;\n          if ( *m == 36 )\n          {\n            v51 = 0LL;\n            for ( n = a1; *n > 47 && *n <= 57; ++n )\n            {\n              if ( v51 > 0x1999999999999999LL )\n                v12 = -1LL;\n              else\n                v12 = 10 * v51;\n              v51 = sub_41854D(v12, *n - 48);\n            }\n            if ( !v51 || v51 == -1LL )\n              goto LABEL_272;\n            *(_QWORD *)(v52 + 64) = v51 - 1;\n            a1 = n + 1;\n          }\n        }\n        if ( *(_QWORD *)(v52 + 64) == -1LL )\n        {\n          v13 = v37++;\n          *(_QWORD *)(v52 + 64) = v13;\n          if ( *(_QWORD *)(v52 + 64) == -1LL )\n            goto LABEL_272;\n        }\n        v55 = *(_QWORD *)(v52 + 64);\n        if ( v55 >= v39 )\n        {\n          if ( v39 < 0 )\n            v14 = -1LL;\n          else\n            v14 = 2 * v39;\n          v39 = v14;\n          if ( v14 <= v55 )\n            v39 = sub_41854D(v55, 1LL);\n          if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n            v15 = -1LL;\n          else\n            v15 = 32 * v39;\n          if ( v15 == -1LL )\n            goto LABEL_277;\n          v16 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v15) : realloc(*(void **)(a3 + 8), v15);\n          v56 = v16;\n          if ( !v16 )\n            goto LABEL_277;\n          if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n            memcpy(v16, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n          *(_QWORD *)(a3 + 8) = v56;\n        }\n        while ( *(_QWORD *)a3 <= v55 )\n        {\n          v17 = *(_QWORD *)(a3 + 8);\n          v18 = (*(_QWORD *)a3)++;\n          *(_DWORD *)(v17 + 32 * v18) = 0;\n        }\n        if ( *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) )\n        {\n          if ( *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) != 5 )\n            goto LABEL_272;\n        }\n        else\n        {\n          *(_DWORD *)(32 * v55 + *(_QWORD *)(a3 + 8)) = 5;\n        }\n      }\n      else\n      {\n        *(_QWORD *)(v52 + 48) = a1 - 1;\n        while ( *a1 > 47 && *a1 <= 57 )\n          ++a1;\n        *(_QWORD *)(v52 + 56) = a1;\n        if ( v41 < *(_QWORD *)(v52 + 56) - *(_QWORD *)(v52 + 48) )\n          v41 = *(_QWORD *)(v52 + 56) - *(_QWORD *)(v52 + 48);\n      }\n    }\n    for ( ii = 0; ; ii += 8 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          while ( 1 )\n          {\n            while ( 1 )\n            {\n              while ( *a1 == 104 )\n              {\n                ii |= 1 << (ii & 1);\n                ++a1;\n              }\n              if ( *a1 != 76 )\n                break;\n              ii |= 4u;\n              ++a1;\n            }\n            if ( *a1 != 108 )\n              break;\n            ii += 8;\n            ++a1;\n          }\n          if ( *a1 != 106 )\n            break;\n          ii += 8;\n          ++a1;\n        }\n        if ( *a1 != 122 && *a1 != 90 )\n          break;\n        ii += 8;\n        ++a1;\n      }\n      if ( *a1 != 116 )\n        break;\n      ++a1;\n    }\n    v19 = a1++;\n    v33 = *v19;\n    v20 = *v19;\n    if ( v20 == 100 )\n    {\nLABEL_185:\n      if ( ii > 15 || (ii & 4) != 0 )\n      {\n        v34 = 9;\n      }\n      else if ( ii <= 7 )\n      {\n        if ( (ii & 2) != 0 )\n        {\n          v34 = 1;\n        }\n        else if ( (ii & 1) != 0 )\n        {\n          v34 = 3;\n        }\n        else\n        {\n          v34 = 5;\n        }\n      }\n      else\n      {\n        v34 = 7;\n      }\n      goto LABEL_229;\n    }\n    if ( v20 > 100 )\n    {\n      if ( v20 == 111 )\n        goto LABEL_195;\n      if ( v20 > 111 )\n      {\n        if ( v20 == 115 )\n        {\n          if ( ii <= 7 )\n            v34 = 15;\n          else\n            v34 = 16;\n          goto LABEL_229;\n        }\n        if ( v20 > 115 )\n        {\n          if ( v20 != 117 && v20 != 120 )\n            goto LABEL_272;\nLABEL_195:\n          if ( ii > 15 || (ii & 4) != 0 )\n          {\n            v34 = 10;\n          }\n          else if ( ii <= 7 )\n          {\n            if ( (ii & 2) != 0 )\n            {\n              v34 = 2;\n            }\n            else if ( (ii & 1) != 0 )\n            {\n              v34 = 4;\n            }\n            else\n            {\n              v34 = 6;\n            }\n          }\n          else\n          {\n            v34 = 8;\n          }\n          goto LABEL_229;\n        }\n        if ( v20 != 112 )\n          goto LABEL_272;\n        v34 = 17;\n      }\n      else\n      {\n        if ( v20 == 105 )\n          goto LABEL_185;\n        if ( v20 <= 105 )\n        {\n          if ( v20 > 103 )\n            goto LABEL_272;\nLABEL_205:\n          if ( ii > 15 || (ii & 4) != 0 )\n            v34 = 12;\n          else\n            v34 = 11;\n          goto LABEL_229;\n        }\n        if ( v20 != 110 )\n          goto LABEL_272;\n        if ( ii > 15 || (ii & 4) != 0 )\n        {\n          v34 = 22;\n        }\n        else if ( ii <= 7 )\n        {\n          if ( (ii & 2) != 0 )\n          {\n            v34 = 18;\n          }\n          else if ( (ii & 1) != 0 )\n          {\n            v34 = 19;\n          }\n          else\n          {\n            v34 = 20;\n          }\n        }\n        else\n        {\n          v34 = 21;\n        }\n      }\n    }\n    else if ( v20 > 71 )\n    {\n      if ( v20 == 88 )\n        goto LABEL_195;\n      if ( v20 > 88 )\n      {\n        if ( v20 == 97 )\n          goto LABEL_205;\n        if ( v20 != 99 )\n          goto LABEL_272;\n        if ( ii <= 7 )\n          v34 = 13;\n        else\n          v34 = 14;\n      }\n      else\n      {\n        if ( v20 != 83 )\n          goto LABEL_272;\n        v34 = 16;\n        v33 = 115;\n      }\n    }\n    else\n    {\n      if ( v20 >= 69 || v20 == 65 )\n        goto LABEL_205;\n      if ( v20 == 67 )\n      {\n        v34 = 14;\n        v33 = 99;\n      }\n      else\n      {\n        if ( v20 != 37 )\n          goto LABEL_272;\n        v34 = 0;\n      }\n    }\nLABEL_229:\n    if ( v34 )\n    {\n      *(_QWORD *)(v52 + 80) = v42;\n      if ( *(_QWORD *)(v52 + 80) == -1LL )\n      {\n        v21 = v37++;\n        *(_QWORD *)(v52 + 80) = v21;\n        if ( *(_QWORD *)(v52 + 80) == -1LL )\n          goto LABEL_272;\n      }\n      v57 = *(_QWORD *)(v52 + 80);\n      if ( v57 >= v39 )\n      {\n        if ( v39 < 0 )\n          v22 = -1LL;\n        else\n          v22 = 2 * v39;\n        v39 = v22;\n        if ( v22 <= v57 )\n          v39 = sub_41854D(v57, 1LL);\n        if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n          v23 = -1LL;\n        else\n          v23 = 32 * v39;\n        if ( v23 == -1LL )\n          goto LABEL_277;\n        v24 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v23) : realloc(*(void **)(a3 + 8), v23);\n        v58 = v24;\n        if ( !v24 )\n          goto LABEL_277;\n        if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n          memcpy(v24, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n        *(_QWORD *)(a3 + 8) = v58;\n      }\n      while ( *(_QWORD *)a3 <= v57 )\n      {\n        v25 = *(_QWORD *)(a3 + 8);\n        v26 = (*(_QWORD *)a3)++;\n        *(_DWORD *)(v25 + 32 * v26) = 0;\n      }\n      if ( *(_DWORD *)(32 * v57 + *(_QWORD *)(a3 + 8)) )\n      {\n        if ( *(_DWORD *)(32 * v57 + *(_QWORD *)(a3 + 8)) != v34 )\n          goto LABEL_272;\n      }\n      else\n      {\n        *(_DWORD *)(*(_QWORD *)(a3 + 8) + 32 * v57) = v34;\n      }\n    }\n    *(_BYTE *)(v52 + 72) = v33;\n    *(_QWORD *)(v52 + 8) = a1;\n    if ( ++*(_QWORD *)a2 >= (unsigned __int64)v38 )\n    {\n      if ( v38 < 0 )\n        v27 = -1LL;\n      else\n        v27 = 2 * v38;\n      v38 = v27;\n      if ( v27 > 0x2E8BA2E8BA2E8BALL )\n        v28 = -1LL;\n      else\n        v28 = 88 * v27;\n      if ( v28 == -1LL )\n        goto LABEL_277;\n      v29 = *(_QWORD *)(a2 + 8) == a2 + 32 ? malloc(v28) : realloc(*(void **)(a2 + 8), v28);\n      v59 = v29;\n      if ( !v29 )\n        goto LABEL_277;\n      if ( *(_QWORD *)(a2 + 8) == a2 + 32 )\n        memcpy(v29, *(const void **)(a2 + 8), 88LL * *(_QWORD *)a2);\n      *(_QWORD *)(a2 + 8) = v59;\n    }\n  }\n  if ( v39 < 0 )\n    v7 = -1LL;\n  else\n    v7 = 2 * v39;\n  v39 = v7;\n  if ( v7 <= v53 )\n    v39 = sub_41854D(v53, 1LL);\n  if ( (unsigned __int64)v39 > 0x7FFFFFFFFFFFFFFLL )\n    v8 = -1LL;\n  else\n    v8 = 32 * v39;\n  if ( v8 != -1LL )\n  {\n    v9 = *(_QWORD *)(a3 + 8) == a3 + 16 ? malloc(v8) : realloc(*(void **)(a3 + 8), v8);\n    dest = v9;\n    if ( v9 )\n    {\n      if ( *(_QWORD *)(a3 + 8) == a3 + 16 )\n        memcpy(v9, *(const void **)(a3 + 8), 32LL * *(_QWORD *)a3);\n      *(_QWORD *)(a3 + 8) = dest;\n      goto LABEL_75;\n    }\n  }\nLABEL_277:\n  if ( *(_QWORD *)(a3 + 8) != a3 + 16 )\n    free(*(void **)(a3 + 8));\n  if ( *(_QWORD *)(a2 + 8) != a2 + 32 )\n    free(*(void **)(a2 + 8));\n  *__errno_location() = 12;\n  return 0xFFFFFFFFLL;\n}\n"], [4299552, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_61FE18 - off_61FE10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_61FE10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4299664, "fini", "void fini(void)\n{\n  ;\n}\n"], [4299680, "sub_419BA0", "int __fastcall sub_419BA0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_620398 )\n    v1 = (void *)qword_620398;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4299712, "sub_419BC0", "int __fastcall sub_419BC0(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4299728, "sub_419BD0", "int __fastcall sub_419BD0(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4299744, "sub_419BE0", "int __fastcall sub_419BE0(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4299760, "sub_419BF0", "int __fastcall sub_419BF0(char *path, __mode_t mode, __dev_t a3)\n{\n  __dev_t dev[2]; // [rsp+8h] [rbp-10h] BYREF\n\n  dev[0] = a3;\n  return __xmknod(0, path, mode, dev);\n}\n"], [4299792, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]