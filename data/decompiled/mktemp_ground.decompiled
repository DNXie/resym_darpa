[[4199608, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199648, "sub_4014E0", "__int64 sub_4014E0()\n{\n  return qword_60A010();\n}\n"], [4199664, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4199680, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199696, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199712, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199728, ".unlink", "// attributes: thunk\nint unlink(const char *name)\n{\n  return unlink(name);\n}\n"], [4199744, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199760, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199776, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199792, ".mkdir", "// attributes: thunk\nint mkdir(const char *path, __mode_t mode)\n{\n  return mkdir(path, mode);\n}\n"], [4199808, ".puts", "// attributes: thunk\nint puts(const char *s)\n{\n  return puts(s);\n}\n"], [4199824, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4199840, ".getpid", "// attributes: thunk\n__pid_t getpid(void)\n{\n  return getpid();\n}\n"], [4199856, ".fread_unlocked", "// attributes: thunk\nsize_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread_unlocked(ptr, size, n, stream);\n}\n"], [4199872, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199888, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199904, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199920, ".rmdir", "// attributes: thunk\nint rmdir(const char *path)\n{\n  return rmdir(path);\n}\n"], [4199936, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199952, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199968, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4199984, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200000, ".getuid", "// attributes: thunk\n__uid_t getuid(void)\n{\n  return getuid();\n}\n"], [4200016, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200032, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200048, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200064, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4200080, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4200096, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4200112, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4200128, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4200144, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4200160, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4200176, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4200192, ".freopen", "// attributes: thunk\nFILE *freopen(const char *filename, const char *modes, FILE *stream)\n{\n  return freopen(filename, modes, stream);\n}\n"], [4200208, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4200224, ".strspn", "// attributes: thunk\nsize_t strspn(const char *s, const char *accept)\n{\n  return strspn(s, accept);\n}\n"], [4200240, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4200256, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200272, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200288, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200304, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200320, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200336, ".fputc_unlocked", "// attributes: thunk\nint fputc_unlocked(int c, FILE *stream)\n{\n  return fputc_unlocked(c, stream);\n}\n"], [4200352, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200368, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200384, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200400, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200416, ".getgid", "// attributes: thunk\n__gid_t getgid(void)\n{\n  return getgid();\n}\n"], [4200432, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200448, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200464, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200480, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200496, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4200512, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200528, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4200544, ".mempcpy", "// attributes: thunk\nvoid *mempcpy(void *dest, const void *src, size_t n)\n{\n  return mempcpy(dest, src, n);\n}\n"], [4200560, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200576, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4200592, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200608, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200624, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200640, ".getppid", "// attributes: thunk\n__pid_t getppid(void)\n{\n  return getppid();\n}\n"], [4200656, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200672, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200688, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200704, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200720, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200736, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200784, "sub_401950", "signed __int64 sub_401950()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60A28F - &unk_60A288;\n  if ( (unsigned __int64)(&unk_60A28F - &unk_60A288) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200832, "sub_401980", "__int64 sub_401980()\n{\n  return 0LL;\n}\n"], [4200896, "sub_4019C0", "signed __int64 sub_4019C0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60A2F8 )\n  {\n    result = sub_401950();\n    byte_60A2F8 = 1;\n  }\n  return result;\n}\n"], [4200928, "sub_4019E0", "__int64 sub_4019E0()\n{\n  return sub_401980();\n}\n"], [4200973, "sub_401A0D", "int sub_401A0D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4026AC(qword_60A310);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4026AC(qword_60A310);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4026AC(qword_60A310);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201239, "sub_401B17", "void __fastcall __noreturn sub_401B17(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n\n  v1 = qword_60A310;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [TEMPLATE]\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Create a temporary file or directory, safely, and print its name.\\n\"\n           \"TEMPLATE must contain at least 3 consecutive `X's in last component.\\n\"\n           \"If TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Files are created u+rw, and directories u+rwx, minus umask restrictions.\\n\");\n    fputs_unlocked(v7, v6);\n    fputc_unlocked(10, stdout);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -d, --directory     create a directory, not a file\\n\"\n           \"  -u, --dry-run       do not create anything; merely print a name (unsafe)\\n\"\n           \"  -q, --quiet         suppress diagnostics about file/dir-creation failure\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"      --suffix=SUFF   append SUFF to TEMPLATE.  SUFF must not contain slash.\\n\"\n            \"                        This option is implied if TEMPLATE does not end in X.\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"      --tmpdir[=DIR]  interpret TEMPLATE relative to DIR.  If DIR is not\\n\"\n            \"                        specified, use $TMPDIR if set, else /tmp.  With\\n\"\n            \"                        this option, TEMPLATE must not be an absolute name.\\n\"\n            \"                        Unlike with -t, TEMPLATE may contain slashes, but\\n\"\n            \"                        mktemp creates only the final component\\n\");\n    fputs_unlocked(v13, v12);\n    fputc_unlocked(10, stdout);\n    v14 = stdout;\n    v15 = gettext(\n            \"  -p DIR              use DIR as a prefix; implies -t [deprecated]\\n\"\n            \"  -t                  interpret TEMPLATE as a single file name component,\\n\"\n            \"                        relative to a directory: $TMPDIR, if set; else the\\n\"\n            \"                        directory specified via -p; else /tmp [deprecated]\\n\");\n    fputs_unlocked(v15, v14);\n    fputc_unlocked(10, stdout);\n    v16 = stdout;\n    v17 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v19, v18);\n    sub_401A0D();\n  }\n  exit(a1);\n}\n"], [4201640, "sub_401CA8", "__int64 __fastcall sub_401CA8(__int64 a1, __int64 a2)\n{\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( a2 && *(_BYTE *)(a2 - 1 + a1) == 88 )\n  {\n    ++v4;\n    --a2;\n  }\n  return v4;\n}\n"], [4201707, "sub_401CEB", "__int64 __fastcall sub_401CEB(__int64 a1, unsigned int a2, __int64 a3, char a4)\n{\n  unsigned int v4; // eax\n\n  if ( a4 )\n    v4 = 2;\n  else\n    v4 = 0;\n  return sub_404384(a1, a2, 0LL, v4, a3);\n}\n"], [4201781, "sub_401D35", "__int64 __fastcall sub_401D35(__int64 a1, unsigned int a2, __int64 a3, char a4)\n{\n  unsigned int v4; // eax\n\n  if ( a4 )\n    v4 = 2;\n  else\n    v4 = 1;\n  return sub_404384(a1, a2, 0LL, v4, a3);\n}\n"], [4201855, "sub_401D7F", "__int64 sub_401D7F()\n{\n  __int64 result; // rax\n\n  if ( byte_60A2F9 != 1 )\n    return sub_4025C1();\n  result = sub_40250C(stderr);\n  if ( (_DWORD)result )\n    _exit(1);\n  return result;\n}\n"], [4201911, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rbx\n  int *v4; // rax\n  char *v5; // rax\n  __int64 v6; // rbx\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // rbx\n  char *v11; // rax\n  const char *v12; // rax\n  __int64 v13; // rbx\n  char *v14; // rax\n  const char *v15; // rax\n  __int64 v16; // rbx\n  char *v17; // rax\n  __int64 v18; // r12\n  char *v19; // rbx\n  int *v20; // rax\n  __int64 v21; // r12\n  char *v22; // rbx\n  int *v23; // rax\n  char *v24; // rax\n  char v25; // [rsp+23h] [rbp-7Dh]\n  char v26; // [rsp+24h] [rbp-7Ch]\n  char v27; // [rsp+25h] [rbp-7Bh]\n  char v28; // [rsp+26h] [rbp-7Ah]\n  char v29; // [rsp+27h] [rbp-79h]\n  int status; // [rsp+28h] [rbp-78h]\n  int v31; // [rsp+2Ch] [rbp-74h]\n  int fd; // [rsp+38h] [rbp-68h]\n  int errnum; // [rsp+3Ch] [rbp-64h]\n  const char *v34; // [rsp+40h] [rbp-60h]\n  const char *v35; // [rsp+48h] [rbp-58h]\n  char *s; // [rsp+50h] [rbp-50h]\n  char *sa; // [rsp+50h] [rbp-50h]\n  char *v38; // [rsp+58h] [rbp-48h]\n  const char *v39; // [rsp+58h] [rbp-48h]\n  char *v40; // [rsp+58h] [rbp-48h]\n  size_t v41; // [rsp+60h] [rbp-40h]\n  size_t n; // [rsp+68h] [rbp-38h]\n  char *desta; // [rsp+70h] [rbp-30h]\n  char *destb; // [rsp+70h] [rbp-30h]\n  const char *dest; // [rsp+70h] [rbp-30h]\n  unsigned __int64 v46; // [rsp+78h] [rbp-28h]\n  char *v47; // [rsp+80h] [rbp-20h]\n  char *v48; // [rsp+88h] [rbp-18h]\n\n  v35 = 0LL;\n  v25 = 0;\n  v38 = 0LL;\n  v26 = 0;\n  v27 = 0;\n  v28 = 0;\n  v29 = 0;\n  status = 0;\n  sub_402AB7(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_406F80(sub_401D7F);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v31 = getopt_long(a1, a2, \"dp:qtuV\", &longopts, 0LL);\n        if ( v31 == -1 )\n        {\n          if ( v25 && !sub_402964(\"/dev/null\", \"wb\", stderr) )\n          {\n            v3 = gettext(\"failed to redirect stderr to /dev/null\");\n            v4 = __errno_location();\n            error(1, *v4, v3);\n          }\n          if ( (unsigned int)(a1 - optind) > 1 )\n          {\n            v5 = gettext(\"too many templates\");\n            error(0, 0, v5);\n            sub_401B17(1);\n          }\n          if ( a1 == optind )\n          {\n            v26 = 1;\n            s = off_60A240[0];\n          }\n          else\n          {\n            s = a2[optind];\n          }\n          if ( v38 )\n          {\n            n = strlen(s);\n            if ( !n || s[n - 1] != 88 )\n            {\n              v6 = sub_402BC2(s);\n              v7 = gettext(\"with --suffix, template %s must end in X\");\n              error(1, 0, v7, v6);\n            }\n            v41 = strlen(v38);\n            desta = (char *)sub_405040(n + v41 + 1);\n            memcpy(desta, s, n);\n            memcpy(&desta[n], v38, v41 + 1);\n            sa = desta;\n            v39 = &desta[n];\n          }\n          else\n          {\n            sa = (char *)sub_4051AF(s);\n            v40 = strrchr(sa, 88);\n            if ( v40 )\n              v39 = v40 + 1;\n            else\n              v39 = strchr(sa, 0);\n            v41 = strlen(v39);\n          }\n          if ( v41 && (const char *)sub_4026AC(v39) != v39 )\n          {\n            v8 = sub_402BC2(v39);\n            v9 = gettext(\"invalid suffix %s, contains directory separator\");\n            error(1, 0, v9, v8);\n          }\n          v46 = sub_401CA8((__int64)sa, v39 - sa);\n          if ( v46 <= 2 )\n          {\n            v10 = sub_402BC2(sa);\n            v11 = gettext(\"too few X's in template %s\");\n            error(1, 0, v11, v10);\n          }\n          if ( v26 )\n          {\n            if ( v27 )\n            {\n              v47 = getenv(\"TMPDIR\");\n              if ( v47 && *v47 )\n              {\n                v12 = v47;\n              }\n              else if ( v35 )\n              {\n                v12 = v35;\n              }\n              else\n              {\n                v12 = \"/tmp\";\n              }\n              v34 = v12;\n              if ( (char *)sub_4026AC(sa) != sa )\n              {\n                v13 = sub_402BC2(sa);\n                v14 = gettext(\"invalid template, %s, contains directory separator\");\n                error(1, 0, v14, v13);\n              }\n            }\n            else\n            {\n              if ( v35 && *v35 )\n              {\n                v34 = v35;\n              }\n              else\n              {\n                v48 = getenv(\"TMPDIR\");\n                if ( v48 && *v48 )\n                  v15 = v48;\n                else\n                  v15 = \"/tmp\";\n                v34 = v15;\n              }\n              if ( *sa == 47 )\n              {\n                v16 = sub_402BC2(sa);\n                v17 = gettext(\"invalid template, %s; with --tmpdir, it may not be absolute\");\n                error(1, 0, v17, v16);\n              }\n            }\n            destb = (char *)sub_402763(v34, sa, 0LL);\n            free(sa);\n            sa = destb;\n          }\n          dest = (const char *)sub_4051AF(sa);\n          if ( v28 )\n          {\n            if ( (unsigned int)sub_401D35((__int64)dest, v41, v46, v29) )\n            {\n              v18 = sub_402BC2(sa);\n              v19 = gettext(\"failed to create directory via template %s\");\n              v20 = __errno_location();\n              error(0, *v20, v19, v18);\n              status = 1;\n            }\n          }\n          else\n          {\n            fd = sub_401CEB((__int64)dest, v41, v46, v29);\n            if ( fd < 0 || v29 != 1 && close(fd) )\n            {\n              v21 = sub_402BC2(sa);\n              v22 = gettext(\"failed to create file via template %s\");\n              v23 = __errno_location();\n              error(0, *v23, v22, v21);\n              status = 1;\n            }\n          }\n          if ( !status )\n          {\n            puts(dest);\n            if ( v29 != 1 )\n            {\n              byte_60A2F9 = 1;\n              if ( (unsigned int)sub_40250C(stdout) )\n              {\n                errnum = *__errno_location();\n                sub_4053FC(dest);\n                v24 = gettext(\"write error\");\n                error(1, errnum, v24);\n              }\n            }\n          }\n          exit(status);\n        }\n        if ( v31 != 112 )\n          break;\n        v35 = (const char *)optarg;\n        v26 = 1;\n      }\n      if ( v31 <= 112 )\n        break;\n      if ( v31 == 117 )\n      {\n        v29 = 1;\n      }\n      else if ( v31 > 117 )\n      {\n        if ( v31 == 128 )\n        {\n          v38 = (char *)optarg;\n        }\n        else\n        {\n          if ( v31 != 129 )\n            goto LABEL_28;\n          v26 = 1;\n          v35 = (const char *)optarg;\n        }\n      }\n      else if ( v31 == 113 )\n      {\n        v25 = 1;\n      }\n      else\n      {\n        if ( v31 != 116 )\n          goto LABEL_28;\n        v26 = 1;\n        v27 = 1;\n      }\n    }\n    if ( v31 == -130 )\n      sub_401B17(0);\n    if ( v31 <= -130 )\n      break;\n    if ( v31 == 86 )\n      goto LABEL_27;\n    if ( v31 != 100 )\n      goto LABEL_28;\n    v28 = 1;\n  }\n  if ( v31 == -131 )\n  {\nLABEL_27:\n    sub_404DF2(\n      (_DWORD)stdout,\n      (unsigned int)\"mktemp\",\n      (unsigned int)\"GNU coreutils\",\n      (_DWORD)off_60A248,\n      (unsigned int)\"Jim Meyering\",\n      (unsigned int)\"Eric Blake\",\n      0);\n    exit(0);\n  }\nLABEL_28:\n  sub_401B17(1);\n}\n"], [4203788, "sub_40250C", "__int64 __fastcall sub_40250C(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_405211(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4203927, "sub_402597", "__int64 __fastcall sub_402597(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_60A300 = a1;\n  return result;\n}\n"], [4203948, "sub_4025AC", "__int64 __fastcall sub_4025AC(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60A308 = a1;\n  return result;\n}\n"], [4203969, "sub_4025C1", "__int64 sub_4025C1()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40250C(stdout) && (byte_60A308 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60A300 )\n    {\n      v0 = (const char *)sub_4041DB(qword_60A300);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40250C(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4204204, "sub_4026AC", "_BYTE *__fastcall sub_4026AC(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4204309, "sub_402715", "size_t __fastcall sub_402715(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4204387, "sub_402763", "__int64 __fastcall sub_402763(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // [rsp+28h] [rbp-8h]\n\n  v4 = sub_4027C4(a1, a2, a3);\n  if ( !v4 )\n    sub_4051DC();\n  return v4;\n}\n"], [4204452, "sub_4027A4", "_BYTE *__fastcall sub_4027A4(_BYTE *a1)\n{\n  while ( *a1 == 47 )\n    ++a1;\n  return a1;\n}\n"], [4204484, "sub_4027C4", "void *__fastcall sub_4027C4(_BYTE *a1, _BYTE *a2, _QWORD *a3)\n{\n  _BOOL4 v3; // eax\n  const char *v6; // [rsp+20h] [rbp-40h]\n  size_t v7; // [rsp+28h] [rbp-38h]\n  size_t n; // [rsp+30h] [rbp-30h]\n  _BOOL8 v9; // [rsp+38h] [rbp-28h]\n  char *s; // [rsp+40h] [rbp-20h]\n  size_t v11; // [rsp+48h] [rbp-18h]\n  void *dest; // [rsp+50h] [rbp-10h]\n  _BYTE *v13; // [rsp+58h] [rbp-8h]\n  char *v14; // [rsp+58h] [rbp-8h]\n\n  v6 = sub_4026AC(a1);\n  v7 = sub_402715(v6);\n  n = v6 - a1 + v7;\n  v3 = v7 && v6[v7 - 1] != 47;\n  v9 = v3;\n  s = sub_4027A4(a2);\n  v11 = strlen(s);\n  dest = malloc(v9 + n + v11 + 1);\n  if ( !dest )\n    return 0LL;\n  v13 = mempcpy(dest, a1, n);\n  *v13 = 47;\n  v14 = &v13[v9];\n  if ( a3 )\n    *a3 = &v14[-(*a2 == 47)];\n  *(_BYTE *)mempcpy(v14, s, v11) = 0;\n  return dest;\n}\n"], [4204817, "sub_402911", "__int64 __fastcall sub_402911(int a1)\n{\n  int fd; // [rsp+1Ch] [rbp-4h]\n\n  fd = open(\"/dev/null\", 0);\n  if ( fd == a1 )\n    return 1LL;\n  if ( fd >= 0 )\n  {\n    close(fd);\n    *__errno_location() = 9;\n  }\n  return 0LL;\n}\n"], [4204900, "sub_402964", "FILE *__fastcall sub_402964(const char *a1, const char *a2, FILE *a3)\n{\n  int v3; // eax\n  FILE *streama; // [rsp+8h] [rbp-28h]\n  char v7; // [rsp+29h] [rbp-7h]\n  char v8; // [rsp+2Ah] [rbp-6h]\n  char v9; // [rsp+2Bh] [rbp-5h]\n  int v10; // [rsp+2Ch] [rbp-4h]\n\n  v7 = 0;\n  v8 = 0;\n  v9 = 0;\n  v3 = fileno(a3);\n  if ( v3 != 1 )\n  {\n    if ( v3 != 2 )\n    {\n      if ( !v3 )\n        goto LABEL_10;\n      if ( dup2(2, 2) != 2 )\n        v9 = 1;\n    }\n    if ( dup2(1, 1) != 1 )\n      v8 = 1;\n  }\n  if ( dup2(0, 0) )\n    v7 = 1;\nLABEL_10:\n  if ( v7 && (unsigned __int8)sub_402911(0) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v8 && (unsigned __int8)sub_402911(1) != 1 )\n  {\n    streama = 0LL;\n  }\n  else if ( v9 && (unsigned __int8)sub_402911(2) != 1 )\n  {\n    streama = 0LL;\n  }\n  else\n  {\n    streama = freopen(a1, a2, a3);\n  }\n  v10 = *__errno_location();\n  if ( v9 )\n    close(2);\n  if ( v8 )\n    close(1);\n  if ( v7 )\n    close(0);\n  if ( !streama )\n    *__errno_location() = v10;\n  return streama;\n}\n"], [4205239, "sub_402AB7", "char *__fastcall sub_402AB7(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60A310 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4205470, "sub_402B9E", "__int64 __fastcall sub_402B9E(unsigned int a1, __int64 a2)\n{\n  return sub_40404D(a1, 6LL, a2);\n}\n"], [4205506, "sub_402BC2", "__int64 __fastcall sub_402BC2(__int64 a1)\n{\n  return sub_402B9E(0, a1);\n}\n"], [4205537, "sub_402BE1", "__int64 __fastcall sub_402BE1(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A320;\n  v4 = sub_40517E(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4205610, "sub_402C2A", "__int64 __fastcall sub_402C2A(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A320;\n  return *(unsigned int *)v1;\n}\n"], [4205640, "sub_402C48", "__int64 *__fastcall sub_402C48(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60A320;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4205676, "sub_402C6C", "__int64 __fastcall sub_402C6C(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60A320;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4205812, "sub_402CF4", "__int64 __fastcall sub_402CF4(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60A320;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4205863, "sub_402D27", "__int64 *__fastcall sub_402D27(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60A320;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4205953, "sub_402D81", "_QWORD *__fastcall sub_402D81(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4206073, "sub_402DF9", "char *__fastcall sub_402DF9(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4206134, "sub_402E36", "unsigned __int64 __fastcall sub_402E36(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_402DF9((const char *)L\"`'\", a5);\n        a9 = sub_402DF9((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_402E36(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4209281, "sub_403A81", "unsigned __int64 __fastcall sub_403A81(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60A320;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_402E36(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4209441, "sub_403B21", "__int64 __fastcall sub_403B21(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_403B53(a1, a2, 0LL, a3);\n}\n"], [4209491, "sub_403B53", "__int64 __fastcall sub_403B53(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60A320;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_402E36(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_405040(v10);\n  sub_402E36(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4209791, "sub_403C7F", "void sub_403C7F()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60A280;\n  for ( i = 1; i < dword_60A260; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60A360 )\n  {\n    free(ptr[1]);\n    qword_60A270 = 256LL;\n    off_60A278 = &unk_60A360;\n  }\n  if ( ptr != (void **)&qword_60A270 )\n  {\n    free(ptr);\n    off_60A280 = &qword_60A270;\n  }\n  dword_60A260 = 1;\n}\n"], [4209962, "sub_403D2A", "void *__fastcall sub_403D2A(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60A280;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60A260 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60A280 == &qword_60A270;\n    if ( off_60A280 == &qword_60A270 )\n      v4 = 0LL;\n    else\n      v4 = off_60A280;\n    v12 = (__int64 *)sub_40508F(v4, 16 * v14);\n    off_60A280 = v12;\n    if ( v9 )\n    {\n      v5 = off_60A278;\n      *v12 = qword_60A270;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60A260], 0, 16 * (v14 - (unsigned int)dword_60A260));\n    dword_60A260 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_402E36((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60A360 )\n      free(ptr);\n    ptr = (void *)sub_405040(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_402E36((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4210608, "sub_403FB0", "void *__fastcall sub_403FB0(int a1, __int64 a2)\n{\n  return sub_403D2A(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60A320);\n}\n"], [4210651, "sub_403FDB", "void *__fastcall sub_403FDB(int a1, __int64 a2, size_t a3)\n{\n  return sub_403D2A(a1, a2, a3, (__int64)&qword_60A320);\n}\n"], [4210695, "sub_404007", "void *__fastcall sub_404007(__int64 a1)\n{\n  return sub_403FB0(0, a1);\n}\n"], [4210726, "sub_404026", "void *__fastcall sub_404026(__int64 a1, size_t a2)\n{\n  return sub_403FDB(0, a1, a2);\n}\n"], [4210765, "sub_40404D", "void *__fastcall sub_40404D(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_402D81(v5, a2);\n  return sub_403D2A(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4210830, "sub_40408E", "void *__fastcall sub_40408E(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_402D81(v7, a2);\n  return sub_403D2A(a1, a3, a4, (__int64)v7);\n}\n"], [4210893, "sub_4040CD", "void *__fastcall sub_4040CD(int a1, __int64 a2)\n{\n  return sub_40404D(0, a1, a2);\n}\n"], [4210929, "sub_4040F1", "void *__fastcall sub_4040F1(int a1, __int64 a2, size_t a3)\n{\n  return sub_40408E(0, a1, a2, a3);\n}\n"], [4210973, "sub_40411D", "void *__fastcall sub_40411D(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60A320;\n  v4[1] = qword_60A328;\n  v4[2] = qword_60A330;\n  v4[3] = qword_60A338;\n  v4[4] = qword_60A340;\n  v4[5] = qword_60A348;\n  v4[6] = qword_60A350;\n  sub_402C6C(v4, a3, 1);\n  return sub_403D2A(0, a1, a2, (__int64)v4);\n}\n"], [4211121, "sub_4041B1", "void *__fastcall sub_4041B1(__int64 a1, unsigned __int8 a2)\n{\n  return sub_40411D(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4211163, "sub_4041DB", "void *__fastcall sub_4041DB(__int64 a1)\n{\n  return sub_4041B1(a1, 0x3Au);\n}\n"], [4211194, "sub_4041FA", "void *__fastcall sub_4041FA(__int64 a1, size_t a2)\n{\n  return sub_40411D(a1, a2, 0x3Au);\n}\n"], [4211236, "sub_404224", "__int64 __fastcall sub_404224(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_40425A(a1, a2, a3, a4, -1LL);\n}\n"], [4211290, "sub_40425A", "void *__fastcall sub_40425A(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60A320;\n  v8[1] = qword_60A328;\n  v8[2] = qword_60A330;\n  v8[3] = qword_60A338;\n  v8[4] = qword_60A340;\n  v8[5] = qword_60A348;\n  v8[6] = qword_60A350;\n  sub_402D27(v8, a2, a3);\n  return sub_403D2A(a1, a4, a5, (__int64)v8);\n}\n"], [4211441, "sub_4042F1", "__int64 __fastcall sub_4042F1(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404224(0, a1, a2, a3);\n}\n"], [4211488, "sub_404320", "void *__fastcall sub_404320(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_40425A(0, a1, a2, a3, a4);\n}\n"], [4211546, "sub_40435A", "bool __fastcall sub_40435A(const char *a1, size_t a2)\n{\n  return strspn(a1, L\"X\") >= a2;\n}\n"], [4211588, "sub_404384", "__int64 __fastcall sub_404384(char *a1, int a2, int a3, int a4, size_t a5)\n{\n  int v6; // eax\n  unsigned int i; // [rsp+2Ch] [rbp-D4h]\n  int v11; // [rsp+30h] [rbp-D0h]\n  int v12; // [rsp+34h] [rbp-CCh]\n  int v13; // [rsp+3Ch] [rbp-C4h]\n  size_t j; // [rsp+40h] [rbp-C0h]\n  size_t v15; // [rsp+48h] [rbp-B8h]\n  __int64 v16; // [rsp+58h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+60h] [rbp-A0h] BYREF\n\n  v12 = *__errno_location();\n  v15 = strlen(a1);\n  if ( a2 + a5 > v15 || !sub_40435A(&a1[v15 - a5 - a2], a5) )\n  {\n    *__errno_location() = 22;\n    return 0xFFFFFFFFLL;\n  }\n  v16 = sub_405484(0LL, a5);\n  if ( !v16 )\n    return 0xFFFFFFFFLL;\n  for ( i = 0; ; ++i )\n  {\n    if ( i >= 0x3A2F8 )\n    {\n      sub_4056FD(v16);\n      *__errno_location() = 17;\n      return 0xFFFFFFFFLL;\n    }\n    for ( j = 0LL; j < a5; ++j )\n      a1[v15 - a5 - a2 + j] = byte_407BE0[sub_4054EA(v16, 61LL)];\n    if ( a4 == 1 )\n    {\n      v11 = mkdir(a1, 0x1C0u);\n      goto LABEL_21;\n    }\n    if ( a4 == 2 )\n      break;\n    if ( a4 )\n      __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\", \"../../src/lib/tempname.c\", 0x128u, \"gen_tempname_len\");\n    v6 = a3;\n    LOBYTE(v6) = a3 & 0x3C | 0xC2;\n    v11 = open(a1, v6, 384LL);\nLABEL_21:\n    if ( v11 >= 0 )\n    {\n      *__errno_location() = v12;\n      goto LABEL_28;\n    }\n    if ( *__errno_location() != 17 )\n    {\n      v11 = -1;\n      goto LABEL_28;\n    }\nLABEL_25:\n    ;\n  }\n  if ( (int)sub_406FA0(a1, &stat_buf) >= 0 )\n    goto LABEL_25;\n  if ( *__errno_location() == 2 )\n  {\n    *__errno_location() = v12;\n    v11 = 0;\n  }\n  else\n  {\n    v11 = -1;\n  }\nLABEL_28:\n  v13 = *__errno_location();\n  sub_4056FD(v16);\n  *__errno_location() = v13;\n  return (unsigned int)v11;\n}\n"], [4212366, "sub_40468E", "__int64 __fastcall sub_40468E(char *a1, int a2, int a3, int a4)\n{\n  return sub_404384(a1, a2, a3, a4, 6uLL);\n}\n"], [4212416, "sub_4046C0", "int __fastcall sub_4046C0(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4213931, "sub_404CAB", "int __fastcall sub_404CAB(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4046C0(a1, a2, a3, a4, a5, i);\n}\n"], [4214041, "sub_404D19", "int __fastcall sub_404D19(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4046C0(a1, a2, a3, a4, v8, i);\n}\n"], [4214258, "sub_404DF2", "int sub_404DF2(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_404D19(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4214440, "sub_404EA8", "int sub_404EA8()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4214545, "sub_404F11", "__int64 __fastcall sub_404F11(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4051DC(a1, a2, v2);\n  return sub_40505A(a2 * a1, a2, v2);\n}\n"], [4214607, "sub_404F4F", "__int64 __fastcall sub_404F4F(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4051DC(a1, a2, v4);\n  return sub_40508F(a1, a3 * a2);\n}\n"], [4214683, "sub_404F9B", "__int64 __fastcall sub_404F9B(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4051DC(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40508F(a1, a3 * v6);\n}\n"], [4214848, "sub_405040", "__int64 __fastcall sub_405040(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40505A(a1, a2, a3);\n}\n"], [4214874, "sub_40505A", "void *__fastcall sub_40505A(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4051DC(a1, a2, v2);\n  return v4;\n}\n"], [4214927, "sub_40508F", "void *__fastcall sub_40508F(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4051DC(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4215024, "sub_4050F0", "__int64 __fastcall sub_4050F0(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_404F9B(a1, a2, 1uLL);\n}\n"], [4215066, "sub_40511A", "void *__fastcall sub_40511A(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40505A(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4215109, "sub_405145", "void *__fastcall sub_405145(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4051DC(a1, a2, v2);\n  return v4;\n}\n"], [4215166, "sub_40517E", "void *__fastcall sub_40517E(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40505A(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4215215, "sub_4051AF", "void *__fastcall sub_4051AF(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40517E(a1, v1 + 1);\n}\n"], [4215260, "sub_4051DC", "void __noreturn sub_4051DC()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4215313, "sub_405211", "int __fastcall sub_405211(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_4052F9(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4215494, "sub_4052C6", "__int64 __fastcall sub_4052C6(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_405344(a1, 0LL, 1LL);\n  return result;\n}\n"], [4215545, "sub_4052F9", "int __fastcall sub_4052F9(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_4052C6(a1);\n  return fflush(a1);\n}\n"], [4215620, "sub_405344", "int __fastcall sub_405344(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4215804, "sub_4053FC", "__int64 __fastcall sub_4053FC(const char *a1)\n{\n  unsigned int v2; // [rsp+1Ch] [rbp-4h]\n\n  v2 = rmdir(a1);\n  if ( v2 && *__errno_location() == 20 )\n    v2 = unlink(a1);\n  return v2;\n}\n"], [4215869, "sub_40543D", "_QWORD *__fastcall sub_40543D(__int64 a1, __int64 a2)\n{\n  _QWORD *result; // rax\n\n  result = sub_40505A(0x18uLL, a2);\n  *result = a1;\n  result[2] = 0LL;\n  result[1] = result[2];\n  return result;\n}\n"], [4215940, "sub_405484", "_QWORD *__fastcall sub_405484(__int64 a1, __int64 a2)\n{\n  _QWORD *result; // rax\n  __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = sub_405A57(a1, a2);\n  if ( v3 )\n    result = sub_40543D(v3, a2);\n  else\n    result = 0LL;\n  return result;\n}\n"], [4216007, "sub_4054C7", "__int64 __fastcall sub_4054C7(__int64 a1)\n{\n  return *(_QWORD *)a1;\n}\n"], [4216024, "sub_4054D8", "__int64 __fastcall sub_4054D8(__int64 a1)\n{\n  return a1 << 8;\n}\n"], [4216042, "sub_4054EA", "unsigned __int64 __fastcall sub_4054EA(__int64 *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+10h] [rbp-70h]\n  unsigned __int64 v4; // [rsp+18h] [rbp-68h]\n  __int64 v5; // [rsp+20h] [rbp-60h]\n  __int64 v6; // [rsp+20h] [rbp-60h]\n  unsigned __int64 v7; // [rsp+28h] [rbp-58h]\n  __int64 v8; // [rsp+30h] [rbp-50h]\n  unsigned __int64 v9; // [rsp+38h] [rbp-48h]\n  unsigned __int64 v10; // [rsp+48h] [rbp-38h]\n  char v11[8]; // [rsp+60h] [rbp-20h] BYREF\n  unsigned __int64 v12; // [rsp+68h] [rbp-18h]\n\n  v12 = __readfsqword(0x28u);\n  v8 = *a1;\n  v3 = a1[1];\n  v4 = a1[2];\n  v9 = a2 + 1;\n  while ( 1 )\n  {\n    if ( v4 < a2 )\n    {\n      v5 = 0LL;\n      v7 = v4;\n      do\n      {\n        v7 = sub_4054D8(v7) + 255;\n        ++v5;\n      }\n      while ( v7 < a2 );\n      sub_405D50(v8, v11, v5);\n      v6 = 0LL;\n      do\n      {\n        v3 = (unsigned __int8)v11[v6] + sub_4054D8(v3);\n        v4 = sub_4054D8(v4) + 255;\n        ++v6;\n      }\n      while ( v4 < a2 );\n    }\n    if ( v4 == a2 )\n    {\n      a1[2] = 0LL;\n      a1[1] = a1[2];\n      return v3;\n    }\n    v10 = (v4 - a2) % v9;\n    if ( v3 <= v4 - v10 )\n      break;\n    v3 %= v9;\n    v4 = v10 - 1;\n  }\n  a1[1] = v3 / v9;\n  a1[2] = (v4 - a2) / v9;\n  return v3 % v9;\n}\n"], [4216525, "sub_4056CD", "void __fastcall sub_4056CD(void *a1)\n{\n  memset(a1, 0, 0x18uLL);\n  free(a1);\n}\n"], [4216573, "sub_4056FD", "__int64 __fastcall sub_4056FD(_QWORD *a1)\n{\n  unsigned int v2; // [rsp+18h] [rbp-8h]\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v2 = sub_405DA6(*a1);\n  v3 = *__errno_location();\n  sub_4056CD(a1);\n  *__errno_location() = v3;\n  return v2;\n}\n"], [4216640, "sub_405740", "void __fastcall __noreturn sub_405740(__int64 a1)\n{\n  void *v1; // r12\n  const char *v2; // rax\n  char *v3; // rbx\n  int *v4; // rax\n\n  if ( a1 )\n  {\n    v1 = sub_4041DB(a1);\n    if ( *__errno_location() )\n      v2 = \"%s: read error\";\n    else\n      v2 = \"%s: end of file\";\n    v3 = gettext(v2);\n    v4 = __errno_location();\n    error(status, *v4, v3, v1);\n  }\n  abort();\n}\n"], [4216747, "sub_4057AB", "_QWORD *__fastcall sub_4057AB(__int64 a1, __int64 a2)\n{\n  _QWORD *result; // rax\n\n  result = sub_40505A(0x1038uLL, a2);\n  *result = a1;\n  result[1] = sub_405740;\n  result[2] = a2;\n  return result;\n}\n"], [4216818, "sub_4057F2", "unsigned __int64 __fastcall sub_4057F2(char *a1, unsigned __int64 a2, size_t a3)\n{\n  size_t v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  unsigned __int64 result; // rax\n  __int64 v9; // rax\n  int fd; // [rsp+24h] [rbp-4Ch]\n  unsigned __int64 v12; // [rsp+28h] [rbp-48h]\n  size_t n; // [rsp+38h] [rbp-38h]\n  size_t v14; // [rsp+40h] [rbp-30h]\n  size_t v15; // [rsp+48h] [rbp-28h]\n  size_t v16; // [rsp+50h] [rbp-20h]\n  size_t v17; // [rsp+58h] [rbp-18h]\n  struct timeval tv; // [rsp+60h] [rbp-10h] BYREF\n\n  v12 = 0LL;\n  fd = open(\"/dev/urandom\", 0);\n  if ( fd >= 0 )\n  {\n    v3 = a2;\n    if ( a3 <= a2 )\n      v3 = a3;\n    v12 = read(fd, a1, v3);\n    if ( (v12 & 0x8000000000000000LL) != 0LL )\n      v12 = 0LL;\n    close(fd);\n  }\n  if ( v12 < a2 )\n  {\n    v4 = a2 - v12;\n    if ( a2 - v12 > 0x10 )\n      v4 = 16LL;\n    n = v4;\n    gettimeofday(&tv, 0LL);\n    memcpy(&a1[v12], &tv, n);\n    v12 += n;\n  }\n  if ( v12 < a2 )\n  {\n    v5 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v5 = 4LL;\n    v14 = v5;\n    LODWORD(tv.tv_sec) = getpid();\n    memcpy(&a1[v12], &tv, v14);\n    v12 += v14;\n  }\n  if ( v12 < a2 )\n  {\n    v6 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v6 = 4LL;\n    v15 = v6;\n    LODWORD(tv.tv_sec) = getppid();\n    memcpy(&a1[v12], &tv, v15);\n    v12 += v15;\n  }\n  if ( v12 < a2 )\n  {\n    v7 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v7 = 4LL;\n    v16 = v7;\n    LODWORD(tv.tv_sec) = getuid();\n    memcpy(&a1[v12], &tv, v16);\n    v12 += v16;\n  }\n  result = v12;\n  if ( v12 < a2 )\n  {\n    v9 = a2 - v12;\n    if ( a2 - v12 > 4 )\n      v9 = 4LL;\n    v17 = v9;\n    LODWORD(tv.tv_sec) = getgid();\n    memcpy(&a1[v12], &tv, v17);\n    result = v12 + v17;\n  }\n  return result;\n}\n"], [4217431, "sub_405A57", "char *__fastcall sub_405A57(__int64 a1, size_t a2)\n{\n  size_t v3; // rax\n  FILE *stream; // [rsp+10h] [rbp-10h]\n  char *v5; // [rsp+18h] [rbp-8h]\n\n  if ( !a2 )\n    return (char *)sub_4057AB(0LL, 0LL);\n  stream = 0LL;\n  if ( a1 )\n  {\n    stream = (FILE *)sub_406B2B(a1, \"rb\");\n    if ( !stream )\n      return 0LL;\n  }\n  v5 = (char *)sub_4057AB((__int64)stream, a1);\n  if ( stream )\n  {\n    v3 = 4096LL;\n    if ( a2 <= 0x1000 )\n      v3 = a2;\n    setvbuf(stream, v5 + 24, 0, v3);\n  }\n  else\n  {\n    *((_QWORD *)v5 + 3) = 0LL;\n    sub_4057F2(v5 + 32, 0x800uLL, a2);\n    sub_4065A4(v5 + 32);\n  }\n  return v5;\n}\n"], [4217670, "sub_405B46", "__int64 __fastcall sub_405B46(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  result = a1;\n  *(_QWORD *)(a1 + 8) = a2;\n  return result;\n}\n"], [4217696, "sub_405B60", "__int64 __fastcall sub_405B60(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n\n  result = a1;\n  *(_QWORD *)(a1 + 16) = a2;\n  return result;\n}\n"], [4217722, "sub_405B7A", "size_t __fastcall sub_405B7A(__int64 a1, char *a2, size_t a3)\n{\n  size_t result; // rax\n  int *v4; // rbx\n  int v5; // eax\n  int v8; // [rsp+24h] [rbp-1Ch]\n  size_t v9; // [rsp+28h] [rbp-18h]\n\n  while ( 1 )\n  {\n    v9 = fread_unlocked(a2, 1uLL, a3, *(FILE **)a1);\n    v8 = *__errno_location();\n    a2 += v9;\n    result = v9;\n    a3 -= v9;\n    if ( !a3 )\n      break;\n    v4 = __errno_location();\n    if ( ferror_unlocked(*(FILE **)a1) )\n      v5 = v8;\n    else\n      v5 = 0;\n    *v4 = v5;\n    (*(void (__fastcall **)(_QWORD))(a1 + 8))(*(_QWORD *)(a1 + 16));\n  }\n  return result;\n}\n"], [4217882, "sub_405C1A", "size_t *__fastcall sub_405C1A(size_t *a1, char *a2, size_t a3)\n{\n  size_t *result; // rax\n  size_t i; // [rsp+20h] [rbp-10h]\n  char *v7; // [rsp+28h] [rbp-8h]\n\n  for ( i = *a1; a3 > i; i = 2048LL )\n  {\n    memcpy(a2, (char *)a1 + 2048 - i + 2080, i);\n    a2 += i;\n    a3 -= i;\n    if ( ((unsigned __int8)a2 & 7) == 0 )\n    {\n      v7 = a2;\n      while ( a3 > 0x7FF )\n      {\n        sub_405E3C(a1 + 1, v7);\n        v7 += 2048;\n        a3 -= 2048LL;\n        if ( !a3 )\n        {\n          result = a1;\n          *a1 = 0LL;\n          return result;\n        }\n      }\n      a2 = v7;\n    }\n    sub_405E3C(a1 + 1, a1 + 260);\n  }\n  memcpy(a2, (char *)a1 + 2048 - i + 2080, a3);\n  result = a1;\n  *a1 = i - a3;\n  return result;\n}\n"], [4218192, "sub_405D50", "size_t __fastcall sub_405D50(_QWORD *a1, char *a2, size_t a3)\n{\n  size_t result; // rax\n\n  if ( *a1 )\n    result = sub_405B7A((__int64)a1, a2, a3);\n  else\n    result = (size_t)sub_405C1A(a1 + 3, a2, a3);\n  return result;\n}\n"], [4218278, "sub_405DA6", "int __fastcall sub_405DA6(FILE **a1)\n{\n  int result; // eax\n  FILE *v2; // [rsp+18h] [rbp-8h]\n\n  v2 = *a1;\n  memset(a1, 0, 0x1038uLL);\n  free(a1);\n  if ( v2 )\n    result = sub_405211(v2);\n  else\n    result = 0;\n  return result;\n}\n"], [4218363, "sub_405DFB", "__int64 __fastcall sub_405DFB(__int64 a1)\n{\n  return a1;\n}\n"], [4218392, "sub_405E18", "__int64 __fastcall sub_405E18(__int64 a1, __int16 a2)\n{\n  return *(_QWORD *)((a2 & 0x7F8) + a1);\n}\n"], [4218428, "sub_405E3C", "__int64 *__fastcall sub_405E3C(__int64 *a1, __int64 *a2)\n{\n  __int64 v2; // rdx\n  __int64 v3; // rax\n  __int64 v4; // rax\n  __int64 v5; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  __int64 v8; // rax\n  __int64 v9; // rax\n  __int64 v10; // rax\n  __int64 v11; // rax\n  __int64 v12; // rax\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  __int64 v16; // rax\n  __int64 *result; // rax\n  unsigned __int64 v18; // [rsp+10h] [rbp-A8h]\n  __int64 v19; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v20; // [rsp+10h] [rbp-A8h]\n  __int64 v21; // [rsp+10h] [rbp-A8h]\n  __int64 v22; // [rsp+10h] [rbp-A8h]\n  unsigned __int64 v23; // [rsp+10h] [rbp-A8h]\n  __int64 v24; // [rsp+10h] [rbp-A8h]\n  __int64 v25; // [rsp+18h] [rbp-A0h]\n  __int64 v26; // [rsp+18h] [rbp-A0h]\n  __int64 v27; // [rsp+18h] [rbp-A0h]\n  __int64 v28; // [rsp+18h] [rbp-A0h]\n  __int64 v29; // [rsp+18h] [rbp-A0h]\n  __int64 v30; // [rsp+18h] [rbp-A0h]\n  __int64 v31; // [rsp+18h] [rbp-A0h]\n  __int64 *v32; // [rsp+20h] [rbp-98h]\n  __int64 v34; // [rsp+30h] [rbp-88h]\n  __int64 v35; // [rsp+38h] [rbp-80h]\n  __int64 v36; // [rsp+40h] [rbp-78h]\n  __int64 v37; // [rsp+50h] [rbp-68h]\n  __int64 v38; // [rsp+60h] [rbp-58h]\n  __int64 v39; // [rsp+70h] [rbp-48h]\n  __int64 v40; // [rsp+78h] [rbp-40h]\n  __int64 v41; // [rsp+80h] [rbp-38h]\n  __int64 v42; // [rsp+90h] [rbp-28h]\n  __int64 v43; // [rsp+A0h] [rbp-18h]\n\n  v18 = a1[256];\n  v2 = a1[257];\n  ++a1[258];\n  v25 = v2 + a1[258];\n  v32 = a1;\n  do\n  {\n    v19 = v32[128] - (v18 ^ (v18 << 21)) - 1;\n    v34 = *v32;\n    v35 = sub_405E18((__int64)a1, *v32) + v19 + v25;\n    *v32 = v35;\n    v3 = sub_405E18((__int64)a1, (unsigned int)v35 >> 8);\n    v26 = sub_405DFB(v34 + v3);\n    *a2 = v26;\n    v20 = (v19 ^ ((unsigned __int64)sub_405DFB(v19) >> 5)) + v32[129];\n    v36 = v32[1];\n    v4 = sub_405E18((__int64)a1, v36);\n    v32[1] = v4 + v20 + v26;\n    v5 = sub_405E18((__int64)a1, (unsigned int)(v4 + v20 + v26) >> 8);\n    v27 = sub_405DFB(v36 + v5);\n    a2[1] = v27;\n    v21 = (v20 ^ (v20 << 12)) + v32[130];\n    v37 = v32[2];\n    v6 = sub_405E18((__int64)a1, v37);\n    v32[2] = v6 + v21 + v27;\n    v7 = sub_405E18((__int64)a1, (unsigned int)(v6 + v21 + v27) >> 8);\n    v28 = sub_405DFB(v37 + v7);\n    a2[2] = v28;\n    v18 = (v21 ^ ((unsigned __int64)sub_405DFB(v21) >> 33)) + v32[131];\n    v38 = v32[3];\n    v8 = sub_405E18((__int64)a1, v38);\n    v32[3] = v8 + v18 + v28;\n    v9 = sub_405E18((__int64)a1, (unsigned int)(v8 + v18 + v28) >> 8);\n    v25 = sub_405DFB(v38 + v9);\n    a2[3] = v25;\n    a2 += 4;\n    v32 += 4;\n  }\n  while ( v32 < a1 + 128 );\n  do\n  {\n    v22 = *(v32 - 128) - (v18 ^ (v18 << 21)) - 1;\n    v39 = *v32;\n    v40 = sub_405E18((__int64)a1, *v32) + v22 + v25;\n    *v32 = v40;\n    v10 = sub_405E18((__int64)a1, (unsigned int)v40 >> 8);\n    v29 = sub_405DFB(v39 + v10);\n    *a2 = v29;\n    v23 = (v22 ^ ((unsigned __int64)sub_405DFB(v22) >> 5)) + *(v32 - 127);\n    v41 = v32[1];\n    v11 = sub_405E18((__int64)a1, v41);\n    v32[1] = v11 + v23 + v29;\n    v12 = sub_405E18((__int64)a1, (unsigned int)(v11 + v23 + v29) >> 8);\n    v30 = sub_405DFB(v41 + v12);\n    a2[1] = v30;\n    v24 = (v23 ^ (v23 << 12)) + *(v32 - 126);\n    v42 = v32[2];\n    v13 = sub_405E18((__int64)a1, v42);\n    v32[2] = v13 + v24 + v30;\n    v14 = sub_405E18((__int64)a1, (unsigned int)(v13 + v24 + v30) >> 8);\n    v31 = sub_405DFB(v42 + v14);\n    a2[2] = v31;\n    v18 = (v24 ^ ((unsigned __int64)sub_405DFB(v24) >> 33)) + *(v32 - 125);\n    v43 = v32[3];\n    v15 = sub_405E18((__int64)a1, v43);\n    v32[3] = v15 + v18 + v31;\n    v16 = sub_405E18((__int64)a1, (unsigned int)(v15 + v18 + v31) >> 8);\n    v25 = sub_405DFB(v43 + v16);\n    a2[3] = v25;\n    a2 += 4;\n    v32 += 4;\n  }\n  while ( v32 < a1 + 256 );\n  a1[256] = v18;\n  result = a1;\n  a1[257] = v25;\n  return result;\n}\n"], [4220324, "sub_4065A4", "_QWORD *__fastcall sub_4065A4(_QWORD *a1)\n{\n  _QWORD *result; // rax\n  int i; // [rsp+10h] [rbp-48h]\n  int j; // [rsp+14h] [rbp-44h]\n  __int64 v4; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v5; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v6; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v7; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v8; // [rsp+18h] [rbp-40h]\n  unsigned __int64 v9; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v10; // [rsp+20h] [rbp-38h]\n  __int64 v11; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v12; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v13; // [rsp+20h] [rbp-38h]\n  __int64 v14; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v15; // [rsp+20h] [rbp-38h]\n  unsigned __int64 v16; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v17; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v18; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v19; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v20; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v21; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v22; // [rsp+28h] [rbp-30h]\n  unsigned __int64 v23; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v24; // [rsp+30h] [rbp-28h]\n  __int64 v25; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v26; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v27; // [rsp+30h] [rbp-28h]\n  __int64 v28; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v29; // [rsp+30h] [rbp-28h]\n  unsigned __int64 v30; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v31; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v32; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v33; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v34; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v35; // [rsp+38h] [rbp-20h]\n  unsigned __int64 v36; // [rsp+38h] [rbp-20h]\n  __int64 v37; // [rsp+40h] [rbp-18h]\n  __int64 v38; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v39; // [rsp+40h] [rbp-18h]\n  __int64 v40; // [rsp+40h] [rbp-18h]\n  __int64 v41; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v42; // [rsp+40h] [rbp-18h]\n  __int64 v43; // [rsp+40h] [rbp-18h]\n  unsigned __int64 v44; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v45; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v46; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v47; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v48; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v49; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v50; // [rsp+48h] [rbp-10h]\n  unsigned __int64 v51; // [rsp+50h] [rbp-8h]\n  __int64 v52; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v53; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v54; // [rsp+50h] [rbp-8h]\n  __int64 v55; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v56; // [rsp+50h] [rbp-8h]\n  unsigned __int64 v57; // [rsp+50h] [rbp-8h]\n\n  v4 = 0x647C4677A2884B7CLL;\n  v9 = 0xB9F8B322C73AC862LL;\n  v16 = 0x8C0EA5053D4712A0LL;\n  v23 = 0xB29B2E824A595524LL;\n  v30 = 0x82F053DB8355E0CELL;\n  v37 = 0x48FE4A0FA5A09315LL;\n  v44 = 0xAE985BF2CBFC89EDLL;\n  v51 = 0x98F5704F6C44C0ABLL;\n  for ( i = 0; i <= 255; i += 8 )\n  {\n    v10 = a1[i + 1] + v9;\n    v17 = a1[i + 2] + v16;\n    v24 = a1[i + 3] + v23;\n    v31 = a1[i + 4] + v30;\n    v38 = a1[i + 5] + v37;\n    v45 = a1[i + 6] + v44;\n    v52 = a1[i + 7] + v51;\n    v5 = a1[i] + v4 - v31;\n    v39 = ((unsigned __int64)sub_405DFB(v52) >> 9) ^ v38;\n    v53 = v5 + v52;\n    v11 = v10 - v39;\n    v46 = (v5 << 9) ^ v45;\n    v6 = v11 + v5;\n    v18 = v17 - v46;\n    v54 = ((unsigned __int64)sub_405DFB(v11) >> 23) ^ v53;\n    v12 = v18 + v11;\n    v25 = v24 - v54;\n    v4 = (v18 << 15) ^ v6;\n    v19 = v25 + v18;\n    v32 = v31 - v4;\n    v9 = ((unsigned __int64)sub_405DFB(v25) >> 14) ^ v12;\n    v26 = v32 + v25;\n    v40 = v39 - v9;\n    v16 = (v32 << 20) ^ v19;\n    v33 = v40 + v32;\n    v47 = v46 - v16;\n    v23 = ((unsigned __int64)sub_405DFB(v40) >> 17) ^ v26;\n    v37 = v47 + v40;\n    v51 = v54 - v23;\n    v30 = (v47 << 14) ^ v33;\n    v44 = v51 + v47;\n    a1[i] = v4;\n    a1[i + 1] = v9;\n    a1[i + 2] = v16;\n    a1[i + 3] = v23;\n    a1[i + 4] = v30;\n    a1[i + 5] = v37;\n    a1[i + 6] = v44;\n    a1[i + 7] = v51;\n  }\n  for ( j = 0; j <= 255; j += 8 )\n  {\n    v13 = a1[j + 1] + v9;\n    v20 = a1[j + 2] + v16;\n    v27 = a1[j + 3] + v23;\n    v34 = a1[j + 4] + v30;\n    v41 = a1[j + 5] + v37;\n    v48 = a1[j + 6] + v44;\n    v55 = a1[j + 7] + v51;\n    v7 = a1[j] + v4 - v34;\n    v42 = ((unsigned __int64)sub_405DFB(v55) >> 9) ^ v41;\n    v56 = v7 + v55;\n    v14 = v13 - v42;\n    v49 = (v7 << 9) ^ v48;\n    v8 = v14 + v7;\n    v21 = v20 - v49;\n    v57 = ((unsigned __int64)sub_405DFB(v14) >> 23) ^ v56;\n    v15 = v21 + v14;\n    v28 = v27 - v57;\n    v4 = (v21 << 15) ^ v8;\n    v22 = v28 + v21;\n    v35 = v34 - v4;\n    v9 = ((unsigned __int64)sub_405DFB(v28) >> 14) ^ v15;\n    v29 = v35 + v28;\n    v43 = v42 - v9;\n    v16 = (v35 << 20) ^ v22;\n    v36 = v43 + v35;\n    v50 = v49 - v16;\n    v23 = ((unsigned __int64)sub_405DFB(v43) >> 17) ^ v29;\n    v37 = v50 + v43;\n    v51 = v57 - v23;\n    v30 = (v50 << 14) ^ v36;\n    v44 = v51 + v50;\n    a1[j] = v4;\n    a1[j + 1] = v9;\n    a1[j + 2] = v16;\n    a1[j + 3] = v23;\n    a1[j + 4] = v30;\n    a1[j + 5] = v37;\n    a1[j + 6] = v44;\n    a1[j + 7] = v51;\n  }\n  a1[258] = 0LL;\n  a1[257] = a1[258];\n  result = a1;\n  a1[256] = a1[257];\n  return result;\n}\n"], [4221739, "sub_406B2B", "FILE *__fastcall sub_406B2B(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_406C11((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_405211(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !sub_405211(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4221969, "sub_406C11", "__int64 __fastcall sub_406C11(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_406C37(a1, 0, 3, a4, a5, a6);\n}\n"], [4222007, "sub_406C37", "__int64 __fastcall sub_406C37(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_60A460 < 0 )\n  {\n    v18 = sub_406C37(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_406C37(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_60A460 = -1;\n    }\n    else\n    {\n      dword_60A460 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_60A460 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4222720, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_609E18 - off_609E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_609E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4222832, "fini", "void fini(void)\n{\n  ;\n}\n"], [4222848, "sub_406F80", "int __fastcall sub_406F80(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60A238 )\n    v1 = (void *)qword_60A238;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4222880, "sub_406FA0", "int __fastcall sub_406FA0(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4222896, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]