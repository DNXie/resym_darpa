[[4199000, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199040, "sub_401280", "__int64 sub_401280()\n{\n  return qword_609010();\n}\n"], [4199056, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199072, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199088, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199104, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199120, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199136, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199152, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4199168, ".fread_unlocked", "// attributes: thunk\nsize_t fread_unlocked(void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fread_unlocked(ptr, size, n, stream);\n}\n"], [4199184, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199200, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199216, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199232, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199248, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199264, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199280, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199296, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199312, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199328, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199344, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199360, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199376, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199392, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199408, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199424, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199440, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199456, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199472, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199488, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199504, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199520, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199536, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199552, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199568, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199584, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199600, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199616, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4199632, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199648, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199664, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199680, ".fwrite_unlocked", "// attributes: thunk\nsize_t fwrite_unlocked(const void *ptr, size_t size, size_t n, FILE *stream)\n{\n  return fwrite_unlocked(ptr, size, n, stream);\n}\n"], [4199696, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199712, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4199728, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199744, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4199760, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199776, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199792, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4199808, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199824, ".getline", "// attributes: thunk\n__ssize_t getline(char **lineptr, size_t *n, FILE *stream)\n{\n  return getline(lineptr, n, stream);\n}\n"], [4199840, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199856, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199872, ".ngettext", "// attributes: thunk\nchar *ngettext(const char *msgid1, const char *msgid2, unsigned __int64 n)\n{\n  return ngettext(msgid1, msgid2, n);\n}\n"], [4199888, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199904, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199920, ".feof_unlocked", "// attributes: thunk\nint feof_unlocked(FILE *stream)\n{\n  return feof_unlocked(stream);\n}\n"], [4199936, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199952, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200000, "sub_401640", "signed __int64 sub_401640()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60922F - &unk_609228;\n  if ( (unsigned __int64)(&unk_60922F - &unk_609228) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200048, "sub_401670", "__int64 sub_401670()\n{\n  return 0LL;\n}\n"], [4200112, "sub_4016B0", "signed __int64 sub_4016B0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_609278 )\n  {\n    result = sub_401640();\n    byte_609278 = 1;\n  }\n  return result;\n}\n"], [4200144, "sub_4016D0", "__int64 sub_4016D0()\n{\n  return sub_401670();\n}\n"], [4200189, "sub_4016FD", "__int64 __fastcall sub_4016FD(__int64 a1)\n{\n  return a1;\n}\n"], [4200203, "sub_40170B", "unsigned __int64 __fastcall sub_40170B(__int64 a1, unsigned __int64 a2)\n{\n  return a2 - 1 + a1 - (a2 - 1 + a1) % a2;\n}\n"], [4200273, "sub_401751", "int sub_401751()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4040AF(qword_6092B0);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4040AF(qword_6092B0);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4040AF(qword_6092B0);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200539, "sub_40185B", "__int64 __fastcall sub_40185B(__int64 a1)\n{\n  return a1;\n}\n"], [4200553, "sub_401869", "void __fastcall __noreturn sub_401869(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  char *v6; // rax\n  FILE *v7; // rbx\n  char *v8; // rax\n  FILE *v9; // rbx\n  char *v10; // rax\n  FILE *v11; // rbx\n  char *v12; // rax\n  FILE *v13; // rbx\n  char *v14; // rax\n  FILE *v15; // rbx\n  char *v16; // rax\n  char *v17; // rax\n\n  v1 = qword_6092B0;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\n           \"Usage: %s [OPTION]... [FILE]...\\n\"\n           \"Print or check %s (%d-bit) checksums.\\n\"\n           \"With no FILE, or when FILE is -, read standard input.\\n\"\n           \"\\n\");\n    printf(v3, v1, \"MD5\", 128LL);\n    v4 = stdout;\n    v5 = gettext(\"  -b, --binary         read in binary mode\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = gettext(\"  -c, --check          read %s sums from the FILEs and check them\\n\");\n    printf(v6, \"MD5\");\n    v7 = stdout;\n    v8 = gettext(\"  -t, --text           read in text mode (default)\\n\");\n    fputs_unlocked(v8, v7);\n    v9 = stdout;\n    v10 = gettext(\n            \"\\n\"\n            \"The following three options are useful only when verifying checksums:\\n\"\n            \"      --quiet          don't print OK for each successfully verified file\\n\"\n            \"      --status         don't output anything, status code shows success\\n\"\n            \"  -w, --warn           warn about improperly formatted checksum lines\\n\"\n            \"\\n\");\n    fputs_unlocked(v10, v9);\n    v11 = stdout;\n    v12 = gettext(\"      --strict         with --check, exit non-zero for any invalid input\\n\");\n    fputs_unlocked(v12, v11);\n    v13 = stdout;\n    v14 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v14, v13);\n    v15 = stdout;\n    v16 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v16, v15);\n    v17 = gettext(\n            \"\\n\"\n            \"The sums are computed as described in %s.  When checking, the input\\n\"\n            \"should be a former output of this program.  The default mode is to print\\n\"\n            \"a line with checksum, a character indicating type (`*' for binary, ` ' for\\n\"\n            \"text), and name for each FILE.\\n\");\n    printf(v17, \"RFC 1321\");\n    sub_401751();\n  }\n  exit(a1);\n}\n"], [4200904, "sub_4019C8", "__int64 __fastcall sub_4019C8(__int64 a1, __int64 a2, _QWORD *a3, _QWORD *a4)\n{\n  __int64 v5; // rax\n  __int64 i; // [rsp+28h] [rbp-8h]\n  __int64 v7; // [rsp+28h] [rbp-8h]\n  __int64 j; // [rsp+28h] [rbp-8h]\n\n  if ( !a2 )\n    return 0LL;\n  *a4 = a1;\n  for ( i = a2 - 1; i && *(_BYTE *)(a1 + i) != 41; --i )\n    ;\n  if ( *(_BYTE *)(a1 + i) != 41 )\n    return 0LL;\n  v5 = i;\n  v7 = i + 1;\n  *(_BYTE *)(a1 + v5) = 0;\n  while ( *(_BYTE *)(a1 + v7) == 32 || *(_BYTE *)(a1 + v7) == 9 )\n    ++v7;\n  if ( *(_BYTE *)(a1 + v7) != 61 )\n    return 0LL;\n  for ( j = v7 + 1; *(_BYTE *)(a1 + j) == 32 || *(_BYTE *)(a1 + j) == 9; ++j )\n    ;\n  *a3 = j + a1;\n  return 1LL;\n}\n"], [4201187, "sub_401AE3", "__int64 __fastcall sub_401AE3(__int64 a1, unsigned __int64 a2, _QWORD *a3, _DWORD *a4, _QWORD *a5)\n{\n  __int64 result; // rax\n  __int64 v6; // rax\n  __int64 v7; // rax\n  unsigned __int64 v8; // rax\n  int v9; // eax\n  _BYTE *v10; // rax\n  _BYTE *v11; // rax\n  _BYTE *v12; // rax\n  __int64 v13; // rdx\n  char v17; // [rsp+37h] [rbp-19h]\n  __int64 i; // [rsp+38h] [rbp-18h]\n  __int64 v19; // [rsp+38h] [rbp-18h]\n  __int64 v20; // [rsp+38h] [rbp-18h]\n  unsigned __int64 v21; // [rsp+38h] [rbp-18h]\n  _BYTE *v22; // [rsp+40h] [rbp-10h]\n\n  v17 = 0;\n  for ( i = 0LL; *(_BYTE *)(a1 + i) == 32 || *(_BYTE *)(a1 + i) == 9; ++i )\n    ;\n  if ( strncmp((const char *)(a1 + i), \"MD5\", 3uLL) )\n    goto LABEL_10;\n  if ( *(_BYTE *)(i + 3 + a1) == 32 )\n    ++i;\n  if ( *(_BYTE *)(i + 3 + a1) == 40 )\n  {\n    *a4 = 0;\n    result = sub_4019C8(i + 4 + a1, a2 - (i + 3) - 1, a3, a5);\n  }\n  else\n  {\nLABEL_10:\n    if ( a2 - i >= (unsigned __int64)(*(_BYTE *)(a1 + i) == 92) + qword_609288 )\n    {\n      if ( *(_BYTE *)(a1 + i) == 92 )\n      {\n        ++i;\n        v17 = 1;\n      }\n      *a3 = i + a1;\n      v19 = qword_609290 + i;\n      if ( *(_BYTE *)(a1 + v19) == 32 || *(_BYTE *)(a1 + v19) == 9 )\n      {\n        v6 = v19;\n        v20 = v19 + 1;\n        *(_BYTE *)(a1 + v6) = 0;\n        if ( *(_BYTE *)(a1 + v20) == 32 || *(_BYTE *)(a1 + v20) == 42 )\n        {\n          v7 = v20;\n          v21 = v20 + 1;\n          *a4 = *(_BYTE *)(a1 + v7) == 42;\n          *a5 = v21 + a1;\n          if ( v17 )\n          {\n            v22 = (_BYTE *)(a1 + v21);\n            while ( v21 < a2 )\n            {\n              if ( !*(_BYTE *)(a1 + v21) )\n                return 0LL;\n              if ( *(_BYTE *)(a1 + v21) == 92 )\n              {\n                if ( a2 - 1 == v21 )\n                  return 0LL;\n                v8 = v21 + 1;\n                v21 += 2LL;\n                v9 = *(char *)(a1 + v8);\n                if ( v9 == 92 )\n                {\n                  v11 = v22++;\n                  *v11 = 92;\n                }\n                else\n                {\n                  if ( v9 != 110 )\n                    return 0LL;\n                  v10 = v22++;\n                  *v10 = 10;\n                }\n              }\n              else\n              {\n                v12 = v22++;\n                v13 = v21++;\n                *v12 = *(_BYTE *)(a1 + v13);\n              }\n            }\n            *v22 = 0;\n          }\n          result = 1LL;\n        }\n        else\n        {\n          result = 0LL;\n        }\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n    else\n    {\n      result = 0LL;\n    }\n  }\n  return result;\n}\n"], [4201972, "sub_401DF4", "bool __fastcall sub_401DF4(_BYTE *a1)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; i < (unsigned __int64)qword_609290; ++i )\n  {\n    if ( ((*__ctype_b_loc())[(unsigned __int8)*a1] & 0x1000) == 0 )\n      return 0;\n    ++a1;\n  }\n  return *a1 == 0;\n}\n"], [4202077, "sub_401E5D", "__int64 __fastcall sub_401E5D(const char *a1, __int64 a2, __int64 a3)\n{\n  int v3; // eax\n  int *v4; // rax\n  int *v6; // rax\n  bool v8; // [rsp+23h] [rbp-Dh]\n  __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v3 = strcmp(a1, \"-\");\n  v8 = v3 == 0;\n  if ( v3 )\n  {\n    v9 = sub_4041D0(a1, \"r\");\n    if ( !v9 )\n      goto LABEL_4;\n    sub_404196(v9, 2LL);\n  }\n  else\n  {\n    byte_609280 = 1;\n    v9 = stdin;\n    sub_404196(stdin, 2LL);\n  }\n  if ( !(unsigned int)sub_402F2A(v9, a3) )\n  {\n    if ( v8 || !(unsigned int)sub_40668D(v9) )\n      return 1LL;\nLABEL_4:\n    v4 = __errno_location();\n    error(0, *v4, \"%s\", a1);\n    return 0LL;\n  }\n  v6 = __errno_location();\n  error(0, *v6, \"%s\", a1);\n  if ( v9 != stdin )\n    sub_40668D(v9);\n  return 0LL;\n}\n"], [4202412, "sub_401FAC", "_BOOL8 __fastcall sub_401FAC(const char *a1)\n{\n  int v1; // eax\n  int *v2; // rax\n  _BOOL8 result; // rax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rbx\n  char *v7; // rax\n  char *v8; // rax\n  char *v9; // rax\n  char *v10; // rax\n  int *v11; // rax\n  char *v12; // rax\n  __int64 v13; // rax\n  char *v14; // rax\n  __int64 v15; // rax\n  char *v16; // rax\n  __int64 v17; // rax\n  char *v18; // rax\n  bool v19; // al\n  const char *s1; // [rsp+8h] [rbp-B8h]\n  bool v21; // [rsp+12h] [rbp-AEh]\n  int v22; // [rsp+14h] [rbp-ACh] BYREF\n  char *lineptr; // [rsp+18h] [rbp-A8h] BYREF\n  size_t n; // [rsp+20h] [rbp-A0h] BYREF\n  char *v25; // [rsp+28h] [rbp-98h] BYREF\n  _BYTE *v26; // [rsp+30h] [rbp-90h] BYREF\n  FILE *stream; // [rsp+38h] [rbp-88h]\n  __int64 v28; // [rsp+40h] [rbp-80h]\n  __int64 v29; // [rsp+48h] [rbp-78h]\n  __int64 v30; // [rsp+50h] [rbp-70h]\n  __int64 v31; // [rsp+58h] [rbp-68h]\n  __int64 v32; // [rsp+60h] [rbp-60h]\n  __int64 v33; // [rsp+68h] [rbp-58h]\n  signed __int64 v34; // [rsp+70h] [rbp-50h]\n  unsigned __int64 i; // [rsp+78h] [rbp-48h]\n  __int64 v36; // [rsp+80h] [rbp-40h]\n  unsigned __int64 v37; // [rsp+88h] [rbp-38h]\n  char v38[24]; // [rsp+90h] [rbp-30h] BYREF\n  unsigned __int64 v39; // [rsp+A8h] [rbp-18h]\n\n  s1 = a1;\n  v39 = __readfsqword(0x28u);\n  v28 = 0LL;\n  v29 = 0LL;\n  v30 = 0LL;\n  v31 = 0LL;\n  v32 = 0LL;\n  v36 = sub_40170B((__int64)v38, 4uLL);\n  v1 = strcmp(a1, \"-\");\n  v21 = v1 == 0;\n  if ( v1 )\n  {\n    stream = (FILE *)sub_4041D0(a1, \"r\");\n    if ( !stream )\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", a1);\n      return 0LL;\n    }\n  }\n  else\n  {\n    byte_609280 = 1;\n    s1 = gettext(\"standard input\");\n    stream = (FILE *)stdin;\n  }\n  v33 = 0LL;\n  lineptr = 0LL;\n  n = 0LL;\n  do\n  {\n    if ( !++v33 )\n    {\n      v4 = gettext(\"%s: too many checksum lines\");\n      error(1, 0, v4, s1);\n    }\n    v34 = getline(&lineptr, &n, stream);\n    if ( v34 <= 0 )\n      break;\n    if ( *lineptr != 35 )\n    {\n      if ( lineptr[v34 - 1] == 10 )\n        lineptr[--v34] = 0;\n      if ( (unsigned __int8)sub_401AE3((__int64)lineptr, v34, &v26, &v22, &v25) != 1\n        || v21 && !strcmp(v25, \"-\")\n        || !sub_401DF4(v26) )\n      {\n        ++v28;\n        if ( byte_609299 )\n        {\n          v5 = gettext(\"%s: %lu: improperly formatted %s checksum line\");\n          error(0, 0, v5, s1, v33, \"MD5\");\n        }\n        ++v30;\n      }\n      else\n      {\n        ++v29;\n        if ( (unsigned __int8)sub_401E5D(v25, (__int64)&v22, v36) != 1 )\n        {\n          ++v32;\n          if ( byte_609298 != 1 )\n          {\n            v6 = v25;\n            v7 = gettext(\"%s: FAILED open or read\\n\");\n            printf(v7, v6);\n          }\n        }\n        else\n        {\n          v37 = (unsigned __int64)qword_609290 >> 1;\n          for ( i = 0LL;\n                i < v37\n             && tolower((unsigned __int8)v26[2 * i]) == byte_407790[*(_BYTE *)(v36 + i) >> 4]\n             && tolower((unsigned __int8)v26[2 * i + 1]) == byte_407790[*(_BYTE *)(v36 + i) & 0xF];\n                ++i )\n          {\n            ;\n          }\n          if ( i != v37 )\n            ++v31;\n          if ( byte_609298 != 1 )\n          {\n            if ( i == v37 )\n            {\n              if ( byte_60929A != 1 )\n              {\n                v9 = gettext(\"OK\");\n                printf(\"%s: %s\\n\", v25, v9);\n              }\n            }\n            else\n            {\n              v8 = gettext(\"FAILED\");\n              printf(\"%s: %s\\n\", v25, v8);\n            }\n          }\n        }\n      }\n    }\n  }\n  while ( !feof_unlocked(stream) && !ferror_unlocked(stream) );\n  free(lineptr);\n  if ( ferror_unlocked(stream) )\n  {\n    v10 = gettext(\"%s: read error\");\n    error(0, 0, v10, s1);\n    result = 0LL;\n  }\n  else if ( !v21 && (unsigned int)sub_40668D(stream) )\n  {\n    v11 = __errno_location();\n    error(0, *v11, \"%s\", s1);\n    result = 0LL;\n  }\n  else\n  {\n    if ( v29 )\n    {\n      if ( byte_609298 != 1 )\n      {\n        if ( v28 )\n        {\n          v13 = sub_4016FD(v28);\n          v14 = ngettext(\n                  \"WARNING: %lu line is improperly formatted\",\n                  \"WARNING: %lu lines are improperly formatted\",\n                  v13);\n          error(0, 0, v14, v28);\n        }\n        if ( v32 )\n        {\n          v15 = sub_4016FD(v32);\n          v16 = ngettext(\n                  \"WARNING: %lu listed file could not be read\",\n                  \"WARNING: %lu listed files could not be read\",\n                  v15);\n          error(0, 0, v16, v32);\n        }\n        if ( v31 )\n        {\n          v17 = sub_4016FD(v31);\n          v18 = ngettext(\n                  \"WARNING: %lu computed checksum did NOT match\",\n                  \"WARNING: %lu computed checksums did NOT match\",\n                  v17);\n          error(0, 0, v18, v31);\n        }\n      }\n    }\n    else\n    {\n      v12 = gettext(\"%s: no properly formatted %s checksum lines found\");\n      error(0, 0, v12, s1, \"MD5\");\n    }\n    v19 = v29 && !v31 && !v32 && (byte_60929B != 1 || !v30);\n    result = v19;\n  }\n  return result;\n}\n"], [4204067, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  int v8; // eax\n  size_t v9; // rax\n  char *v10; // rbx\n  int *v11; // rax\n  int argc; // [rsp+1Ch] [rbp-64h]\n  char v13; // [rsp+2Ah] [rbp-56h]\n  char v14; // [rsp+2Bh] [rbp-55h]\n  int v15; // [rsp+2Ch] [rbp-54h] BYREF\n  int v16; // [rsp+30h] [rbp-50h]\n  int v17; // [rsp+34h] [rbp-4Ch]\n  unsigned __int64 i; // [rsp+38h] [rbp-48h]\n  __int64 v19; // [rsp+40h] [rbp-40h]\n  char *s; // [rsp+48h] [rbp-38h]\n  char v21[24]; // [rsp+50h] [rbp-30h] BYREF\n  unsigned __int64 v22; // [rsp+68h] [rbp-18h]\n\n  argc = a1;\n  v22 = __readfsqword(0x28u);\n  v19 = sub_40170B((__int64)v21, 4uLL);\n  v13 = 0;\n  v14 = 1;\n  v16 = -1;\n  sub_4042B6(*a2);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_406C40(sub_402C37);\n  setvbuf(stdout, 0LL, 1, 0LL);\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v17 = getopt_long(a1, a2, \"bctw\", &longopts, 0LL);\n        if ( v17 == -1 )\n        {\n          qword_609288 = 35LL;\n          qword_609290 = 32LL;\n          if ( v16 >= 0 && v13 )\n          {\n            v3 = gettext(\"the --binary and --text options are meaningless when verifying checksums\");\n            error(0, 0, v3);\n            sub_401869(1);\n          }\n          if ( byte_609298 && v13 != 1 )\n          {\n            v4 = gettext(\"the --status option is meaningful only when verifying checksums\");\n            error(0, 0, v4);\n            sub_401869(1);\n          }\n          if ( byte_609299 && v13 != 1 )\n          {\n            v5 = gettext(\"the --warn option is meaningful only when verifying checksums\");\n            error(0, 0, v5);\n            sub_401869(1);\n          }\n          if ( byte_60929A && v13 != 1 )\n          {\n            v6 = gettext(\"the --quiet option is meaningful only when verifying checksums\");\n            error(0, 0, v6);\n            sub_401869(1);\n          }\n          if ( ((unsigned __int8)byte_60929B & ((unsigned __int8)v13 ^ 1)) != 0 )\n          {\n            v7 = gettext(\"the --strict option is meaningful only when verifying checksums\");\n            error(0, 0, v7);\n            sub_401869(1);\n          }\n          if ( v16 < 0 )\n            v16 = 0;\n          if ( optind == a1 )\n          {\n            argc = a1 + 1;\n            a2[a1] = (char *)sub_40185B((__int64)\"-\");\n          }\n          while ( optind < argc )\n          {\n            s = a2[optind];\n            if ( v13 )\n            {\n              v14 &= sub_401FAC(s);\n            }\n            else\n            {\n              v15 = v16;\n              if ( (unsigned __int8)sub_401E5D(s, (__int64)&v15, v19) != 1 )\n              {\n                v14 = 0;\n              }\n              else\n              {\n                if ( strchr(s, 10) || strchr(s, 92) )\n                  putchar_unlocked(92);\n                for ( i = 0LL; (unsigned __int64)qword_609290 >> 1 > i; ++i )\n                  printf(\"%02x\", *(unsigned __int8 *)(v19 + i));\n                putchar_unlocked(32);\n                if ( v15 )\n                  putchar_unlocked(42);\n                else\n                  putchar_unlocked(32);\n                for ( i = 0LL; ; ++i )\n                {\n                  v9 = strlen(s);\n                  if ( v9 <= i )\n                    break;\n                  v8 = s[i];\n                  if ( v8 == 10 )\n                  {\n                    fwrite_unlocked(\"\\\\n\", 1uLL, 2uLL, stdout);\n                  }\n                  else if ( v8 == 92 )\n                  {\n                    fwrite_unlocked(\"\\\\\\\\\", 1uLL, 2uLL, stdout);\n                  }\n                  else\n                  {\n                    putchar_unlocked(s[i]);\n                  }\n                }\n                putchar_unlocked(10);\n              }\n            }\n            ++optind;\n          }\n          if ( byte_609280 )\n          {\n            if ( (unsigned int)sub_40668D(stdin) == -1 )\n            {\n              v10 = gettext(\"standard input\");\n              v11 = __errno_location();\n              error(1, *v11, v10);\n            }\n          }\n          exit(v14 == 0);\n        }\n        if ( v17 != 116 )\n          break;\n        v16 = 0;\n      }\n      if ( v17 <= 116 )\n        break;\n      if ( v17 == 128 )\n      {\n        byte_609298 = 1;\n        byte_609299 = 0;\n        byte_60929A = 0;\n      }\n      else if ( v17 > 128 )\n      {\n        if ( v17 == 129 )\n        {\n          byte_609298 = 0;\n          byte_609299 = 0;\n          byte_60929A = 1;\n        }\n        else\n        {\n          if ( v17 != 130 )\n            goto LABEL_27;\n          byte_60929B = 1;\n        }\n      }\n      else\n      {\n        if ( v17 != 119 )\n          goto LABEL_27;\n        byte_609298 = 0;\n        byte_609299 = 1;\n        byte_60929A = 0;\n      }\n    }\n    if ( v17 == -130 )\n      sub_401869(0);\n    if ( v17 <= -130 )\n    {\n      if ( v17 == -131 )\n      {\n        sub_40626E(\n          (_DWORD)stdout,\n          (unsigned int)\"md5sum\",\n          (unsigned int)\"GNU coreutils\",\n          (_DWORD)off_6091F0,\n          (unsigned int)\"Ulrich Drepper\",\n          (unsigned int)\"Scott Miller\",\n          \"David Madore\",\n          0LL);\n        exit(0);\n      }\nLABEL_27:\n      sub_401869(1);\n    }\n    if ( v17 == 98 )\n    {\n      v16 = 1;\n    }\n    else\n    {\n      if ( v17 != 99 )\n        goto LABEL_27;\n      v13 = 1;\n    }\n  }\n}\n"], [4205602, "sub_402C22", "__int64 __fastcall sub_402C22(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_6092A8 = a1;\n  return result;\n}\n"], [4205623, "sub_402C37", "__int64 sub_402C37()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_406B32(stdout) && (byte_6092A8 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_6092A0 )\n    {\n      v0 = (const char *)sub_405997(qword_6092A0);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_406B32(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4205858, "sub_402D22", "_DWORD *__fastcall sub_402D22(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  *a1 = 1732584193;\n  a1[1] = -271733879;\n  a1[2] = -1732584194;\n  a1[3] = 271733878;\n  a1[5] = 0;\n  a1[4] = a1[5];\n  result = a1;\n  a1[6] = 0;\n  return result;\n}\n"], [4205947, "sub_402D7B", "_DWORD *__fastcall sub_402D7B(_DWORD *a1, int a2)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = a2;\n  return result;\n}\n"], [4205969, "sub_402D91", "_DWORD *__fastcall sub_402D91(int *a1, _DWORD *a2)\n{\n  sub_402D7B(a2, *a1);\n  sub_402D7B(a2 + 1, a1[1]);\n  sub_402D7B(a2 + 2, a1[2]);\n  sub_402D7B(a2 + 3, a1[3]);\n  return a2;\n}\n"], [4206094, "sub_402E0E", "_DWORD *__fastcall sub_402E0E(int *a1, _DWORD *a2)\n{\n  __int64 v2; // rax\n  unsigned int v4; // [rsp+14h] [rbp-Ch]\n  __int64 v5; // [rsp+18h] [rbp-8h]\n\n  v4 = a1[6];\n  if ( v4 > 0x37 )\n    v2 = 32LL;\n  else\n    v2 = 16LL;\n  v5 = v2;\n  a1[4] += v4;\n  if ( a1[4] < v4 )\n    ++a1[5];\n  a1[v2 + 5] = 8 * a1[4];\n  a1[v2 + 6] = *((__int64 *)a1 + 2) >> 29;\n  memcpy((char *)a1 + v4 + 28, &unk_4077C0, 4 * v2 - v4 - 8);\n  sub_403330(a1 + 7, 4 * v5, a1);\n  return sub_402D91(a1, a2);\n}\n"], [4206378, "sub_402F2A", "__int64 __fastcall sub_402F2A(FILE *a1, _DWORD *a2)\n{\n  __int64 v3; // [rsp+18h] [rbp-B8h]\n  char *ptr; // [rsp+20h] [rbp-B0h]\n  size_t v5; // [rsp+28h] [rbp-A8h]\n  int v6[40]; // [rsp+30h] [rbp-A0h] BYREF\n\n  ptr = (char *)malloc(0x8048uLL);\n  if ( !ptr )\n    return 1LL;\n  sub_402D22(v6);\nLABEL_4:\n  v3 = 0LL;\n  while ( 1 )\n  {\n    v5 = fread_unlocked(&ptr[v3], 1uLL, 0x8000 - v3, a1);\n    v3 += v5;\n    if ( v3 == 0x8000 )\n    {\n      sub_403330(ptr, 0x8000LL, v6);\n      goto LABEL_4;\n    }\n    if ( !v5 )\n      break;\n    if ( feof_unlocked(a1) )\n      goto LABEL_12;\n  }\n  if ( ferror_unlocked(a1) )\n  {\n    free(ptr);\n    return 1LL;\n  }\nLABEL_12:\n  if ( v3 )\n    sub_403109(ptr, v3, v6);\n  sub_402E0E(v6, a2);\n  free(ptr);\n  return 0LL;\n}\n"], [4206751, "sub_40309F", "_DWORD *__fastcall sub_40309F(__int64 a1, __int64 a2, _DWORD *a3)\n{\n  int v5[40]; // [rsp+20h] [rbp-A0h] BYREF\n\n  sub_402D22(v5);\n  sub_403109(a1, a2, v5);\n  return sub_402E0E(v5, a3);\n}\n"], [4206857, "sub_403109", "unsigned __int64 __fastcall sub_403109(char *a1, unsigned __int64 a2, unsigned int *a3)\n{\n  unsigned __int64 result; // rax\n  size_t v4; // rax\n  void *v5; // rax\n  size_t v7; // [rsp+10h] [rbp-30h]\n  char *src; // [rsp+18h] [rbp-28h]\n  size_t v9; // [rsp+28h] [rbp-18h]\n  size_t v10; // [rsp+28h] [rbp-18h]\n  __int64 v11; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  src = a1;\n  v7 = a2;\n  result = a3[6];\n  if ( (_DWORD)result )\n  {\n    v11 = a3[6];\n    v4 = a2;\n    if ( 128 - v11 <= a2 )\n      v4 = 128 - v11;\n    n = v4;\n    memcpy((char *)a3 + v11 + 28, a1, v4);\n    a3[6] += n;\n    if ( a3[6] > 0x40 )\n    {\n      sub_403330(a3 + 7, a3[6] & 0xFFFFFFC0, a3);\n      a3[6] &= 0x3Fu;\n      memcpy(a3 + 7, (char *)a3 + ((v11 + n) & 0xFFFFFFFFFFFFFFC0LL) + 28, a3[6]);\n    }\n    src = &a1[n];\n    result = n;\n    v7 = a2 - n;\n  }\n  if ( v7 > 0x3F )\n  {\n    result = (unsigned __int8)src & 3;\n    if ( ((unsigned __int8)src & 3) != 0 )\n    {\n      while ( v7 > 0x40 )\n      {\n        v5 = memcpy(a3 + 7, src, 0x40uLL);\n        result = sub_403330(v5, 64LL, a3);\n        src += 64;\n        v7 -= 64LL;\n      }\n    }\n    else\n    {\n      sub_403330(src, v7 & 0xFFFFFFFFFFFFFFC0LL, a3);\n      result = v7 & 0xFFFFFFFFFFFFFFC0LL;\n      src += v7 & 0xFFFFFFFFFFFFFFC0LL;\n      v7 &= 0x3Fu;\n    }\n  }\n  if ( v7 )\n  {\n    v9 = a3[6];\n    memcpy((char *)a3 + v9 + 28, src, v7);\n    v10 = v7 + v9;\n    if ( v10 > 0x3F )\n    {\n      sub_403330(a3 + 7, 64LL, a3);\n      v10 -= 64LL;\n      memcpy(a3 + 7, a3 + 23, v10);\n    }\n    result = (unsigned __int64)a3;\n    a3[6] = v10;\n  }\n  return result;\n}\n"], [4207408, "sub_403330", "_DWORD *__fastcall sub_403330(int *a1, unsigned __int64 a2, _DWORD *a3)\n{\n  int v3; // et0\n  int v4; // et0\n  int v5; // et0\n  int v6; // et0\n  int v7; // et0\n  int v8; // et0\n  int v9; // et0\n  int v10; // et0\n  int v11; // et0\n  int v12; // et0\n  int v13; // et0\n  int v14; // et0\n  int v15; // et0\n  int v16; // et0\n  int v17; // et0\n  int v18; // et0\n  int v19; // et0\n  int v20; // et0\n  int v21; // et0\n  int v22; // et0\n  int v23; // et0\n  int v24; // et0\n  int v25; // et0\n  int v26; // et0\n  int v27; // et0\n  int v28; // et0\n  int v29; // et0\n  int v30; // et0\n  int v31; // et0\n  int v32; // et0\n  int v33; // et0\n  int v34; // et0\n  int v35; // et0\n  int v36; // et0\n  int v37; // et0\n  int v38; // et0\n  int v39; // et0\n  int v40; // et0\n  int v41; // et0\n  int v42; // et0\n  int v43; // et0\n  int v44; // et0\n  int v45; // et0\n  int v46; // et0\n  int v47; // et0\n  int v48; // et0\n  int v49; // et0\n  int v50; // et0\n  int v51; // et0\n  int v52; // et0\n  int v53; // et0\n  int v54; // et0\n  int v55; // et0\n  int v56; // et0\n  int v57; // et0\n  int v58; // et0\n  int v59; // et0\n  int v60; // et0\n  int v61; // et0\n  int v62; // et0\n  int v63; // et0\n  int v64; // et0\n  int v65; // et0\n  int v66; // et0\n  _DWORD *result; // rax\n  int v68; // [rsp+18h] [rbp-80h]\n  int v69; // [rsp+18h] [rbp-80h]\n  int v70; // [rsp+18h] [rbp-80h]\n  int v71; // [rsp+18h] [rbp-80h]\n  int v72; // [rsp+18h] [rbp-80h]\n  int v73; // [rsp+18h] [rbp-80h]\n  int v74; // [rsp+18h] [rbp-80h]\n  int v75; // [rsp+18h] [rbp-80h]\n  int v76; // [rsp+18h] [rbp-80h]\n  int v77; // [rsp+18h] [rbp-80h]\n  int v78; // [rsp+18h] [rbp-80h]\n  int v79; // [rsp+18h] [rbp-80h]\n  int v80; // [rsp+18h] [rbp-80h]\n  int v81; // [rsp+18h] [rbp-80h]\n  int v82; // [rsp+18h] [rbp-80h]\n  int v83; // [rsp+18h] [rbp-80h]\n  int v84; // [rsp+18h] [rbp-80h]\n  int v85; // [rsp+18h] [rbp-80h]\n  int v86; // [rsp+1Ch] [rbp-7Ch]\n  int v87; // [rsp+1Ch] [rbp-7Ch]\n  int v88; // [rsp+1Ch] [rbp-7Ch]\n  int v89; // [rsp+1Ch] [rbp-7Ch]\n  int v90; // [rsp+1Ch] [rbp-7Ch]\n  int v91; // [rsp+1Ch] [rbp-7Ch]\n  int v92; // [rsp+1Ch] [rbp-7Ch]\n  int v93; // [rsp+1Ch] [rbp-7Ch]\n  int v94; // [rsp+1Ch] [rbp-7Ch]\n  int v95; // [rsp+1Ch] [rbp-7Ch]\n  int v96; // [rsp+1Ch] [rbp-7Ch]\n  int v97; // [rsp+1Ch] [rbp-7Ch]\n  int v98; // [rsp+1Ch] [rbp-7Ch]\n  int v99; // [rsp+1Ch] [rbp-7Ch]\n  int v100; // [rsp+1Ch] [rbp-7Ch]\n  int v101; // [rsp+1Ch] [rbp-7Ch]\n  int v102; // [rsp+20h] [rbp-78h]\n  int v103; // [rsp+20h] [rbp-78h]\n  int v104; // [rsp+20h] [rbp-78h]\n  int v105; // [rsp+20h] [rbp-78h]\n  int v106; // [rsp+20h] [rbp-78h]\n  int v107; // [rsp+20h] [rbp-78h]\n  int v108; // [rsp+20h] [rbp-78h]\n  int v109; // [rsp+20h] [rbp-78h]\n  int v110; // [rsp+20h] [rbp-78h]\n  int v111; // [rsp+20h] [rbp-78h]\n  int v112; // [rsp+20h] [rbp-78h]\n  int v113; // [rsp+20h] [rbp-78h]\n  int v114; // [rsp+20h] [rbp-78h]\n  int v115; // [rsp+20h] [rbp-78h]\n  int v116; // [rsp+20h] [rbp-78h]\n  int v117; // [rsp+20h] [rbp-78h]\n  int v118; // [rsp+20h] [rbp-78h]\n  int v119; // [rsp+24h] [rbp-74h]\n  int v120; // [rsp+24h] [rbp-74h]\n  int v121; // [rsp+24h] [rbp-74h]\n  int v122; // [rsp+24h] [rbp-74h]\n  int v123; // [rsp+24h] [rbp-74h]\n  int v124; // [rsp+24h] [rbp-74h]\n  int v125; // [rsp+24h] [rbp-74h]\n  int v126; // [rsp+24h] [rbp-74h]\n  int v127; // [rsp+24h] [rbp-74h]\n  int v128; // [rsp+24h] [rbp-74h]\n  int v129; // [rsp+24h] [rbp-74h]\n  int v130; // [rsp+24h] [rbp-74h]\n  int v131; // [rsp+24h] [rbp-74h]\n  int v132; // [rsp+24h] [rbp-74h]\n  int v133; // [rsp+24h] [rbp-74h]\n  int v134; // [rsp+24h] [rbp-74h]\n  int v135; // [rsp+24h] [rbp-74h]\n  int v136; // [rsp+28h] [rbp-70h]\n  int v137; // [rsp+2Ch] [rbp-6Ch]\n  int v138; // [rsp+30h] [rbp-68h]\n  int v139; // [rsp+34h] [rbp-64h]\n  int *v140; // [rsp+38h] [rbp-60h]\n  int *v141; // [rsp+38h] [rbp-60h]\n  int v142; // [rsp+58h] [rbp-40h]\n  int v143; // [rsp+5Ch] [rbp-3Ch]\n  int v144; // [rsp+60h] [rbp-38h]\n  int v145; // [rsp+64h] [rbp-34h]\n  int v146; // [rsp+68h] [rbp-30h]\n  int v147; // [rsp+6Ch] [rbp-2Ch]\n  int v148; // [rsp+70h] [rbp-28h]\n  int v149; // [rsp+74h] [rbp-24h]\n  int v150; // [rsp+78h] [rbp-20h]\n  int v151; // [rsp+7Ch] [rbp-1Ch]\n  int v152; // [rsp+80h] [rbp-18h]\n  int v153; // [rsp+84h] [rbp-14h]\n  int v154; // [rsp+88h] [rbp-10h]\n  int v155; // [rsp+8Ch] [rbp-Ch]\n  int v156; // [rsp+90h] [rbp-8h]\n  int v157; // [rsp+94h] [rbp-4h]\n\n  v140 = a1;\n  v68 = *a3;\n  v86 = a3[1];\n  v102 = a3[2];\n  v119 = a3[3];\n  a3[4] += a2;\n  if ( (unsigned int)a3[4] < a2 )\n    ++a3[5];\n  while ( v140 < &a1[a2 >> 2] )\n  {\n    v136 = v68;\n    v137 = v86;\n    v138 = v102;\n    v139 = v119;\n    v142 = *v140;\n    v69 = (v119 ^ v86 & (v102 ^ v119)) + *v140 + v68 - 680876936;\n    v141 = v140 + 1;\n    v3 = __ROR4__(v69, 25);\n    v70 = v86 + v3;\n    v143 = *v141++;\n    v4 = __ROR4__((v102 ^ (v86 + v3) & (v86 ^ v102)) + v143 + v119 - 389564586, 20);\n    v120 = v70 + v4;\n    v144 = *v141++;\n    v5 = __ROR4__((v86 ^ (v70 + v4) & (v70 ^ v86)) + v144 + v102 + 606105819, 15);\n    v103 = v120 + v5;\n    v145 = *v141++;\n    v6 = __ROR4__((v70 ^ (v120 + v5) & (v120 ^ v70)) + v145 + v86 - 1044525330, 10);\n    v87 = v103 + v6;\n    v146 = *v141++;\n    v7 = __ROR4__((v120 ^ (v103 + v6) & (v103 ^ v120)) + v146 + v70 - 176418897, 25);\n    v71 = v87 + v7;\n    v147 = *v141++;\n    v8 = __ROR4__((v103 ^ (v87 + v7) & (v87 ^ v103)) + v147 + v120 + 1200080426, 20);\n    v121 = v71 + v8;\n    v148 = *v141++;\n    v9 = __ROR4__((v87 ^ (v71 + v8) & (v71 ^ v87)) + v148 + v103 - 1473231341, 15);\n    v104 = v121 + v9;\n    v149 = *v141++;\n    v10 = __ROR4__((v71 ^ (v121 + v9) & (v121 ^ v71)) + v149 + v87 - 45705983, 10);\n    v88 = v104 + v10;\n    v150 = *v141++;\n    v11 = __ROR4__((v121 ^ (v104 + v10) & (v104 ^ v121)) + v150 + v71 + 1770035416, 25);\n    v72 = v88 + v11;\n    v151 = *v141++;\n    v12 = __ROR4__((v104 ^ (v88 + v11) & (v88 ^ v104)) + v151 + v121 - 1958414417, 20);\n    v122 = v72 + v12;\n    v152 = *v141++;\n    v13 = __ROR4__((v88 ^ (v72 + v12) & (v72 ^ v88)) + v152 + v104 - 42063, 15);\n    v105 = v122 + v13;\n    v153 = *v141++;\n    v14 = __ROR4__((v72 ^ (v122 + v13) & (v122 ^ v72)) + v153 + v88 - 1990404162, 10);\n    v89 = v105 + v14;\n    v154 = *v141++;\n    v15 = __ROR4__((v122 ^ (v105 + v14) & (v105 ^ v122)) + v154 + v72 + 1804603682, 25);\n    v73 = v89 + v15;\n    v155 = *v141++;\n    v16 = __ROR4__((v105 ^ (v89 + v15) & (v89 ^ v105)) + v155 + v122 - 40341101, 20);\n    v123 = v73 + v16;\n    v156 = *v141++;\n    v17 = __ROR4__((v89 ^ (v73 + v16) & (v73 ^ v89)) + v156 + v105 - 1502002290, 15);\n    v106 = v123 + v17;\n    v157 = *v141;\n    v140 = v141 + 1;\n    v18 = __ROR4__((v73 ^ (v123 + v17) & (v123 ^ v73)) + v157 + v89 + 1236535329, 10);\n    v90 = v106 + v18;\n    v19 = __ROR4__(v143 + (v106 ^ v123 & ((v106 + v18) ^ v106)) + v73 - 165796510, 27);\n    v74 = v90 + v19;\n    v20 = __ROR4__(v148 + (v90 ^ v106 & ((v90 + v19) ^ v90)) + v123 - 1069501632, 23);\n    v124 = v74 + v20;\n    v21 = __ROR4__(v153 + (v74 ^ v90 & ((v74 + v20) ^ v74)) + v106 + 643717713, 18);\n    v107 = v124 + v21;\n    v22 = __ROR4__(v142 + (v124 ^ v74 & ((v124 + v21) ^ v124)) + v90 - 373897302, 12);\n    v91 = v107 + v22;\n    v23 = __ROR4__(v147 + (v107 ^ v124 & ((v107 + v22) ^ v107)) + v74 - 701558691, 27);\n    v75 = v91 + v23;\n    v24 = __ROR4__(v152 + (v91 ^ v107 & ((v91 + v23) ^ v91)) + v124 + 38016083, 23);\n    v125 = v75 + v24;\n    v25 = __ROR4__(v157 + (v75 ^ v91 & ((v75 + v24) ^ v75)) + v107 - 660478335, 18);\n    v108 = v125 + v25;\n    v26 = __ROR4__(v146 + (v125 ^ v75 & ((v125 + v25) ^ v125)) + v91 - 405537848, 12);\n    v92 = v108 + v26;\n    v27 = __ROR4__(v151 + (v108 ^ v125 & ((v108 + v26) ^ v108)) + v75 + 568446438, 27);\n    v76 = v92 + v27;\n    v28 = __ROR4__(v156 + (v92 ^ v108 & ((v92 + v27) ^ v92)) + v125 - 1019803690, 23);\n    v126 = v76 + v28;\n    v29 = __ROR4__(v145 + (v76 ^ v92 & ((v76 + v28) ^ v76)) + v108 - 187363961, 18);\n    v109 = v126 + v29;\n    v30 = __ROR4__(v150 + (v126 ^ v76 & ((v126 + v29) ^ v126)) + v92 + 1163531501, 12);\n    v93 = v109 + v30;\n    v31 = __ROR4__(v155 + (v109 ^ v126 & ((v109 + v30) ^ v109)) + v76 - 1444681467, 27);\n    v77 = v93 + v31;\n    v32 = __ROR4__(v144 + (v93 ^ v109 & ((v93 + v31) ^ v93)) + v126 - 51403784, 23);\n    v127 = v77 + v32;\n    v33 = __ROR4__(v149 + (v77 ^ v93 & ((v77 + v32) ^ v77)) + v109 + 1735328473, 18);\n    v110 = v127 + v33;\n    v34 = __ROR4__(v154 + (v127 ^ v77 & ((v127 + v33) ^ v127)) + v93 - 1926607734, 12);\n    v94 = v110 + v34;\n    v35 = __ROR4__(v147 + (v127 ^ (v110 + v34) ^ v110) + v77 - 378558, 28);\n    v78 = v94 + v35;\n    v36 = __ROR4__(v150 + (v110 ^ (v94 + v35) ^ v94) + v127 - 2022574463, 21);\n    v128 = v78 + v36;\n    v37 = __ROR4__(v153 + (v94 ^ (v78 + v36) ^ v78) + v110 + 1839030562, 16);\n    v111 = v128 + v37;\n    v38 = __ROR4__(v156 + (v78 ^ (v128 + v37) ^ v128) + v94 - 35309556, 9);\n    v95 = v111 + v38;\n    v39 = __ROR4__(v143 + (v128 ^ (v111 + v38) ^ v111) + v78 - 1530992060, 28);\n    v79 = v95 + v39;\n    v40 = __ROR4__(v146 + (v111 ^ (v95 + v39) ^ v95) + v128 + 1272893353, 21);\n    v129 = v79 + v40;\n    v41 = __ROR4__(v149 + (v95 ^ (v79 + v40) ^ v79) + v111 - 155497632, 16);\n    v112 = v129 + v41;\n    v42 = __ROR4__(v152 + (v79 ^ (v129 + v41) ^ v129) + v95 - 1094730640, 9);\n    v96 = v112 + v42;\n    v43 = __ROR4__(v155 + (v129 ^ (v112 + v42) ^ v112) + v79 + 681279174, 28);\n    v80 = v96 + v43;\n    v44 = __ROR4__(v142 + (v112 ^ (v96 + v43) ^ v96) + v129 - 358537222, 21);\n    v130 = v80 + v44;\n    v45 = __ROR4__(v145 + (v96 ^ (v80 + v44) ^ v80) + v112 - 722521979, 16);\n    v113 = v130 + v45;\n    v46 = __ROR4__(v148 + (v80 ^ (v130 + v45) ^ v130) + v96 + 76029189, 9);\n    v97 = v113 + v46;\n    v47 = __ROR4__(v151 + (v130 ^ (v113 + v46) ^ v113) + v80 - 640364487, 28);\n    v81 = v97 + v47;\n    v48 = __ROR4__(v154 + (v113 ^ (v97 + v47) ^ v97) + v130 - 421815835, 21);\n    v131 = v81 + v48;\n    v49 = __ROR4__(v157 + (v97 ^ (v81 + v48) ^ v81) + v113 + 530742520, 16);\n    v114 = v131 + v49;\n    v50 = __ROR4__(v144 + (v81 ^ (v131 + v49) ^ v131) + v97 - 995338651, 9);\n    v98 = v114 + v50;\n    v51 = __ROR4__(v142 + (v114 ^ ((v114 + v50) | ~v131)) + v81 - 198630844, 26);\n    v82 = v98 + v51;\n    v52 = __ROR4__(v149 + (v98 ^ ((v98 + v51) | ~v114)) + v131 + 1126891415, 22);\n    v132 = v82 + v52;\n    v53 = __ROR4__(v156 + (v82 ^ ((v82 + v52) | ~v98)) + v114 - 1416354905, 17);\n    v115 = v132 + v53;\n    v54 = __ROR4__(v147 + (v132 ^ ((v132 + v53) | ~v82)) + v98 - 57434055, 11);\n    v99 = v115 + v54;\n    v55 = __ROR4__(v154 + (v115 ^ ((v115 + v54) | ~v132)) + v82 + 1700485571, 26);\n    v83 = v99 + v55;\n    v56 = __ROR4__(v145 + (v99 ^ ((v99 + v55) | ~v115)) + v132 - 1894986606, 22);\n    v133 = v83 + v56;\n    v57 = __ROR4__(v152 + (v83 ^ ((v83 + v56) | ~v99)) + v115 - 1051523, 17);\n    v116 = v133 + v57;\n    v58 = __ROR4__(v143 + (v133 ^ ((v133 + v57) | ~v83)) + v99 - 2054922799, 11);\n    v100 = v116 + v58;\n    v59 = __ROR4__(v150 + (v116 ^ ((v116 + v58) | ~v133)) + v83 + 1873313359, 26);\n    v84 = v100 + v59;\n    v60 = __ROR4__(v157 + (v100 ^ ((v100 + v59) | ~v116)) + v133 - 30611744, 22);\n    v134 = v84 + v60;\n    v61 = __ROR4__(v148 + (v84 ^ ((v84 + v60) | ~v100)) + v116 - 1560198380, 17);\n    v117 = v134 + v61;\n    v62 = __ROR4__(v155 + (v134 ^ ((v134 + v61) | ~v84)) + v100 + 1309151649, 11);\n    v101 = v117 + v62;\n    v63 = __ROR4__(v146 + (v117 ^ ((v117 + v62) | ~v134)) + v84 - 145523070, 26);\n    v85 = v101 + v63;\n    v64 = __ROR4__(v153 + (v101 ^ ((v101 + v63) | ~v117)) + v134 - 1120210379, 22);\n    v135 = v85 + v64;\n    v65 = __ROR4__(v144 + (v85 ^ ((v85 + v64) | ~v101)) + v117 + 718787259, 17);\n    v118 = v135 + v65;\n    v66 = __ROR4__(v151 + (v135 ^ ((v135 + v65) | ~v85)) + v101 - 343485551, 11);\n    v68 = v136 + v85;\n    v86 = v137 + v118 + v66;\n    v102 = v138 + v118;\n    v119 = v139 + v135;\n  }\n  *a3 = v68;\n  a3[1] = v86;\n  a3[2] = v102;\n  result = a3;\n  a3[3] = v119;\n  return result;\n}\n"], [4210863, "sub_4040AF", "_BYTE *__fastcall sub_4040AF(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4210968, "sub_404118", "size_t __fastcall sub_404118(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4211046, "sub_404166", "int __fastcall sub_404166(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4211094, "sub_404196", "void __fastcall sub_404196(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_404166(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4211152, "sub_4041D0", "FILE *__fastcall sub_4041D0(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_405B16((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_40668D(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !(unsigned int)sub_40668D(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4211382, "sub_4042B6", "char *__fastcall sub_4042B6(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_6092B0 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4211613, "sub_40439D", "__int64 __fastcall sub_40439D(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6092C0;\n  v4 = sub_4065FA(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4211686, "sub_4043E6", "__int64 __fastcall sub_4043E6(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6092C0;\n  return *(unsigned int *)v1;\n}\n"], [4211716, "sub_404404", "__int64 *__fastcall sub_404404(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6092C0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4211752, "sub_404428", "__int64 __fastcall sub_404428(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6092C0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4211888, "sub_4044B0", "__int64 __fastcall sub_4044B0(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6092C0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4211939, "sub_4044E3", "__int64 *__fastcall sub_4044E3(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6092C0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4212029, "sub_40453D", "_QWORD *__fastcall sub_40453D(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4212149, "sub_4045B5", "char *__fastcall sub_4045B5(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4212210, "sub_4045F2", "unsigned __int64 __fastcall sub_4045F2(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_4045B5((const char *)L\"`'\", a5);\n        a9 = sub_4045B5((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4045F2(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4215357, "sub_40523D", "unsigned __int64 __fastcall sub_40523D(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6092C0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4045F2(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4215517, "sub_4052DD", "__int64 __fastcall sub_4052DD(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40530F(a1, a2, 0LL, a3);\n}\n"], [4215567, "sub_40530F", "__int64 __fastcall sub_40530F(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6092C0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4045F2(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_4064BC(v10);\n  sub_4045F2(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4215867, "sub_40543B", "void sub_40543B()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_609220;\n  for ( i = 1; i < dword_609200; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_609300 )\n  {\n    free(ptr[1]);\n    qword_609210 = 256LL;\n    off_609218 = &unk_609300;\n  }\n  if ( ptr != (void **)&qword_609210 )\n  {\n    free(ptr);\n    off_609220 = &qword_609210;\n  }\n  dword_609200 = 1;\n}\n"], [4216038, "sub_4054E6", "void *__fastcall sub_4054E6(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_609220;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_609200 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_609220 == &qword_609210;\n    if ( off_609220 == &qword_609210 )\n      v4 = 0LL;\n    else\n      v4 = off_609220;\n    v12 = (__int64 *)sub_40650B(v4, 16 * v14);\n    off_609220 = v12;\n    if ( v9 )\n    {\n      v5 = off_609218;\n      *v12 = qword_609210;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_609200], 0, 16 * (v14 - (unsigned int)dword_609200));\n    dword_609200 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4045F2((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_609300 )\n      free(ptr);\n    ptr = (void *)sub_4064BC(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_4045F2((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4216684, "sub_40576C", "void *__fastcall sub_40576C(int a1, __int64 a2)\n{\n  return sub_4054E6(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6092C0);\n}\n"], [4216727, "sub_405797", "void *__fastcall sub_405797(int a1, __int64 a2, size_t a3)\n{\n  return sub_4054E6(a1, a2, a3, (__int64)&qword_6092C0);\n}\n"], [4216771, "sub_4057C3", "void *__fastcall sub_4057C3(__int64 a1)\n{\n  return sub_40576C(0, a1);\n}\n"], [4216802, "sub_4057E2", "void *__fastcall sub_4057E2(__int64 a1, size_t a2)\n{\n  return sub_405797(0, a1, a2);\n}\n"], [4216841, "sub_405809", "void *__fastcall sub_405809(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_40453D(v5, a2);\n  return sub_4054E6(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4216906, "sub_40584A", "void *__fastcall sub_40584A(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_40453D(v7, a2);\n  return sub_4054E6(a1, a3, a4, (__int64)v7);\n}\n"], [4216969, "sub_405889", "void *__fastcall sub_405889(int a1, __int64 a2)\n{\n  return sub_405809(0, a1, a2);\n}\n"], [4217005, "sub_4058AD", "void *__fastcall sub_4058AD(int a1, __int64 a2, size_t a3)\n{\n  return sub_40584A(0, a1, a2, a3);\n}\n"], [4217049, "sub_4058D9", "void *__fastcall sub_4058D9(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6092C0;\n  v4[1] = qword_6092C8;\n  v4[2] = qword_6092D0;\n  v4[3] = qword_6092D8;\n  v4[4] = qword_6092E0;\n  v4[5] = qword_6092E8;\n  v4[6] = qword_6092F0;\n  sub_404428(v4, a3, 1);\n  return sub_4054E6(0, a1, a2, (__int64)v4);\n}\n"], [4217197, "sub_40596D", "void *__fastcall sub_40596D(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4058D9(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4217239, "sub_405997", "void *__fastcall sub_405997(__int64 a1)\n{\n  return sub_40596D(a1, 0x3Au);\n}\n"], [4217270, "sub_4059B6", "void *__fastcall sub_4059B6(__int64 a1, size_t a2)\n{\n  return sub_4058D9(a1, a2, 0x3Au);\n}\n"], [4217312, "sub_4059E0", "__int64 __fastcall sub_4059E0(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_405A16(a1, a2, a3, a4, -1LL);\n}\n"], [4217366, "sub_405A16", "void *__fastcall sub_405A16(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6092C0;\n  v8[1] = qword_6092C8;\n  v8[2] = qword_6092D0;\n  v8[3] = qword_6092D8;\n  v8[4] = qword_6092E0;\n  v8[5] = qword_6092E8;\n  v8[6] = qword_6092F0;\n  sub_4044E3(v8, a2, a3);\n  return sub_4054E6(a1, a4, a5, (__int64)v8);\n}\n"], [4217517, "sub_405AAD", "__int64 __fastcall sub_405AAD(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4059E0(0, a1, a2, a3);\n}\n"], [4217564, "sub_405ADC", "void *__fastcall sub_405ADC(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_405A16(0, a1, a2, a3, a4);\n}\n"], [4217622, "sub_405B16", "__int64 __fastcall sub_405B16(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_406742(a1, 0, 3, a4, a5, a6);\n}\n"], [4217660, "sub_405B3C", "int __fastcall sub_405B3C(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4219175, "sub_406127", "int __fastcall sub_406127(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_405B3C(a1, a2, a3, a4, a5, i);\n}\n"], [4219285, "sub_406195", "int __fastcall sub_406195(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_405B3C(a1, a2, a3, a4, v8, i);\n}\n"], [4219502, "sub_40626E", "int sub_40626E(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_406195(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4219684, "sub_406324", "int sub_406324()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4219789, "sub_40638D", "__int64 __fastcall sub_40638D(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_406658(a1, a2, v2);\n  return sub_4064D6(a2 * a1, a2, v2);\n}\n"], [4219851, "sub_4063CB", "__int64 __fastcall sub_4063CB(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_406658(a1, a2, v4);\n  return sub_40650B(a1, a3 * a2);\n}\n"], [4219927, "sub_406417", "__int64 __fastcall sub_406417(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_406658(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40650B(a1, a3 * v6);\n}\n"], [4220092, "sub_4064BC", "__int64 __fastcall sub_4064BC(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4064D6(a1, a2, a3);\n}\n"], [4220118, "sub_4064D6", "void *__fastcall sub_4064D6(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_406658(a1, a2, v2);\n  return v4;\n}\n"], [4220171, "sub_40650B", "void *__fastcall sub_40650B(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_406658(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4220268, "sub_40656C", "__int64 __fastcall sub_40656C(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_406417(a1, a2, 1uLL);\n}\n"], [4220310, "sub_406596", "void *__fastcall sub_406596(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4064D6(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4220353, "sub_4065C1", "void *__fastcall sub_4065C1(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_406658(a1, a2, v2);\n  return v4;\n}\n"], [4220410, "sub_4065FA", "void *__fastcall sub_4065FA(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_4064D6(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4220459, "sub_40662B", "void *__fastcall sub_40662B(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_4065FA(a1, v1 + 1);\n}\n"], [4220504, "sub_406658", "void __noreturn sub_406658()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4220557, "sub_40668D", "int __fastcall sub_40668D(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_406A2F(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4220738, "sub_406742", "__int64 __fastcall sub_406742(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_609400 < 0 )\n  {\n    v18 = sub_406742(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_406742(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_609400 = -1;\n    }\n    else\n    {\n      dword_609400 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_609400 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4221436, "sub_4069FC", "__int64 __fastcall sub_4069FC(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_406A7A(a1, 0LL, 1LL);\n  return result;\n}\n"], [4221487, "sub_406A2F", "int __fastcall sub_406A2F(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_4069FC(a1);\n  return fflush(a1);\n}\n"], [4221562, "sub_406A7A", "int __fastcall sub_406A7A(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4221746, "sub_406B32", "__int64 __fastcall sub_406B32(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_40668D(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4221888, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4222000, "fini", "void fini(void)\n{\n  ;\n}\n"], [4222016, "sub_406C40", "int __fastcall sub_406C40(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6091E8 )\n    v1 = (void *)qword_6091E8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4222044, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]