[[4199112, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199152, "sub_4012F0", "__int64 sub_4012F0()\n{\n  return qword_608010();\n}\n"], [4199168, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4199184, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199200, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199216, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199232, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199248, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199264, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199280, ".getc_unlocked", "// attributes: thunk\nint getc_unlocked(FILE *stream)\n{\n  return getc_unlocked(stream);\n}\n"], [4199296, ".localeconv", "// attributes: thunk\nstruct lconv *localeconv(void)\n{\n  return localeconv();\n}\n"], [4199312, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199328, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199344, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199360, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199376, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199392, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199408, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199424, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199440, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199456, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199472, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199488, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199504, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199520, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4199536, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199552, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199568, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4199584, ".read", "// attributes: thunk\nssize_t read(int fd, void *buf, size_t nbytes)\n{\n  return read(fd, buf, nbytes);\n}\n"], [4199600, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199616, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199632, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199648, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199664, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199680, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199696, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199712, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199728, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199744, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199760, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199776, ".putc_unlocked", "// attributes: thunk\nint putc_unlocked(int c, FILE *stream)\n{\n  return putc_unlocked(c, stream);\n}\n"], [4199792, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199808, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199824, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199840, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199856, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199872, ".setvbuf", "// attributes: thunk\nint setvbuf(FILE *stream, char *buf, int modes, size_t n)\n{\n  return setvbuf(stream, buf, modes, n);\n}\n"], [4199888, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4199904, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199920, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4199936, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199952, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4199968, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4199984, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200000, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4200016, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200032, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200048, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200064, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200080, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200096, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200144, "sub_4016D0", "__int64 sub_4016D0()\n{\n  __int64 result; // rax\n\n  result = 6324807LL - (_QWORD)&program_invocation_short_name;\n  if ( (unsigned __int64)(6324807LL - (_QWORD)&program_invocation_short_name) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200192, "sub_401700", "__int64 sub_401700()\n{\n  return 0LL;\n}\n"], [4200256, "sub_401740", "__int64 sub_401740()\n{\n  __int64 result; // rax\n\n  if ( !byte_608278 )\n  {\n    result = sub_4016D0();\n    byte_608278 = 1;\n  }\n  return result;\n}\n"], [4200288, "sub_401760", "__int64 sub_401760()\n{\n  return sub_401700();\n}\n"], [4200333, "sub_40178D", "int sub_40178D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4021F3(qword_608290);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4021F3(qword_608290);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4021F3(qword_608290);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200599, "sub_401897", "void __fastcall __noreturn sub_401897(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n\n  v1 = qword_608290;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Print checksum and block counts for each FILE.\\n\"\n           \"\\n\"\n           \"  -r              use BSD sum algorithm, use 1K blocks\\n\"\n           \"  -s, --sysv      use System V sum algorithm, use 512 bytes blocks\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"\\nWith no FILE, or when FILE is -, read standard input.\\n\");\n    fputs_unlocked(v11, v10);\n    sub_40178D();\n  }\n  exit(a1);\n}\n"], [4200828, "sub_40197C", "__int64 __fastcall sub_40197C(const char *a1, int a2)\n{\n  int v2; // eax\n  int *v3; // rax\n  int *v5; // rax\n  const char *v6; // rax\n  _BYTE v7[5]; // [rsp+17h] [rbp-2C9h]\n  int v8; // [rsp+1Ch] [rbp-2C4h]\n  FILE *stream; // [rsp+20h] [rbp-2C0h]\n  __int64 v10; // [rsp+28h] [rbp-2B8h]\n  char v11[664]; // [rsp+30h] [rbp-2B0h] BYREF\n  unsigned __int64 v12; // [rsp+2C8h] [rbp-18h]\n\n  v12 = __readfsqword(0x28u);\n  v7[4] = 0;\n  v10 = 0LL;\n  v2 = strcmp(a1, \"-\");\n  *(_DWORD *)v7 = v2 == 0;\n  if ( v2 )\n  {\n    stream = fopen(a1, \"r\");\n    if ( !stream )\n      goto LABEL_4;\n    sub_4022DA(stream, 2LL);\n  }\n  else\n  {\n    stream = (FILE *)stdin;\n    byte_608279 = 1;\n    sub_4022DA(stdin, 2LL);\n  }\n  while ( 1 )\n  {\n    v8 = getc_unlocked(stream);\n    if ( v8 == -1 )\n      break;\n    ++v10;\n    *(_DWORD *)&v7[1] = (unsigned __int16)(v8 + (*(int *)&v7[1] >> 1) + (*(_WORD *)&v7[1] << 15));\n  }\n  if ( ferror_unlocked(stream) )\n  {\n    v5 = __errno_location();\n    error(0, *v5, \"%s\", a1);\n    if ( v7[0] != 1 )\n      sub_405AEB(stream);\n    return 0LL;\n  }\n  if ( v7[0] != 1 && (unsigned int)sub_405AEB(stream) )\n  {\nLABEL_4:\n    v3 = __errno_location();\n    error(0, *v3, \"%s\", a1);\n    return 0LL;\n  }\n  v6 = (const char *)sub_402542(v10, v11, 0LL, 1LL, 1024LL);\n  printf(\"%05d %5s\", *(unsigned int *)&v7[1], v6);\n  if ( a2 > 1 )\n    printf(\" %s\", a1);\n  putchar_unlocked(10);\n  return 1LL;\n}\n"], [4201469, "sub_401BFD", "__int64 __fastcall sub_401BFD(const char *a1, int a2)\n{\n  int v2; // eax\n  int *v3; // rax\n  __int64 result; // rax\n  int *v5; // rax\n  int *v6; // rax\n  const char *v7; // rax\n  bool v8; // [rsp+17h] [rbp-22D9h]\n  unsigned int fd; // [rsp+18h] [rbp-22D8h]\n  unsigned int v10; // [rsp+1Ch] [rbp-22D4h]\n  __int64 v11; // [rsp+28h] [rbp-22C8h]\n  unsigned __int64 i; // [rsp+30h] [rbp-22C0h]\n  unsigned __int64 v13; // [rsp+38h] [rbp-22B8h]\n  char v14[656]; // [rsp+40h] [rbp-22B0h] BYREF\n  char v15[8200]; // [rsp+2D0h] [rbp-2020h] BYREF\n  unsigned __int64 v16; // [rsp+22D8h] [rbp-18h]\n\n  v16 = __readfsqword(0x28u);\n  v11 = 0LL;\n  v10 = 0;\n  v2 = strcmp(a1, \"-\");\n  v8 = v2 == 0;\n  if ( !v2 )\n  {\n    fd = 0;\n    byte_608279 = 1;\n    goto LABEL_5;\n  }\n  fd = open(a1, 0);\n  if ( fd == -1 )\n  {\n    v3 = __errno_location();\n    error(0, *v3, \"%s\", a1);\n    result = 0LL;\n  }\n  else\n  {\n    while ( 1 )\n    {\nLABEL_5:\n      v13 = sub_404A1D(fd, v15, 0x2000LL);\n      if ( !v13 )\n      {\n        if ( !v8 && close(fd) )\n        {\n          v6 = __errno_location();\n          error(0, *v6, \"%s\", a1);\n          result = 0LL;\n        }\n        else\n        {\n          v7 = (const char *)sub_402542(v11, v14, 0LL, 1LL, 512LL);\n          printf(\n            \"%d %s\",\n            ((int)(HIWORD(v10) + (unsigned __int16)v10) >> 16) + (unsigned int)(unsigned __int16)(HIWORD(v10) + v10),\n            v7);\n          if ( a2 )\n            printf(\" %s\", a1);\n          putchar_unlocked(10);\n          result = 1LL;\n        }\n        return result;\n      }\n      if ( v13 == -1LL )\n        break;\n      for ( i = 0LL; i < v13; ++i )\n        v10 += (unsigned __int8)v15[i];\n      v11 += v13;\n    }\n    v5 = __errno_location();\n    error(0, *v5, \"%s\", a1);\n    if ( !v8 )\n      close(fd);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4202179, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  int *v3; // rax\n  char v4; // [rsp+2Fh] [rbp-21h]\n  int v5; // [rsp+30h] [rbp-20h]\n  int v6; // [rsp+34h] [rbp-1Ch]\n  __int64 (__fastcall *v7)(const char *, int); // [rsp+38h] [rbp-18h]\n\n  v7 = sub_40197C;\n  sub_4031BD(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_406230(sub_402108);\n  setvbuf(stdout, 0LL, 1, 0LL);\n  byte_608279 = 0;\n  while ( 1 )\n  {\n    v5 = getopt_long(a1, a2, \"rs\", &longopts, 0LL);\n    if ( v5 == -1 )\n    {\n      v6 = a1 - optind;\n      if ( a1 - optind > 0 )\n      {\n        v4 = 1;\n        while ( optind < a1 )\n        {\n          v4 = (unsigned __int8)(v4 & v7(a2[optind], v6)) != 0;\n          ++optind;\n        }\n      }\n      else\n      {\n        v4 = v7(\"-\", v6);\n      }\n      if ( byte_608279 )\n      {\n        if ( (unsigned int)sub_405AEB(stdin) == -1 )\n        {\n          v3 = __errno_location();\n          error(1, *v3, \"-\");\n        }\n      }\n      exit(v4 == 0);\n    }\n    if ( v5 == -130 )\n      sub_401897(0);\n    if ( v5 <= -130 )\n      break;\n    if ( v5 == 114 )\n    {\n      v7 = sub_40197C;\n    }\n    else\n    {\n      if ( v5 != 115 )\n        goto LABEL_13;\n      v7 = sub_401BFD;\n    }\n  }\n  if ( v5 == -131 )\n  {\n    sub_4051C0(\n      (_DWORD)stdout,\n      (unsigned int)\"sum\",\n      (unsigned int)\"GNU coreutils\",\n      (_DWORD)off_608200,\n      (unsigned int)\"Kayvan Aghaiepour\",\n      (unsigned int)\"David MacKenzie\",\n      0);\n    exit(0);\n  }\nLABEL_13:\n  sub_401897(1);\n}\n"], [4202739, "sub_4020F3", "__int64 __fastcall sub_4020F3(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_608288 = a1;\n  return result;\n}\n"], [4202760, "sub_402108", "__int64 sub_402108()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_4060E2(stdout) && (byte_608288 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_608280 )\n    {\n      v0 = (const char *)sub_40489E(qword_608280);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_4060E2(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4202995, "sub_4021F3", "_BYTE *__fastcall sub_4021F3(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4203100, "sub_40225C", "size_t __fastcall sub_40225C(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4203178, "sub_4022AA", "int __fastcall sub_4022AA(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4203226, "sub_4022DA", "void __fastcall sub_4022DA(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_4022AA(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4203284, "sub_402314", "long double __fastcall sub_402314(int a1, long double a2)\n{\n  _BOOL4 v7; // eax\n  long double v9; // [rsp+0h] [rbp-30h]\n  unsigned __int64 v10; // [rsp+28h] [rbp-8h]\n\n  if ( a1 != 1 && a2 < 1.8446744073709551615e19 )\n  {\n    if ( a2 >= 9.223372036854775808e18 )\n      v10 = (__int64)(a2 - 9.223372036854775808e18) ^ 0x8000000000000000LL;\n    else\n      v10 = (__int64)a2;\n    v7 = !a1 && a2 != (long double)v10;\n    a2 = (long double)(v7 + v10);\n  }\n  *(_QWORD *)&v9 = *(_QWORD *)&a2;\n  DWORD2(v9) = DWORD2(a2);\n  return v9;\n}\n"], [4203531, "sub_40240B", "char *__fastcall sub_40240B(char *a1, size_t a2, unsigned __int8 *a3, const char *a4)\n{\n  char *i; // rbx\n  size_t v5; // rax\n  char *v6; // rbx\n  unsigned __int8 v10; // [rsp+27h] [rbp-69h]\n  size_t v11; // [rsp+28h] [rbp-68h]\n  size_t v12; // [rsp+30h] [rbp-60h]\n  size_t v13; // [rsp+38h] [rbp-58h]\n  char dest[56]; // [rsp+40h] [rbp-50h] BYREF\n  unsigned __int64 v15; // [rsp+78h] [rbp-18h]\n\n  v15 = __readfsqword(0x28u);\n  v11 = -1LL;\n  v13 = strlen(a4);\n  v12 = a2;\n  memcpy(dest, a1, a2);\n  for ( i = &a1[a2]; ; memcpy(i, a4, v13) )\n  {\n    v10 = *a3;\n    if ( *a3 )\n    {\n      if ( v10 > 0x7Eu )\n        v5 = v12;\n      else\n        v5 = v10;\n      v11 = v5;\n      ++a3;\n    }\n    if ( v12 < v11 )\n      v11 = v12;\n    v6 = &i[-v11];\n    v12 -= v11;\n    memcpy(v6, &dest[v12], v11);\n    if ( !v12 )\n      break;\n    i = &v6[-v13];\n  }\n  return v6;\n}\n"], [4203842, "sub_402542", "char *__fastcall sub_402542(unsigned __int64 a1, char *a2, __int16 a3, unsigned __int64 a4, unsigned __int64 a5)\n{\n  int v5; // eax\n  int v6; // eax\n  long double v7; // fst7\n  long double v8; // fst7\n  long double v9; // fst7\n  int v10; // eax\n  bool v11; // al\n  bool v12; // al\n  bool v13; // al\n  bool v14; // al\n  char *v15; // rax\n  char v16; // dl\n  char *v17; // rax\n  char *v18; // rax\n  long double v20; // [rsp+0h] [rbp-130h]\n  int v24; // [rsp+44h] [rbp-ECh]\n  int v25; // [rsp+48h] [rbp-E8h]\n  int v26; // [rsp+4Ch] [rbp-E4h]\n  int v27; // [rsp+50h] [rbp-E0h]\n  unsigned int v28; // [rsp+54h] [rbp-DCh]\n  unsigned int v29; // [rsp+5Ch] [rbp-D4h]\n  unsigned int v30; // [rsp+60h] [rbp-D0h]\n  unsigned __int64 v31; // [rsp+68h] [rbp-C8h]\n  char *dest; // [rsp+70h] [rbp-C0h]\n  char *desta; // [rsp+70h] [rbp-C0h]\n  char *v34; // [rsp+78h] [rbp-B8h]\n  char *v35; // [rsp+80h] [rbp-B0h]\n  char *src; // [rsp+88h] [rbp-A8h]\n  size_t v37; // [rsp+90h] [rbp-A0h]\n  const char *v38; // [rsp+98h] [rbp-98h]\n  unsigned __int64 n; // [rsp+A0h] [rbp-90h]\n  size_t v40; // [rsp+A8h] [rbp-88h]\n  unsigned __int64 i; // [rsp+B0h] [rbp-80h]\n  unsigned __int8 *v42; // [rsp+B8h] [rbp-78h]\n  struct lconv *v43; // [rsp+C0h] [rbp-70h]\n  size_t v44; // [rsp+C8h] [rbp-68h]\n  unsigned __int64 v45; // [rsp+E8h] [rbp-48h]\n  long double v46; // [rsp+F0h] [rbp-40h]\n  long double v47; // [rsp+110h] [rbp-20h]\n  long double v48; // [rsp+110h] [rbp-20h]\n\n  v27 = a3 & 3;\n  if ( (a3 & 0x20) != 0 )\n    v5 = 1024;\n  else\n    v5 = 1000;\n  v28 = v5;\n  v25 = -1;\n  src = \".\";\n  v37 = 1LL;\n  v38 = (const char *)&unk_4066CB;\n  v43 = localeconv();\n  v44 = strlen(v43->decimal_point);\n  if ( v44 && v44 <= 0x10 )\n  {\n    src = v43->decimal_point;\n    v37 = v44;\n  }\n  v42 = (unsigned __int8 *)v43->grouping;\n  if ( strlen(v43->thousands_sep) <= 0x10 )\n    v38 = v43->thousands_sep;\n  v34 = a2 + 648;\n  dest = a2 + 648;\n  if ( a5 > a4 )\n  {\n    if ( a4 && !(a5 % a4) )\n    {\n      v45 = 2 * (10 * (a1 % (a5 / a4)) % (a5 / a4));\n      v31 = a1 / (a5 / a4);\n      v24 = 10 * (a1 % (a5 / a4)) / (a5 / a4);\n      if ( v45 >= a5 / a4 )\n      {\n        if ( a5 / a4 >= v45 )\n          v6 = 2;\n        else\n          v6 = 3;\n      }\n      else\n      {\n        v6 = v45 != 0;\n      }\n      v26 = v6;\nLABEL_32:\n      if ( (a3 & 0x10) != 0 )\n      {\n        v25 = 0;\n        if ( v28 <= v31 )\n        {\n          do\n          {\n            v29 = 10 * (v31 % v28) + v24;\n            v30 = 2 * (v29 % v28) + (v26 >> 1);\n            v31 /= v28;\n            v24 = v29 / v28;\n            if ( v30 >= v28 )\n            {\n              if ( v26 + v30 <= v28 )\n                v10 = 2;\n              else\n                v10 = 3;\n            }\n            else\n            {\n              v10 = v26 + v30 != 0;\n            }\n            v26 = v10;\n            ++v25;\n          }\n          while ( v28 <= v31 && v25 < 8 );\n          if ( v31 <= 9 )\n          {\n            if ( v27 == 1 )\n            {\n              v11 = (int)(((v29 / v28) & 1) + v10) > 2;\n            }\n            else\n            {\n              v12 = !v27 && v10 > 0;\n              v11 = v12;\n            }\n            if ( v11 )\n            {\n              ++v24;\n              v26 = 0;\n              if ( v24 == 10 )\n              {\n                ++v31;\n                v24 = 0;\n              }\n            }\n            if ( v31 <= 9 && (v24 || (a3 & 8) == 0) )\n            {\n              a2[647] = v24 + 48;\n              dest = &a2[-v37 + 647];\n              memcpy(dest, src, v37);\n              v26 = 0;\n              v24 = 0;\n            }\n          }\n        }\n      }\n      if ( v27 == 1 )\n      {\n        v13 = ((v31 & 1) + v26 != 0) + v24 > 5;\n      }\n      else\n      {\n        v14 = !v27 && v24 + v26 > 0;\n        v13 = v14;\n      }\n      if ( v13 )\n      {\n        ++v31;\n        if ( (a3 & 0x10) != 0 && v28 == v31 && v25 < 8 )\n        {\n          ++v25;\n          if ( (a3 & 8) == 0 )\n          {\n            desta = dest - 1;\n            *desta = 48;\n            dest = &desta[-v37];\n            memcpy(dest, src, v37);\n          }\n          v31 = 1LL;\n        }\n      }\n      v35 = dest;\n      do\n      {\n        *--dest = v31 % 0xA + 48;\n        v31 /= 0xAuLL;\n      }\n      while ( v31 );\n      goto LABEL_72;\n    }\n  }\n  else if ( !(a4 % a5) )\n  {\n    v31 = a4 / a5 * a1;\n    if ( v31 / (a4 / a5) == a1 )\n    {\n      v24 = 0;\n      v26 = 0;\n      goto LABEL_32;\n    }\n  }\n  v47 = (long double)a1 * ((long double)a4 / (long double)a5);\n  if ( (a3 & 0x10) != 0 )\n  {\n    *(_QWORD *)&v46 = 0x8000000000000000LL;\n    DWORD2(v46) = 0x3FFF;\n    v25 = 0;\n    do\n    {\n      v46 = (long double)v28 * v46;\n      ++v25;\n    }\n    while ( v47 >= (long double)v28 * v46 && v25 < 8 );\n    v48 = v47 / v46;\n    *(_QWORD *)&v20 = *(_QWORD *)&v48;\n    DWORD2(v20) = DWORD2(v48);\n    v8 = sub_402314(v27, v20);\n    sprintf(a2, \"%.1Lf\", v8);\n    n = strlen(a2);\n    v40 = v37 + 1;\n    if ( ((a3 & 0x20) == 0) + v37 + 1 + 1 < n || (a3 & 8) != 0 && a2[n - 1] == 48 )\n    {\n      v9 = sub_402314(v27, v48 * 10.0);\n      sprintf(a2, \"%.0Lf\", v9 / 10.0);\n      n = strlen(a2);\n      v40 = 0LL;\n    }\n  }\n  else\n  {\n    *(_QWORD *)&v20 = *(_QWORD *)&v47;\n    DWORD2(v20) = DWORD2(v47);\n    v7 = sub_402314(v27, v20);\n    sprintf(a2, \"%.0Lf\", v7);\n    n = strlen(a2);\n    v40 = 0LL;\n  }\n  dest = &v34[-n];\n  memmove(&v34[-n], a2, n);\n  v35 = &v34[-v40];\nLABEL_72:\n  if ( (a3 & 4) != 0 )\n    dest = sub_40240B(dest, v35 - dest, v42, v38);\n  if ( (a3 & 0x80) != 0 )\n  {\n    if ( v25 < 0 )\n    {\n      v25 = 0;\n      for ( i = 1LL; i < a5; i *= v28 )\n      {\n        if ( ++v25 == 8 )\n          break;\n      }\n    }\n    if ( v25 | a3 & 0x100 && (a3 & 0x40) != 0 )\n    {\n      v34 = a2 + 649;\n      a2[648] = 32;\n    }\n    if ( v25 )\n    {\n      v15 = v34++;\n      if ( (a3 & 0x20) == 0 && v25 == 1 )\n        v16 = 107;\n      else\n        v16 = byte_4066C0[v25];\n      *v15 = v16;\n    }\n    if ( (a3 & 0x100) != 0 )\n    {\n      if ( (a3 & 0x20) != 0 && v25 )\n      {\n        v17 = v34++;\n        *v17 = 105;\n      }\n      v18 = v34++;\n      *v18 = 66;\n    }\n  }\n  *v34 = 0;\n  return dest;\n}\n"], [4206560, "sub_402FE0", "__int64 sub_402FE0()\n{\n  __int64 result; // rax\n\n  if ( getenv(\"POSIXLY_CORRECT\") )\n    result = 512LL;\n  else\n    result = 1024LL;\n  return result;\n}\n"], [4206593, "sub_403001", "__int64 __fastcall sub_403001(char *a1, _QWORD *a2, int *a3)\n{\n  char *v5; // [rsp+18h] [rbp-28h]\n  int v6; // [rsp+2Ch] [rbp-14h]\n  int v7; // [rsp+30h] [rbp-10h]\n  unsigned int v8; // [rsp+34h] [rbp-Ch]\n  char *v9; // [rsp+38h] [rbp-8h] BYREF\n\n  v5 = a1;\n  v6 = 0;\n  if ( a1 || (v5 = getenv(\"BLOCK_SIZE\")) != 0LL || (v5 = getenv(\"BLOCKSIZE\")) != 0LL )\n  {\n    if ( *v5 == 39 )\n    {\n      v6 = 4;\n      ++v5;\n    }\n    v7 = sub_405CE6(v5, off_4066F0, dword_406708, 4LL);\n    if ( v7 < 0 )\n    {\n      v8 = sub_40567F(v5, &v9, 0LL, a2, \"eEgGkKmMpPtTyYzZ0\");\n      if ( v8 )\n      {\n        *a3 = 0;\n        return v8;\n      }\n      while ( *v5 <= 47 || *v5 > 57 )\n      {\n        if ( v5 == v9 )\n        {\n          v6 |= 0x80u;\n          if ( *(v9 - 1) == 66 )\n            v6 |= 0x100u;\n          if ( *(v9 - 1) != 66 || *(v9 - 2) == 105 )\n            v6 |= 0x20u;\n          break;\n        }\n        ++v5;\n      }\n    }\n    else\n    {\n      v6 |= dword_406708[v7];\n      *a2 = 1LL;\n    }\n  }\n  else\n  {\n    *a2 = sub_402FE0();\n  }\n  *a3 = v6;\n  return 0LL;\n}\n"], [4206955, "sub_40316B", "__int64 __fastcall sub_40316B(char *a1, int *a2, _QWORD *a3)\n{\n  unsigned int v5; // [rsp+2Ch] [rbp-4h]\n\n  v5 = sub_403001(a1, a3, a2);\n  if ( !*a3 )\n  {\n    *a3 = sub_402FE0();\n    v5 = 4;\n  }\n  return v5;\n}\n"], [4207037, "sub_4031BD", "char *__fastcall sub_4031BD(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_608290 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4207268, "sub_4032A4", "__int64 __fastcall sub_4032A4(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6082A0;\n  v4 = sub_40554C(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4207341, "sub_4032ED", "__int64 __fastcall sub_4032ED(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6082A0;\n  return *(unsigned int *)v1;\n}\n"], [4207371, "sub_40330B", "__int64 *__fastcall sub_40330B(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6082A0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4207407, "sub_40332F", "__int64 __fastcall sub_40332F(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6082A0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4207543, "sub_4033B7", "__int64 __fastcall sub_4033B7(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6082A0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4207594, "sub_4033EA", "__int64 *__fastcall sub_4033EA(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6082A0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4207684, "sub_403444", "_QWORD *__fastcall sub_403444(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4207804, "sub_4034BC", "char *__fastcall sub_4034BC(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4207865, "sub_4034F9", "unsigned __int64 __fastcall sub_4034F9(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_4034BC((const char *)L\"`'\", a5);\n        a9 = sub_4034BC((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4034F9(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4211012, "sub_404144", "unsigned __int64 __fastcall sub_404144(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6082A0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4034F9(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4211172, "sub_4041E4", "__int64 __fastcall sub_4041E4(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404216(a1, a2, 0LL, a3);\n}\n"], [4211222, "sub_404216", "__int64 __fastcall sub_404216(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6082A0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4034F9(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_40540E(v10);\n  sub_4034F9(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4211522, "sub_404342", "void sub_404342()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_608230;\n  for ( i = 1; i < dword_608210; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6082E0 )\n  {\n    free(ptr[1]);\n    qword_608220 = 256LL;\n    off_608228 = &unk_6082E0;\n  }\n  if ( ptr != (void **)&qword_608220 )\n  {\n    free(ptr);\n    off_608230 = (__int64)&qword_608220;\n  }\n  dword_608210 = 1;\n}\n"], [4211693, "sub_4043ED", "void *__fastcall sub_4043ED(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  _QWORD *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = (_QWORD *)off_608230;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_608210 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_608230 == (_QWORD)&qword_608220;\n    if ( (__int64 *)off_608230 == &qword_608220 )\n      v4 = 0LL;\n    else\n      v4 = off_608230;\n    v12 = (_QWORD *)sub_40545D(v4, 16 * v14);\n    off_608230 = (__int64)v12;\n    if ( v9 )\n    {\n      v5 = off_608228;\n      *v12 = qword_608220;\n      v12[1] = v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_608210], 0, 16 * (v14 - (unsigned int)dword_608210));\n    dword_608210 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4034F9((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6082E0 )\n      free(ptr);\n    ptr = (void *)sub_40540E(v16);\n    v12[2 * a1 + 1] = ptr;\n    sub_4034F9((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4212339, "sub_404673", "void *__fastcall sub_404673(int a1, __int64 a2)\n{\n  return sub_4043ED(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6082A0);\n}\n"], [4212382, "sub_40469E", "void *__fastcall sub_40469E(int a1, __int64 a2, size_t a3)\n{\n  return sub_4043ED(a1, a2, a3, (__int64)&qword_6082A0);\n}\n"], [4212426, "sub_4046CA", "void *__fastcall sub_4046CA(__int64 a1)\n{\n  return sub_404673(0, a1);\n}\n"], [4212457, "sub_4046E9", "void *__fastcall sub_4046E9(__int64 a1, size_t a2)\n{\n  return sub_40469E(0, a1, a2);\n}\n"], [4212496, "sub_404710", "void *__fastcall sub_404710(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403444(v5, a2);\n  return sub_4043ED(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4212561, "sub_404751", "void *__fastcall sub_404751(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403444(v7, a2);\n  return sub_4043ED(a1, a3, a4, (__int64)v7);\n}\n"], [4212624, "sub_404790", "void *__fastcall sub_404790(int a1, __int64 a2)\n{\n  return sub_404710(0, a1, a2);\n}\n"], [4212660, "sub_4047B4", "void *__fastcall sub_4047B4(int a1, __int64 a2, size_t a3)\n{\n  return sub_404751(0, a1, a2, a3);\n}\n"], [4212704, "sub_4047E0", "void *__fastcall sub_4047E0(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6082A0;\n  v4[1] = qword_6082A8;\n  v4[2] = qword_6082B0;\n  v4[3] = qword_6082B8;\n  v4[4] = qword_6082C0;\n  v4[5] = qword_6082C8;\n  v4[6] = qword_6082D0;\n  sub_40332F(v4, a3, 1);\n  return sub_4043ED(0, a1, a2, (__int64)v4);\n}\n"], [4212852, "sub_404874", "void *__fastcall sub_404874(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4047E0(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4212894, "sub_40489E", "void *__fastcall sub_40489E(__int64 a1)\n{\n  return sub_404874(a1, 0x3Au);\n}\n"], [4212925, "sub_4048BD", "void *__fastcall sub_4048BD(__int64 a1, size_t a2)\n{\n  return sub_4047E0(a1, a2, 0x3Au);\n}\n"], [4212967, "sub_4048E7", "__int64 __fastcall sub_4048E7(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_40491D(a1, a2, a3, a4, -1LL);\n}\n"], [4213021, "sub_40491D", "void *__fastcall sub_40491D(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6082A0;\n  v8[1] = qword_6082A8;\n  v8[2] = qword_6082B0;\n  v8[3] = qword_6082B8;\n  v8[4] = qword_6082C0;\n  v8[5] = qword_6082C8;\n  v8[6] = qword_6082D0;\n  sub_4033EA(v8, a2, a3);\n  return sub_4043ED(a1, a4, a5, (__int64)v8);\n}\n"], [4213172, "sub_4049B4", "__int64 __fastcall sub_4049B4(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4048E7(0, a1, a2, a3);\n}\n"], [4213219, "sub_4049E3", "void *__fastcall sub_4049E3(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_40491D(0, a1, a2, a3, a4);\n}\n"], [4213277, "sub_404A1D", "ssize_t __fastcall sub_404A1D(int a1, void *a2, size_t a3)\n{\n  ssize_t result; // rax\n  ssize_t v5; // [rsp+28h] [rbp-8h]\n\nLABEL_1:\n  for ( result = read(a1, a2, a3); ; result = read(a1, a2, 0x7FFFE000uLL) )\n  {\n    v5 = result;\n    if ( result >= 0 )\n      break;\n    if ( *__errno_location() == 4 )\n      goto LABEL_1;\n    if ( *__errno_location() != 22 || a3 <= 0x7FFFE000 )\n      return v5;\n    a3 = 2147475456LL;\n  }\n  return result;\n}\n"], [4213390, "sub_404A8E", "int __fastcall sub_404A8E(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4214905, "sub_405079", "int __fastcall sub_405079(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_404A8E(a1, a2, a3, a4, a5, i);\n}\n"], [4215015, "sub_4050E7", "int __fastcall sub_4050E7(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_404A8E(a1, a2, a3, a4, v8, i);\n}\n"], [4215232, "sub_4051C0", "int sub_4051C0(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_4050E7(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4215414, "sub_405276", "int sub_405276()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4215519, "sub_4052DF", "__int64 __fastcall sub_4052DF(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4055AA(a1, a2, v2);\n  return sub_405428(a2 * a1, a2, v2);\n}\n"], [4215581, "sub_40531D", "__int64 __fastcall sub_40531D(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4055AA(a1, a2, v4);\n  return sub_40545D(a1, a3 * a2);\n}\n"], [4215657, "sub_405369", "__int64 __fastcall sub_405369(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4055AA(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40545D(a1, a3 * v6);\n}\n"], [4215822, "sub_40540E", "__int64 __fastcall sub_40540E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405428(a1, a2, a3);\n}\n"], [4215848, "sub_405428", "void *__fastcall sub_405428(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4055AA(a1, a2, v2);\n  return v4;\n}\n"], [4215901, "sub_40545D", "void *__fastcall sub_40545D(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4055AA(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4215998, "sub_4054BE", "__int64 __fastcall sub_4054BE(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_405369(a1, a2, 1uLL);\n}\n"], [4216040, "sub_4054E8", "void *__fastcall sub_4054E8(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405428(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4216083, "sub_405513", "void *__fastcall sub_405513(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4055AA(a1, a2, v2);\n  return v4;\n}\n"], [4216140, "sub_40554C", "void *__fastcall sub_40554C(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405428(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4216189, "sub_40557D", "void *__fastcall sub_40557D(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40554C(a1, v1 + 1);\n}\n"], [4216234, "sub_4055AA", "void __noreturn sub_4055AA()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4216287, "sub_4055DF", "__int64 __fastcall sub_4055DF(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4216382, "sub_40563E", "__int64 __fastcall sub_40563E(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_4055DF(a1, a2) )\n    ;\n  return i;\n}\n"], [4216447, "sub_40567F", "__int64 __fastcall sub_40567F(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_40563E(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_4055DF(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_40563E(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_4055DF(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_40563E(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_40563E(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_4055DF(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_40563E(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_40563E(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_40563E(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_40563E(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4217579, "sub_405AEB", "int __fastcall sub_405AEB(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_405BD3(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4217760, "sub_405BA0", "__int64 __fastcall sub_405BA0(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_405C1E(a1, 0LL, 1LL);\n  return result;\n}\n"], [4217811, "sub_405BD3", "int __fastcall sub_405BD3(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_405BA0(a1);\n  return fflush(a1);\n}\n"], [4217886, "sub_405C1E", "int __fastcall sub_405C1E(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4218070, "sub_405CD6", "void __noreturn sub_405CD6()\n{\n  sub_401897(1);\n}\n"], [4218086, "sub_405CE6", "__int64 __fastcall sub_405CE6(const char *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 result; // rax\n  char v7; // [rsp+27h] [rbp-19h]\n  __int64 i; // [rsp+28h] [rbp-18h]\n  __int64 v9; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v7 = 0;\n  n = strlen(a1);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !strncmp(*(const char **)(8 * i + a2), a1, n) )\n    {\n      if ( strlen(*(const char **)(8 * i + a2)) == n )\n        return i;\n      if ( v9 == -1 )\n      {\n        v9 = i;\n      }\n      else if ( !a3 || memcmp((const void *)(a4 * v9 + a3), (const void *)(i * a4 + a3), a4) )\n      {\n        v7 = 1;\n      }\n    }\n  }\n  if ( v7 )\n    result = -2LL;\n  else\n    result = v9;\n  return result;\n}\n"], [4218389, "sub_405E15", "void __fastcall sub_405E15(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  void *v5; // rax\n  char *format; // [rsp+28h] [rbp-18h]\n\n  if ( a3 == -1 )\n    v3 = gettext(\"invalid argument %s for %s\");\n  else\n    v3 = gettext(\"ambiguous argument %s for %s\");\n  format = v3;\n  v4 = sub_40616D(1LL, a1);\n  v5 = sub_404710(0, 6, a2);\n  error(0, 0, format, v5, v4);\n}\n"], [4218528, "sub_405EA0", "int __fastcall sub_405EA0(__int64 a1, __int64 a2, size_t a3)\n{\n  char *v3; // rax\n  __int64 i; // [rsp+20h] [rbp-10h]\n  void *s1; // [rsp+28h] [rbp-8h]\n\n  s1 = 0LL;\n  v3 = gettext(\"Valid arguments are:\");\n  fprintf(stderr, v3);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a1); ++i )\n  {\n    if ( i && !memcmp(s1, (const void *)(i * a3 + a2), a3) )\n    {\n      fprintf(stderr, \", `%s'\", *(const char **)(8 * i + a1));\n    }\n    else\n    {\n      fprintf(stderr, \"\\n  - `%s'\", *(const char **)(8 * i + a1));\n      s1 = (void *)(i * a3 + a2);\n    }\n  }\n  return putc_unlocked(10, stderr);\n}\n"], [4218832, "sub_405FD0", "__int64 __fastcall sub_405FD0(__int64 a1, const char *a2, __int64 a3, __int64 a4, size_t a5, void (*a6)(void))\n{\n  __int64 v11; // [rsp+38h] [rbp-8h]\n\n  v11 = sub_405CE6(a2, a3, a4, a5);\n  if ( v11 >= 0 )\n    return v11;\n  sub_405E15(a1, (__int64)a2, v11);\n  sub_405EA0(a3, a4, a5);\n  a6();\n  return -1LL;\n}\n"], [4218966, "sub_406056", "__int64 __fastcall sub_406056(const void *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 i; // [rsp+28h] [rbp-8h]\n\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !memcmp(a1, (const void *)(i * a4 + a3), a4) )\n      return *(_QWORD *)(8 * i + a2);\n  }\n  return 0LL;\n}\n"], [4219106, "sub_4060E2", "__int64 __fastcall sub_4060E2(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_405AEB(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4219245, "sub_40616D", "void *__fastcall sub_40616D(int a1, __int64 a2)\n{\n  return sub_404710(a1, 6, a2);\n}\n"], [4219281, "sub_406191", "void *__fastcall sub_406191(__int64 a1)\n{\n  return sub_40616D(0, a1);\n}\n"], [4219312, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_607E18 - off_607E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_607E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4219424, "fini", "void fini(void)\n{\n  ;\n}\n"], [4219440, "sub_406230", "int __fastcall sub_406230(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6081F8 )\n    v1 = (void *)qword_6081F8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4219468, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]