[[4199032, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199072, "sub_4012A0", "__int64 sub_4012A0()\n{\n  return qword_60A010();\n}\n"], [4199088, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199104, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199120, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199136, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199152, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199168, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199184, ".readlink", "// attributes: thunk\nssize_t readlink(const char *path, char *buf, size_t len)\n{\n  return readlink(path, buf, len);\n}\n"], [4199200, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199216, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199232, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199248, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199264, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199280, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4199296, ".openat", "// attributes: thunk\nint openat(int fd, const char *file, int oflag, ...)\n{\n  return openat(fd, file, oflag);\n}\n"], [4199312, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199328, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199344, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199360, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199376, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4199392, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199408, ".__fxstatat", "// attributes: thunk\nint __fxstatat(int ver, int fildes, const char *filename, struct stat *stat_buf, int flag)\n{\n  return _fxstatat(ver, fildes, filename, stat_buf, flag);\n}\n"], [4199424, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199440, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199456, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199472, ".getcwd", "// attributes: thunk\nchar *getcwd(char *buf, size_t size)\n{\n  return getcwd(buf, size);\n}\n"], [4199488, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4199504, ".rewinddir", "// attributes: thunk\nvoid rewinddir(DIR *dirp)\n{\n  rewinddir(dirp);\n}\n"], [4199520, ".strspn", "// attributes: thunk\nsize_t strspn(const char *s, const char *accept)\n{\n  return strspn(s, accept);\n}\n"], [4199536, ".closedir", "// attributes: thunk\nint closedir(DIR *dirp)\n{\n  return closedir(dirp);\n}\n"], [4199552, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199568, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199584, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199600, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199616, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199632, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199648, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199664, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199680, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199696, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199712, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4199728, ".readdir", "// attributes: thunk\nstruct dirent *readdir(DIR *dirp)\n{\n  return readdir(dirp);\n}\n"], [4199744, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199760, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199776, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4199792, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199808, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199824, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199840, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4199856, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199872, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199888, ".fdopendir", "// attributes: thunk\nDIR *fdopendir(int fd)\n{\n  return fdopendir(fd);\n}\n"], [4199904, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199920, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199936, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199952, ".strdup", "// attributes: thunk\nchar *strdup(const char *s)\n{\n  return strdup(s);\n}\n"], [4199968, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199984, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200000, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200016, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200064, "sub_401680", "signed __int64 sub_401680()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60A23F - &unk_60A238;\n  if ( (unsigned __int64)(&unk_60A23F - &unk_60A238) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200112, "sub_4016B0", "__int64 sub_4016B0()\n{\n  return 0LL;\n}\n"], [4200176, "sub_4016F0", "signed __int64 sub_4016F0()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60A278 )\n  {\n    result = sub_401680();\n    byte_60A278 = 1;\n  }\n  return result;\n}\n"], [4200208, "sub_401710", "__int64 sub_401710()\n{\n  return sub_4016B0();\n}\n"], [4200253, "sub_40173D", "int sub_40173D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_40277F(qword_60A290);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_40277F(qword_60A290);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_40277F(qword_60A290);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200519, "sub_401847", "void __fastcall __noreturn sub_401847(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n\n  v1 = qword_60A290;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... FILE\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\"Print value of a symbolic link or canonical file name\\n\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\n           \"  -f, --canonicalize            canonicalize by following every symlink in\\n\"\n           \"                                every component of the given name recursively;\\n\"\n           \"                                all but the last component must exist\\n\"\n           \"  -e, --canonicalize-existing   canonicalize by following every symlink in\\n\"\n           \"                                every component of the given name recursively,\\n\"\n           \"                                all components must exist\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -m, --canonicalize-missing    canonicalize by following every symlink in\\n\"\n           \"                                every component of the given name recursively,\\n\"\n           \"                                without requirements on components existence\\n\"\n           \"  -n, --no-newline              do not output the trailing newline\\n\"\n           \"  -q, --quiet,\\n\"\n           \"  -s, --silent                  suppress most error messages\\n\"\n           \"  -v, --verbose                 report error messages\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v13, v12);\n    sub_40173D();\n  }\n  exit(a1);\n}\n"], [4200776, "main", "__int64 __fastcall main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  int v4; // eax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rax\n  const char *v8; // rax\n  __int64 result; // rax\n  int *v10; // rax\n  unsigned int v11; // [rsp+18h] [rbp-28h]\n  int v12; // [rsp+1Ch] [rbp-24h]\n  const char *v13; // [rsp+20h] [rbp-20h]\n  char *ptr; // [rsp+28h] [rbp-18h]\n\n  v11 = -1;\n  sub_404364(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_4075C0(sub_402694);\n  while ( 1 )\n  {\n    v12 = getopt_long(a1, a2, \"efmnqsv\", &longopts, 0LL);\n    if ( v12 == -1 )\n      break;\n    if ( v12 == 109 )\n    {\n      v11 = 2;\n    }\n    else if ( v12 > 109 )\n    {\n      if ( v12 == 113 )\n        goto LABEL_22;\n      if ( v12 > 113 )\n      {\n        if ( v12 == 115 )\n        {\nLABEL_22:\n          byte_60A27A = 0;\n        }\n        else\n        {\n          if ( v12 != 118 )\n            goto LABEL_26;\n          byte_60A27A = 1;\n        }\n      }\n      else\n      {\n        if ( v12 != 110 )\n          goto LABEL_26;\n        byte_60A279 = 1;\n      }\n    }\n    else\n    {\n      if ( v12 == -130 )\n        sub_401847(0);\n      if ( v12 <= -130 )\n      {\n        if ( v12 == -131 )\n        {\n          sub_406532(\n            (_DWORD)stdout,\n            (unsigned int)\"readlink\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_60A200,\n            (unsigned int)\"Dmitry V. Levin\",\n            0,\n            (char)a2);\n          exit(0);\n        }\nLABEL_26:\n        sub_401847(1);\n      }\n      if ( v12 == 101 )\n      {\n        v11 = 0;\n      }\n      else\n      {\n        if ( v12 != 102 )\n          goto LABEL_26;\n        v11 = 1;\n      }\n    }\n  }\n  if ( optind >= a1 )\n  {\n    v3 = gettext(\"missing operand\");\n    error(0, 0, v3);\n    sub_401847(1);\n  }\n  v4 = optind++;\n  v13 = a2[v4];\n  if ( optind < a1 )\n  {\n    v5 = sub_40446F(a2[optind]);\n    v6 = gettext(\"extra operand %s\");\n    error(0, 0, v6, v5);\n    sub_401847(1);\n  }\n  if ( v11 == -1 )\n    v7 = sub_401C1C(v13, 63LL);\n  else\n    v7 = sub_401E12(v13, v11);\n  ptr = (char *)v7;\n  if ( v7 )\n  {\n    if ( byte_60A279 )\n      v8 = locale;\n    else\n      v8 = \"\\n\";\n    printf(\"%s%s\", ptr, v8);\n    free(ptr);\n    result = 0LL;\n  }\n  else\n  {\n    if ( byte_60A27A )\n    {\n      v10 = __errno_location();\n      error(1, *v10, \"%s\", v13);\n    }\n    result = 1LL;\n  }\n  return result;\n}\n"], [4201500, "sub_401C1C", "char *__fastcall sub_401C1C(const char *a1, unsigned __int64 a2)\n{\n  __int64 v2; // rax\n  char *i; // rax\n  int v5; // [rsp+14h] [rbp-3Ch]\n  size_t size; // [rsp+18h] [rbp-38h]\n  char *buf; // [rsp+38h] [rbp-18h]\n  ssize_t v8; // [rsp+48h] [rbp-8h]\n\n  if ( a2 >= 0x401 )\n    v2 = 1025LL;\n  else\n    v2 = a2 + 1;\n  size = v2;\nLABEL_5:\n  for ( i = (char *)malloc(size); ; i = (char *)malloc(0x7FFFFFFFFFFFFFFFuLL) )\n  {\n    buf = i;\n    if ( !i )\n      return 0LL;\n    v8 = readlink(a1, i, size);\n    if ( v8 < 0 && *__errno_location() != 34 )\n    {\n      v5 = *__errno_location();\n      free(buf);\n      *__errno_location() = v5;\n      return 0LL;\n    }\n    if ( v8 < size )\n    {\n      buf[v8] = 0;\n      return buf;\n    }\n    free(buf);\n    if ( size <= 0x3FFFFFFFFFFFFFFFLL )\n    {\n      size *= 2LL;\n      goto LABEL_5;\n    }\n    if ( size > 0x7FFFFFFFFFFFFFFELL )\n      break;\n    size = 0x7FFFFFFFFFFFFFFFLL;\n  }\n  *__errno_location() = 12;\n  return 0LL;\n}\n"], [4201835, "sub_401D6B", "__int64 __fastcall sub_401D6B(_QWORD *a1, __int64 a2, __int64 a3)\n{\n  if ( !*a1 )\n  {\n    *a1 = sub_40323F(7LL, 0LL, sub_4041CD, sub_4042BB, sub_404333);\n    if ( !*a1 )\n      sub_40691C();\n  }\n  if ( (unsigned __int8)sub_4028D1(*a1, a2, a3) )\n    return 1LL;\n  sub_402836(*a1, a2, a3);\n  return 0LL;\n}\n"], [4202002, "sub_401E12", "char *__fastcall sub_401E12(char *a1, int a2)\n{\n  _BYTE *v3; // rax\n  char *v4; // rax\n  size_t v5; // rax\n  size_t v6; // rax\n  char *v7; // [rsp+8h] [rbp-118h]\n  int v8; // [rsp+1Ch] [rbp-104h]\n  __int64 v9; // [rsp+20h] [rbp-100h] BYREF\n  char *s; // [rsp+28h] [rbp-F8h]\n  void *dest; // [rsp+30h] [rbp-F0h]\n  void *ptr; // [rsp+38h] [rbp-E8h]\n  void *src; // [rsp+40h] [rbp-E0h]\n  char *i; // [rsp+48h] [rbp-D8h]\n  char *v15; // [rsp+50h] [rbp-D0h]\n  size_t v16; // [rsp+58h] [rbp-C8h]\n  __int64 v17; // [rsp+60h] [rbp-C0h]\n  char *v18; // [rsp+68h] [rbp-B8h]\n  __int64 v19; // [rsp+70h] [rbp-B0h]\n  char *v20; // [rsp+78h] [rbp-A8h]\n  size_t n; // [rsp+80h] [rbp-A0h]\n  size_t v22; // [rsp+88h] [rbp-98h]\n  struct stat stat_buf; // [rsp+90h] [rbp-90h] BYREF\n\n  v7 = a1;\n  ptr = 0LL;\n  v16 = 0LL;\n  v9 = 0LL;\n  if ( !a1 )\n  {\n    *__errno_location() = 22;\n    return 0LL;\n  }\n  if ( !*a1 )\n  {\n    *__errno_location() = 2;\n    return 0LL;\n  }\n  if ( *a1 == 47 )\n  {\n    s = (char *)sub_40679A(4096LL);\n    v15 = s + 4096;\n    *s = 47;\n    dest = s + 1;\n  }\n  else\n  {\n    s = (char *)sub_406951();\n    if ( !s )\n      return 0LL;\n    dest = strchr(s, 0);\n    if ( (_BYTE *)dest - s > 4095 )\n    {\n      v15 = (char *)dest;\n    }\n    else\n    {\n      v18 = (char *)sub_4067CF(s, 4096LL);\n      dest = &v18[(_BYTE *)dest - s];\n      s = v18;\n      v15 = v18 + 4096;\n    }\n  }\n  for ( src = a1; *(_BYTE *)src; src = i )\n  {\n    while ( *(_BYTE *)src == 47 )\n      src = (char *)src + 1;\n    for ( i = (char *)src; *i && *i != 47; ++i )\n      ;\n    if ( i == src )\n      break;\n    if ( i - (_BYTE *)src == 1 && *(_BYTE *)src == 46 )\n      continue;\n    if ( i - (_BYTE *)src == 2 && *(_BYTE *)src == 46 && *((_BYTE *)src + 1) == 46 )\n    {\n      if ( s + 1 < dest )\n      {\n        do\n          dest = (char *)dest - 1;\n        while ( *((char *)dest - 1) != 47 );\n      }\n      continue;\n    }\n    if ( *((char *)dest - 1) != 47 )\n    {\n      v3 = dest;\n      dest = (char *)dest + 1;\n      *v3 = 47;\n    }\n    if ( (char *)dest + i - (_BYTE *)src >= v15 )\n    {\n      v19 = (_BYTE *)dest - s;\n      v17 = v15 - s;\n      if ( i - (_BYTE *)src + 1 <= 4096 )\n        v17 += 4096LL;\n      else\n        v17 += i - (_BYTE *)src + 1;\n      s = (char *)sub_4067CF(s, v17);\n      v15 = &s[v17];\n      dest = &s[v19];\n    }\n    v4 = (char *)memcpy(dest, src, i - (_BYTE *)src);\n    dest = &v4[i - (_BYTE *)src];\n    *(_BYTE *)dest = 0;\n    if ( (unsigned int)sub_407600(s, &stat_buf) )\n    {\n      v8 = *__errno_location();\n      if ( !a2 )\n        goto LABEL_76;\n      if ( a2 == 1 )\n      {\n        v5 = strspn(i, \"/\");\n        if ( i[v5] || v8 != 2 )\n          goto LABEL_76;\n        continue;\n      }\n      stat_buf.st_mode = 0;\n    }\n    if ( (stat_buf.st_mode & 0xF000) == 40960 )\n    {\n      if ( (unsigned __int8)sub_401D6B(&v9, (__int64)v7, (__int64)&stat_buf) )\n      {\n        if ( a2 != 2 )\n        {\n          v8 = 40;\nLABEL_76:\n          free(ptr);\n          free(s);\n          if ( v9 )\n            sub_4034AA(v9);\n          *__errno_location() = v8;\n          return 0LL;\n        }\n      }\n      else\n      {\n        v20 = sub_401C1C(s, stat_buf.st_size);\n        if ( v20 )\n        {\n          n = strlen(v20);\n          v22 = strlen(i);\n          if ( v16 )\n          {\n            if ( n + v22 + 1 > v16 )\n            {\n              v16 = n + v22 + 1;\n              ptr = (void *)sub_4067CF(ptr, v16);\n            }\n          }\n          else\n          {\n            v6 = n + v22 + 1;\n            if ( v6 < 0x1000 )\n              v6 = 4096LL;\n            v16 = v6;\n            ptr = (void *)sub_40679A(v6);\n          }\n          memmove((char *)ptr + n, i, v22 + 1);\n          i = (char *)memcpy(ptr, v20, n);\n          v7 = i;\n          if ( *v20 == 47 )\n          {\n            dest = s + 1;\n          }\n          else if ( s + 1 < dest )\n          {\n            do\n              dest = (char *)dest - 1;\n            while ( *((char *)dest - 1) != 47 );\n          }\n          free(v20);\n        }\n        else if ( a2 != 2 || *__errno_location() == 12 )\n        {\n          v8 = *__errno_location();\n          goto LABEL_76;\n        }\n      }\n    }\n    else if ( (stat_buf.st_mode & 0xF000) != 0x4000 && *i && a2 != 2 )\n    {\n      v8 = 20;\n      goto LABEL_76;\n    }\n  }\n  if ( s + 1 < dest && *((char *)dest - 1) == 47 )\n    dest = (char *)dest - 1;\n  *(_BYTE *)dest = 0;\n  if ( (char *)dest + 1 != v15 )\n    s = (char *)sub_4067CF(s, (_BYTE *)dest - s + 1);\n  free(ptr);\n  if ( v9 )\n    sub_4034AA(v9);\n  return s;\n}\n"], [4204138, "sub_40266A", "__int64 __fastcall sub_40266A(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_60A280 = a1;\n  return result;\n}\n"], [4204159, "sub_40267F", "__int64 __fastcall sub_40267F(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60A288 = a1;\n  return result;\n}\n"], [4204180, "sub_402694", "__int64 sub_402694()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40711C(stdout) && (byte_60A288 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60A280 )\n    {\n      v0 = (const char *)sub_405A88(qword_60A280);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40711C(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4204415, "sub_40277F", "_BYTE *__fastcall sub_40277F(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4204520, "sub_4027E8", "size_t __fastcall sub_4027E8(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4204598, "sub_402836", "void __fastcall sub_402836(__int64 a1, __int64 a2, _QWORD *a3)\n{\n  _QWORD *v4; // [rsp+20h] [rbp-10h]\n  __int64 v5; // [rsp+28h] [rbp-8h]\n\n  if ( a1 )\n  {\n    v4 = (_QWORD *)sub_40679A(24LL);\n    *v4 = sub_4068EF(a2);\n    v4[1] = a3[1];\n    v4[2] = *a3;\n    v5 = sub_403ED5(a1, v4);\n    if ( !v5 )\n      sub_40691C();\n    if ( (_QWORD *)v5 != v4 )\n      sub_404333(v4);\n  }\n}\n"], [4204753, "sub_4028D1", "bool __fastcall sub_4028D1(__int64 a1, __int64 a2, __int64 *a3)\n{\n  __int64 v4[4]; // [rsp+20h] [rbp-20h] BYREF\n\n  if ( !a1 )\n    return 0;\n  v4[0] = a2;\n  v4[1] = a3[1];\n  v4[2] = *a3;\n  return sub_402C06(a1, v4) != 0;\n}\n"], [4204845, "sub_40292D", "__int64 __fastcall sub_40292D(__int64 a1, char a2)\n{\n  return __ROR8__(a1, a2);\n}\n"], [4204873, "sub_402949", "__int64 __fastcall sub_402949(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 16);\n}\n"], [4204891, "sub_40295B", "__int64 __fastcall sub_40295B(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 24);\n}\n"], [4204909, "sub_40296D", "__int64 __fastcall sub_40296D(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 32);\n}\n"], [4204927, "sub_40297F", "unsigned __int64 __fastcall sub_40297F(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  unsigned __int64 v3; // [rsp+10h] [rbp-18h]\n  _QWORD *v4; // [rsp+18h] [rbp-10h]\n  unsigned __int64 j; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v4 = i;\n      for ( j = 1LL; ; ++j )\n      {\n        v4 = (_QWORD *)v4[1];\n        if ( !v4 )\n          break;\n      }\n      if ( j > v3 )\n        v3 = j;\n    }\n  }\n  return v3;\n}\n"], [4205053, "sub_4029FD", "_BOOL8 __fastcall sub_4029FD(__int64 a1)\n{\n  _QWORD *i; // [rsp+8h] [rbp-20h]\n  __int64 v3; // [rsp+10h] [rbp-18h]\n  __int64 v4; // [rsp+18h] [rbp-10h]\n  _QWORD *v5; // [rsp+20h] [rbp-8h]\n\n  v3 = 0LL;\n  v4 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      v5 = i;\n      ++v3;\n      ++v4;\n      while ( 1 )\n      {\n        v5 = (_QWORD *)v5[1];\n        if ( !v5 )\n          break;\n        ++v4;\n      }\n    }\n  }\n  return *(_QWORD *)(a1 + 24) == v3 && *(_QWORD *)(a1 + 32) == v4;\n}\n"], [4205207, "sub_402A97", "int __fastcall sub_402A97(__int64 a1, FILE *a2)\n{\n  double v2; // xmm0_8\n  double v3; // xmm1_8\n  double v4; // xmm0_8\n  __int64 v6; // [rsp+10h] [rbp-20h]\n  __int64 v7; // [rsp+18h] [rbp-18h]\n  __int64 v8; // [rsp+20h] [rbp-10h]\n  unsigned __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v6 = sub_40296D(a1);\n  v7 = sub_402949(a1);\n  v8 = sub_40295B(a1);\n  v9 = sub_40297F(a1);\n  fprintf(a2, \"# entries:         %lu\\n\", v6);\n  fprintf(a2, \"# buckets:         %lu\\n\", v7);\n  if ( v8 < 0 )\n    v2 = (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1)) + (double)(int)(v8 & 1 | ((unsigned __int64)v8 >> 1));\n  else\n    v2 = (double)(int)v8;\n  v3 = 100.0 * v2;\n  if ( v7 < 0 )\n    v4 = (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1)) + (double)(int)(v7 & 1 | ((unsigned __int64)v7 >> 1));\n  else\n    v4 = (double)(int)v7;\n  fprintf(a2, \"# buckets used:    %lu (%.2f%%)\\n\", v8, v3 / v4);\n  return fprintf(a2, \"max bucket length: %lu\\n\", v9);\n}\n"], [4205487, "sub_402BAF", "__int64 __fastcall sub_402BAF(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = (*(__int64 (__fastcall **)(__int64, _QWORD))(a1 + 48))(a2, *(_QWORD *)(a1 + 16));\n  if ( *(_QWORD *)(a1 + 16) <= v3 )\n    abort();\n  return 16 * v3 + *(_QWORD *)a1;\n}\n"], [4205574, "sub_402C06", "__int64 __fastcall sub_402C06(__int64 a1, __int64 a2)\n{\n  _QWORD *i; // [rsp+10h] [rbp-10h]\n  _QWORD *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = (_QWORD *)sub_402BAF(a1, a2);\n  if ( !*v4 )\n    return 0LL;\n  for ( i = v4; i; i = (_QWORD *)i[1] )\n  {\n    if ( *i == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *i) )\n      return *i;\n  }\n  return 0LL;\n}\n"], [4205721, "sub_402C99", "__int64 __fastcall sub_402C99(unsigned __int64 *a1)\n{\n  unsigned __int64 i; // [rsp+18h] [rbp-8h]\n\n  if ( !a1[4] )\n    return 0LL;\n  for ( i = *a1; ; i += 16LL )\n  {\n    if ( a1[1] <= i )\n      abort();\n    if ( *(_QWORD *)i )\n      break;\n  }\n  return *(_QWORD *)i;\n}\n"], [4205813, "sub_402CF5", "__int64 __fastcall sub_402CF5(__int64 a1, __int64 a2)\n{\n  unsigned __int64 v3; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = sub_402BAF(a1, a2);\n  v4 = v3;\n  do\n  {\n    if ( *(_QWORD *)v4 == a2 && *(_QWORD *)(v4 + 8) )\n      return **(_QWORD **)(v4 + 8);\n    v4 = *(_QWORD *)(v4 + 8);\n  }\n  while ( v4 );\n  while ( 1 )\n  {\n    v3 += 16LL;\n    if ( v3 >= *(_QWORD *)(a1 + 8) )\n      break;\n    if ( *(_QWORD *)v3 )\n      return *(_QWORD *)v3;\n  }\n  return 0LL;\n}\n"], [4205967, "sub_402D8F", "unsigned __int64 __fastcall sub_402D8F(__int64 a1, __int64 a2, unsigned __int64 a3)\n{\n  __int64 v4; // rax\n  unsigned __int64 v5; // [rsp+20h] [rbp-18h]\n  _QWORD *i; // [rsp+28h] [rbp-10h]\n  _QWORD *j; // [rsp+30h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( v5 >= a3 )\n          return v5;\n        v4 = v5++;\n        *(_QWORD *)(a2 + 8 * v4) = *j;\n      }\n    }\n  }\n  return v5;\n}\n"], [4206123, "sub_402E2B", "__int64 __fastcall sub_402E2B(__int64 a1, unsigned __int8 (__fastcall *a2)(_QWORD, __int64), __int64 a3)\n{\n  __int64 v5; // [rsp+28h] [rbp-18h]\n  _QWORD *i; // [rsp+30h] [rbp-10h]\n  _QWORD *j; // [rsp+38h] [rbp-8h]\n\n  v5 = 0LL;\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = i; j; j = (_QWORD *)j[1] )\n      {\n        if ( a2(*j, a3) != 1 )\n          return v5;\n        ++v5;\n      }\n    }\n  }\n  return v5;\n}\n"], [4206271, "sub_402EBF", "unsigned __int64 __fastcall sub_402EBF(_BYTE *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( *a1 )\n    v4 = (31 * v4 + (unsigned __int8)*a1++) % a2;\n  return v4;\n}\n"], [4206357, "sub_402F15", "bool __fastcall sub_402F15(unsigned __int64 a1)\n{\n  unsigned __int64 v2; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+8h] [rbp-10h]\n  unsigned __int64 v4; // [rsp+10h] [rbp-8h]\n\n  v2 = 3LL;\n  v4 = 9LL;\n  while ( v4 < a1 && a1 % v2 )\n  {\n    v3 = v2 + 1;\n    v4 += 4 * v3;\n    v2 = v3 + 1;\n  }\n  return a1 % v2 != 0;\n}\n"], [4206465, "sub_402F81", "__int64 __fastcall sub_402F81(unsigned __int64 a1)\n{\n  __int64 v2; // [rsp+0h] [rbp-8h]\n  __int64 i; // [rsp+0h] [rbp-8h]\n\n  v2 = a1;\n  if ( a1 <= 9 )\n    v2 = 10LL;\n  for ( i = v2 | 1; i != -1 && !sub_402F15(i); i += 2LL )\n    ;\n  return i;\n}\n"], [4206536, "sub_402FC8", "__int64 __fastcall sub_402FC8(__int64 a1)\n{\n  __int64 result; // rax\n\n  *(_DWORD *)a1 = 0;\n  *(_DWORD *)(a1 + 4) = 1065353216;\n  *(_DWORD *)(a1 + 8) = 1061997773;\n  *(_DWORD *)(a1 + 12) = 1068826100;\n  result = a1;\n  *(_BYTE *)(a1 + 16) = 0;\n  return result;\n}\n"], [4206605, "sub_40300D", "unsigned __int64 __fastcall sub_40300D(__int64 a1, unsigned __int64 a2)\n{\n  return sub_40292D(a1, 3) % a2;\n}\n"], [4206660, "sub_403044", "bool __fastcall sub_403044(__int64 a1, __int64 a2)\n{\n  return a1 == a2;\n}\n"], [4206685, "sub_40305D", "__int64 __fastcall sub_40305D(__int64 a1)\n{\n  __int64 v2; // [rsp+10h] [rbp-8h]\n\n  v2 = *(_QWORD *)(a1 + 40);\n  if ( (_UNKNOWN *)v2 == &unk_407E50 )\n    return 1LL;\n  if ( *(float *)(v2 + 8) > 0.1\n    && (float)(1.0 - 0.1) > *(float *)(v2 + 8)\n    && *(float *)(v2 + 12) > (float)(0.1 + 1.0)\n    && *(float *)v2 >= 0.0\n    && *(float *)(v2 + 4) > (float)(*(float *)v2 + 0.1)\n    && *(float *)(v2 + 4) <= 1.0\n    && *(float *)(v2 + 8) > (float)(*(float *)v2 + 0.1) )\n  {\n    return 1LL;\n  }\n  *(_QWORD *)(a1 + 40) = &unk_407E50;\n  return 0LL;\n}\n"], [4206933, "sub_403155", "unsigned __int64 __fastcall sub_403155(__int64 a1, __int64 a2)\n{\n  float v2; // xmm0_4\n  unsigned __int64 result; // rax\n  unsigned __int64 v4; // [rsp+8h] [rbp-18h]\n  unsigned __int64 v5; // [rsp+8h] [rbp-18h]\n  float v6; // [rsp+1Ch] [rbp-4h]\n\n  v4 = a1;\n  if ( *(_BYTE *)(a2 + 16) != 1 )\n  {\n    if ( a1 < 0 )\n      v2 = (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1))\n         + (float)(a1 & 1 | (unsigned int)((unsigned __int64)a1 >> 1));\n    else\n      v2 = (float)(int)a1;\n    v6 = v2 / *(float *)(a2 + 8);\n    if ( v6 >= 1.8446744e19 )\n      return 0LL;\n    if ( v6 >= 9.223372e18 )\n      v4 = (unsigned int)(int)(float)(v6 - 9.223372e18) ^ 0x8000000000000000LL;\n    else\n      v4 = (unsigned int)(int)v6;\n  }\n  v5 = sub_402F81(v4);\n  if ( v5 <= 0x1FFFFFFFFFFFFFFFLL )\n    result = v5;\n  else\n    result = 0LL;\n  return result;\n}\n"], [4207167, "sub_40323F", "size_t *__fastcall sub_40323F(__int64 a1, void *a2, unsigned __int64 (__fastcall *a3)(__int64 a1, unsigned __int64 a2), bool (__fastcall *a4)(__int64 a1, __int64 a2), size_t a5)\n{\n  size_t *result; // rax\n  bool (__fastcall *v7)(__int64, __int64); // [rsp+10h] [rbp-30h]\n  unsigned __int64 (__fastcall *v8)(__int64, unsigned __int64); // [rsp+18h] [rbp-28h]\n  void *v9; // [rsp+20h] [rbp-20h]\n  size_t *ptr; // [rsp+38h] [rbp-8h]\n\n  v9 = a2;\n  v8 = a3;\n  v7 = a4;\n  if ( !a3 )\n    v8 = sub_40300D;\n  if ( !a4 )\n    v7 = sub_403044;\n  ptr = (size_t *)malloc(0x50uLL);\n  if ( !ptr )\n    return 0LL;\n  if ( !a2 )\n    v9 = &unk_407E50;\n  ptr[5] = (size_t)v9;\n  if ( (unsigned __int8)sub_40305D((__int64)ptr) == 1\n    && (ptr[2] = sub_403155(a1, (__int64)v9)) != 0\n    && (*ptr = (size_t)calloc(ptr[2], 0x10uLL)) != 0 )\n  {\n    ptr[1] = 16 * ptr[2] + *ptr;\n    ptr[3] = 0LL;\n    ptr[4] = 0LL;\n    ptr[6] = (size_t)v8;\n    ptr[7] = (size_t)v7;\n    ptr[8] = a5;\n    ptr[9] = 0LL;\n    result = ptr;\n  }\n  else\n  {\n    free(ptr);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4207524, "sub_4033A4", "__int64 __fastcall sub_4033A4(__int64 a1)\n{\n  __int64 result; // rax\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+20h] [rbp-10h]\n  _QWORD *v4; // [rsp+28h] [rbp-8h]\n\n  for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (_QWORD *)i[1]; j; j = v4 )\n      {\n        if ( *(_QWORD *)(a1 + 64) )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*j);\n        *j = 0LL;\n        v4 = (_QWORD *)j[1];\n        j[1] = *(_QWORD *)(a1 + 72);\n        *(_QWORD *)(a1 + 72) = j;\n      }\n      if ( *(_QWORD *)(a1 + 64) )\n        (*(void (__fastcall **)(_QWORD))(a1 + 64))(*i);\n      *i = 0LL;\n      i[1] = 0LL;\n    }\n  }\n  *(_QWORD *)(a1 + 24) = 0LL;\n  result = a1;\n  *(_QWORD *)(a1 + 32) = 0LL;\n  return result;\n}\n"], [4207786, "sub_4034AA", "void __fastcall sub_4034AA(__int64 a1)\n{\n  _QWORD *i; // [rsp+18h] [rbp-18h]\n  _QWORD *j; // [rsp+18h] [rbp-18h]\n  _QWORD *ptr; // [rsp+20h] [rbp-10h]\n  _QWORD *ptra; // [rsp+20h] [rbp-10h]\n  _QWORD *ptrb; // [rsp+20h] [rbp-10h]\n  _QWORD *v6; // [rsp+28h] [rbp-8h]\n  _QWORD *v7; // [rsp+28h] [rbp-8h]\n\n  if ( *(_QWORD *)(a1 + 64) && *(_QWORD *)(a1 + 32) )\n  {\n    for ( i = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)i; i += 2 )\n    {\n      if ( *i )\n      {\n        for ( ptr = i; ptr; ptr = (_QWORD *)ptr[1] )\n          (*(void (__fastcall **)(_QWORD))(a1 + 64))(*ptr);\n      }\n    }\n  }\n  for ( j = *(_QWORD **)a1; *(_QWORD *)(a1 + 8) > (unsigned __int64)j; j += 2 )\n  {\n    for ( ptra = (_QWORD *)j[1]; ptra; ptra = v6 )\n    {\n      v6 = (_QWORD *)ptra[1];\n      free(ptra);\n    }\n  }\n  for ( ptrb = *(_QWORD **)(a1 + 72); ptrb; ptrb = v7 )\n  {\n    v7 = (_QWORD *)ptrb[1];\n    free(ptrb);\n  }\n  free(*(void **)a1);\n  free((void *)a1);\n}\n"], [4208084, "sub_4035D4", "void *__fastcall sub_4035D4(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  if ( !*(_QWORD *)(a1 + 72) )\n    return malloc(0x10uLL);\n  v2 = *(_QWORD *)(a1 + 72);\n  *(_QWORD *)(a1 + 72) = *(_QWORD *)(v2 + 8);\n  return (void *)v2;\n}\n"], [4208159, "sub_40361F", "__int64 __fastcall sub_40361F(__int64 a1, _QWORD *a2)\n{\n  __int64 result; // rax\n\n  *a2 = 0LL;\n  a2[1] = *(_QWORD *)(a1 + 72);\n  result = a1;\n  *(_QWORD *)(a1 + 72) = a2;\n  return result;\n}\n"], [4208212, "sub_403654", "__int64 __fastcall sub_403654(__int64 a1, __int64 a2, _QWORD *a3, char a4)\n{\n  __int64 result; // rax\n  __int64 v5; // rdx\n  _QWORD *i; // [rsp+20h] [rbp-30h]\n  _QWORD *v9; // [rsp+28h] [rbp-28h]\n  __int64 v10; // [rsp+30h] [rbp-20h]\n  _QWORD *v11; // [rsp+38h] [rbp-18h]\n  __int64 v12; // [rsp+40h] [rbp-10h]\n  _QWORD *v13; // [rsp+48h] [rbp-8h]\n\n  v9 = (_QWORD *)sub_402BAF(a1, a2);\n  *a3 = v9;\n  if ( !*v9 )\n    return 0LL;\n  if ( *v9 == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *v9) )\n  {\n    v12 = *v9;\n    if ( a4 )\n    {\n      if ( v9[1] )\n      {\n        v13 = (_QWORD *)v9[1];\n        v5 = v13[1];\n        *v9 = *v13;\n        v9[1] = v5;\n        sub_40361F(a1, v13);\n      }\n      else\n      {\n        *v9 = 0LL;\n      }\n    }\n    result = v12;\n  }\n  else\n  {\n    for ( i = v9; ; i = (_QWORD *)i[1] )\n    {\n      if ( !i[1] )\n        return 0LL;\n      if ( *(_QWORD *)i[1] == a2 || (*(unsigned __int8 (__fastcall **)(__int64, _QWORD))(a1 + 56))(a2, *(_QWORD *)i[1]) )\n        break;\n    }\n    v10 = *(_QWORD *)i[1];\n    if ( a4 )\n    {\n      v11 = (_QWORD *)i[1];\n      i[1] = v11[1];\n      sub_40361F(a1, v11);\n    }\n    result = v10;\n  }\n  return result;\n}\n"], [4208617, "sub_4037E9", "__int64 __fastcall sub_4037E9(__int64 a1, __int64 a2, char a3)\n{\n  __int64 *i; // [rsp+20h] [rbp-30h]\n  __int64 *j; // [rsp+28h] [rbp-28h]\n  __int64 v7; // [rsp+30h] [rbp-20h]\n  __int64 v8; // [rsp+30h] [rbp-20h]\n  _QWORD *v9; // [rsp+38h] [rbp-18h]\n  _QWORD *v10; // [rsp+38h] [rbp-18h]\n  __int64 *v11; // [rsp+40h] [rbp-10h]\n  _QWORD *v12; // [rsp+48h] [rbp-8h]\n\n  for ( i = *(__int64 **)a2; *(_QWORD *)(a2 + 8) > (unsigned __int64)i; i += 2 )\n  {\n    if ( *i )\n    {\n      for ( j = (__int64 *)i[1]; j; j = v11 )\n      {\n        v7 = *j;\n        v9 = (_QWORD *)sub_402BAF(a1, *j);\n        v11 = (__int64 *)j[1];\n        if ( *v9 )\n        {\n          j[1] = v9[1];\n          v9[1] = j;\n        }\n        else\n        {\n          *v9 = v7;\n          ++*(_QWORD *)(a1 + 24);\n          sub_40361F(a1, j);\n        }\n      }\n      v8 = *i;\n      i[1] = 0LL;\n      if ( !a3 )\n      {\n        v10 = (_QWORD *)sub_402BAF(a1, v8);\n        if ( *v10 )\n        {\n          v12 = sub_4035D4(a1);\n          if ( !v12 )\n            return 0LL;\n          *v12 = v8;\n          v12[1] = v10[1];\n          v10[1] = v12;\n        }\n        else\n        {\n          *v10 = v8;\n          ++*(_QWORD *)(a1 + 24);\n        }\n        *i = 0LL;\n        --*(_QWORD *)(a2 + 24);\n      }\n    }\n  }\n  return 1LL;\n}\n"], [4209079, "sub_4039B7", "__int64 __fastcall sub_4039B7(__int64 a1, __int64 a2)\n{\n  __int64 result; // rax\n  unsigned __int64 nmemb; // [rsp+10h] [rbp-60h]\n  void *v4; // [rsp+20h] [rbp-50h] BYREF\n  __int64 v5; // [rsp+28h] [rbp-48h]\n  unsigned __int64 v6; // [rsp+30h] [rbp-40h]\n  __int64 v7; // [rsp+38h] [rbp-38h]\n  __int64 v8; // [rsp+40h] [rbp-30h]\n  __int64 v9; // [rsp+48h] [rbp-28h]\n  __int64 v10; // [rsp+50h] [rbp-20h]\n  __int64 v11; // [rsp+58h] [rbp-18h]\n  __int64 v12; // [rsp+60h] [rbp-10h]\n  __int64 v13; // [rsp+68h] [rbp-8h]\n\n  nmemb = sub_403155(a2, *(_QWORD *)(a1 + 40));\n  if ( !nmemb )\n    return 0LL;\n  if ( *(_QWORD *)(a1 + 16) == nmemb )\n    return 1LL;\n  v4 = calloc(nmemb, 0x10uLL);\n  if ( !v4 )\n    return 0LL;\n  v6 = nmemb;\n  v5 = (__int64)v4 + 16 * nmemb;\n  v7 = 0LL;\n  v8 = 0LL;\n  v9 = *(_QWORD *)(a1 + 40);\n  v10 = *(_QWORD *)(a1 + 48);\n  v11 = *(_QWORD *)(a1 + 56);\n  v12 = *(_QWORD *)(a1 + 64);\n  v13 = *(_QWORD *)(a1 + 72);\n  if ( (unsigned __int8)sub_4037E9((__int64)&v4, a1, 0) )\n  {\n    free(*(void **)a1);\n    *(_QWORD *)a1 = v4;\n    *(_QWORD *)(a1 + 8) = v5;\n    *(_QWORD *)(a1 + 16) = v6;\n    *(_QWORD *)(a1 + 24) = v7;\n    *(_QWORD *)(a1 + 72) = v13;\n    result = 1LL;\n  }\n  else\n  {\n    *(_QWORD *)(a1 + 72) = v13;\n    if ( (unsigned __int8)sub_4037E9(a1, (__int64)&v4, 1) != 1 || (unsigned __int8)sub_4037E9(a1, (__int64)&v4, 0) != 1 )\n      abort();\n    free(v4);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4209595, "sub_403BBB", "__int64 __fastcall sub_403BBB(_QWORD *a1, __int64 a2, _QWORD *a3)\n{\n  __int64 result; // rax\n  __int64 v4; // rax\n  float v5; // xmm0_4\n  __int64 v6; // rdx\n  __int64 v7; // rax\n  float v8; // xmm1_4\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  float v11; // xmm0_4\n  __int64 v12; // rdx\n  __int64 v13; // rax\n  float v14; // xmm1_4\n  __int64 v15; // rdx\n  __int64 v16; // rax\n  float v17; // xmm0_4\n  __int64 v18; // rdx\n  float v19; // xmm0_4\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  __int64 v23; // rax\n  __int64 *v25; // [rsp+30h] [rbp-20h] BYREF\n  __int64 v26; // [rsp+38h] [rbp-18h]\n  __int64 v27; // [rsp+40h] [rbp-10h]\n  _QWORD *v28; // [rsp+48h] [rbp-8h]\n\n  if ( !a2 )\n    abort();\n  v26 = sub_403654((__int64)a1, a2, &v25, 0);\n  if ( v26 )\n  {\n    if ( a3 )\n      *a3 = v26;\n    result = 0LL;\n  }\n  else\n  {\n    v4 = a1[3];\n    if ( v4 < 0 )\n    {\n      v6 = a1[3] & 1LL | ((unsigned __int64)v4 >> 1);\n      v5 = (float)(int)v6 + (float)(int)v6;\n    }\n    else\n    {\n      v5 = (float)(int)v4;\n    }\n    v7 = a1[2];\n    if ( v7 < 0 )\n    {\n      v9 = a1[2] & 1LL | ((unsigned __int64)v7 >> 1);\n      v8 = (float)(int)v9 + (float)(int)v9;\n    }\n    else\n    {\n      v8 = (float)(int)v7;\n    }\n    if ( v5 > (float)(v8 * *(float *)(a1[5] + 8LL)) )\n    {\n      sub_40305D((__int64)a1);\n      v10 = a1[3];\n      if ( v10 < 0 )\n      {\n        v12 = a1[3] & 1LL | ((unsigned __int64)v10 >> 1);\n        v11 = (float)(int)v12 + (float)(int)v12;\n      }\n      else\n      {\n        v11 = (float)(int)v10;\n      }\n      v13 = a1[2];\n      if ( v13 < 0 )\n      {\n        v15 = a1[2] & 1LL | ((unsigned __int64)v13 >> 1);\n        v14 = (float)(int)v15 + (float)(int)v15;\n      }\n      else\n      {\n        v14 = (float)(int)v13;\n      }\n      if ( v11 > (float)(v14 * *(float *)(a1[5] + 8LL)) )\n      {\n        v27 = a1[5];\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v16 = a1[2];\n          if ( v16 < 0 )\n          {\n            v18 = a1[2] & 1LL | ((unsigned __int64)v16 >> 1);\n            v17 = (float)(int)v18 + (float)(int)v18;\n          }\n          else\n          {\n            v17 = (float)(int)v16;\n          }\n          v19 = v17 * *(float *)(v27 + 12);\n        }\n        else\n        {\n          v20 = a1[2];\n          if ( v20 < 0 )\n          {\n            v22 = a1[2] & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v19 = (float)(v21 * *(float *)(v27 + 12)) * *(float *)(v27 + 8);\n        }\n        if ( v19 >= 1.8446744e19 )\n          return 0xFFFFFFFFLL;\n        if ( v19 >= 9.223372e18 )\n          v23 = (unsigned int)(int)(float)(v19 - 9.223372e18) ^ 0x8000000000000000LL;\n        else\n          v23 = (unsigned int)(int)v19;\n        if ( (unsigned __int8)sub_4039B7((__int64)a1, v23) != 1 )\n          return 0xFFFFFFFFLL;\n        if ( sub_403654((__int64)a1, a2, &v25, 0) )\n          abort();\n      }\n    }\n    if ( *v25 )\n    {\n      v28 = sub_4035D4((__int64)a1);\n      if ( v28 )\n      {\n        *v28 = a2;\n        v28[1] = v25[1];\n        v25[1] = (__int64)v28;\n        ++a1[4];\n        result = 1LL;\n      }\n      else\n      {\n        result = 0xFFFFFFFFLL;\n      }\n    }\n    else\n    {\n      *v25 = a2;\n      ++a1[4];\n      ++a1[3];\n      result = 1LL;\n    }\n  }\n  return result;\n}\n"], [4210389, "sub_403ED5", "__int64 __fastcall sub_403ED5(_QWORD *a1, __int64 a2)\n{\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h] BYREF\n\n  v3 = sub_403BBB(a1, a2, &v4);\n  if ( v3 == -1 )\n    return 0LL;\n  if ( v3 )\n    return a2;\n  return v4;\n}\n"], [4210462, "sub_403F1E", "__int64 __fastcall sub_403F1E(__int64 a1, __int64 a2)\n{\n  __int64 v3; // rax\n  float v4; // xmm0_4\n  __int64 v5; // rdx\n  __int64 v6; // rax\n  float v7; // xmm1_4\n  __int64 v8; // rdx\n  __int64 v9; // rax\n  float v10; // xmm0_4\n  __int64 v11; // rdx\n  __int64 v12; // rax\n  float v13; // xmm1_4\n  __int64 v14; // rdx\n  __int64 v15; // rax\n  float v16; // xmm0_4\n  __int64 v17; // rdx\n  float v18; // xmm0_4\n  __int64 v19; // rax\n  __int64 v20; // rax\n  float v21; // xmm0_4\n  __int64 v22; // rdx\n  float v23; // xmm0_4\n  _QWORD *v24; // [rsp+10h] [rbp-30h] BYREF\n  void *ptr; // [rsp+18h] [rbp-28h]\n  __int64 v26; // [rsp+20h] [rbp-20h]\n  __int64 v27; // [rsp+28h] [rbp-18h]\n  __int64 v28; // [rsp+30h] [rbp-10h]\n  void *v29; // [rsp+38h] [rbp-8h]\n\n  v26 = sub_403654(a1, a2, &v24, 1);\n  if ( !v26 )\n    return 0LL;\n  --*(_QWORD *)(a1 + 32);\n  if ( !*v24 )\n  {\n    v3 = --*(_QWORD *)(a1 + 24);\n    if ( v3 < 0 )\n    {\n      v5 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v3 >> 1);\n      v4 = (float)(int)v5 + (float)(int)v5;\n    }\n    else\n    {\n      v4 = (float)(int)v3;\n    }\n    v6 = *(_QWORD *)(a1 + 16);\n    if ( v6 < 0 )\n    {\n      v8 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v6 >> 1);\n      v7 = (float)(int)v8 + (float)(int)v8;\n    }\n    else\n    {\n      v7 = (float)(int)v6;\n    }\n    if ( (float)(v7 * **(float **)(a1 + 40)) > v4 )\n    {\n      sub_40305D(a1);\n      v9 = *(_QWORD *)(a1 + 24);\n      if ( v9 < 0 )\n      {\n        v11 = *(_QWORD *)(a1 + 24) & 1LL | ((unsigned __int64)v9 >> 1);\n        v10 = (float)(int)v11 + (float)(int)v11;\n      }\n      else\n      {\n        v10 = (float)(int)v9;\n      }\n      v12 = *(_QWORD *)(a1 + 16);\n      if ( v12 < 0 )\n      {\n        v14 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v12 >> 1);\n        v13 = (float)(int)v14 + (float)(int)v14;\n      }\n      else\n      {\n        v13 = (float)(int)v12;\n      }\n      if ( (float)(v13 * **(float **)(a1 + 40)) > v10 )\n      {\n        v27 = *(_QWORD *)(a1 + 40);\n        if ( *(_BYTE *)(v27 + 16) )\n        {\n          v15 = *(_QWORD *)(a1 + 16);\n          if ( v15 < 0 )\n          {\n            v17 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v15 >> 1);\n            v16 = (float)(int)v17 + (float)(int)v17;\n          }\n          else\n          {\n            v16 = (float)(int)v15;\n          }\n          v18 = v16 * *(float *)(v27 + 4);\n          if ( v18 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v18 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v18;\n        }\n        else\n        {\n          v20 = *(_QWORD *)(a1 + 16);\n          if ( v20 < 0 )\n          {\n            v22 = *(_QWORD *)(a1 + 16) & 1LL | ((unsigned __int64)v20 >> 1);\n            v21 = (float)(int)v22 + (float)(int)v22;\n          }\n          else\n          {\n            v21 = (float)(int)v20;\n          }\n          v23 = (float)(v21 * *(float *)(v27 + 4)) * *(float *)(v27 + 8);\n          if ( v23 >= 9.223372e18 )\n            v19 = (unsigned int)(int)(float)(v23 - 9.223372e18) ^ 0x8000000000000000LL;\n          else\n            v19 = (unsigned int)(int)v23;\n        }\n        v28 = v19;\n        if ( (unsigned __int8)sub_4039B7(a1, v19) != 1 )\n        {\n          for ( ptr = *(void **)(a1 + 72); ptr; ptr = v29 )\n          {\n            v29 = (void *)*((_QWORD *)ptr + 1);\n            free(ptr);\n          }\n          *(_QWORD *)(a1 + 72) = 0LL;\n        }\n      }\n    }\n  }\n  return v26;\n}\n"], [4211149, "sub_4041CD", "unsigned __int64 __fastcall sub_4041CD(_QWORD *a1, unsigned __int64 a2)\n{\n  return ((unsigned __int64)sub_4072F5(*a1, a2) ^ a1[1]) % a2;\n}\n"], [4211225, "sub_404219", "unsigned __int64 __fastcall sub_404219(__int64 a1, unsigned __int64 a2)\n{\n  return *(_QWORD *)(a1 + 8) % a2;\n}\n"], [4211267, "sub_404243", "_BOOL8 __fastcall sub_404243(_QWORD *a1, _QWORD *a2)\n{\n  return a1[1] == a2[1] && a1[2] == a2[2] && (unsigned __int8)sub_405C07(*a1, *a2);\n}\n"], [4211387, "sub_4042BB", "_BOOL8 __fastcall sub_4042BB(__int64 a1, __int64 a2)\n{\n  return *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)\n      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)\n      && !strcmp(*(const char **)a1, *(const char **)a2);\n}\n"], [4211507, "sub_404333", "void __fastcall sub_404333(void **a1)\n{\n  free(*a1);\n  free(a1);\n}\n"], [4211556, "sub_404364", "char *__fastcall sub_404364(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60A290 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4211787, "sub_40444B", "__int64 __fastcall sub_40444B(unsigned int a1, __int64 a2)\n{\n  return sub_4058FA(a1, 6LL, a2);\n}\n"], [4211823, "sub_40446F", "__int64 __fastcall sub_40446F(__int64 a1)\n{\n  return sub_40444B(0, a1);\n}\n"], [4211854, "sub_40448E", "__int64 __fastcall sub_40448E(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A2A0;\n  v4 = sub_4068BE(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4211927, "sub_4044D7", "__int64 __fastcall sub_4044D7(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A2A0;\n  return *(unsigned int *)v1;\n}\n"], [4211957, "sub_4044F5", "__int64 *__fastcall sub_4044F5(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60A2A0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4211993, "sub_404519", "__int64 __fastcall sub_404519(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60A2A0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4212129, "sub_4045A1", "__int64 __fastcall sub_4045A1(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60A2A0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4212180, "sub_4045D4", "__int64 *__fastcall sub_4045D4(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60A2A0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4212270, "sub_40462E", "_QWORD *__fastcall sub_40462E(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4212390, "sub_4046A6", "char *__fastcall sub_4046A6(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)asc_408020;\n  return v3;\n}\n"], [4212451, "sub_4046E3", "unsigned __int64 __fastcall sub_4046E3(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_4046A6((const char *)&asc_408020[1], a5);\n        a9 = sub_4046A6((const char *)&asc_408020[2], a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)asc_408020;\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(asc_408020 + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4046E3(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4215598, "sub_40532E", "unsigned __int64 __fastcall sub_40532E(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60A2A0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4046E3(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4215758, "sub_4053CE", "__int64 __fastcall sub_4053CE(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405400(a1, a2, 0LL, a3);\n}\n"], [4215808, "sub_405400", "__int64 __fastcall sub_405400(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60A2A0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4046E3(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_406780(v10);\n  sub_4046E3(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4216108, "sub_40552C", "void sub_40552C()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60A230;\n  for ( i = 1; i < dword_60A210; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60A2E0 )\n  {\n    free(ptr[1]);\n    qword_60A220 = 256LL;\n    off_60A228 = &unk_60A2E0;\n  }\n  if ( ptr != (void **)&qword_60A220 )\n  {\n    free(ptr);\n    off_60A230 = &qword_60A220;\n  }\n  dword_60A210 = 1;\n}\n"], [4216279, "sub_4055D7", "void *__fastcall sub_4055D7(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60A230;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60A210 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60A230 == &qword_60A220;\n    if ( off_60A230 == &qword_60A220 )\n      v4 = 0LL;\n    else\n      v4 = off_60A230;\n    v12 = (__int64 *)sub_4067CF(v4, 16 * v14);\n    off_60A230 = v12;\n    if ( v9 )\n    {\n      v5 = off_60A228;\n      *v12 = qword_60A220;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60A210], 0, 16 * (v14 - (unsigned int)dword_60A210));\n    dword_60A210 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4046E3((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60A2E0 )\n      free(ptr);\n    ptr = (void *)sub_406780(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_4046E3((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4216925, "sub_40585D", "void *__fastcall sub_40585D(int a1, __int64 a2)\n{\n  return sub_4055D7(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60A2A0);\n}\n"], [4216968, "sub_405888", "void *__fastcall sub_405888(int a1, __int64 a2, size_t a3)\n{\n  return sub_4055D7(a1, a2, a3, (__int64)&qword_60A2A0);\n}\n"], [4217012, "sub_4058B4", "void *__fastcall sub_4058B4(__int64 a1)\n{\n  return sub_40585D(0, a1);\n}\n"], [4217043, "sub_4058D3", "void *__fastcall sub_4058D3(__int64 a1, size_t a2)\n{\n  return sub_405888(0, a1, a2);\n}\n"], [4217082, "sub_4058FA", "void *__fastcall sub_4058FA(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_40462E(v5, a2);\n  return sub_4055D7(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4217147, "sub_40593B", "void *__fastcall sub_40593B(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_40462E(v7, a2);\n  return sub_4055D7(a1, a3, a4, (__int64)v7);\n}\n"], [4217210, "sub_40597A", "void *__fastcall sub_40597A(int a1, __int64 a2)\n{\n  return sub_4058FA(0, a1, a2);\n}\n"], [4217246, "sub_40599E", "void *__fastcall sub_40599E(int a1, __int64 a2, size_t a3)\n{\n  return sub_40593B(0, a1, a2, a3);\n}\n"], [4217290, "sub_4059CA", "void *__fastcall sub_4059CA(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60A2A0;\n  v4[1] = qword_60A2A8;\n  v4[2] = qword_60A2B0;\n  v4[3] = qword_60A2B8;\n  v4[4] = qword_60A2C0;\n  v4[5] = qword_60A2C8;\n  v4[6] = qword_60A2D0;\n  sub_404519(v4, a3, 1);\n  return sub_4055D7(0, a1, a2, (__int64)v4);\n}\n"], [4217438, "sub_405A5E", "void *__fastcall sub_405A5E(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4059CA(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4217480, "sub_405A88", "void *__fastcall sub_405A88(__int64 a1)\n{\n  return sub_405A5E(a1, 0x3Au);\n}\n"], [4217511, "sub_405AA7", "void *__fastcall sub_405AA7(__int64 a1, size_t a2)\n{\n  return sub_4059CA(a1, a2, 0x3Au);\n}\n"], [4217553, "sub_405AD1", "__int64 __fastcall sub_405AD1(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_405B07(a1, a2, a3, a4, -1LL);\n}\n"], [4217607, "sub_405B07", "void *__fastcall sub_405B07(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60A2A0;\n  v8[1] = qword_60A2A8;\n  v8[2] = qword_60A2B0;\n  v8[3] = qword_60A2B8;\n  v8[4] = qword_60A2C0;\n  v8[5] = qword_60A2C8;\n  v8[6] = qword_60A2D0;\n  sub_4045D4(v8, a2, a3);\n  return sub_4055D7(a1, a4, a5, (__int64)v8);\n}\n"], [4217758, "sub_405B9E", "__int64 __fastcall sub_405B9E(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405AD1(0, a1, a2, a3);\n}\n"], [4217805, "sub_405BCD", "void *__fastcall sub_405BCD(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_405B07(0, a1, a2, a3, a4);\n}\n"], [4217863, "sub_405C07", "_BOOL8 __fastcall sub_405C07(_BYTE *a1, _BYTE *a2)\n{\n  bool v2; // al\n  int *v3; // rax\n  int *v4; // rax\n  bool v5; // al\n  bool v7; // [rsp+1Dh] [rbp-153h]\n  const char *s1; // [rsp+20h] [rbp-150h]\n  const char *s2; // [rsp+28h] [rbp-148h]\n  size_t v10; // [rsp+30h] [rbp-140h]\n  size_t n; // [rsp+38h] [rbp-138h]\n  char *ptr; // [rsp+40h] [rbp-130h]\n  char *filename; // [rsp+48h] [rbp-128h]\n  struct stat stat_buf; // [rsp+50h] [rbp-120h] BYREF\n  struct stat v15; // [rsp+E0h] [rbp-90h] BYREF\n\n  s1 = sub_40277F(a1);\n  s2 = sub_40277F(a2);\n  v10 = sub_4027E8(s1);\n  n = sub_4027E8(s2);\n  v2 = v10 == n && !memcmp(s1, s2, n);\n  v7 = 0;\n  if ( v2 )\n  {\n    ptr = (char *)sub_4071A7(a1);\n    filename = (char *)sub_4071A7(a2);\n    if ( (unsigned int)sub_4075E0(ptr, &stat_buf) )\n    {\n      v3 = __errno_location();\n      error(1, *v3, \"%s\", ptr);\n    }\n    if ( (unsigned int)sub_4075E0(filename, &v15) )\n    {\n      v4 = __errno_location();\n      error(1, *v4, \"%s\", filename);\n    }\n    v5 = stat_buf.st_ino == v15.st_ino && stat_buf.st_dev == v15.st_dev;\n    v7 = v5;\n    free(ptr);\n    free(filename);\n  }\n  return v7;\n}\n"], [4218368, "sub_405E00", "int __fastcall sub_405E00(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4219883, "sub_4063EB", "int __fastcall sub_4063EB(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_405E00(a1, a2, a3, a4, a5, i);\n}\n"], [4219993, "sub_406459", "int __fastcall sub_406459(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_405E00(a1, a2, a3, a4, v8, i);\n}\n"], [4220210, "sub_406532", "int sub_406532(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_406459(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4220392, "sub_4065E8", "int sub_4065E8()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4220497, "sub_406651", "__int64 __fastcall sub_406651(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_40691C(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_40679A(a2 * a1);\n}\n"], [4220559, "sub_40668F", "__int64 __fastcall sub_40668F(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_40691C(a1, a2, v4);\n  return sub_4067CF(a1, a3 * a2);\n}\n"], [4220635, "sub_4066DB", "__int64 __fastcall sub_4066DB(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_40691C(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_4067CF(a1, a3 * v6);\n}\n"], [4220800, "sub_406780", "__int64 __fastcall sub_406780(__int64 a1)\n{\n  return sub_40679A(a1);\n}\n"], [4220826, "sub_40679A", "void *__fastcall sub_40679A(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_40691C(a1, a2, v2);\n  return v4;\n}\n"], [4220879, "sub_4067CF", "void *__fastcall sub_4067CF(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_40691C(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4220976, "sub_406830", "__int64 __fastcall sub_406830(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_4066DB(a1, a2, 1uLL);\n}\n"], [4221018, "sub_40685A", "void *__fastcall sub_40685A(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40679A(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4221061, "sub_406885", "void *__fastcall sub_406885(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_40691C(a1, a2, v2);\n  return v4;\n}\n"], [4221118, "sub_4068BE", "void *__fastcall sub_4068BE(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40679A(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4221167, "sub_4068EF", "void *__fastcall sub_4068EF(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_4068BE(a1, v1 + 1);\n}\n"], [4221212, "sub_40691C", "void __noreturn sub_40691C()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4221265, "sub_406951", "__int64 sub_406951()\n{\n  __int64 v1; // [rsp+8h] [rbp-8h]\n\n  v1 = sub_40698A(0LL, 0LL);\n  if ( !v1 && *__errno_location() == 12 )\n    sub_40691C();\n  return v1;\n}\n"], [4221322, "sub_40698A", "char *__fastcall sub_40698A(char *a1, size_t a2)\n{\n  char *v3; // rbx\n  char v4; // al\n  size_t v5; // rax\n  char *v6; // rbx\n  char *buf; // [rsp+8h] [rbp-1148h]\n  char v8; // [rsp+14h] [rbp-113Ch]\n  char v9; // [rsp+15h] [rbp-113Bh]\n  bool v10; // [rsp+16h] [rbp-113Ah]\n  int fd; // [rsp+18h] [rbp-1138h]\n  int v12; // [rsp+24h] [rbp-112Ch]\n  DIR *dirp; // [rsp+28h] [rbp-1128h]\n  __dev_t v14; // [rsp+30h] [rbp-1120h]\n  __ino_t v15; // [rsp+38h] [rbp-1118h]\n  char *s; // [rsp+40h] [rbp-1110h]\n  const char *sa; // [rsp+40h] [rbp-1110h]\n  char *sb; // [rsp+40h] [rbp-1110h]\n  size_t v19; // [rsp+48h] [rbp-1108h]\n  struct dirent *v20; // [rsp+50h] [rbp-1100h]\n  __dev_t v21; // [rsp+58h] [rbp-10F8h]\n  __ino_t v22; // [rsp+60h] [rbp-10F0h]\n  __dev_t v23; // [rsp+70h] [rbp-10E0h]\n  __ino_t v24; // [rsp+78h] [rbp-10D8h]\n  size_t n; // [rsp+88h] [rbp-10C8h]\n  size_t v26; // [rsp+90h] [rbp-10C0h]\n  char *v27; // [rsp+98h] [rbp-10B8h]\n  struct stat stat_buf; // [rsp+A0h] [rbp-10B0h] BYREF\n  char v29[4104]; // [rsp+130h] [rbp-1020h] BYREF\n  unsigned __int64 v30; // [rsp+1138h] [rbp-18h]\n\n  buf = a1;\n  v30 = __readfsqword(0x28u);\n  fd = -100;\n  v8 = 0;\n  dirp = 0LL;\n  v19 = a2;\n  s = getcwd(a1, a2);\n  if ( s || a2 && *__errno_location() == 34 )\n    return s;\n  if ( *__errno_location() == 22 && !a1 && !a2 )\n  {\n    sa = getcwd(v29, 0x1000uLL);\n    if ( sa )\n      return strdup(sa);\n  }\n  if ( !a2 )\n  {\n    if ( a1 )\n    {\n      *__errno_location() = 22;\n      return 0LL;\n    }\n    v19 = 4096LL;\n  }\n  if ( a1 )\n  {\n    sb = a1;\n  }\n  else\n  {\n    sb = (char *)malloc(v19);\n    if ( !sb )\n      return 0LL;\n  }\n  v3 = &sb[v19 - 1];\n  *v3 = 0;\n  if ( (int)sub_407600(\".\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v14 = stat_buf.st_dev;\n  v15 = stat_buf.st_ino;\n  if ( (int)sub_407600(\"/\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v21 = stat_buf.st_dev;\n  v22 = stat_buf.st_ino;\n  while ( 2 )\n  {\n    if ( v14 != v21 || v15 != v22 )\n    {\n      v9 = 1;\n      fd = openat(fd, \"..\", 0);\n      if ( fd >= 0 )\n      {\n        v8 = 1;\n        if ( !(unsigned int)sub_4075F0(fd, &stat_buf) )\n        {\n          if ( dirp && closedir(dirp) )\n          {\n            dirp = 0LL;\n          }\n          else\n          {\n            v23 = stat_buf.st_dev;\n            v24 = stat_buf.st_ino;\n            v10 = stat_buf.st_dev != v14;\n            dirp = fdopendir(fd);\n            if ( dirp )\n            {\n              v8 = 0;\n              while ( 1 )\n              {\n                *__errno_location() = 0;\n                v20 = readdir(dirp);\n                if ( !v20 && !*__errno_location() && v9 )\n                {\n                  v9 = 0;\n                  rewinddir(dirp);\n                  v20 = readdir(dirp);\n                }\n                if ( !v20 )\n                {\n                  if ( !*__errno_location() )\n                    *__errno_location() = 2;\n                  goto LABEL_75;\n                }\n                if ( v20->d_name[0] != 46 || v20->d_name[1] && (v20->d_name[1] != 46 || v20->d_name[2]) )\n                {\n                  if ( !v9 || (v20->d_ino != v15 && !v10 ? (v4 = 0) : (v4 = 1), (v4 & 1) != 0) )\n                  {\n                    if ( !(unsigned int)sub_407610(fd, v20->d_name, &stat_buf, 256)\n                      && (stat_buf.st_mode & 0xF000) == 0x4000\n                      && stat_buf.st_dev == v14\n                      && stat_buf.st_ino == v15 )\n                    {\n                      break;\n                    }\n                  }\n                }\n              }\n              n = strlen(v20->d_name);\n              if ( v3 - sb > n )\n              {\nLABEL_61:\n                v6 = &v3[-n];\n                memcpy(v6, v20->d_name, n);\n                v3 = v6 - 1;\n                *v3 = 47;\n                v14 = v23;\n                v15 = v24;\n                continue;\n              }\n              if ( a2 )\n              {\n                *__errno_location() = 34;\n                goto LABEL_75;\n              }\n              v26 = v19;\n              v5 = n;\n              if ( v19 >= n )\n                v5 = v19;\n              v19 += v5;\n              if ( v19 >= v26 )\n              {\n                v27 = (char *)realloc(sb, v19);\n                if ( v27 )\n                {\n                  v3 = (char *)memcpy(&v27[v19 + v3 - sb - v26], &v27[v3 - sb], v26 - (v3 - sb));\n                  sb = v27;\n                  goto LABEL_61;\n                }\n              }\n              *__errno_location() = 12;\n            }\n          }\n        }\n      }\n      goto LABEL_75;\n    }\n    break;\n  }\n  if ( dirp && closedir(dirp) )\n  {\n    dirp = 0LL;\nLABEL_75:\n    v12 = *__errno_location();\n    if ( dirp )\n      closedir(dirp);\n    if ( v8 )\n      close(fd);\n    if ( !a1 )\n      free(sb);\n    *__errno_location() = v12;\n    return 0LL;\n  }\n  if ( &sb[v19 - 1] == v3 )\n    *--v3 = 47;\n  memmove(sb, v3, &sb[v19] - v3);\n  if ( !a2 )\n    buf = (char *)realloc(sb, &sb[v19] - v3);\n  if ( !buf )\n    buf = sb;\n  return buf;\n}\n"], [4223260, "sub_40711C", "__int64 __fastcall sub_40711C(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_40734F(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4223399, "sub_4071A7", "__int64 __fastcall sub_4071A7(__int64 a1)\n{\n  __int64 v2; // [rsp+18h] [rbp-8h]\n\n  v2 = sub_40725E(a1);\n  if ( !v2 )\n    sub_40691C();\n  return v2;\n}\n"], [4223445, "sub_4071D5", "_BYTE *__fastcall sub_4071D5(_BYTE *a1)\n{\n  _BYTE *i; // [rsp+10h] [rbp-10h]\n  unsigned __int64 v3; // [rsp+18h] [rbp-8h]\n\n  v3 = *a1 == 47;\n  for ( i = (_BYTE *)(sub_40277F(a1) - a1); v3 < (unsigned __int64)i && a1[(_QWORD)(i - 1)] == 47; --i )\n    ;\n  return i;\n}\n"], [4223582, "sub_40725E", "_BYTE *__fastcall sub_40725E(_BYTE *a1)\n{\n  size_t n; // [rsp+20h] [rbp-10h]\n  _BYTE *dest; // [rsp+28h] [rbp-8h]\n\n  n = (size_t)sub_4071D5(a1);\n  dest = malloc((n == 0) + n + 1);\n  if ( !dest )\n    return 0LL;\n  memcpy(dest, a1, n);\n  if ( !n )\n  {\n    n = 1LL;\n    *dest = 46;\n  }\n  dest[n] = 0;\n  return dest;\n}\n"], [4223733, "sub_4072F5", "unsigned __int64 __fastcall sub_4072F5(_BYTE *a1, unsigned __int64 a2)\n{\n  unsigned __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = 0LL;\n  while ( *a1 )\n    v4 = __ROR8__(v4, 55) + (char)*a1++;\n  return v4 % a2;\n}\n"], [4223823, "sub_40734F", "int __fastcall sub_40734F(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_407437(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4224004, "sub_407404", "__int64 __fastcall sub_407404(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_407482(a1, 0LL, 1LL);\n  return result;\n}\n"], [4224055, "sub_407437", "int __fastcall sub_407437(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_407404(a1);\n  return fflush(a1);\n}\n"], [4224130, "sub_407482", "int __fastcall sub_407482(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4224320, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_609E18 - off_609E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_609E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4224432, "fini", "void fini(void)\n{\n  ;\n}\n"], [4224448, "sub_4075C0", "int __fastcall sub_4075C0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60A1F8 )\n    v1 = (void *)qword_60A1F8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4224480, "sub_4075E0", "int __fastcall sub_4075E0(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4224496, "sub_4075F0", "int __fastcall sub_4075F0(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4224512, "sub_407600", "int __fastcall sub_407600(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4224528, "sub_407610", "int __fastcall sub_407610(int fildes, char *filename, struct stat *stat_buf, int flag)\n{\n  return __fxstatat(1, fildes, filename, stat_buf, flag);\n}\n"], [4224552, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]