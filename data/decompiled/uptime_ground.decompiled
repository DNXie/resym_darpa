[[4199288, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199328, "sub_4013A0", "__int64 sub_4013A0()\n{\n  return qword_60A010();\n}\n"], [4199344, ".utmpxname", "// attributes: thunk\nint utmpxname(const char *file)\n{\n  return utmpxname(file);\n}\n"], [4199360, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199376, ".localtime", "// attributes: thunk\nstruct tm *localtime(const time_t *timer)\n{\n  return localtime(timer);\n}\n"], [4199392, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199408, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199424, ".strncpy", "// attributes: thunk\nchar *strncpy(char *dest, const char *src, size_t n)\n{\n  return strncpy(dest, src, n);\n}\n"], [4199440, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199456, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199472, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199488, ".toupper", "// attributes: thunk\nint toupper(int c)\n{\n  return toupper(c);\n}\n"], [4199504, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4199520, ".endutxent", "// attributes: thunk\nvoid endutxent(void)\n{\n  endutxent();\n}\n"], [4199536, ".strtod_l", "// attributes: thunk\ndouble strtod_l(const char *nptr, char **endptr, __locale_t loc)\n{\n  return strtod_l(nptr, endptr, loc);\n}\n"], [4199552, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4199568, ".getloadavg", "// attributes: thunk\nint getloadavg(double loadavg[], int nelem)\n{\n  return getloadavg(loadavg, nelem);\n}\n"], [4199584, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4199600, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4199616, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4199632, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4199648, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4199664, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4199680, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4199696, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4199712, ".newlocale", "// attributes: thunk\n__locale_t newlocale(int category_mask, const char *locale, __locale_t base)\n{\n  return newlocale(category_mask, locale, base);\n}\n"], [4199728, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4199744, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4199760, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4199776, ".fputc", "// attributes: thunk\nint fputc(int c, FILE *stream)\n{\n  return fputc(c, stream);\n}\n"], [4199792, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4199808, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4199824, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4199840, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4199856, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4199872, ".setutxent", "// attributes: thunk\nvoid setutxent(void)\n{\n  setutxent();\n}\n"], [4199888, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199904, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199920, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199936, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4199952, ".kill", "// attributes: thunk\nint kill(__pid_t pid, int sig)\n{\n  return kill(pid, sig);\n}\n"], [4199968, ".time", "// attributes: thunk\ntime_t time(time_t *timer)\n{\n  return time(timer);\n}\n"], [4199984, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200000, ".fgets_unlocked", "// attributes: thunk\nchar *fgets_unlocked(char *s, int n, FILE *stream)\n{\n  return fgets_unlocked(s, n, stream);\n}\n"], [4200016, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4200032, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200048, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200064, ".mktime", "// attributes: thunk\ntime_t mktime(struct tm *tp)\n{\n  return mktime(tp);\n}\n"], [4200080, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200096, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200112, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200128, ".strftime", "// attributes: thunk\nsize_t strftime(char *s, size_t maxsize, const char *format, const struct tm *tp)\n{\n  return strftime(s, maxsize, format, tp);\n}\n"], [4200144, ".getutxent", "// attributes: thunk\nstruct utmpx *getutxent(void)\n{\n  return getutxent();\n}\n"], [4200160, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200176, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200192, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200208, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200224, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200240, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200256, ".ngettext", "// attributes: thunk\nchar *ngettext(const char *msgid1, const char *msgid2, unsigned __int64 n)\n{\n  return ngettext(msgid1, msgid2, n);\n}\n"], [4200272, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200288, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200304, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200320, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200368, "sub_4017B0", "signed __int64 sub_4017B0()\n{\n  signed __int64 result; // rax\n\n  result = &unk_60A24F - &unk_60A248;\n  if ( (unsigned __int64)(&unk_60A24F - &unk_60A248) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200416, "sub_4017E0", "__int64 sub_4017E0()\n{\n  return 0LL;\n}\n"], [4200480, "sub_401820", "signed __int64 sub_401820()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_60A2A0 )\n  {\n    result = sub_4017B0();\n    byte_60A2A0 = 1;\n  }\n  return result;\n}\n"], [4200512, "sub_401840", "__int64 sub_401840()\n{\n  return sub_4017E0();\n}\n"], [4200557, "sub_40186D", "__int64 __fastcall sub_40186D(__int64 a1)\n{\n  return a1;\n}\n"], [4200571, "sub_40187B", "int sub_40187B()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_402317(qword_60A2C0);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_402317(qword_60A2C0);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_402317(qword_60A2C0);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200837, "sub_401985", "unsigned __int64 __fastcall sub_401985(__int64 a1, __int64 a2)\n{\n  __int64 v2; // rax\n  _BOOL4 v3; // eax\n  char *v5; // rbx\n  int *v6; // rax\n  char *v7; // rax\n  char *v8; // rax\n  char *v9; // rax\n  __int64 v10; // rax\n  char *v11; // rax\n  char *v12; // rax\n  double v13; // rbx\n  char *v14; // rax\n  unsigned int v18; // [rsp+2Ch] [rbp-2094h]\n  unsigned int v19; // [rsp+30h] [rbp-2090h]\n  int v20; // [rsp+34h] [rbp-208Ch]\n  time_t timer; // [rsp+38h] [rbp-2088h] BYREF\n  unsigned __int64 n; // [rsp+40h] [rbp-2080h]\n  __int64 v23; // [rsp+48h] [rbp-2078h]\n  __int64 v24; // [rsp+50h] [rbp-2070h]\n  FILE *stream; // [rsp+58h] [rbp-2068h]\n  char *v26; // [rsp+60h] [rbp-2060h]\n  double v27; // [rsp+68h] [rbp-2058h]\n  __int64 v28; // [rsp+70h] [rbp-2050h]\n  struct tm *v29; // [rsp+78h] [rbp-2048h]\n  double loadavg[4]; // [rsp+80h] [rbp-2040h] BYREF\n  char s[8200]; // [rsp+A0h] [rbp-2020h] BYREF\n  unsigned __int64 v32; // [rsp+20A8h] [rbp-18h]\n\n  v32 = __readfsqword(0x28u);\n  n = 0LL;\n  v23 = 0LL;\n  v24 = 0LL;\n  stream = fopen(\"/proc/uptime\", \"r\");\n  if ( stream )\n  {\n    v26 = fgets_unlocked(s, 0x2000, stream);\n    if ( v26 == s )\n    {\n      v27 = sub_402196(s, loadavg);\n      if ( *(char **)&loadavg[0] != s )\n      {\n        if ( v27 < 0.0 || v27 >= 9.223372036854776e18 )\n          v2 = -1LL;\n        else\n          v2 = (unsigned int)(int)v27;\n        v24 = v2;\n      }\n    }\n    sub_407523(stream);\n  }\n  while ( a1-- )\n  {\n    v3 = *(_BYTE *)(a2 + 44) && *(_WORD *)a2 == 7;\n    n += v3;\n    if ( *(_WORD *)a2 == 2 )\n      v23 = *(int *)(a2 + 340);\n    a2 += 384LL;\n  }\n  timer = time(0LL);\n  if ( !v24 )\n  {\n    if ( !v23 )\n    {\n      v5 = gettext(\"couldn't get boot time\");\n      v6 = __errno_location();\n      error(1, *v6, v5);\n    }\n    v24 = timer - v23;\n  }\n  v28 = v24 / 86400;\n  v18 = v24 % 86400 / 3600;\n  v19 = (v24 % 86400 - (int)(3600 * v18)) / 60;\n  v29 = localtime(&timer);\n  if ( v29 )\n  {\n    v7 = gettext(\" %H:%M%P  \");\n    sub_404F9E(stdout, v7, v29, 0LL, 0LL);\n  }\n  else\n  {\n    v8 = gettext(\" ??:????  \");\n    printf(v8);\n  }\n  if ( v24 == -1 )\n  {\n    v9 = gettext(\"up ???? days ??:??,  \");\n    printf(v9);\n  }\n  else if ( v28 <= 0 )\n  {\n    printf(\"up  %2d:%02d,  \", v18, v19);\n  }\n  else\n  {\n    v10 = sub_40186D(v28);\n    v11 = ngettext(\"up %ld day %2d:%02d,  \", \"up %ld days %2d:%02d,  \", v10);\n    printf(v11, v28, v18, v19);\n  }\n  v12 = ngettext(\"%lu user\", \"%lu users\", n);\n  printf(v12, n);\n  v20 = getloadavg(loadavg, 3);\n  if ( v20 == -1 )\n    goto LABEL_39;\n  if ( v20 > 0 )\n  {\n    v13 = loadavg[0];\n    v14 = gettext(\",  load average: %.2f\");\n    printf(v14, v13);\n  }\n  if ( v20 > 1 )\n    printf(\", %.2f\", loadavg[1]);\n  if ( v20 > 2 )\n    printf(\", %.2f\", loadavg[2]);\n  if ( v20 > 0 )\nLABEL_39:\n    putchar_unlocked(10);\n  return __readfsqword(0x28u) ^ v32;\n}\n"], [4202111, "sub_401E7F", "unsigned __int64 __fastcall sub_401E7F(const char *a1, unsigned int a2)\n{\n  int *v2; // rax\n  __int64 v4; // [rsp+10h] [rbp-10h] BYREF\n  __int64 v5; // [rsp+18h] [rbp-8h] BYREF\n\n  if ( (unsigned int)sub_407836(a1, &v4, &v5, a2) )\n  {\n    v2 = __errno_location();\n    error(1, *v2, \"%s\", a1);\n  }\n  return sub_401985(v4, v5);\n}\n"], [4202210, "sub_401EE2", "void __fastcall __noreturn sub_401EE2(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  char *v4; // rax\n  char *v5; // rax\n  char *v6; // rax\n  FILE *v7; // rbx\n  char *v8; // rax\n  FILE *v9; // rbx\n  char *v10; // rax\n\n  v1 = qword_60A2C0;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]\\n\");\n    printf(v3, v1);\n    v4 = gettext(\n           \"Print the current time, the length of time the system has been up,\\n\"\n           \"the number of users on the system, and the average number of jobs\\n\"\n           \"in the run queue over the last 1, 5 and 15 minutes.\");\n    printf(v4);\n    v5 = gettext(\"  Processes in\\nan uninterruptible sleep state also contribute to the load average.\\n\");\n    printf(v5);\n    v6 = gettext(\"If FILE is not specified, use %s.  %s as FILE is common.\\n\\n\");\n    printf(v6, \"/var/run/utmp\", \"/var/log/wtmp\");\n    v7 = stdout;\n    v8 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v8, v7);\n    v9 = stdout;\n    v10 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v10, v9);\n    sub_40187B();\n  }\n  exit(a1);\n}\n"], [4202462, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n\n  sub_40512F(*a2, a2, a3);\n  setlocale(6, shortopts);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_407AA0(sub_40222C);\n  sub_404FE0(\n    a1,\n    (_DWORD)a2,\n    (unsigned int)\"uptime\",\n    (unsigned int)\"GNU coreutils\",\n    (_DWORD)off_60A210,\n    (unsigned int)sub_401EE2,\n    \"Joseph Arceneaux\",\n    \"David MacKenzie\",\n    \"Kaveh Ghazi\",\n    0LL);\n  if ( getopt_long(a1, a2, shortopts, 0LL, 0LL) != -1 )\n    sub_401EE2(1);\n  if ( a1 == optind )\n  {\n    sub_401E7F(\"/var/run/utmp\", 1u);\n  }\n  else\n  {\n    if ( a1 - optind != 1 )\n    {\n      v3 = sub_40523A(a2[optind + 1]);\n      v4 = gettext(\"extra operand %s\");\n      error(0, 0, v4, v3);\n      sub_401EE2(1);\n    }\n    sub_401E7F(a2[optind], 0);\n  }\n  exit(0);\n}\n"], [4202850, "sub_402162", "__int64 sub_402162()\n{\n  if ( !qword_60A2A8 )\n    qword_60A2A8 = (__int64)newlocale(8127, \"C\", 0LL);\n  return qword_60A2A8;\n}\n"], [4202902, "sub_402196", "double __fastcall sub_402196(const char *a1, char **a2)\n{\n  struct __locale_struct *loc; // [rsp+20h] [rbp-10h]\n\n  loc = (struct __locale_struct *)sub_402162();\n  if ( loc )\n    return strtod_l(a1, a2, loc);\n  if ( a2 )\n    *a2 = (char *)a1;\n  return 0.0;\n}\n"], [4203010, "sub_402202", "__int64 __fastcall sub_402202(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_60A2B0 = a1;\n  return result;\n}\n"], [4203031, "sub_402217", "__int64 __fastcall sub_402217(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_60A2B8 = a1;\n  return result;\n}\n"], [4203052, "sub_40222C", "__int64 sub_40222C()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40798D(stdout) && (byte_60A2B8 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_60A2B0 )\n    {\n      v0 = (const char *)sub_406853(qword_60A2B0);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40798D(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4203287, "sub_402317", "_BYTE *__fastcall sub_402317(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4203392, "sub_402380", "size_t __fastcall sub_402380(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4203470, "sub_4023CE", "__int64 __fastcall sub_4023CE(FILE *a1, unsigned __int8 *a2, __int64 a3)\n{\n  int v3; // eax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = a3--;\n    if ( !result )\n      break;\n    v3 = tolower(*a2);\n    fputc(v3, a1);\n    ++a2;\n  }\n  return result;\n}\n"], [4203547, "sub_40241B", "__int64 __fastcall sub_40241B(FILE *a1, unsigned __int8 *a2, __int64 a3)\n{\n  int v3; // eax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = a3--;\n    if ( !result )\n      break;\n    v3 = toupper(*a2);\n    fputc(v3, a1);\n    ++a2;\n  }\n  return result;\n}\n"], [4203624, "sub_402468", "__int64 __fastcall sub_402468(int a1, int a2)\n{\n  return (unsigned int)(a1 - (a1 - a2 + 382) % 7 + 3);\n}\n"], [4203705, "sub_4024B9", "__int64 __fastcall sub_4024B9(unsigned __int8 a1, FILE *a2, char *a3, const struct tm *a4, unsigned int a5, unsigned int a6)\n{\n  __int64 result; // rax\n  int v7; // eax\n  int v8; // eax\n  char *v9; // rax\n  unsigned __int64 v10; // rax\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  _BOOL4 v13; // eax\n  char v14; // al\n  unsigned __int64 v15; // rax\n  int v16; // eax\n  unsigned __int64 v17; // rax\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // rax\n  unsigned __int8 v22; // al\n  unsigned __int64 v23; // rax\n  int v24; // eax\n  _BOOL4 v25; // eax\n  _BOOL4 v26; // eax\n  int v27; // eax\n  int v28; // eax\n  int v29; // eax\n  unsigned __int64 v30; // rax\n  unsigned __int64 v31; // rax\n  bool v35; // [rsp+3Ah] [rbp-7D6h]\n  char v36; // [rsp+3Bh] [rbp-7D5h]\n  char v37; // [rsp+3Ch] [rbp-7D4h]\n  unsigned __int8 v38; // [rsp+3Dh] [rbp-7D3h]\n  char v39; // [rsp+3Eh] [rbp-7D2h]\n  char v40; // [rsp+3Fh] [rbp-7D1h]\n  int v41; // [rsp+40h] [rbp-7D0h]\n  int v42; // [rsp+44h] [rbp-7CCh]\n  int v43; // [rsp+48h] [rbp-7C8h]\n  int v44; // [rsp+4Ch] [rbp-7C4h]\n  int v45; // [rsp+50h] [rbp-7C0h]\n  unsigned int v46; // [rsp+54h] [rbp-7BCh]\n  int v47; // [rsp+58h] [rbp-7B8h]\n  int v48; // [rsp+5Ch] [rbp-7B4h]\n  int v49; // [rsp+60h] [rbp-7B0h]\n  int ll; // [rsp+64h] [rbp-7ACh]\n  int v51; // [rsp+68h] [rbp-7A8h]\n  int v52; // [rsp+6Ch] [rbp-7A4h]\n  int v53; // [rsp+70h] [rbp-7A0h]\n  int ii; // [rsp+74h] [rbp-79Ch]\n  int v55; // [rsp+78h] [rbp-798h]\n  int v56; // [rsp+7Ch] [rbp-794h]\n  int v57; // [rsp+80h] [rbp-790h]\n  int v58; // [rsp+84h] [rbp-78Ch]\n  int v59; // [rsp+88h] [rbp-788h]\n  int v60; // [rsp+8Ch] [rbp-784h]\n  int v61; // [rsp+90h] [rbp-780h]\n  int v62; // [rsp+94h] [rbp-77Ch]\n  int v63; // [rsp+98h] [rbp-778h]\n  int v64; // [rsp+9Ch] [rbp-774h]\n  char *v65; // [rsp+A0h] [rbp-770h]\n  __int64 v66; // [rsp+A8h] [rbp-768h]\n  const char *v68; // [rsp+B8h] [rbp-758h]\n  unsigned __int8 *ptr; // [rsp+C0h] [rbp-750h]\n  __int64 i5; // [rsp+C8h] [rbp-748h]\n  unsigned __int64 i1; // [rsp+E0h] [rbp-730h]\n  unsigned __int64 i2; // [rsp+E8h] [rbp-728h]\n  unsigned __int64 mm; // [rsp+F0h] [rbp-720h]\n  unsigned __int64 nn; // [rsp+F8h] [rbp-718h]\n  char *v75; // [rsp+100h] [rbp-710h]\n  unsigned __int64 i3; // [rsp+108h] [rbp-708h]\n  unsigned __int64 i4; // [rsp+110h] [rbp-700h]\n  unsigned __int64 i6; // [rsp+120h] [rbp-6F0h]\n  unsigned __int64 i14; // [rsp+128h] [rbp-6E8h]\n  unsigned __int64 i15; // [rsp+138h] [rbp-6D8h]\n  unsigned __int64 i11; // [rsp+140h] [rbp-6D0h]\n  unsigned __int64 i12; // [rsp+148h] [rbp-6C8h]\n  unsigned __int64 i13; // [rsp+150h] [rbp-6C0h]\n  unsigned __int64 i9; // [rsp+158h] [rbp-6B8h]\n  unsigned __int64 i10; // [rsp+160h] [rbp-6B0h]\n  unsigned __int64 i7; // [rsp+168h] [rbp-6A8h]\n  unsigned __int64 i8; // [rsp+170h] [rbp-6A0h]\n  unsigned __int64 k; // [rsp+178h] [rbp-698h]\n  unsigned __int64 l; // [rsp+180h] [rbp-690h]\n  time_t v90; // [rsp+188h] [rbp-688h]\n  unsigned __int64 i; // [rsp+190h] [rbp-680h]\n  unsigned __int64 j; // [rsp+198h] [rbp-678h]\n  unsigned __int64 m; // [rsp+1A0h] [rbp-670h]\n  unsigned __int64 n; // [rsp+1A8h] [rbp-668h]\n  unsigned __int64 jj; // [rsp+1B0h] [rbp-660h]\n  unsigned __int64 kk; // [rsp+1B8h] [rbp-658h]\n  unsigned __int64 v97; // [rsp+1F8h] [rbp-618h]\n  unsigned __int64 v98; // [rsp+200h] [rbp-610h]\n  unsigned __int64 v99; // [rsp+208h] [rbp-608h]\n  unsigned __int64 v100; // [rsp+218h] [rbp-5F8h]\n  unsigned __int64 v101; // [rsp+220h] [rbp-5F0h]\n  unsigned __int64 v102; // [rsp+228h] [rbp-5E8h]\n  unsigned __int64 v103; // [rsp+238h] [rbp-5D8h]\n  unsigned __int64 v104; // [rsp+240h] [rbp-5D0h]\n  unsigned __int64 v105; // [rsp+248h] [rbp-5C8h]\n  unsigned __int64 v106; // [rsp+250h] [rbp-5C0h]\n  unsigned __int64 v107; // [rsp+260h] [rbp-5B0h]\n  unsigned __int64 v108; // [rsp+268h] [rbp-5A8h]\n  unsigned __int64 v109; // [rsp+270h] [rbp-5A0h]\n  unsigned __int64 v110; // [rsp+278h] [rbp-598h]\n  unsigned __int64 v111; // [rsp+280h] [rbp-590h]\n  unsigned __int64 v112; // [rsp+288h] [rbp-588h]\n  unsigned __int64 v113; // [rsp+290h] [rbp-580h]\n  unsigned __int64 v114; // [rsp+2A8h] [rbp-568h]\n  unsigned __int64 v115; // [rsp+2B0h] [rbp-560h]\n  unsigned __int64 v116; // [rsp+2C8h] [rbp-548h]\n  unsigned __int64 v117; // [rsp+2D0h] [rbp-540h]\n  unsigned __int64 v118; // [rsp+2E8h] [rbp-528h]\n  unsigned __int64 v119; // [rsp+2F0h] [rbp-520h]\n  unsigned __int64 v120; // [rsp+2F8h] [rbp-518h]\n  unsigned __int64 v121; // [rsp+308h] [rbp-508h]\n  unsigned __int64 v122; // [rsp+310h] [rbp-500h]\n  unsigned __int64 v123; // [rsp+318h] [rbp-4F8h]\n  _BYTE *v124; // [rsp+320h] [rbp-4F0h]\n  unsigned __int64 v125; // [rsp+328h] [rbp-4E8h]\n  unsigned __int64 v126; // [rsp+330h] [rbp-4E0h]\n  unsigned __int64 v127; // [rsp+338h] [rbp-4D8h]\n  size_t v128; // [rsp+348h] [rbp-4C8h]\n  unsigned __int64 size; // [rsp+350h] [rbp-4C0h]\n  unsigned __int64 v130; // [rsp+358h] [rbp-4B8h]\n  unsigned __int64 v131; // [rsp+360h] [rbp-4B0h]\n  unsigned __int64 v132; // [rsp+368h] [rbp-4A8h]\n  unsigned __int64 v133; // [rsp+380h] [rbp-490h]\n  unsigned __int64 v134; // [rsp+388h] [rbp-488h]\n  unsigned __int64 v135; // [rsp+390h] [rbp-480h]\n  struct tm v136; // [rsp+3A0h] [rbp-470h] BYREF\n  char format[2]; // [rsp+3E0h] [rbp-430h] BYREF\n  char v138; // [rsp+3E2h] [rbp-42Eh] BYREF\n  _BYTE v139[5]; // [rsp+3E3h] [rbp-42Dh] BYREF\n  char s; // [rsp+3F0h] [rbp-420h] BYREF\n  unsigned __int8 v141[22]; // [rsp+3F1h] [rbp-41Fh] BYREF\n  _BYTE v142[1033]; // [rsp+407h] [rbp-409h] BYREF\n  __int64 savedregs; // [rsp+810h] [rbp+0h] BYREF\n\n  *(_QWORD *)&v142[1009] = __readfsqword(0x28u);\n  v41 = a4->tm_hour;\n  v66 = 0LL;\n  v65 = (char *)a4->tm_zone;\n  if ( v41 <= 12 )\n  {\n    if ( !v41 )\n      v41 = 12;\n  }\n  else\n  {\n    v41 -= 12;\n  }\n  while ( 2 )\n  {\n    if ( !*a3 )\n      return v66;\n    v42 = 0;\n    v44 = 0;\n    v48 = -1;\n    v37 = 0;\n    v38 = a1;\n    v39 = 0;\n    if ( *a3 != 37 )\n    {\n      if ( (unsigned __int64)(-1 - v66) <= 1 )\n        return 0LL;\n      if ( a2 )\n        fputc(*a3, a2);\n      ++v66;\n      goto LABEL_521;\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v7 = *++a3;\n        if ( v7 == 48 )\n          goto LABEL_19;\n        if ( v7 > 48 )\n          break;\n        if ( v7 == 35 )\n        {\n          v39 = 1;\n        }\n        else\n        {\n          if ( v7 != 45 )\n            goto LABEL_22;\nLABEL_19:\n          v42 = *a3;\n        }\n      }\n      if ( v7 != 94 )\n        break;\n      v38 = 1;\n    }\n    if ( v7 == 95 )\n      goto LABEL_19;\nLABEL_22:\n    if ( (unsigned int)(*a3 - 48) <= 9 )\n    {\n      v48 = 0;\n      do\n      {\n        if ( v48 > 214748364 || v48 == 214748364 && *a3 - 48 > 7 )\n          v48 = 0x7FFFFFFF;\n        else\n          v48 = *a3 - 48 + 10 * v48;\n        ++a3;\n      }\n      while ( (unsigned int)(*a3 - 48) <= 9 );\n    }\n    v8 = *a3;\n    if ( v8 == 69 || v8 == 79 )\n    {\n      v9 = a3++;\n      v43 = *v9;\n    }\n    else\n    {\n      v43 = 0;\n    }\n    v49 = *a3;\n    if ( v49 == 89 )\n    {\n      if ( v43 == 69 )\n        goto LABEL_160;\n      if ( v43 == 79 )\n        goto LABEL_498;\n      v44 = 4;\n      v35 = a4->tm_year < -1900;\n      v46 = a4->tm_year + 1900;\n      goto LABEL_207;\n    }\n    if ( v49 > 89 )\n    {\n      if ( v49 == 108 )\n      {\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = v41;\n      }\n      else\n      {\n        if ( v49 > 108 )\n        {\n          if ( v49 == 116 )\n          {\n            LODWORD(v23) = 0;\n            if ( v48 >= 0 )\n              LODWORD(v23) = v48;\n            v107 = (int)v23;\n            v23 = (int)v23;\n            if ( (unsigned __int64)(int)v23 <= 1 )\n              v23 = 1LL;\n            v108 = v23;\n            if ( -1 - v66 > v23 )\n            {\n              if ( a2 )\n              {\n                if ( v107 > 1 )\n                {\n                  v109 = v48 - 1LL;\n                  if ( v42 == 48 )\n                  {\n                    for ( i = 0LL; i < v109; ++i )\n                      fputc(48, a2);\n                  }\n                  else\n                  {\n                    for ( j = 0LL; j < v109; ++j )\n                      fputc(32, a2);\n                  }\n                }\n                fputc(9, a2);\n              }\n              v66 += v108;\n              goto LABEL_521;\n            }\n            return 0LL;\n          }\n          if ( v49 > 116 )\n          {\n            if ( v49 == 120 )\n            {\n              if ( v43 == 79 )\n                goto LABEL_498;\n              goto LABEL_160;\n            }\n            if ( v49 > 120 )\n            {\n              if ( v49 != 121 )\n              {\n                if ( v49 != 122 )\n                  goto LABEL_498;\n                i5 = 0LL;\n                goto LABEL_485;\n              }\n              if ( v43 == 69 )\n                goto LABEL_160;\n              v53 = a4->tm_year % 100;\n              if ( v53 < 0 )\n              {\n                if ( a4->tm_year >= -1900 )\n                  v29 = v53 + 100;\n                else\n                  v29 = -v53;\n                v53 = v29;\n              }\n              v44 = 2;\n              v45 = v53;\n            }\n            else if ( v49 == 117 )\n            {\n              v44 = 1;\n              v45 = (a4->tm_wday + 6) % 7 + 1;\n            }\n            else\n            {\n              if ( v49 != 119 || v43 == 69 )\n                goto LABEL_498;\n              v44 = 1;\n              v45 = a4->tm_wday;\n            }\n            goto LABEL_206;\n          }\n          if ( v49 != 112 )\n          {\n            if ( v49 > 112 )\n            {\n              if ( v49 == 114 )\n                goto LABEL_160;\n              if ( v49 != 115 )\n                goto LABEL_498;\n              v136 = *a4;\n              v90 = mktime(&v136);\n              ptr = v142;\n              v35 = v90 < 0;\n              do\n              {\n                v56 = (int)v90 % 10;\n                v90 /= 10LL;\n                --ptr;\n                if ( v35 )\n                  v22 = 48 - v56;\n                else\n                  v22 = v56 + 48;\n                *ptr = v22;\n              }\n              while ( v90 );\n              v44 = 1;\n              v36 = 0;\n              goto LABEL_216;\n            }\n            if ( v49 != 109 )\n            {\n              if ( v49 != 110 )\n                goto LABEL_498;\n              LODWORD(v21) = 0;\n              if ( v48 >= 0 )\n                LODWORD(v21) = v48;\n              v100 = (int)v21;\n              v21 = (int)v21;\n              if ( (unsigned __int64)(int)v21 <= 1 )\n                v21 = 1LL;\n              v101 = v21;\n              if ( -1 - v66 > v21 )\n              {\n                if ( a2 )\n                {\n                  if ( v100 > 1 )\n                  {\n                    v102 = v48 - 1LL;\n                    if ( v42 == 48 )\n                    {\n                      for ( k = 0LL; k < v102; ++k )\n                        fputc(48, a2);\n                    }\n                    else\n                    {\n                      for ( l = 0LL; l < v102; ++l )\n                        fputc(32, a2);\n                    }\n                  }\n                  fputc(10, a2);\n                }\n                v66 += v101;\n                goto LABEL_521;\n              }\n              return 0LL;\n            }\n            if ( v43 == 69 )\n              goto LABEL_498;\n            v44 = 2;\n            v35 = a4->tm_mon < -1;\n            v46 = a4->tm_mon + 1;\n            goto LABEL_207;\n          }\n          goto LABEL_375;\n        }\n        if ( v49 == 100 )\n        {\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_mday;\n          goto LABEL_206;\n        }\n        if ( v49 <= 100 )\n        {\n          if ( v49 == 97 )\n          {\n            if ( v43 )\n              goto LABEL_498;\n            if ( v39 )\n            {\n              v38 = 1;\n              v37 = 0;\n            }\n            goto LABEL_160;\n          }\n          if ( v49 <= 97 )\n          {\n            if ( v49 != 90 )\n              goto LABEL_498;\n            if ( v39 )\n            {\n              v38 = 0;\n              v37 = 1;\n            }\n            if ( !v65 )\n              v65 = (char *)&unk_407FDE;\n            v110 = strlen(v65);\n            LODWORD(v30) = 0;\n            if ( v48 >= 0 )\n              LODWORD(v30) = v48;\n            v111 = (int)v30;\n            v30 = (int)v30;\n            if ( v110 >= (int)v30 )\n              v30 = v110;\n            v112 = v30;\n            if ( -1 - v66 > v30 )\n            {\n              if ( a2 )\n              {\n                if ( v110 < v111 )\n                {\n                  v113 = v48 - v110;\n                  if ( v42 == 48 )\n                  {\n                    for ( m = 0LL; m < v113; ++m )\n                      fputc(48, a2);\n                  }\n                  else\n                  {\n                    for ( n = 0LL; n < v113; ++n )\n                      fputc(32, a2);\n                  }\n                }\n                if ( v37 )\n                {\n                  sub_4023CE(a2, (unsigned __int8 *)v65, v110);\n                }\n                else if ( v38 )\n                {\n                  sub_40241B(a2, (unsigned __int8 *)v65, v110);\n                }\n                else\n                {\n                  fwrite(v65, v110, 1uLL, a2);\n                }\n              }\n              v66 += v112;\n              goto LABEL_521;\n            }\n            return 0LL;\n          }\n          if ( v49 != 98 )\n          {\n            if ( v43 == 79 )\n              goto LABEL_498;\n            goto LABEL_160;\n          }\nLABEL_132:\n          if ( v39 )\n          {\n            v38 = 1;\n            v37 = 0;\n          }\n          if ( !v43 )\n            goto LABEL_160;\nLABEL_498:\n          for ( ii = 1; a3[1 - ii] != 37; ++ii )\n            ;\n          LODWORD(v31) = 0;\n          if ( v48 >= 0 )\n            LODWORD(v31) = v48;\n          v133 = (int)v31;\n          v31 = (int)v31;\n          if ( ii >= (unsigned __int64)(int)v31 )\n            v31 = ii;\n          v134 = v31;\n          if ( -1 - v66 > v31 )\n          {\n            if ( a2 )\n            {\n              if ( ii < v133 )\n              {\n                v135 = v48 - (__int64)ii;\n                if ( v42 == 48 )\n                {\n                  for ( jj = 0LL; jj < v135; ++jj )\n                    fputc(48, a2);\n                }\n                else\n                {\n                  for ( kk = 0LL; kk < v135; ++kk )\n                    fputc(32, a2);\n                }\n              }\n              if ( v38 )\n                sub_40241B(a2, (unsigned __int8 *)&a3[1 - ii], ii);\n              else\n                fwrite(&a3[1 - ii], ii, 1uLL, a2);\n            }\n            v66 += v134;\n            goto LABEL_521;\n          }\n          return 0LL;\n        }\n        if ( v49 == 104 )\n          goto LABEL_132;\n        if ( v49 > 104 )\n        {\n          if ( v49 == 106 )\n          {\n            if ( v43 == 69 )\n              goto LABEL_498;\n            v44 = 3;\n            v35 = a4->tm_yday < -1;\n            v46 = a4->tm_yday + 1;\n            goto LABEL_207;\n          }\n          if ( v49 != 107 || v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_hour;\n        }\n        else\n        {\n          if ( v49 != 101 )\n          {\n            if ( v49 != 103 )\n              goto LABEL_498;\n            goto LABEL_411;\n          }\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_mday;\n        }\n      }\n      if ( v42 != 48 && v42 != 45 )\n        v42 = 95;\n      goto LABEL_206;\n    }\n    if ( v49 == 73 )\n    {\n      if ( v43 == 69 )\n        goto LABEL_498;\n      v44 = 2;\n      v45 = v41;\n      goto LABEL_206;\n    }\n    if ( v49 > 73 )\n    {\n      if ( v49 == 83 )\n      {\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = a4->tm_sec;\n      }\n      else if ( v49 > 83 )\n      {\n        if ( v49 == 86 )\n          goto LABEL_411;\n        if ( v49 > 86 )\n        {\n          if ( v49 != 87 )\n          {\n            if ( v43 == 79 )\n              goto LABEL_498;\n            goto LABEL_160;\n          }\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = (a4->tm_yday - (a4->tm_wday + 6) % 7 + 7) / 7;\n          goto LABEL_206;\n        }\n        if ( v49 == 84 )\n        {\n          v68 = \"%H:%M:%S\";\n          v11 = sub_4024B9(v38, 0LL, \"%H:%M:%S\", a4, a5, a6);\n          goto LABEL_142;\n        }\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v44 = 2;\n        v45 = (a4->tm_yday - a4->tm_wday + 7) / 7;\n      }\n      else\n      {\n        if ( v49 != 78 )\n        {\n          if ( v49 <= 78 )\n          {\n            if ( v49 != 77 || v43 == 69 )\n              goto LABEL_498;\n            v44 = 2;\n            v45 = a4->tm_min;\n            goto LABEL_206;\n          }\n          if ( v49 != 80 )\n          {\n            if ( v49 != 82 )\n              goto LABEL_498;\n            v68 = \"%H:%M\";\n            v11 = sub_4024B9(v38, 0LL, \"%H:%M\", a4, a5, a6);\n            goto LABEL_142;\n          }\n          v37 = 1;\n          LOBYTE(v49) = 112;\nLABEL_375:\n          if ( v39 )\n          {\n            v38 = 0;\n            v37 = 1;\n          }\n          goto LABEL_160;\n        }\n        if ( v43 == 69 )\n          goto LABEL_498;\n        v45 = a6;\n        if ( v48 == -1 )\n        {\n          v48 = 9;\n        }\n        else\n        {\n          for ( ll = v48; ll <= 8; ++ll )\n            v45 /= 10;\n        }\n        v44 = v48;\n      }\nLABEL_206:\n      v35 = v45 < 0;\n      v46 = v45;\n      goto LABEL_207;\n    }\n    if ( v49 == 66 )\n    {\n      if ( v43 )\n        goto LABEL_498;\n      if ( v39 )\n      {\n        v38 = 1;\n        v37 = 0;\n      }\n      goto LABEL_160;\n    }\n    if ( v49 > 66 )\n    {\n      if ( v49 != 70 )\n      {\n        if ( v49 <= 70 )\n        {\n          if ( v49 != 67 )\n          {\n            if ( v49 != 68 || v43 )\n              goto LABEL_498;\n            v68 = \"%m/%d/%y\";\n            v11 = sub_4024B9(v38, 0LL, \"%m/%d/%y\", a4, a5, a6);\n            goto LABEL_142;\n          }\n          if ( v43 == 79 )\n            goto LABEL_498;\n          if ( v43 == 69 )\n            goto LABEL_160;\n          v55 = a4->tm_year / 100 + 19;\n          v13 = a4->tm_year % 100 < 0 && v55 > 0;\n          v44 = 2;\n          v35 = a4->tm_year < -1900;\n          v46 = v55 - v13;\nLABEL_207:\n          v36 = 0;\n          v47 = 0;\n          goto LABEL_208;\n        }\n        if ( v49 != 71 )\n        {\n          if ( v43 == 69 )\n            goto LABEL_498;\n          v44 = 2;\n          v45 = a4->tm_hour;\n          goto LABEL_206;\n        }\nLABEL_411:\n        if ( v43 == 69 )\n          goto LABEL_498;\n        if ( a4->tm_year >= 0 )\n          v24 = -100;\n        else\n          v24 = 300;\n        v57 = a4->tm_year + v24;\n        v51 = 0;\n        v52 = sub_402468(a4->tm_yday, a4->tm_wday);\n        if ( v52 >= 0 )\n        {\n          v26 = (v57 & 3) == 0 && (v57 % 100 || !(v57 % 400));\n          v58 = sub_402468(a4->tm_yday + -365 - v26, a4->tm_wday);\n          if ( v58 >= 0 )\n          {\n            v51 = 1;\n            v52 = v58;\n          }\n        }\n        else\n        {\n          v51 = -1;\n          v25 = (((_BYTE)v57 - 1) & 3) == 0 && ((v57 - 1) % 100 || !((v57 - 1) % 400));\n          v52 = sub_402468(a4->tm_yday + v25 + 365, a4->tm_wday);\n        }\n        v27 = *a3;\n        if ( v27 == 71 )\n        {\n          v44 = 4;\n          v35 = a4->tm_year < -1900 - v51;\n          v46 = a4->tm_year + v51 + 1900;\n          goto LABEL_207;\n        }\n        if ( v27 == 103 )\n        {\n          v59 = (a4->tm_year % 100 + v51) % 100;\n          v44 = 2;\n          if ( v59 >= 0 )\n          {\n            v28 = (a4->tm_year % 100 + v51) % 100;\n          }\n          else if ( a4->tm_year >= -1900 - v51 )\n          {\n            v28 = v59 + 100;\n          }\n          else\n          {\n            v28 = -v59;\n          }\n          v45 = v28;\n        }\n        else\n        {\n          v44 = 2;\n          v45 = v52 / 7 + 1;\n        }\n        goto LABEL_206;\n      }\n      if ( v43 )\n        goto LABEL_498;\n      v68 = \"%Y-%m-%d\";\n      v11 = sub_4024B9(v38, 0LL, \"%Y-%m-%d\", a4, a5, a6);\nLABEL_142:\n      v103 = v11;\n      LODWORD(v11) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v11) = v48;\n      v104 = (int)v11;\n      v11 = (int)v11;\n      if ( v103 >= (int)v11 )\n        v11 = v103;\n      v105 = v11;\n      if ( -1 - v66 <= v11 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v103 < v104 )\n        {\n          v106 = v48 - v103;\n          if ( v42 == 48 )\n          {\n            for ( mm = 0LL; mm < v106; ++mm )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( nn = 0LL; nn < v106; ++nn )\n              fputc(32, a2);\n          }\n        }\n        sub_4024B9(v38, a2, v68, a4, a5, a6);\n      }\n      v66 += v105;\n      goto LABEL_521;\n    }\n    if ( v49 == 37 )\n    {\n      if ( v43 )\n        goto LABEL_498;\n      LODWORD(v10) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v10) = v48;\n      v97 = (int)v10;\n      v10 = (int)v10;\n      if ( (unsigned __int64)(int)v10 <= 1 )\n        v10 = 1LL;\n      v98 = v10;\n      if ( -1 - v66 <= v10 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v97 > 1 )\n        {\n          v99 = v48 - 1LL;\n          if ( v42 == 48 )\n          {\n            for ( i1 = 0LL; i1 < v99; ++i1 )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( i2 = 0LL; i2 < v99; ++i2 )\n              fputc(32, a2);\n          }\n        }\n        fputc(*a3, a2);\n      }\n      v66 += v98;\n      goto LABEL_521;\n    }\n    if ( v49 <= 37 )\n    {\n      if ( !*a3 )\n        --a3;\n      goto LABEL_498;\n    }\n    if ( v49 != 58 )\n    {\n      if ( v49 != 65 || v43 )\n        goto LABEL_498;\n      if ( v39 )\n      {\n        v38 = 1;\n        v37 = 0;\n      }\nLABEL_160:\n      format[0] = 32;\n      v75 = &v138;\n      format[1] = 37;\n      if ( v43 )\n      {\n        v75 = v139;\n        v138 = v43;\n      }\n      *v75 = v49;\n      v75[1] = 0;\n      v128 = strftime(&s, 0x400uLL, format, a4);\n      if ( v128 )\n      {\n        size = v128 - 1;\n        LODWORD(v12) = 0;\n        if ( v48 >= 0 )\n          LODWORD(v12) = v48;\n        v130 = (int)v12;\n        v12 = (int)v12;\n        if ( size >= (int)v12 )\n          v12 = v128 - 1;\n        v131 = v12;\n        if ( -1 - v66 <= v12 )\n          return 0LL;\n        if ( a2 )\n        {\n          if ( !v44 && size < v130 )\n          {\n            v132 = v48 - size;\n            if ( v42 == 48 )\n            {\n              for ( i3 = 0LL; i3 < v132; ++i3 )\n                fputc(48, a2);\n            }\n            else\n            {\n              for ( i4 = 0LL; i4 < v132; ++i4 )\n                fputc(32, a2);\n            }\n          }\n          if ( v37 )\n          {\n            sub_4023CE(a2, v141, size);\n          }\n          else if ( v38 )\n          {\n            sub_40241B(a2, v141, size);\n          }\n          else\n          {\n            fwrite(v141, size, 1uLL, a2);\n          }\n        }\n        v66 += v131;\n      }\nLABEL_521:\n      ++a3;\n      continue;\n    }\n    break;\n  }\n  for ( i5 = 1LL; a3[i5] == 58; ++i5 )\n    ;\n  if ( a3[i5] != 122 )\n    goto LABEL_498;\n  a3 += i5;\nLABEL_485:\n  if ( a4->tm_isdst < 0 )\n    goto LABEL_521;\n  v60 = a4->tm_gmtoff;\n  v61 = v60 / 3600;\n  v62 = v60 / 60 % 60;\n  v63 = v60 % 60;\n  switch ( i5 )\n  {\n    case 1LL:\n      goto LABEL_492;\n    case 0LL:\n      v44 = 5;\n      v35 = v60 < 0;\n      v47 = 0;\n      v46 = 100 * v61 + v62;\n      goto LABEL_202;\n    case 2LL:\n      goto LABEL_493;\n  }\n  if ( i5 != 3 )\n    goto LABEL_498;\n  if ( v63 )\n  {\nLABEL_493:\n    v44 = 9;\n    v35 = v60 < 0;\n    v47 = 20;\n    v46 = 100 * v62 + 10000 * v61 + v63;\n    goto LABEL_202;\n  }\n  if ( v62 )\n  {\nLABEL_492:\n    v44 = 6;\n    v35 = v60 < 0;\n    v47 = 4;\n    v46 = 100 * v61 + v62;\n    goto LABEL_202;\n  }\n  v44 = 3;\n  v35 = v60 < 0;\n  v47 = 0;\n  v46 = v60 / 3600;\nLABEL_202:\n  v36 = 1;\nLABEL_208:\n  if ( v43 == 79 && !v35 )\n    goto LABEL_160;\n  ptr = v142;\n  if ( v35 )\n    v46 = -v46;\n  do\n  {\n    if ( (v47 & 1) != 0 )\n      *--ptr = 58;\n    v47 >>= 1;\n    *--ptr = v46 % 0xA + 48;\n    v46 /= 0xAu;\n  }\n  while ( v46 || v47 );\nLABEL_216:\n  if ( v44 < v48 )\n    v44 = v48;\n  if ( v35 )\n  {\n    v14 = 45;\n  }\n  else if ( v36 )\n  {\n    v14 = 43;\n  }\n  else\n  {\n    v14 = 0;\n  }\n  v40 = v14;\n  if ( v42 == 45 )\n  {\n    if ( v14 )\n    {\n      LODWORD(v15) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v15) = v48;\n      v114 = (int)v15;\n      v15 = (int)v15;\n      if ( (unsigned __int64)(int)v15 <= 1 )\n        v15 = 1LL;\n      v115 = v15;\n      if ( -1 - v66 <= v15 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( !v44 && v114 > 1 )\n        {\n          for ( i6 = 0LL; i6 < v48 - 1LL; ++i6 )\n            fputc(32, a2);\n        }\n        fputc(v40, a2);\n      }\n      v66 += v115;\n    }\nLABEL_312:\n    v124 = (_BYTE *)(v142 - ptr);\n    LODWORD(v20) = 0;\n    if ( v48 >= 0 )\n      LODWORD(v20) = v48;\n    v125 = (int)v20;\n    v20 = (int)v20;\n    if ( (unsigned __int64)v124 >= (int)v20 )\n      v20 = v142 - ptr;\n    v126 = v20;\n    if ( -1 - v66 > v20 )\n    {\n      if ( a2 )\n      {\n        if ( !v44 && (unsigned __int64)v124 < v125 )\n        {\n          v127 = v48 - (_QWORD)v124;\n          if ( v42 == 48 )\n          {\n            for ( i7 = 0LL; i7 < v127; ++i7 )\n              fputc(48, a2);\n          }\n          else\n          {\n            for ( i8 = 0LL; i8 < v127; ++i8 )\n              fputc(32, a2);\n          }\n        }\n        if ( v38 )\n          sub_40241B(a2, ptr, (__int64)v124);\n        else\n          fwrite(ptr, (size_t)v124, 1uLL, a2);\n      }\n      v66 += v126;\n      goto LABEL_521;\n    }\n    result = 0LL;\n  }\n  else\n  {\n    v64 = v44 + (_DWORD)ptr - ((unsigned int)&savedregs - 1056 + 23) - (v14 != 0);\n    if ( v64 <= 0 )\n    {\n      if ( !v14 )\n        goto LABEL_312;\n      LODWORD(v19) = 0;\n      if ( v48 >= 0 )\n        LODWORD(v19) = v48;\n      v121 = (int)v19;\n      v19 = (int)v19;\n      if ( (unsigned __int64)(int)v19 <= 1 )\n        v19 = 1LL;\n      v122 = v19;\n      if ( -1 - v66 > v19 )\n      {\n        if ( a2 )\n        {\n          if ( !v44 && v121 > 1 )\n          {\n            v123 = v48 - 1LL;\n            if ( v42 == 48 )\n            {\n              for ( i9 = 0LL; i9 < v123; ++i9 )\n                fputc(48, a2);\n            }\n            else\n            {\n              for ( i10 = 0LL; i10 < v123; ++i10 )\n                fputc(32, a2);\n            }\n          }\n          fputc(v40, a2);\n        }\n        v66 += v122;\n        goto LABEL_312;\n      }\n      result = 0LL;\n    }\n    else\n    {\n      if ( v42 != 95 )\n      {\n        if ( v44 >= (unsigned __int64)(-1 - v66) )\n          return 0LL;\n        if ( v14 )\n        {\n          LODWORD(v18) = 0;\n          if ( v48 >= 0 )\n            LODWORD(v18) = v48;\n          v118 = (int)v18;\n          v18 = (int)v18;\n          if ( (unsigned __int64)(int)v18 <= 1 )\n            v18 = 1LL;\n          v119 = v18;\n          if ( -1 - v66 <= v18 )\n            return 0LL;\n          if ( a2 )\n          {\n            if ( !v44 && v118 > 1 )\n            {\n              v120 = v48 - 1LL;\n              if ( v42 == 48 )\n              {\n                for ( i11 = 0LL; i11 < v120; ++i11 )\n                  fputc(48, a2);\n              }\n              else\n              {\n                for ( i12 = 0LL; i12 < v120; ++i12 )\n                  fputc(32, a2);\n              }\n            }\n            fputc(v40, a2);\n          }\n          v66 += v119;\n        }\n        if ( a2 )\n        {\n          for ( i13 = 0LL; v64 > i13; ++i13 )\n            fputc(48, a2);\n        }\n        v66 += v64;\n        v48 = 0;\n        goto LABEL_312;\n      }\n      if ( v64 < (unsigned __int64)(-1 - v66) )\n      {\n        if ( a2 )\n        {\n          for ( i14 = 0LL; v64 > i14; ++i14 )\n            fputc(32, a2);\n        }\n        v66 += v64;\n        if ( v48 <= v64 )\n          v16 = 0;\n        else\n          v16 = v48 - v64;\n        v48 = v16;\n        if ( !v40 )\n          goto LABEL_312;\n        LODWORD(v17) = 0;\n        if ( v48 >= 0 )\n          LODWORD(v17) = v48;\n        v116 = (int)v17;\n        v17 = (int)v17;\n        if ( (unsigned __int64)(int)v17 <= 1 )\n          v17 = 1LL;\n        v117 = v17;\n        if ( -1 - v66 > v17 )\n        {\n          if ( a2 )\n          {\n            if ( !v44 && v116 > 1 )\n            {\n              for ( i15 = 0LL; i15 < v48 - 1LL; ++i15 )\n                fputc(32, a2);\n            }\n            fputc(v40, a2);\n          }\n          v66 += v117;\n          goto LABEL_312;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n"], [4214686, "sub_404F9E", "__int64 __fastcall sub_404F9E(FILE *a1, char *a2, const struct tm *a3, unsigned int a4, unsigned int a5)\n{\n  return sub_4024B9(0, a1, a2, a3, a4, a5);\n}\n"], [4214752, "sub_404FE0", "__int64 sub_404FE0(int a1, char *const *a2, __int64 a3, __int64 a4, __int64 a5, void (__fastcall *a6)(_QWORD), ...)\n{\n  __int64 result; // rax\n  unsigned int v11; // [rsp+30h] [rbp-D0h]\n  int v12; // [rsp+34h] [rbp-CCh]\n  gcc_va_list va; // [rsp+38h] [rbp-C8h] BYREF\n\n  v11 = opterr;\n  opterr = 0;\n  if ( a1 == 2 )\n  {\n    v12 = getopt_long(2, a2, \"+\", &longopts, 0LL);\n    if ( v12 != -1 )\n    {\n      if ( v12 == 104 )\n      {\n        a6(0LL);\n      }\n      else if ( v12 != 118 )\n      {\n        goto LABEL_8;\n      }\n      va_start(va, a6);\n      sub_40702B(stdout, a3, a4, a5, va);\n      exit(0);\n    }\n  }\nLABEL_8:\n  result = v11;\n  opterr = v11;\n  optind = 0;\n  return result;\n}\n"], [4215087, "sub_40512F", "char *__fastcall sub_40512F(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_60A2C0 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4215318, "sub_405216", "__int64 __fastcall sub_405216(unsigned int a1, __int64 a2)\n{\n  return sub_4066C5(a1, 6LL, a2);\n}\n"], [4215354, "sub_40523A", "__int64 __fastcall sub_40523A(__int64 a1)\n{\n  return sub_405216(0, a1);\n}\n"], [4215385, "sub_405259", "__int64 __fastcall sub_405259(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A2E0;\n  v4 = sub_407490(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4215458, "sub_4052A2", "__int64 __fastcall sub_4052A2(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_60A2E0;\n  return *(unsigned int *)v1;\n}\n"], [4215488, "sub_4052C0", "__int64 *__fastcall sub_4052C0(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_60A2E0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4215524, "sub_4052E4", "__int64 __fastcall sub_4052E4(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_60A2E0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4215660, "sub_40536C", "__int64 __fastcall sub_40536C(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_60A2E0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4215711, "sub_40539F", "__int64 *__fastcall sub_40539F(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_60A2E0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4215801, "sub_4053F9", "_QWORD *__fastcall sub_4053F9(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4215921, "sub_405471", "char *__fastcall sub_405471(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4215982, "sub_4054AE", "unsigned __int64 __fastcall sub_4054AE(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_405471((const char *)L\"`'\", a5);\n        a9 = sub_405471((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_4054AE(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4219129, "sub_4060F9", "unsigned __int64 __fastcall sub_4060F9(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_60A2E0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_4054AE(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4219289, "sub_406199", "__int64 __fastcall sub_406199(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4061CB(a1, a2, 0LL, a3);\n}\n"], [4219339, "sub_4061CB", "__int64 __fastcall sub_4061CB(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_60A2E0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_4054AE(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_407352(v10);\n  sub_4054AE(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4219639, "sub_4062F7", "void sub_4062F7()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_60A240;\n  for ( i = 1; i < dword_60A220; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_60A320 )\n  {\n    free(ptr[1]);\n    qword_60A230 = 256LL;\n    off_60A238 = &unk_60A320;\n  }\n  if ( ptr != (void **)&qword_60A230 )\n  {\n    free(ptr);\n    off_60A240 = &qword_60A230;\n  }\n  dword_60A220 = 1;\n}\n"], [4219810, "sub_4063A2", "void *__fastcall sub_4063A2(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_60A240;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_60A220 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_60A240 == &qword_60A230;\n    if ( off_60A240 == &qword_60A230 )\n      v4 = 0LL;\n    else\n      v4 = off_60A240;\n    v12 = (__int64 *)sub_4073A1(v4, 16 * v14);\n    off_60A240 = v12;\n    if ( v9 )\n    {\n      v5 = off_60A238;\n      *v12 = qword_60A230;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_60A220], 0, 16 * (v14 - (unsigned int)dword_60A220));\n    dword_60A220 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_4054AE((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_60A320 )\n      free(ptr);\n    ptr = (void *)sub_407352(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_4054AE((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4220456, "sub_406628", "void *__fastcall sub_406628(int a1, __int64 a2)\n{\n  return sub_4063A2(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_60A2E0);\n}\n"], [4220499, "sub_406653", "void *__fastcall sub_406653(int a1, __int64 a2, size_t a3)\n{\n  return sub_4063A2(a1, a2, a3, (__int64)&qword_60A2E0);\n}\n"], [4220543, "sub_40667F", "void *__fastcall sub_40667F(__int64 a1)\n{\n  return sub_406628(0, a1);\n}\n"], [4220574, "sub_40669E", "void *__fastcall sub_40669E(__int64 a1, size_t a2)\n{\n  return sub_406653(0, a1, a2);\n}\n"], [4220613, "sub_4066C5", "void *__fastcall sub_4066C5(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_4053F9(v5, a2);\n  return sub_4063A2(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4220678, "sub_406706", "void *__fastcall sub_406706(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_4053F9(v7, a2);\n  return sub_4063A2(a1, a3, a4, (__int64)v7);\n}\n"], [4220741, "sub_406745", "void *__fastcall sub_406745(int a1, __int64 a2)\n{\n  return sub_4066C5(0, a1, a2);\n}\n"], [4220777, "sub_406769", "void *__fastcall sub_406769(int a1, __int64 a2, size_t a3)\n{\n  return sub_406706(0, a1, a2, a3);\n}\n"], [4220821, "sub_406795", "void *__fastcall sub_406795(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_60A2E0;\n  v4[1] = qword_60A2E8;\n  v4[2] = qword_60A2F0;\n  v4[3] = qword_60A2F8;\n  v4[4] = qword_60A300;\n  v4[5] = qword_60A308;\n  v4[6] = qword_60A310;\n  sub_4052E4(v4, a3, 1);\n  return sub_4063A2(0, a1, a2, (__int64)v4);\n}\n"], [4220969, "sub_406829", "void *__fastcall sub_406829(__int64 a1, unsigned __int8 a2)\n{\n  return sub_406795(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4221011, "sub_406853", "void *__fastcall sub_406853(__int64 a1)\n{\n  return sub_406829(a1, 0x3Au);\n}\n"], [4221042, "sub_406872", "void *__fastcall sub_406872(__int64 a1, size_t a2)\n{\n  return sub_406795(a1, a2, 0x3Au);\n}\n"], [4221084, "sub_40689C", "__int64 __fastcall sub_40689C(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4068D2(a1, a2, a3, a4, -1LL);\n}\n"], [4221138, "sub_4068D2", "void *__fastcall sub_4068D2(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_60A2E0;\n  v8[1] = qword_60A2E8;\n  v8[2] = qword_60A2F0;\n  v8[3] = qword_60A2F8;\n  v8[4] = qword_60A300;\n  v8[5] = qword_60A308;\n  v8[6] = qword_60A310;\n  sub_40539F(v8, a2, a3);\n  return sub_4063A2(a1, a4, a5, (__int64)v8);\n}\n"], [4221289, "sub_406969", "__int64 __fastcall sub_406969(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40689C(0, a1, a2, a3);\n}\n"], [4221336, "sub_406998", "void *__fastcall sub_406998(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4068D2(0, a1, a2, a3, a4);\n}\n"], [4221394, "sub_4069D2", "int __fastcall sub_4069D2(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4222909, "sub_406FBD", "int __fastcall sub_406FBD(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4069D2(a1, a2, a3, a4, a5, i);\n}\n"], [4223019, "sub_40702B", "int __fastcall sub_40702B(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4069D2(a1, a2, a3, a4, v8, i);\n}\n"], [4223236, "sub_407104", "int sub_407104(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40702B(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4223418, "sub_4071BA", "int sub_4071BA()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4223523, "sub_407223", "__int64 __fastcall sub_407223(unsigned __int64 a1, unsigned __int64 a2)\n{\n  unsigned __int64 v2; // rdx\n\n  v2 = 0xFFFFFFFFFFFFFFFFLL % a2;\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_4074EE(a1, a2, v2);\n  return sub_40736C(a2 * a1, a2, v2);\n}\n"], [4223585, "sub_407261", "__int64 __fastcall sub_407261(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_4074EE(a1, a2, v4);\n  return sub_4073A1(a1, a3 * a2);\n}\n"], [4223661, "sub_4072AD", "__int64 __fastcall sub_4072AD(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_4074EE(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_4073A1(a1, a3 * v6);\n}\n"], [4223826, "sub_407352", "__int64 __fastcall sub_407352(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40736C(a1, a2, a3);\n}\n"], [4223852, "sub_40736C", "void *__fastcall sub_40736C(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_4074EE(a1, a2, v2);\n  return v4;\n}\n"], [4223905, "sub_4073A1", "void *__fastcall sub_4073A1(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_4074EE(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4224002, "sub_407402", "__int64 __fastcall sub_407402(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_4072AD(a1, a2, 1uLL);\n}\n"], [4224044, "sub_40742C", "void *__fastcall sub_40742C(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40736C(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4224087, "sub_407457", "void *__fastcall sub_407457(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_4074EE(a1, a2, v2);\n  return v4;\n}\n"], [4224144, "sub_407490", "void *__fastcall sub_407490(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40736C(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4224193, "sub_4074C1", "void *__fastcall sub_4074C1(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_407490(a1, v1 + 1);\n}\n"], [4224238, "sub_4074EE", "void __noreturn sub_4074EE()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4224291, "sub_407523", "int __fastcall sub_407523(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40760B(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4224472, "sub_4075D8", "__int64 __fastcall sub_4075D8(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_407656(a1, 0LL, 1LL);\n  return result;\n}\n"], [4224523, "sub_40760B", "int __fastcall sub_40760B(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_4075D8(a1);\n  return fflush(a1);\n}\n"], [4224598, "sub_407656", "int __fastcall sub_407656(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4224782, "sub_40770E", "char *__fastcall sub_40770E(__int64 a1, __int64 a2)\n{\n  char *i; // [rsp+10h] [rbp-10h]\n  char *dest; // [rsp+18h] [rbp-8h]\n\n  dest = (char *)sub_40736C(0x21uLL, a2);\n  strncpy(dest, (const char *)(a1 + 44), 0x20uLL);\n  dest[32] = 0;\n  for ( i = &dest[strlen(dest)]; dest < i && *(i - 1) == 32; *i = 0 )\n    --i;\n  return dest;\n}\n"], [4224915, "sub_407793", "_BOOL8 __fastcall sub_407793(__int64 a1, char a2)\n{\n  bool v2; // al\n\n  v2 = *(_BYTE *)(a1 + 44) && *(_WORD *)a1 == 7;\n  if ( (a2 & 2) != 0 && !v2 )\n    return 0LL;\n  return (a2 & 1) == 0 || !v2 || *(int *)(a1 + 4) > 0 && (kill(*(_DWORD *)(a1 + 4), 0) >= 0 || *__errno_location() != 3);\n}\n"], [4225078, "sub_407836", "__int64 __fastcall sub_407836(const char *a1, _QWORD *a2, _QWORD *a3, char a4)\n{\n  __int64 v4; // rdx\n  _DWORD *v5; // rax\n  struct utmpx *v6; // rsi\n  unsigned int v7; // er8\n  __int64 v8; // rcx\n  _DWORD *v9; // rdi\n  __int16 *v10; // rsi\n  __int64 v11; // rdx\n  unsigned __int64 v16; // [rsp+20h] [rbp-20h] BYREF\n  __int64 v17; // [rsp+28h] [rbp-18h]\n  __int64 v18; // [rsp+30h] [rbp-10h]\n  struct utmpx *v19; // [rsp+38h] [rbp-8h]\n\n  v17 = 0LL;\n  v16 = 0LL;\n  v18 = 0LL;\n  utmpxname(a1);\n  setutxent();\n  while ( 1 )\n  {\n    v19 = getutxent();\n    if ( !v19 )\n      break;\n    if ( sub_407793((__int64)v19, a4) )\n    {\n      if ( v17 == v16 )\n        v18 = sub_4072AD(v18, &v16, 0x180uLL);\n      v4 = v17++;\n      v5 = (_DWORD *)(384 * v4 + v18);\n      v6 = v19;\n      v7 = 384;\n      if ( ((((_BYTE)v4 << 7) + (_BYTE)v18) & 4) != 0 )\n      {\n        *v5++ = *(_DWORD *)&v19->ut_type;\n        v6 = (struct utmpx *)((char *)v6 + 4);\n        v7 = 380;\n      }\n      v8 = v7 >> 3;\n      qmemcpy(v5, v6, 8 * v8);\n      v10 = &v6->ut_type + 4 * v8;\n      v9 = &v5[2 * v8];\n      v11 = 0LL;\n      if ( (v7 & 4) != 0 )\n      {\n        *v9 = *(_DWORD *)v10;\n        v11 = 2LL;\n      }\n      if ( (v7 & 2) != 0 )\n      {\n        *(_WORD *)((char *)v9 + v11 * 2) = v10[v11];\n        ++v11;\n      }\n      if ( (v7 & 1) != 0 )\n        *((_BYTE *)v9 + v11 * 2) = v10[v11];\n    }\n  }\n  endutxent();\n  *a2 = v17;\n  *a3 = v18;\n  return 0LL;\n}\n"], [4225421, "sub_40798D", "__int64 __fastcall sub_40798D(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_407523(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4225568, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_609E18 - off_609E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_609E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4225680, "fini", "void fini(void)\n{\n  ;\n}\n"], [4225696, "sub_407AA0", "int __fastcall sub_407AA0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_60A208 )\n    v1 = (void *)qword_60A208;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4225724, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]