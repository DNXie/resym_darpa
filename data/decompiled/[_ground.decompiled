[[4198528, ".init_proc", "__int64 (**init_proc())(void)\n{\n  __int64 (**result)(void); // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (__int64 (**)(void))__gmon_start__();\n  return result;\n}\n"], [4198560, "sub_4010A0", "__int64 sub_4010A0()\n{\n  return qword_609010();\n}\n"], [4198576, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4198592, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4198608, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4198624, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4198640, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4198656, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4198672, ".isatty", "// attributes: thunk\nint isatty(int fd)\n{\n  return isatty(fd);\n}\n"], [4198688, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4198704, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4198720, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4198736, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4198752, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4198768, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4198784, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4198800, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4198816, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4198832, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4198848, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4198864, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4198880, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4198896, ".geteuid", "// attributes: thunk\n__uid_t geteuid(void)\n{\n  return geteuid();\n}\n"], [4198912, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4198928, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4198944, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4198960, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4198976, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4198992, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4199008, ".fputc_unlocked", "// attributes: thunk\nint fputc_unlocked(int c, FILE *stream)\n{\n  return fputc_unlocked(c, stream);\n}\n"], [4199024, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4199040, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4199056, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4199072, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4199088, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4199104, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4199120, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4199136, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4199152, ".getegid", "// attributes: thunk\n__gid_t getegid(void)\n{\n  return getegid();\n}\n"], [4199168, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4199184, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4199200, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4199216, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4199232, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4199248, ".euidaccess", "// attributes: thunk\nint euidaccess(const char *name, int type)\n{\n  return euidaccess(name, type);\n}\n"], [4199264, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4199280, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4199296, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4199312, ".fflush_unlocked", "// attributes: thunk\nint fflush_unlocked(FILE *stream)\n{\n  return fflush_unlocked(stream);\n}\n"], [4199328, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4199344, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4199360, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4199376, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main((int (__fastcall *)(int, char **, char **))main, v4, &retaddr, (void (*)(void))init, fini, a3, &v5);\n  __halt();\n}\n"], [4199424, "sub_401400", "signed __int64 sub_401400()\n{\n  signed __int64 result; // rax\n\n  result = &unk_6091FF - &unk_6091F8;\n  if ( (unsigned __int64)(&unk_6091FF - &unk_6091F8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4199472, "sub_401430", "__int64 sub_401430()\n{\n  return 0LL;\n}\n"], [4199536, "sub_401470", "signed __int64 sub_401470()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_609228 )\n  {\n    result = sub_401400();\n    byte_609228 = 1;\n  }\n  return result;\n}\n"], [4199568, "sub_401490", "__int64 sub_401490()\n{\n  return sub_401430();\n}\n"], [4199613, "sub_4014BD", "__int64 __fastcall sub_4014BD(unsigned int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 != 1 )\n  {\n    result = a1;\n    status = a1;\n  }\n  return result;\n}\n"], [4199637, "sub_4014D5", "__int64 __fastcall sub_4014D5(__int64 a1, int a2, __int64 a3, int a4)\n{\n  if ( a1 < a3 )\n    return 0xFFFFFFFFLL;\n  if ( a1 > a3 )\n    return 1LL;\n  return (unsigned int)(a2 - a4);\n}\n"], [4199728, "sub_401530", "__int64 __fastcall sub_401530(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4199743, "sub_40153F", "int sub_40153F()\n{\n  _BYTE *v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  _BYTE *v5; // rbx\n  char *v6; // rax\n  _BYTE *v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_403AF4((_BYTE *)qword_609250);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_403AF4((_BYTE *)qword_609250);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_403AF4((_BYTE *)qword_609250);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4200009, "sub_401649", "__int64 __fastcall sub_401649(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4200031, "sub_40165F", "void __fastcall __noreturn sub_40165F(const char *a1, __int64 a2)\n{\n  fprintf(stderr, \"%s: \", *(const char **)qword_609238);\n  fprintf(stderr, a1, a2);\n  fputc_unlocked(10, stderr);\n  fflush_unlocked(stderr);\n  exit(2);\n}\n"], [4200158, "sub_4016DE", "__int64 __fastcall sub_4016DE(char a1)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)++dword_609230;\n  if ( a1 )\n  {\n    result = (unsigned int)dword_609234;\n    if ( dword_609230 >= dword_609234 )\n      sub_401736();\n  }\n  return result;\n}\n"], [4200215, "sub_401717", "__int64 sub_401717()\n{\n  sub_4016DE(1);\n  return (unsigned int)++dword_609230;\n}\n"], [4200246, "sub_401736", "void __noreturn sub_401736()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n\n  v0 = sub_403D3B(*(_QWORD *)(8LL * dword_609234 - 8 + qword_609238));\n  v1 = gettext(\"missing argument after %s\");\n  sub_40165F(v1, v0);\n}\n"], [4200317, "sub_40177D", "unsigned __int8 *__fastcall sub_40177D(unsigned __int8 *a1)\n{\n  const unsigned __int16 *v1; // rbx\n  unsigned __int8 *v2; // rax\n  const unsigned __int16 *v3; // rbx\n  __int64 v5; // rbx\n  char *v6; // rax\n  unsigned __int8 *i; // [rsp+10h] [rbp-20h]\n  unsigned __int8 *v8; // [rsp+10h] [rbp-20h]\n  unsigned __int8 *v9; // [rsp+10h] [rbp-20h]\n  unsigned __int8 *v10; // [rsp+18h] [rbp-18h]\n\n  for ( i = a1; ; ++i )\n  {\n    v1 = *__ctype_b_loc();\n    if ( (v1[(unsigned __int8)sub_401530(*i)] & 1) == 0 )\n      break;\n  }\n  if ( *i == 43 )\n  {\n    v8 = i + 1;\n    v10 = v8;\n  }\n  else\n  {\n    v10 = i;\n    v8 = &i[*i == 45];\n  }\n  v2 = v8;\n  v9 = v8 + 1;\n  if ( (unsigned int)((char)*v2 - 48) > 9 )\n    goto LABEL_16;\n  while ( (unsigned int)((char)*v9 - 48) <= 9 )\n    ++v9;\n  while ( 1 )\n  {\n    v3 = *__ctype_b_loc();\n    if ( (v3[(unsigned __int8)sub_401530(*v9)] & 1) == 0 )\n      break;\n    ++v9;\n  }\n  if ( *v9 )\n  {\nLABEL_16:\n    v5 = sub_403D3B((__int64)a1);\n    v6 = gettext(\"invalid integer %s\");\n    sub_40165F(v6, v5);\n  }\n  return v10;\n}\n"], [4200610, "sub_4018A2", "_BOOL8 __fastcall sub_4018A2(char *a1, __int64 *a2)\n{\n  int v2; // eax\n  __int64 v3; // rdx\n  bool v5; // [rsp+1Fh] [rbp-91h]\n  struct stat stat_buf; // [rsp+20h] [rbp-90h] BYREF\n\n  v2 = sub_406940(a1, &stat_buf);\n  v5 = v2 == 0;\n  if ( !v2 )\n  {\n    *a2 = sub_401649((__int64)&stat_buf);\n    a2[1] = v3;\n  }\n  return v5;\n}\n"], [4200718, "sub_40190E", "_BOOL8 __fastcall sub_40190E(const char *a1)\n{\n  return !strcmp(a1, \"=\")\n      || !strcmp(a1, \"!=\")\n      || !strcmp(a1, \"==\")\n      || !strcmp(a1, \"-nt\")\n      || !strcmp(a1, \"-ot\")\n      || !strcmp(a1, \"-ef\")\n      || !strcmp(a1, \"-eq\")\n      || !strcmp(a1, \"-ne\")\n      || !strcmp(a1, \"-lt\")\n      || !strcmp(a1, \"-le\")\n      || !strcmp(a1, \"-gt\")\n      || !strcmp(a1, \"-ge\");\n}\n"], [4201019, "sub_401A3B", "bool sub_401A3B()\n{\n  bool v0; // al\n  char *v1; // rax\n  __int64 v2; // rbx\n  char *v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  char v7; // [rsp+Ah] [rbp-16h]\n  char v8; // [rsp+Bh] [rbp-15h]\n  int i; // [rsp+Ch] [rbp-14h]\n\n  v8 = 0;\n  while ( dword_609230 < dword_609234\n       && **(_BYTE **)(8LL * dword_609230 + qword_609238) == 33\n       && !*(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL) )\n  {\n    sub_4016DE(1);\n    v8 = v8 == 0;\n  }\n  if ( dword_609230 >= dword_609234 )\n    sub_401736();\n  if ( **(_BYTE **)(8LL * dword_609230 + qword_609238) != 40\n    || *(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL) )\n  {\n    if ( dword_609234 - dword_609230 > 3\n      && !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"-l\")\n      && sub_40190E(*(const char **)(8 * (dword_609230 + 2LL) + qword_609238)) )\n    {\n      v7 = sub_401E45(1);\n    }\n    else if ( dword_609234 - dword_609230 > 2 && sub_40190E(*(const char **)(8 * (dword_609230 + 1LL) + qword_609238)) )\n    {\n      v7 = sub_401E45(0);\n    }\n    else if ( **(_BYTE **)(8LL * dword_609230 + qword_609238) == 45\n           && *(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL)\n           && !*(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 2LL) )\n    {\n      if ( !sub_4030E9(*(_BYTE **)(8LL * dword_609230 + qword_609238)) )\n      {\n        v4 = *(_QWORD *)(8LL * dword_609230 + qword_609238);\n        v5 = gettext(\"%s: unary operator expected\");\n        sub_40165F(v5, v4);\n      }\n      v7 = sub_402825();\n    }\n    else\n    {\n      v7 = **(_BYTE **)(8LL * dword_609230 + qword_609238) != 0;\n      sub_4016DE(0);\n    }\n  }\n  else\n  {\n    sub_4016DE(1);\n    for ( i = 1;\n          i + dword_609230 < dword_609234 && strcmp(*(const char **)(8LL * (dword_609230 + i) + qword_609238), \")\");\n          ++i )\n    {\n      if ( i == 4 )\n      {\n        v0 = sub_40349F(dword_609234 - dword_609230);\n        goto LABEL_17;\n      }\n    }\n    v0 = sub_40349F(i);\nLABEL_17:\n    v7 = v0;\n    if ( !*(_QWORD *)(8LL * dword_609230 + qword_609238) )\n    {\n      v1 = gettext(\"')' expected\");\n      sub_40165F(v1, 0LL);\n    }\n    if ( **(_BYTE **)(8LL * dword_609230 + qword_609238) != 41\n      || *(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL) )\n    {\n      v2 = *(_QWORD *)(8LL * dword_609230 + qword_609238);\n      v3 = gettext(\"')' expected, found %s\");\n      sub_40165F(v3, v2);\n    }\n    sub_4016DE(0);\n  }\n  return v8 != v7;\n}\n"], [4202053, "sub_401E45", "bool __fastcall sub_401E45(char a1)\n{\n  unsigned __int64 v1; // rax\n  __int64 v2; // rax\n  unsigned __int64 v3; // rax\n  unsigned __int8 *v4; // rax\n  bool result; // al\n  int v6; // eax\n  char *v7; // rax\n  bool v8; // al\n  char *v9; // rax\n  char *v11; // rax\n  bool v12; // al\n  __int64 v13; // rbx\n  char *v14; // rax\n  char v15; // [rsp+10h] [rbp-190h]\n  bool v16; // [rsp+11h] [rbp-18Fh]\n  bool v17; // [rsp+12h] [rbp-18Eh]\n  bool v18; // [rsp+13h] [rbp-18Dh]\n  bool v19; // [rsp+14h] [rbp-18Ch]\n  bool v20; // [rsp+16h] [rbp-18Ah]\n  bool v21; // [rsp+17h] [rbp-189h]\n  int v22; // [rsp+18h] [rbp-188h]\n  int v23; // [rsp+1Ch] [rbp-184h]\n  unsigned __int8 *v24; // [rsp+20h] [rbp-180h]\n  struct stat stat_buf; // [rsp+30h] [rbp-170h] BYREF\n  struct stat v26; // [rsp+C0h] [rbp-E0h] BYREF\n  char v27[32]; // [rsp+150h] [rbp-50h] BYREF\n  char v28[24]; // [rsp+170h] [rbp-30h] BYREF\n  unsigned __int64 v29; // [rsp+188h] [rbp-18h]\n\n  v29 = __readfsqword(0x28u);\n  if ( a1 )\n    sub_4016DE(0);\n  v22 = dword_609230 + 1;\n  if ( dword_609234 - 2 > dword_609230 + 1 && !strcmp(*(const char **)(8 * (v22 + 1LL) + qword_609238), \"-l\") )\n  {\n    v15 = 1;\n    sub_4016DE(0);\n  }\n  else\n  {\n    v15 = 0;\n  }\n  if ( **(_BYTE **)(8LL * v22 + qword_609238) == 45 )\n  {\n    if ( ((*(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 108\n        || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 103)\n       && (*(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 101\n        || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 116)\n       || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 101\n       && *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 113\n       || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 110\n       && *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 101)\n      && !*(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 3LL) )\n    {\n      if ( a1 )\n      {\n        v1 = strlen(*(const char **)(8LL * v22 - 8 + qword_609238));\n        v2 = sub_403BAB(v1, (__int64)v27);\n      }\n      else\n      {\n        v2 = (__int64)sub_40177D(*(unsigned __int8 **)(8LL * v22 - 8 + qword_609238));\n      }\n      v24 = (unsigned __int8 *)v2;\n      if ( v15 )\n      {\n        v3 = strlen(*(const char **)(8 * (v22 + 2LL) + qword_609238));\n        v4 = (unsigned __int8 *)sub_403BAB(v3, (__int64)v28);\n      }\n      else\n      {\n        v4 = sub_40177D(*(unsigned __int8 **)(8 * (v22 + 1LL) + qword_609238));\n      }\n      v23 = sub_4065F4(v24, v4);\n      v16 = *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 101;\n      dword_609230 += 3;\n      if ( *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 108 )\n        return v16 > v23;\n      if ( *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) == 103 )\n        return -v16 < v23;\n      return (v23 != 0) == v16;\n    }\n    v6 = *(char *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL);\n    if ( v6 == 110 )\n    {\n      if ( *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) != 116\n        || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 3LL) )\n      {\n        goto LABEL_68;\n      }\n      dword_609230 += 3;\n      if ( a1 || v15 )\n      {\n        v7 = gettext(\"-nt does not accept -l\");\n        sub_40165F(v7, 0LL);\n      }\n      v17 = sub_4018A2(*(char **)(8LL * v22 - 8 + qword_609238), (__int64 *)&stat_buf);\n      v18 = sub_4018A2(*(char **)(8 * (v22 + 1LL) + qword_609238), (__int64 *)&v26);\n      v8 = v17 && (!v18 || (int)sub_4014D5(stat_buf.st_dev, stat_buf.st_ino, v26.st_dev, v26.st_ino) > 0);\n      result = v8;\n    }\n    else\n    {\n      if ( v6 != 111 )\n      {\n        if ( v6 == 101\n          && *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) == 102\n          && !*(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 3LL) )\n        {\n          dword_609230 += 3;\n          if ( a1 || v15 )\n          {\n            v9 = gettext(\"-ef does not accept -l\");\n            sub_40165F(v9, 0LL);\n          }\n          return !sub_406940(*(char **)(8LL * v22 - 8 + qword_609238), &stat_buf)\n              && !sub_406940(*(char **)(8 * (v22 + 1LL) + qword_609238), &v26)\n              && stat_buf.st_dev == v26.st_dev\n              && stat_buf.st_ino == v26.st_ino;\n        }\nLABEL_68:\n        v13 = *(_QWORD *)(8LL * v22 + qword_609238);\n        v14 = gettext(\"unknown binary operator\");\n        sub_40165F(v14, v13);\n      }\n      if ( *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL) != 116\n        || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 3LL) )\n      {\n        goto LABEL_68;\n      }\n      dword_609230 += 3;\n      if ( a1 || v15 )\n      {\n        v11 = gettext(\"-ot does not accept -l\");\n        sub_40165F(v11, 0LL);\n      }\n      v19 = sub_4018A2(*(char **)(8LL * v22 - 8 + qword_609238), (__int64 *)&stat_buf);\n      v12 = sub_4018A2(*(char **)(8 * (v22 + 1LL) + qword_609238), (__int64 *)&v26)\n         && (!v19 || (int)sub_4014D5(stat_buf.st_dev, stat_buf.st_ino, v26.st_dev, v26.st_ino) < 0);\n      result = v12;\n    }\n  }\n  else if ( **(_BYTE **)(8LL * v22 + qword_609238) != 61\n         || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL)\n         && (*(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 1LL) != 61\n          || *(_BYTE *)(*(_QWORD *)(8LL * v22 + qword_609238) + 2LL)) )\n  {\n    if ( strcmp(*(const char **)(8LL * v22 + qword_609238), \"!=\") )\n      abort();\n    v21 = strcmp(\n            *(const char **)(8LL * dword_609230 + qword_609238),\n            *(const char **)(8 * (dword_609230 + 2LL) + qword_609238)) != 0;\n    dword_609230 += 3;\n    result = v21;\n  }\n  else\n  {\n    v20 = strcmp(\n            *(const char **)(8LL * dword_609230 + qword_609238),\n            *(const char **)(8 * (dword_609230 + 2LL) + qword_609238)) == 0;\n    dword_609230 += 3;\n    result = v20;\n  }\n  return result;\n}\n"], [4204581, "sub_402825", "bool sub_402825()\n{\n  int v0; // eax\n  bool result; // al\n  bool v2; // al\n  bool v3; // al\n  bool v7; // al\n  bool v8; // al\n  bool v9; // al\n  bool v10; // al\n  bool v12; // al\n  bool v15; // al\n  char *nptr; // [rsp+0h] [rbp-A0h]\n  __int64 fd; // [rsp+8h] [rbp-98h]\n  struct stat stat_buf; // [rsp+10h] [rbp-90h] BYREF\n\n  v0 = *(char *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL);\n  if ( v0 == 103 )\n  {\n    sub_401717();\n    return !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf) && (stat_buf.st_mode & 0x400) != 0;\n  }\n  if ( v0 <= 103 )\n  {\n    if ( v0 != 97 )\n    {\n      if ( v0 <= 97 )\n      {\n        if ( v0 != 76 )\n        {\n          if ( v0 > 76 )\n          {\n            if ( v0 == 79 )\n            {\n              sub_401717();\n              v2 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n                && geteuid() == stat_buf.st_uid;\n              result = v2;\n            }\n            else\n            {\n              if ( v0 != 83 )\n                return 0;\n              sub_401717();\n              v7 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n                && (stat_buf.st_mode & 0xF000) == 49152;\n              result = v7;\n            }\n          }\n          else\n          {\n            if ( v0 != 71 )\n              return 0;\n            sub_401717();\n            v3 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n              && getegid() == stat_buf.st_gid;\n            result = v3;\n          }\n          return result;\n        }\nLABEL_85:\n        sub_401717();\n        return !sub_406950(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n            && (stat_buf.st_mode & 0xF000) == 40960;\n      }\n      if ( v0 == 100 )\n      {\n        sub_401717();\n        return !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n            && (stat_buf.st_mode & 0xF000) == 0x4000;\n      }\n      if ( v0 <= 100 )\n      {\n        if ( v0 == 98 )\n        {\n          sub_401717();\n          v9 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n            && (stat_buf.st_mode & 0xF000) == 24576;\n          result = v9;\n        }\n        else\n        {\n          sub_401717();\n          v8 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n            && (stat_buf.st_mode & 0xF000) == 0x2000;\n          result = v8;\n        }\n        return result;\n      }\n      if ( v0 != 101 )\n      {\n        sub_401717();\n        return !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n            && (stat_buf.st_mode & 0xF000) == 0x8000;\n      }\n    }\n    sub_401717();\n    return sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf) == 0;\n  }\n  if ( v0 == 115 )\n  {\n    sub_401717();\n    return !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf) && stat_buf.st_size > 0;\n  }\n  if ( v0 <= 115 )\n  {\n    if ( v0 == 110 )\n    {\n      sub_401717();\n      return **(_BYTE **)(8LL * dword_609230 - 8 + qword_609238) != 0;\n    }\n    if ( v0 > 110 )\n    {\n      if ( v0 == 112 )\n      {\n        sub_401717();\n        v10 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n           && (stat_buf.st_mode & 0xF000) == 4096;\n        result = v10;\n      }\n      else\n      {\n        if ( v0 != 114 )\n          return 0;\n        sub_401717();\n        result = euidaccess(*(const char **)(8LL * dword_609230 - 8 + qword_609238), 4) == 0;\n      }\n      return result;\n    }\n    if ( v0 != 104 )\n    {\n      if ( v0 != 107 )\n        return 0;\n      sub_401717();\n      return !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf)\n          && (stat_buf.st_mode & 0x200) != 0;\n    }\n    goto LABEL_85;\n  }\n  if ( v0 == 119 )\n  {\n    sub_401717();\n    result = euidaccess(*(const char **)(8LL * dword_609230 - 8 + qword_609238), 2) == 0;\n  }\n  else if ( v0 > 119 )\n  {\n    if ( v0 == 120 )\n    {\n      sub_401717();\n      result = euidaccess(*(const char **)(8LL * dword_609230 - 8 + qword_609238), 1) == 0;\n    }\n    else\n    {\n      if ( v0 != 122 )\n        return 0;\n      sub_401717();\n      result = **(_BYTE **)(8LL * dword_609230 - 8 + qword_609238) == 0;\n    }\n  }\n  else if ( v0 == 116 )\n  {\n    sub_401717();\n    nptr = (char *)sub_40177D(*(unsigned __int8 **)(8LL * dword_609230 - 8 + qword_609238));\n    *__errno_location() = 0;\n    fd = strtol(nptr, 0LL, 10);\n    v15 = *__errno_location() != 34 && fd >= 0 && fd <= 0x7FFFFFFF && isatty(fd);\n    result = v15;\n  }\n  else\n  {\n    if ( v0 != 117 )\n      return 0;\n    sub_401717();\n    v12 = !sub_406940(*(char **)(8LL * dword_609230 - 8 + qword_609238), &stat_buf) && (stat_buf.st_mode & 0x800) != 0;\n    result = v12;\n  }\n  return result;\n}\n"], [4206555, "sub_402FDB", "_BOOL8 sub_402FDB()\n{\n  bool v1; // [rsp+Fh] [rbp-11h]\n\n  v1 = 1;\n  while ( 1 )\n  {\n    v1 = (v1 & sub_401A3B()) != 0;\n    if ( dword_609230 >= dword_609234 || strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"-a\") )\n      break;\n    sub_4016DE(0);\n  }\n  return v1;\n}\n"], [4206674, "sub_403052", "__int64 sub_403052()\n{\n  unsigned __int8 v1; // [rsp+Fh] [rbp-11h]\n\n  v1 = 0;\n  while ( 1 )\n  {\n    v1 |= sub_402FDB();\n    if ( dword_609230 >= dword_609234 || strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"-o\") )\n      break;\n    sub_4016DE(0);\n  }\n  return v1;\n}\n"], [4206793, "sub_4030C9", "__int64 sub_4030C9()\n{\n  if ( dword_609230 >= dword_609234 )\n    sub_401736();\n  return sub_403052();\n}\n"], [4206825, "sub_4030E9", "_BOOL8 __fastcall sub_4030E9(_BYTE *a1)\n{\n  int v2; // eax\n\n  if ( *a1 != 45 )\n    return 0LL;\n  v2 = (char)a1[1];\n  if ( v2 == 107 )\n    return 1LL;\n  if ( v2 > 107 )\n  {\n    if ( v2 > 117 )\n    {\n      if ( v2 < 119 || v2 > 120 && v2 != 122 )\n        return 0LL;\n    }\n    else if ( v2 < 114 && (unsigned int)(v2 - 110) > 2 )\n    {\n      return 0LL;\n    }\n    return 1LL;\n  }\n  if ( v2 > 79 )\n    return v2 == 83 || v2 >= 83 && (unsigned int)(v2 - 97) <= 7;\n  return v2 >= 78 || v2 == 71 || v2 == 76;\n}\n"], [4206966, "sub_403176", "bool sub_403176()\n{\n  int v0; // eax\n\n  v0 = dword_609230++;\n  return **(_BYTE **)(qword_609238 + 8LL * v0) != 0;\n}\n"], [4207014, "sub_4031A6", "_BOOL8 sub_4031A6()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  bool v3; // [rsp+Fh] [rbp-11h]\n\n  if ( !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"!\") )\n  {\n    sub_4016DE(0);\n    v3 = !sub_403176();\n  }\n  else\n  {\n    if ( **(_BYTE **)(8LL * dword_609230 + qword_609238) != 45\n      || !*(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 1LL)\n      || *(_BYTE *)(*(_QWORD *)(8LL * dword_609230 + qword_609238) + 2LL) )\n    {\n      sub_401736();\n    }\n    if ( !sub_4030E9(*(_BYTE **)(8LL * dword_609230 + qword_609238)) )\n    {\n      v0 = *(_QWORD *)(8LL * dword_609230 + qword_609238);\n      v1 = gettext(\"%s: unary operator expected\");\n      sub_40165F(v1, v0);\n    }\n    v3 = sub_402825();\n  }\n  return v3;\n}\n"], [4207333, "sub_4032E5", "__int64 sub_4032E5()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  unsigned __int8 v3; // [rsp+Fh] [rbp-11h]\n\n  if ( sub_40190E(*(const char **)(8 * (dword_609230 + 1LL) + qword_609238)) )\n    return sub_401E45(0);\n  if ( !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"!\") )\n  {\n    sub_4016DE(1);\n    v3 = !sub_4031A6();\n  }\n  else if ( !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"(\")\n         && !strcmp(*(const char **)(8 * (dword_609230 + 2LL) + qword_609238), \")\") )\n  {\n    sub_4016DE(0);\n    v3 = sub_403176();\n    sub_4016DE(0);\n  }\n  else\n  {\n    if ( strcmp(*(const char **)(8 * (dword_609230 + 1LL) + qword_609238), \"-a\")\n      && strcmp(*(const char **)(8 * (dword_609230 + 1LL) + qword_609238), \"-o\") )\n    {\n      v0 = *(_QWORD *)(8 * (dword_609230 + 1LL) + qword_609238);\n      v1 = gettext(\"%s: binary operator expected\");\n      sub_40165F(v1, v0);\n    }\n    v3 = sub_4030C9();\n  }\n  return v3;\n}\n"], [4207775, "sub_40349F", "_BOOL8 __fastcall sub_40349F(int a1)\n{\n  bool v2; // [rsp+1Fh] [rbp-1h]\n\n  if ( a1 == 2 )\n    return sub_4031A6();\n  if ( a1 > 2 )\n  {\n    if ( a1 == 3 )\n      return (bool)sub_4032E5();\n    if ( a1 == 4 )\n    {\n      if ( !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"!\") )\n      {\n        sub_4016DE(1);\n        return (unsigned __int8)sub_4032E5() == 0;\n      }\n      if ( !strcmp(*(const char **)(8LL * dword_609230 + qword_609238), \"(\")\n        && !strcmp(*(const char **)(8 * (dword_609230 + 3LL) + qword_609238), \")\") )\n      {\n        sub_4016DE(0);\n        v2 = sub_4031A6();\n        sub_4016DE(0);\n        return v2;\n      }\n    }\n  }\n  else if ( a1 == 1 )\n  {\n    return sub_403176();\n  }\n  if ( a1 <= 0 )\n    abort();\n  return (bool)sub_4030C9();\n}\n"], [4208092, "sub_4035DC", "void __fastcall __noreturn sub_4035DC(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  FILE *v5; // rbx\n  char *v6; // rax\n  FILE *v7; // rbx\n  char *v8; // rax\n  FILE *v9; // rbx\n  char *v10; // rax\n  FILE *v11; // rbx\n  char *v12; // rax\n  FILE *v13; // rbx\n  char *v14; // rax\n  FILE *v15; // rbx\n  char *v16; // rax\n  FILE *v17; // rbx\n  char *v18; // rax\n  FILE *v19; // rbx\n  char *v20; // rax\n  FILE *v21; // rbx\n  char *v22; // rax\n  FILE *v23; // rbx\n  char *v24; // rax\n  FILE *v25; // rbx\n  char *v26; // rax\n  FILE *v27; // rbx\n  char *v28; // rax\n  FILE *v29; // rbx\n  char *v30; // rax\n  FILE *v31; // rbx\n  char *v32; // rax\n  char *v33; // rbx\n  char *v34; // rax\n\n  if ( a1 )\n  {\n    v1 = qword_609250;\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = stdout;\n    v4 = gettext(\"Usage: test EXPRESSION\\n  or:  test\\n  or:  [ EXPRESSION ]\\n  or:  [ ]\\n  or:  [ OPTION\\n\");\n    fputs_unlocked(v4, v3);\n    v5 = stdout;\n    v6 = gettext(\"Exit with the status determined by EXPRESSION.\\n\\n\");\n    fputs_unlocked(v6, v5);\n    v7 = stdout;\n    v8 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v8, v7);\n    v9 = stdout;\n    v10 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v10, v9);\n    v11 = stdout;\n    v12 = gettext(\n            \"\\n\"\n            \"An omitted EXPRESSION defaults to false.  Otherwise,\\n\"\n            \"EXPRESSION is true or false and sets exit status.  It is one of:\\n\");\n    fputs_unlocked(v12, v11);\n    v13 = stdout;\n    v14 = gettext(\n            \"\\n\"\n            \"  ( EXPRESSION )               EXPRESSION is true\\n\"\n            \"  ! EXPRESSION                 EXPRESSION is false\\n\"\n            \"  EXPRESSION1 -a EXPRESSION2   both EXPRESSION1 and EXPRESSION2 are true\\n\"\n            \"  EXPRESSION1 -o EXPRESSION2   either EXPRESSION1 or EXPRESSION2 is true\\n\");\n    fputs_unlocked(v14, v13);\n    v15 = stdout;\n    v16 = gettext(\n            \"\\n\"\n            \"  -n STRING            the length of STRING is nonzero\\n\"\n            \"  STRING               equivalent to -n STRING\\n\"\n            \"  -z STRING            the length of STRING is zero\\n\"\n            \"  STRING1 = STRING2    the strings are equal\\n\"\n            \"  STRING1 != STRING2   the strings are not equal\\n\");\n    fputs_unlocked(v16, v15);\n    v17 = stdout;\n    v18 = gettext(\n            \"\\n\"\n            \"  INTEGER1 -eq INTEGER2   INTEGER1 is equal to INTEGER2\\n\"\n            \"  INTEGER1 -ge INTEGER2   INTEGER1 is greater than or equal to INTEGER2\\n\"\n            \"  INTEGER1 -gt INTEGER2   INTEGER1 is greater than INTEGER2\\n\"\n            \"  INTEGER1 -le INTEGER2   INTEGER1 is less than or equal to INTEGER2\\n\"\n            \"  INTEGER1 -lt INTEGER2   INTEGER1 is less than INTEGER2\\n\"\n            \"  INTEGER1 -ne INTEGER2   INTEGER1 is not equal to INTEGER2\\n\");\n    fputs_unlocked(v18, v17);\n    v19 = stdout;\n    v20 = gettext(\n            \"\\n\"\n            \"  FILE1 -ef FILE2   FILE1 and FILE2 have the same device and inode numbers\\n\"\n            \"  FILE1 -nt FILE2   FILE1 is newer (modification date) than FILE2\\n\"\n            \"  FILE1 -ot FILE2   FILE1 is older than FILE2\\n\");\n    fputs_unlocked(v20, v19);\n    v21 = stdout;\n    v22 = gettext(\n            \"\\n\"\n            \"  -b FILE     FILE exists and is block special\\n\"\n            \"  -c FILE     FILE exists and is character special\\n\"\n            \"  -d FILE     FILE exists and is a directory\\n\"\n            \"  -e FILE     FILE exists\\n\");\n    fputs_unlocked(v22, v21);\n    v23 = stdout;\n    v24 = gettext(\n            \"  -f FILE     FILE exists and is a regular file\\n\"\n            \"  -g FILE     FILE exists and is set-group-ID\\n\"\n            \"  -G FILE     FILE exists and is owned by the effective group ID\\n\"\n            \"  -h FILE     FILE exists and is a symbolic link (same as -L)\\n\"\n            \"  -k FILE     FILE exists and has its sticky bit set\\n\");\n    fputs_unlocked(v24, v23);\n    v25 = stdout;\n    v26 = gettext(\n            \"  -L FILE     FILE exists and is a symbolic link (same as -h)\\n\"\n            \"  -O FILE     FILE exists and is owned by the effective user ID\\n\"\n            \"  -p FILE     FILE exists and is a named pipe\\n\"\n            \"  -r FILE     FILE exists and read permission is granted\\n\"\n            \"  -s FILE     FILE exists and has a size greater than zero\\n\");\n    fputs_unlocked(v26, v25);\n    v27 = stdout;\n    v28 = gettext(\n            \"  -S FILE     FILE exists and is a socket\\n\"\n            \"  -t FD       file descriptor FD is opened on a terminal\\n\"\n            \"  -u FILE     FILE exists and its set-user-ID bit is set\\n\"\n            \"  -w FILE     FILE exists and write permission is granted\\n\"\n            \"  -x FILE     FILE exists and execute (or search) permission is granted\\n\");\n    fputs_unlocked(v28, v27);\n    v29 = stdout;\n    v30 = gettext(\n            \"\\n\"\n            \"Except for -h and -L, all FILE-related tests dereference symbolic links.\\n\"\n            \"Beware that parentheses need to be escaped (e.g., by backslashes) for shells.\\n\"\n            \"INTEGER may also be -l STRING, which evaluates to the length of STRING.\\n\");\n    fputs_unlocked(v30, v29);\n    v31 = stdout;\n    v32 = gettext(\n            \"\\n\"\n            \"NOTE: [ honors the --help and --version options, but test does not.\\n\"\n            \"test treats each of those as it treats any other nonempty STRING.\\n\");\n    fputs_unlocked(v32, v31);\n    v33 = gettext(\"test and/or [\");\n    v34 = gettext(\n            \"\\n\"\n            \"NOTE: your shell may have its own version of %s, which usually supersedes\\n\"\n            \"the version described here.  Please refer to your shell's documentation\\n\"\n            \"for details about the options it supports.\\n\");\n    printf(v34, v33);\n    sub_40153F();\n  }\n  exit(a1);\n}\n"], [4208635, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  char *v5; // rax\n  bool v6; // [rsp+2Fh] [rbp-11h]\n\n  sub_403C30(*a2);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_4014BD(2u);\n  sub_406920((void (__fastcall *)(void *))sub_403A09);\n  qword_609238 = (__int64)a2;\n  if ( a1 == 2 )\n  {\n    if ( !strcmp(a2[1], \"--help\") )\n      sub_4035DC(0);\n    if ( !strcmp(a2[1], \"--version\") )\n    {\n      sub_405C05(stdout, \"[\", \"GNU coreutils\", off_6091C0, \"Kevin Braunsdorf\", \"Matthew Bradburn\", 0LL);\n      exit(0);\n    }\n  }\n  if ( a1 <= 1 || strcmp(a2[a1 - 1], \"]\") )\n  {\n    v3 = gettext(\"missing `]'\");\n    sub_40165F(v3, 0LL);\n  }\n  dword_609234 = a1 - 1;\n  dword_609230 = 1;\n  if ( a1 - 1 <= 1 )\n    exit(1);\n  v6 = sub_40349F(dword_609234 - 1);\n  if ( dword_609230 != dword_609234 )\n  {\n    v4 = sub_403D3B(*(_QWORD *)(8LL * dword_609230 + qword_609238));\n    v5 = gettext(\"extra argument %s\");\n    sub_40165F(v5, v4);\n  }\n  exit(!v6);\n}\n"], [4209140, "sub_4039F4", "__int64 __fastcall sub_4039F4(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_609248 = a1;\n  return result;\n}\n"], [4209161, "sub_403A09", "__int64 sub_403A09()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_406620(stdout) && (byte_609248 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_609240 )\n    {\n      v0 = (const char *)sub_405354(qword_609240);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_406620(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4209396, "sub_403AF4", "_BYTE *__fastcall sub_403AF4(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4209501, "sub_403B5D", "size_t __fastcall sub_403B5D(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4209579, "sub_403BAB", "__int64 __fastcall sub_403BAB(unsigned __int64 a1, __int64 a2)\n{\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a2 + 20;\n  *(_BYTE *)(a2 + 20) = 0;\n  do\n  {\n    *(_BYTE *)--v4 = a1 % 0xA + 48;\n    a1 /= 0xAuLL;\n  }\n  while ( a1 );\n  return v4;\n}\n"], [4209712, "sub_403C30", "char *__fastcall sub_403C30(const char *a1)\n{\n  const char *v1; // rax\n  char *result; // rax\n  const char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = a1;\n  s1 = (char *)v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_609250 = (__int64)s;\n  result = (char *)s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4209943, "sub_403D17", "void *__fastcall sub_403D17(unsigned int a1, __int64 a2)\n{\n  return sub_4051C6(a1, 6, a2);\n}\n"], [4209979, "sub_403D3B", "void *__fastcall sub_403D3B(__int64 a1)\n{\n  return sub_403D17(0, a1);\n}\n"], [4210010, "sub_403D5A", "void *__fastcall sub_403D5A(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609260;\n  v4 = sub_405F91(v1, 0x38uLL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4210083, "sub_403DA3", "__int64 __fastcall sub_403DA3(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_609260;\n  return *(unsigned int *)v1;\n}\n"], [4210113, "sub_403DC1", "__int64 *__fastcall sub_403DC1(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_609260;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4210149, "sub_403DE5", "__int64 __fastcall sub_403DE5(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_609260;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4210285, "sub_403E6D", "__int64 __fastcall sub_403E6D(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_609260;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4210336, "sub_403EA0", "__int64 *__fastcall sub_403EA0(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_609260;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4210426, "sub_403EFA", "_QWORD *__fastcall sub_403EFA(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4210546, "sub_403F72", "char *__fastcall sub_403F72(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4210607, "sub_403FAF", "unsigned __int64 __fastcall sub_403FAF(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_403F72((const char *)L\"`'\", a5);\n        a9 = sub_403F72((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_403FAF(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, a8, a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4213754, "sub_404BFA", "unsigned __int64 __fastcall sub_404BFA(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_609260;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_403FAF(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4213914, "sub_404C9A", "__int64 __fastcall sub_404C9A(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_404CCC(a1, a2, 0LL, (__int64 *)a3);\n}\n"], [4213964, "sub_404CCC", "__int64 __fastcall sub_404CCC(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  __int64 v5; // rdx\n  int v8; // [rsp+40h] [rbp-20h]\n  int v9; // [rsp+44h] [rbp-1Ch]\n  __int64 *v10; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v11; // [rsp+50h] [rbp-10h]\n  __int64 v12; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_609260;\n  v10 = v4;\n  v8 = *__errno_location();\n  v9 = *((_DWORD *)v10 + 1) | (a3 == 0LL);\n  v11 = sub_403FAF(0LL, 0LL, a1, a2, *(_DWORD *)v10, v9, (__int64)(v10 + 1), (char *)v10[5], (char *)v10[6]) + 1;\n  v12 = sub_405E53(v11, 0LL, v5);\n  sub_403FAF(v12, v11, a1, a2, *(_DWORD *)v10, v9, (__int64)(v10 + 1), (char *)v10[5], (char *)v10[6]);\n  *__errno_location() = v8;\n  if ( a3 )\n    *a3 = v11 - 1;\n  return v12;\n}\n"], [4214264, "sub_404DF8", "void sub_404DF8()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_6091F0;\n  for ( i = 1; i < dword_6091D0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6092A0 )\n  {\n    free(ptr[1]);\n    qword_6091E0 = 256LL;\n    off_6091E8 = &unk_6092A0;\n  }\n  if ( ptr != (void **)&qword_6091E0 )\n  {\n    free(ptr);\n    off_6091F0 = &qword_6091E0;\n  }\n  dword_6091D0 = 1;\n}\n"], [4214435, "sub_404EA3", "void *__fastcall sub_404EA3(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  __int64 v6; // rsi\n  __int64 v7; // rdx\n  __int64 *v8; // rbx\n  bool v13; // [rsp+4Bh] [rbp-45h]\n  int v14; // [rsp+4Ch] [rbp-44h]\n  int v15; // [rsp+54h] [rbp-3Ch]\n  __int64 *v16; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v18; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v19; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v20; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v21; // [rsp+78h] [rbp-18h]\n\n  v14 = *__errno_location();\n  v16 = off_6091F0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6091D0 <= (unsigned int)a1 )\n  {\n    v18 = (unsigned int)(a1 + 1);\n    v13 = off_6091F0 == &qword_6091E0;\n    if ( off_6091F0 == &qword_6091E0 )\n      v4 = 0LL;\n    else\n      v4 = off_6091F0;\n    v16 = (__int64 *)sub_405EA2(v4, 16 * v18);\n    off_6091F0 = v16;\n    if ( v13 )\n    {\n      v5 = off_6091E8;\n      *v16 = qword_6091E0;\n      v16[1] = (__int64)v5;\n    }\n    memset(&v16[2 * (unsigned int)dword_6091D0], 0, 16 * (v18 - (unsigned int)dword_6091D0));\n    dword_6091D0 = a1 + 1;\n  }\n  v19 = v16[2 * a1];\n  ptr = (void *)v16[2 * a1 + 1];\n  v15 = *(_DWORD *)(a4 + 4) | 1;\n  v6 = v19;\n  v21 = sub_403FAF((__int64)ptr, v19, a2, a3, *(_DWORD *)a4, v15, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v19 <= v21 )\n  {\n    v20 = v21 + 1;\n    v16[2 * a1] = v21 + 1;\n    if ( ptr != &unk_6092A0 )\n      free(ptr);\n    v7 = 2LL * a1;\n    v8 = &v16[v7];\n    ptr = (void *)sub_405E53(v20, v6, v7 * 8);\n    v8[1] = (__int64)ptr;\n    sub_403FAF((__int64)ptr, v20, a2, a3, *(_DWORD *)a4, v15, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v14;\n  return ptr;\n}\n"], [4215081, "sub_405129", "void *__fastcall sub_405129(int a1, __int64 a2)\n{\n  return sub_404EA3(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_609260);\n}\n"], [4215124, "sub_405154", "void *__fastcall sub_405154(int a1, __int64 a2, size_t a3)\n{\n  return sub_404EA3(a1, a2, a3, (__int64)&qword_609260);\n}\n"], [4215168, "sub_405180", "void *__fastcall sub_405180(__int64 a1)\n{\n  return sub_405129(0, a1);\n}\n"], [4215199, "sub_40519F", "void *__fastcall sub_40519F(__int64 a1, size_t a2)\n{\n  return sub_405154(0, a1, a2);\n}\n"], [4215238, "sub_4051C6", "void *__fastcall sub_4051C6(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_403EFA(v5, a2);\n  return sub_404EA3(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4215303, "sub_405207", "void *__fastcall sub_405207(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_403EFA(v7, a2);\n  return sub_404EA3(a1, a3, a4, (__int64)v7);\n}\n"], [4215366, "sub_405246", "void *__fastcall sub_405246(int a1, __int64 a2)\n{\n  return sub_4051C6(0, a1, a2);\n}\n"], [4215402, "sub_40526A", "void *__fastcall sub_40526A(int a1, __int64 a2, size_t a3)\n{\n  return sub_405207(0, a1, a2, a3);\n}\n"], [4215446, "sub_405296", "void *__fastcall sub_405296(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_609260;\n  v4[1] = qword_609268;\n  v4[2] = qword_609270;\n  v4[3] = qword_609278;\n  v4[4] = qword_609280;\n  v4[5] = qword_609288;\n  v4[6] = qword_609290;\n  sub_403DE5(v4, a3, 1);\n  return sub_404EA3(0, a1, a2, (__int64)v4);\n}\n"], [4215594, "sub_40532A", "void *__fastcall sub_40532A(__int64 a1, unsigned __int8 a2)\n{\n  return sub_405296(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4215636, "sub_405354", "void *__fastcall sub_405354(__int64 a1)\n{\n  return sub_40532A(a1, 0x3Au);\n}\n"], [4215667, "sub_405373", "void *__fastcall sub_405373(__int64 a1, size_t a2)\n{\n  return sub_405296(a1, a2, 0x3Au);\n}\n"], [4215709, "sub_40539D", "void *__fastcall sub_40539D(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4053D3(a1, a2, a3, a4, 0xFFFFFFFFFFFFFFFFLL);\n}\n"], [4215763, "sub_4053D3", "void *__fastcall sub_4053D3(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_609260;\n  v8[1] = qword_609268;\n  v8[2] = qword_609270;\n  v8[3] = qword_609278;\n  v8[4] = qword_609280;\n  v8[5] = qword_609288;\n  v8[6] = qword_609290;\n  sub_403EA0(v8, a2, a3);\n  return sub_404EA3(a1, a4, a5, (__int64)v8);\n}\n"], [4215914, "sub_40546A", "void *__fastcall sub_40546A(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_40539D(0, a1, a2, a3);\n}\n"], [4215961, "sub_405499", "void *__fastcall sub_405499(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4053D3(0, a1, a2, a3, a4);\n}\n"], [4216019, "sub_4054D3", "int __fastcall sub_4054D3(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4217534, "sub_405ABE", "int __fastcall sub_405ABE(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4054D3(a1, a2, a3, a4, a5, i);\n}\n"], [4217644, "sub_405B2C", "int __fastcall sub_405B2C(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4054D3(a1, a2, a3, a4, v8, i);\n}\n"], [4217861, "sub_405C05", "int sub_405C05(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  __va_list_tag va[1]; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_405B2C(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4218043, "sub_405CBB", "int sub_405CBB()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4218148, "sub_405D24", "void *__fastcall sub_405D24(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_405FEF();\n  return sub_405E6D(a2 * a1, a2);\n}\n"], [4218210, "sub_405D62", "void *__fastcall sub_405D62(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a3 < a2 )\n    sub_405FEF();\n  return sub_405EA2((void *)a1, a3 * a2);\n}\n"], [4218286, "sub_405DAE", "void *__fastcall sub_405DAE(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v4; // [rsp+28h] [rbp-8h]\n\n  v4 = *a2;\n  if ( a1 )\n  {\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v4 )\n      sub_405FEF();\n    v4 += (v4 + 1) >> 1;\n  }\n  else if ( !v4 )\n  {\n    v4 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v4;\n  return sub_405EA2((void *)a1, a3 * v4);\n}\n"], [4218451, "sub_405E53", "void *__fastcall sub_405E53(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_405E6D(a1, a2);\n}\n"], [4218477, "sub_405E6D", "void *__fastcall sub_405E6D(size_t a1, __int64 a2)\n{\n  void *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = malloc(a1);\n  if ( !v3 && a1 )\n    sub_405FEF();\n  return v3;\n}\n"], [4218530, "sub_405EA2", "void *__fastcall sub_405EA2(void *a1, size_t a2)\n{\n  void *result; // rax\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_405FEF();\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4218627, "sub_405F03", "void *__fastcall sub_405F03(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_405DAE(a1, a2, 1uLL);\n}\n"], [4218669, "sub_405F2D", "void *__fastcall sub_405F2D(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405E6D(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4218712, "sub_405F58", "void *__fastcall sub_405F58(size_t a1, size_t a2)\n{\n  void *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = calloc(a1, a2);\n  if ( !v3 )\n    sub_405FEF();\n  return v3;\n}\n"], [4218769, "sub_405F91", "void *__fastcall sub_405F91(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_405E6D(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4218818, "sub_405FC2", "void *__fastcall sub_405FC2(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_405F91(a1, v1 + 1);\n}\n"], [4218863, "sub_405FEF", "void __noreturn sub_405FEF()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4218916, "sub_406024", "__int64 __fastcall sub_406024(_BYTE *a1, _BYTE *a2, char a3)\n{\n  _BYTE *v4; // [rsp+4h] [rbp-10h]\n  _BYTE *v5; // [rsp+Ch] [rbp-8h]\n\n  v5 = a1;\n  v4 = a2;\n  if ( *a1 == a3 && *a2 == a3 )\n  {\n    while ( *++v5 == *++v4 )\n    {\n      if ( (unsigned int)((char)*v5 - 48) > 9 )\n        return 0LL;\n    }\n    if ( (unsigned int)((char)*v5 - 48) <= 9 && (unsigned int)((char)*v4 - 48) <= 9 )\n      return (unsigned int)((char)*v5 - (char)*v4);\n    if ( (unsigned int)((char)*v5 - 48) > 9 )\n    {\n      if ( (unsigned int)((char)*v4 - 48) > 9 )\n        return 0LL;\nLABEL_21:\n      while ( *v4 == 48 )\n        ++v4;\n      return (unsigned int)-((unsigned int)((char)*v4 - 48) <= 9);\n    }\n  }\n  else\n  {\n    v5 = a1 + 1;\n    if ( *a1 != a3 )\n    {\n      v4 = a2 + 1;\n      if ( *a2 != a3 )\n        return 0LL;\n      goto LABEL_21;\n    }\n  }\n  while ( *v5 == 48 )\n    ++v5;\n  return (unsigned int)((char)*v5 - 48) <= 9;\n}\n"], [4219271, "sub_406187", "__int64 __fastcall sub_406187(unsigned __int8 *a1, unsigned __int8 *a2, int a3, int a4)\n{\n  __int64 result; // rax\n  unsigned __int8 *v5; // [rsp+8h] [rbp-30h]\n  unsigned __int8 *v6; // [rsp+10h] [rbp-28h]\n  unsigned __int8 v7; // [rsp+22h] [rbp-16h]\n  unsigned __int8 v8; // [rsp+22h] [rbp-16h]\n  unsigned __int8 v9; // [rsp+23h] [rbp-15h]\n  unsigned __int8 v10; // [rsp+23h] [rbp-15h]\n  unsigned __int8 v11; // [rsp+23h] [rbp-15h]\n  unsigned int v12; // [rsp+24h] [rbp-14h]\n  unsigned int v13; // [rsp+24h] [rbp-14h]\n  unsigned __int64 v14; // [rsp+28h] [rbp-10h]\n  unsigned __int64 v15; // [rsp+28h] [rbp-10h]\n  unsigned __int64 v16; // [rsp+30h] [rbp-8h]\n  unsigned __int64 v17; // [rsp+30h] [rbp-8h]\n\n  v6 = a1;\n  v5 = a2;\n  v7 = *a1;\n  v9 = *a2;\n  if ( *a1 == 45 )\n  {\n    do\n    {\n      do\n        v8 = *++v6;\n      while ( *v6 == 48 );\n    }\n    while ( v8 == a4 );\n    if ( v9 == 45 )\n    {\n      do\n      {\n        do\n          v10 = *++v5;\n        while ( *v5 == 48 );\n      }\n      while ( v10 == a4 );\n      while ( v8 == v10 && (unsigned int)v8 - 48 <= 9 )\n      {\n        do\n          v8 = *++v6;\n        while ( *v6 == a4 );\n        do\n          v10 = *++v5;\n        while ( *v5 == a4 );\n      }\n      if ( v8 == a3 && (unsigned int)v10 - 48 > 9 || v10 == a3 && (unsigned int)v8 - 48 > 9 )\n      {\n        result = sub_406024(v5, v6, a3);\n      }\n      else\n      {\n        v12 = v10 - v8;\n        v14 = 0LL;\n        while ( (unsigned int)v8 - 48 <= 9 )\n        {\n          do\n            v8 = *++v6;\n          while ( *v6 == a4 );\n          ++v14;\n        }\n        v16 = 0LL;\n        while ( (unsigned int)v10 - 48 <= 9 )\n        {\n          do\n            v10 = *++v5;\n          while ( *v5 == a4 );\n          ++v16;\n        }\n        if ( v14 == v16 )\n        {\n          if ( v14 )\n            result = v12;\n          else\n            result = 0LL;\n        }\n        else if ( v14 >= v16 )\n        {\n          result = 0xFFFFFFFFLL;\n        }\n        else\n        {\n          result = 1LL;\n        }\n      }\n    }\n    else\n    {\n      if ( v8 == a3 )\n      {\n        do\n          v8 = *++v6;\n        while ( *v6 == 48 );\n      }\n      if ( (unsigned int)v8 - 48 > 9 )\n      {\n        while ( v9 == 48 || v9 == a4 )\n          v9 = *++v5;\n        if ( v9 == a3 )\n        {\n          do\n            v9 = *++v5;\n          while ( *v5 == 48 );\n        }\n        result = (unsigned int)-((unsigned int)v9 - 48 <= 9);\n      }\n      else\n      {\n        result = 0xFFFFFFFFLL;\n      }\n    }\n  }\n  else if ( v9 == 45 )\n  {\n    do\n    {\n      do\n        v11 = *++v5;\n      while ( *v5 == 48 );\n    }\n    while ( v11 == a4 );\n    if ( v11 == a3 )\n    {\n      do\n        v11 = *++v5;\n      while ( *v5 == 48 );\n    }\n    if ( (unsigned int)v11 - 48 > 9 )\n    {\n      while ( v7 == 48 || v7 == a4 )\n        v7 = *++v6;\n      if ( v7 == a3 )\n      {\n        do\n          v7 = *++v6;\n        while ( *v6 == 48 );\n      }\n      result = (unsigned int)v7 - 48 <= 9;\n    }\n    else\n    {\n      result = 1LL;\n    }\n  }\n  else\n  {\n    while ( v7 == 48 || v7 == a4 )\n      v7 = *++v6;\n    while ( v9 == 48 || v9 == a4 )\n      v9 = *++v5;\n    while ( v7 == v9 && (unsigned int)v7 - 48 <= 9 )\n    {\n      do\n        v7 = *++v6;\n      while ( *v6 == a4 );\n      do\n        v9 = *++v5;\n      while ( *v5 == a4 );\n    }\n    if ( v7 == a3 && (unsigned int)v9 - 48 > 9 || v9 == a3 && (unsigned int)v7 - 48 > 9 )\n    {\n      result = sub_406024(v6, v5, a3);\n    }\n    else\n    {\n      v13 = v7 - v9;\n      v15 = 0LL;\n      while ( (unsigned int)v7 - 48 <= 9 )\n      {\n        do\n          v7 = *++v6;\n        while ( *v6 == a4 );\n        ++v15;\n      }\n      v17 = 0LL;\n      while ( (unsigned int)v9 - 48 <= 9 )\n      {\n        do\n          v9 = *++v5;\n        while ( *v5 == a4 );\n        ++v17;\n      }\n      if ( v15 == v17 )\n      {\n        if ( v15 )\n          result = v13;\n        else\n          result = 0LL;\n      }\n      else if ( v15 >= v17 )\n      {\n        result = 1LL;\n      }\n      else\n      {\n        result = 0xFFFFFFFFLL;\n      }\n    }\n  }\n  return result;\n}\n"], [4220404, "sub_4065F4", "__int64 __fastcall sub_4065F4(unsigned __int8 *a1, unsigned __int8 *a2)\n{\n  return sub_406187(a1, a2, -1, -1);\n}\n"], [4220448, "sub_406620", "__int64 __fastcall sub_406620(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_4066AB(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4220587, "sub_4066AB", "int __fastcall sub_4066AB(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( sub_406793(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4220768, "sub_406760", "int __fastcall sub_406760(_DWORD *a1)\n{\n  int result; // eax\n\n  result = *a1 & 0x100;\n  if ( result )\n    result = sub_4067DE((FILE *)a1, 0LL, 1);\n  return result;\n}\n"], [4220819, "sub_406793", "int __fastcall sub_406793(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_406760(a1);\n  return fflush(a1);\n}\n"], [4220894, "sub_4067DE", "int __fastcall sub_4067DE(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off64_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4221088, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_608E18 - off_608E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_608E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4221200, "fini", "void fini(void)\n{\n  ;\n}\n"], [4221216, "sub_406920", "int __fastcall sub_406920(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6091B8 )\n    v1 = (void *)qword_6091B8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4221248, "sub_406940", "int __fastcall sub_406940(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4221264, "sub_406950", "int __fastcall sub_406950(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4221280, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]