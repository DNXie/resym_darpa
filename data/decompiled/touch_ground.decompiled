[[4200536, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4200576, "sub_401880", "__int64 sub_401880()\n{\n  return qword_611010();\n}\n"], [4200592, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4200608, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4200624, ".utimensat", "// attributes: thunk\nint utimensat(int fd, const char *path, const struct timespec times[2], int flags)\n{\n  return utimensat(fd, path, times, flags);\n}\n"], [4200640, ".localtime", "// attributes: thunk\nstruct tm *localtime(const time_t *timer)\n{\n  return localtime(timer);\n}\n"], [4200656, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4200672, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4200688, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4200704, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4200720, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4200736, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4200752, ".clock_gettime", "// attributes: thunk\nint clock_gettime(clockid_t clock_id, struct timespec *tp)\n{\n  return clock_gettime(clock_id, tp);\n}\n"], [4200768, ".setenv", "// attributes: thunk\nint setenv(const char *name, const char *value, int replace)\n{\n  return setenv(name, value, replace);\n}\n"], [4200784, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4200800, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4200816, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4200832, ".stpcpy", "// attributes: thunk\nchar *stpcpy(char *dest, const char *src)\n{\n  return stpcpy(dest, src);\n}\n"], [4200848, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4200864, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4200880, ".__lxstat", "// attributes: thunk\nint __lxstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _lxstat(ver, filename, stat_buf);\n}\n"], [4200896, ".openat", "// attributes: thunk\nint openat(int fd, const char *file, int oflag, ...)\n{\n  return openat(fd, file, oflag);\n}\n"], [4200912, ".chdir", "// attributes: thunk\nint chdir(const char *path)\n{\n  return chdir(path);\n}\n"], [4200928, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200944, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200960, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200976, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200992, ".dup2", "// attributes: thunk\nint dup2(int fd, int fd2)\n{\n  return dup2(fd, fd2);\n}\n"], [4201008, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4201024, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4201040, ".__fxstatat", "// attributes: thunk\nint __fxstatat(int ver, int fildes, const char *filename, struct stat *stat_buf, int flag)\n{\n  return _fxstatat(ver, fildes, filename, stat_buf, flag);\n}\n"], [4201056, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4201072, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4201088, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4201104, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4201120, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4201136, ".getcwd", "// attributes: thunk\nchar *getcwd(char *buf, size_t size)\n{\n  return getcwd(buf, size);\n}\n"], [4201152, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4201168, ".rewinddir", "// attributes: thunk\nvoid rewinddir(DIR *dirp)\n{\n  rewinddir(dirp);\n}\n"], [4201184, ".strspn", "// attributes: thunk\nsize_t strspn(const char *s, const char *accept)\n{\n  return strspn(s, accept);\n}\n"], [4201200, ".closedir", "// attributes: thunk\nint closedir(DIR *dirp)\n{\n  return closedir(dirp);\n}\n"], [4201216, ".memchr", "// attributes: thunk\nvoid *memchr(const void *s, int c, size_t n)\n{\n  return memchr(s, c, n);\n}\n"], [4201232, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4201248, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4201264, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4201280, ".utimes", "// attributes: thunk\nint utimes(const char *file, const struct timeval tvp[2])\n{\n  return utimes(file, tvp);\n}\n"], [4201296, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4201312, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4201328, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4201344, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4201360, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4201376, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4201392, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4201408, ".time", "// attributes: thunk\ntime_t time(time_t *timer)\n{\n  return time(timer);\n}\n"], [4201424, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4201440, ".__xstat", "// attributes: thunk\nint __xstat(int ver, const char *filename, struct stat *stat_buf)\n{\n  return _xstat(ver, filename, stat_buf);\n}\n"], [4201456, ".readdir", "// attributes: thunk\nstruct dirent *readdir(DIR *dirp)\n{\n  return readdir(dirp);\n}\n"], [4201472, ".putc_unlocked", "// attributes: thunk\nint putc_unlocked(int c, FILE *stream)\n{\n  return putc_unlocked(c, stream);\n}\n"], [4201488, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4201504, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4201520, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4201536, ".mktime", "// attributes: thunk\ntime_t mktime(struct tm *tp)\n{\n  return mktime(tp);\n}\n"], [4201552, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4201568, ".fchdir", "// attributes: thunk\nint fchdir(int fd)\n{\n  return fchdir(fd);\n}\n"], [4201584, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4201600, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4201616, ".memmove", "// attributes: thunk\nvoid *memmove(void *dest, const void *src, size_t n)\n{\n  return memmove(dest, src, n);\n}\n"], [4201632, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4201648, ".memrchr", "// attributes: thunk\nvoid *memrchr(const void *s, int c, size_t n)\n{\n  return memrchr(s, c, n);\n}\n"], [4201664, ".open", "// attributes: thunk\nint open(const char *file, int oflag, ...)\n{\n  return open(file, oflag);\n}\n"], [4201680, ".access", "// attributes: thunk\nint access(const char *name, int type)\n{\n  return access(name, type);\n}\n"], [4201696, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4201712, ".fdopendir", "// attributes: thunk\nDIR *fdopendir(int fd)\n{\n  return fdopendir(fd);\n}\n"], [4201728, ".unsetenv", "// attributes: thunk\nint unsetenv(const char *name)\n{\n  return unsetenv(name);\n}\n"], [4201744, ".futimens", "// attributes: thunk\nint futimens(int fd, const struct timespec times[2])\n{\n  return futimens(fd, times);\n}\n"], [4201760, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4201776, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4201792, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4201808, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4201824, ".strdup", "// attributes: thunk\nchar *strdup(const char *s)\n{\n  return strdup(s);\n}\n"], [4201840, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4201856, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4201872, ".futimesat", "// attributes: thunk\nint futimesat(int fd, const char *file, const struct timeval tvp[2])\n{\n  return futimesat(fd, file, tvp);\n}\n"], [4201888, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4201904, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4201952, "sub_401DE0", "signed __int64 sub_401DE0()\n{\n  signed __int64 result; // rax\n\n  result = &unk_61130F - &unk_611308;\n  if ( (unsigned __int64)(&unk_61130F - &unk_611308) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4202000, "sub_401E10", "__int64 sub_401E10()\n{\n  return 0LL;\n}\n"], [4202064, "sub_401E50", "signed __int64 sub_401E50()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_611378 )\n  {\n    result = sub_401DE0();\n    byte_611378 = 1;\n  }\n  return result;\n}\n"], [4202096, "sub_401E70", "__int64 sub_401E70()\n{\n  return sub_401E10();\n}\n"], [4202141, "sub_401E9D", "int sub_401E9D()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_40317E(qword_6113D8);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_40317E(qword_6113D8);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_40317E(qword_6113D8);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4202407, "sub_401FA7", "__int64 __fastcall sub_401FA7(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4202429, "sub_401FBD", "__int64 __fastcall sub_401FBD(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4202451, "sub_401FD3", "void __fastcall sub_401FD3(__int64 a1, __int64 a2, __int64 a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n\n  if ( (unsigned __int8)sub_4062C8(a1, a2, a3) != 1 )\n  {\n    v3 = sub_407A47(a2);\n    v4 = gettext(\"invalid date format %s\");\n    error(1, 0, v4, v3);\n  }\n}\n"], [4202560, "sub_402040", "__int64 __fastcall sub_402040(const char *a1)\n{\n  unsigned int v1; // edx\n  const char *v2; // rax\n  __int64 v3; // r12\n  char *v4; // rbx\n  int *v5; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  __int64 v9; // r12\n  char *v10; // rbx\n  int *v11; // rax\n  bool v12; // [rsp+1Bh] [rbp-25h]\n  unsigned int v13; // [rsp+1Ch] [rbp-24h]\n  int errnum; // [rsp+20h] [rbp-20h]\n  time_t *v15; // [rsp+28h] [rbp-18h]\n\n  v13 = -1;\n  errnum = 0;\n  v15 = &timer;\n  if ( !strcmp(a1, \"-\") )\n  {\n    v13 = 1;\n  }\n  else if ( byte_611384 != 1 && byte_611386 != 1 )\n  {\n    v13 = sub_40A2EF(0LL, a1, 2369LL, 438LL);\n    if ( v13 == -1 && *__errno_location() != 21 && *__errno_location() != 22 && *__errno_location() != 1 )\n      errnum = *__errno_location();\n  }\n  if ( dword_611380 != 3 )\n  {\n    if ( dword_611380 == 2 )\n    {\n      qword_6113A8 = 1073741822LL;\n    }\n    else\n    {\n      if ( dword_611380 != 1 )\n        __assert_fail(\"change_times == 1\", \"../../src/src/touch.c\", 0x9Cu, \"touch\");\n      qword_6113B8 = 1073741822LL;\n    }\n  }\n  if ( byte_611387 )\n    v15 = 0LL;\n  if ( byte_611386 && v13 == -1 )\n    v1 = 256;\n  else\n    v1 = 0;\n  if ( v13 == 1 )\n    v2 = 0LL;\n  else\n    v2 = a1;\n  v12 = (unsigned int)sub_403235(v13, 4294967196LL, v2, v15, v1) == 0;\n  if ( v13 )\n  {\n    if ( v13 == 1 && !v12 && *__errno_location() == 9 && byte_611384 )\n      return 1LL;\n  }\n  else if ( close(0) )\n  {\n    v3 = sub_407A47(a1);\n    v4 = gettext(\"closing %s\");\n    v5 = __errno_location();\n    error(0, *v5, v4, v3);\n    return 0LL;\n  }\n  if ( v12 )\n    return 1LL;\n  if ( errnum )\n  {\n    v7 = sub_407A47(a1);\n    v8 = gettext(\"cannot touch %s\");\n    error(0, errnum, v8, v7);\n  }\n  else\n  {\n    if ( byte_611384 && *__errno_location() == 2 )\n      return 1LL;\n    v9 = sub_407A47(a1);\n    v10 = gettext(\"setting times of %s\");\n    v11 = __errno_location();\n    error(0, *v11, v10, v9);\n  }\n  return 0LL;\n}\n"], [4203243, "sub_4022EB", "void __fastcall __noreturn sub_4022EB(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n\n  v1 = qword_6113D8;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... FILE...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\n           \"Update the access and modification times of each FILE to the current time.\\n\"\n           \"\\n\"\n           \"A FILE argument that does not exist is created empty, unless -c or -h\\n\"\n           \"is supplied.\\n\"\n           \"\\n\"\n           \"A FILE argument string of - is handled specially and causes touch to\\n\"\n           \"change the times of the file associated with standard output.\\n\"\n           \"\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  -a                     change only the access time\\n\"\n           \"  -c, --no-create        do not create any files\\n\"\n           \"  -d, --date=STRING      parse STRING and use it instead of current time\\n\"\n           \"  -f                     (ignored)\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -h, --no-dereference   affect each symbolic link instead of any referenced\\n\"\n            \"                         file (useful only on systems that can change the\\n\"\n            \"                         timestamps of a symlink)\\n\"\n            \"  -m                     change only the modification time\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"  -r, --reference=FILE   use this file's times instead of current time\\n\"\n            \"  -t STAMP               use [[CC]YY]MMDDhhmm[.ss] instead of current time\\n\"\n            \"  --time=WORD            change the specified time:\\n\"\n            \"                           WORD is access, atime, or use: equivalent to -a\\n\"\n            \"                           WORD is modify or mtime: equivalent to -m\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\"\\nNote that the -d and -t options accept different time-date formats.\\n\");\n    fputs_unlocked(v19, v18);\n    sub_401E9D();\n  }\n  exit(a1);\n}\n"], [4203584, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rbx\n  char *v4; // rax\n  char *v5; // rax\n  bool v6; // al\n  __int64 v7; // r12\n  char *v8; // rbx\n  int *v9; // rax\n  __int64 v10; // rdx\n  __int64 v11; // rdx\n  int v12; // er15\n  int v13; // er14\n  int v14; // er13\n  int v15; // er12\n  char *v16; // rbx\n  char *v17; // rax\n  char *v18; // rax\n  __int64 v19; // [rsp+28h] [rbp-118h]\n  unsigned int v20; // [rsp+38h] [rbp-108h]\n  char v21; // [rsp+4Ah] [rbp-F6h]\n  bool v22; // [rsp+4Bh] [rbp-F5h]\n  int v23; // [rsp+4Ch] [rbp-F4h]\n  __int64 v24; // [rsp+50h] [rbp-F0h]\n  struct tm *v25; // [rsp+58h] [rbp-E8h]\n  __int64 v26; // [rsp+60h] [rbp-E0h] BYREF\n  __int64 v27; // [rsp+68h] [rbp-D8h]\n  __int64 v28; // [rsp+70h] [rbp-D0h] BYREF\n  __int64 v29; // [rsp+78h] [rbp-C8h]\n  struct stat stat_buf; // [rsp+80h] [rbp-C0h] BYREF\n\n  v21 = 0;\n  v22 = 1;\n  v24 = 0LL;\n  sub_40793C(*a2, a2, a3);\n  setlocale(6, locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_40C830(sub_403093);\n  dword_611380 = 0;\n  byte_611385 = 0;\n  byte_611384 = 0;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      do\n      {\n        v23 = getopt_long(a1, a2, \"acd:fhmr:t:\", &longopts, 0LL);\n        if ( v23 == -1 )\n        {\n          if ( !dword_611380 )\n            dword_611380 = 3;\n          if ( v21 && (byte_611385 || v24) )\n          {\n            v5 = gettext(\"cannot specify times from more than one source\");\n            error(0, 0, v5);\n            sub_4022EB(1);\n          }\n          if ( byte_611385 )\n          {\n            if ( byte_611386 )\n              v6 = (unsigned int)sub_40C870(filename, &stat_buf) != 0;\n            else\n              v6 = (unsigned int)sub_40C850(filename, &stat_buf) != 0;\n            if ( v6 )\n            {\n              v7 = sub_407A47(filename);\n              v8 = gettext(\"failed to get attributes of %s\");\n              v9 = __errno_location();\n              error(1, *v9, v8, v7);\n            }\n            timer = sub_401FA7((__int64)&stat_buf);\n            qword_6113A8 = v10;\n            qword_6113B0 = sub_401FBD((__int64)&stat_buf);\n            qword_6113B8 = v11;\n            v21 = 1;\n            if ( v24 )\n            {\n              if ( (dword_611380 & 1) != 0 )\n                sub_401FD3((__int64)&timer, v24, (__int64)&timer);\n              if ( (dword_611380 & 2) != 0 )\n                sub_401FD3((__int64)&qword_6113B0, v24, (__int64)&qword_6113B0);\n            }\n          }\n          else if ( v24 )\n          {\n            sub_4032C4(&v26);\n            sub_401FD3((__int64)&timer, v24, (__int64)&v26);\n            qword_6113B0 = timer;\n            qword_6113B8 = qword_6113A8;\n            v21 = 1;\n            if ( dword_611380 == 3 && timer == v26 && qword_6113A8 == v27 )\n            {\n              v28 = v26 ^ 1;\n              v29 = v27;\n              sub_401FD3((__int64)&stat_buf, v24, (__int64)&v28);\n              if ( stat_buf.st_dev == v28 && stat_buf.st_ino == v29 )\n                v21 = 0;\n            }\n          }\n          if ( v21 != 1\n            && a1 - optind > 1\n            && (int)sub_4078B8() <= 200111\n            && (unsigned __int8)sub_407698(&timer, a2[optind], 18LL) )\n          {\n            qword_6113A8 = 0LL;\n            qword_6113B0 = timer;\n            qword_6113B8 = 0LL;\n            v21 = 1;\n            if ( !getenv(\"POSIXLY_CORRECT\") )\n            {\n              v25 = localtime(&timer);\n              if ( v25 )\n              {\n                v12 = v25->tm_sec;\n                v13 = v25->tm_min;\n                v14 = v25->tm_hour;\n                v15 = v25->tm_mday;\n                v20 = v25->tm_mon + 1;\n                v19 = v25->tm_year + 1900LL;\n                v16 = a2[optind];\n                v17 = gettext(\"warning: `touch %s' is obsolete; use `touch -t %04ld%02d%02d%02d%02d.%02d'\");\n                error(0, 0, v17, v16, v19, v20, v15, v14, v13, v12);\n              }\n            }\n            ++optind;\n          }\n          if ( v21 != 1 )\n          {\n            if ( dword_611380 == 3 )\n            {\n              byte_611387 = 1;\n            }\n            else\n            {\n              qword_6113A8 = 0x3FFFFFFFLL;\n              qword_6113B8 = 0x3FFFFFFFLL;\n            }\n          }\n          if ( optind == a1 )\n          {\n            v18 = gettext(\"missing file operand\");\n            error(0, 0, v18);\n            sub_4022EB(1);\n          }\n          while ( optind < a1 )\n          {\n            v22 = (v22 & (unsigned __int8)sub_402040(a2[optind])) != 0;\n            ++optind;\n          }\n          exit(!v22);\n        }\n      }\n      while ( v23 == 102 );\n      if ( v23 <= 102 )\n        break;\n      if ( v23 == 114 )\n      {\n        byte_611385 = 1;\n        filename = (char *)optarg;\n      }\n      else if ( v23 > 114 )\n      {\n        if ( v23 == 116 )\n        {\n          if ( (unsigned __int8)sub_407698(&timer, optarg, 13LL) != 1 )\n          {\n            v3 = sub_407A47(optarg);\n            v4 = gettext(\"invalid date format %s\");\n            error(1, 0, v4, v3);\n          }\n          qword_6113A8 = 0LL;\n          qword_6113B0 = timer;\n          qword_6113B8 = 0LL;\n          v21 = 1;\n        }\n        else\n        {\n          if ( v23 != 128 )\n            goto LABEL_32;\n          dword_611380 |= dword_40CBD0[sub_402F57(\"--time\", optarg, off_40CBA0, dword_40CBD0, 4LL, off_6112C8)];\n        }\n      }\n      else if ( v23 == 104 )\n      {\n        byte_611386 = 1;\n      }\n      else\n      {\n        if ( v23 != 109 )\n          goto LABEL_32;\n        dword_611380 |= 2u;\n      }\n    }\n    if ( v23 == 97 )\n    {\n      dword_611380 |= 1u;\n    }\n    else\n    {\n      if ( v23 <= 97 )\n      {\n        if ( v23 == -131 )\n        {\n          sub_409911(\n            (_DWORD)stdout,\n            (unsigned int)\"touch\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_6112C0,\n            (unsigned int)\"Paul Rubin\",\n            (unsigned int)\"Arnold Robbins\",\n            \"Jim Kingdon\",\n            \"David MacKenzie\",\n            \"Randy Smith\",\n            0LL);\n          exit(0);\n        }\n        if ( v23 == -130 )\n          sub_4022EB(0);\nLABEL_32:\n        sub_4022EB(1);\n      }\n      if ( v23 == 99 )\n      {\n        byte_611384 = 1;\n      }\n      else\n      {\n        if ( v23 != 100 )\n          goto LABEL_32;\n        v24 = optarg;\n      }\n    }\n  }\n}\n"], [4205661, "sub_402C5D", "void __noreturn sub_402C5D()\n{\n  sub_4022EB(1);\n}\n"], [4205677, "sub_402C6D", "__int64 __fastcall sub_402C6D(const char *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 result; // rax\n  char v7; // [rsp+27h] [rbp-19h]\n  __int64 i; // [rsp+28h] [rbp-18h]\n  __int64 v9; // [rsp+30h] [rbp-10h]\n  size_t n; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v7 = 0;\n  n = strlen(a1);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !strncmp(*(const char **)(8 * i + a2), a1, n) )\n    {\n      if ( strlen(*(const char **)(8 * i + a2)) == n )\n        return i;\n      if ( v9 == -1 )\n      {\n        v9 = i;\n      }\n      else if ( !a3 || memcmp((const void *)(a4 * v9 + a3), (const void *)(i * a4 + a3), a4) )\n      {\n        v7 = 1;\n      }\n    }\n  }\n  if ( v7 )\n    result = -2LL;\n  else\n    result = v9;\n  return result;\n}\n"], [4205980, "sub_402D9C", "void __fastcall sub_402D9C(__int64 a1, __int64 a2, __int64 a3)\n{\n  char *v3; // rax\n  __int64 v4; // rbx\n  __int64 v5; // rax\n  char *format; // [rsp+28h] [rbp-18h]\n\n  if ( a3 == -1 )\n    v3 = gettext(\"invalid argument %s for %s\");\n  else\n    v3 = gettext(\"ambiguous argument %s for %s\");\n  format = v3;\n  v4 = sub_407A23(1LL, a1);\n  v5 = sub_408ED2(0LL, 6LL, a2);\n  error(0, 0, format, v5, v4);\n}\n"], [4206119, "sub_402E27", "int __fastcall sub_402E27(__int64 a1, __int64 a2, size_t a3)\n{\n  char *v3; // rax\n  __int64 i; // [rsp+20h] [rbp-10h]\n  void *s1; // [rsp+28h] [rbp-8h]\n\n  s1 = 0LL;\n  v3 = gettext(\"Valid arguments are:\");\n  fprintf(stderr, v3);\n  for ( i = 0LL; *(_QWORD *)(8 * i + a1); ++i )\n  {\n    if ( i && !memcmp(s1, (const void *)(i * a3 + a2), a3) )\n    {\n      fprintf(stderr, \", `%s'\", *(const char **)(8 * i + a1));\n    }\n    else\n    {\n      fprintf(stderr, \"\\n  - `%s'\", *(const char **)(8 * i + a1));\n      s1 = (void *)(i * a3 + a2);\n    }\n  }\n  return putc_unlocked(10, stderr);\n}\n"], [4206423, "sub_402F57", "__int64 __fastcall sub_402F57(__int64 a1, const char *a2, __int64 a3, __int64 a4, size_t a5, void (*a6)(void))\n{\n  __int64 v11; // [rsp+38h] [rbp-8h]\n\n  v11 = sub_402C6D(a2, a3, a4, a5);\n  if ( v11 >= 0 )\n    return v11;\n  sub_402D9C(a1, (__int64)a2, v11);\n  sub_402E27(a3, a4, a5);\n  a6();\n  return -1LL;\n}\n"], [4206557, "sub_402FDD", "__int64 __fastcall sub_402FDD(const void *a1, __int64 a2, __int64 a3, size_t a4)\n{\n  __int64 i; // [rsp+28h] [rbp-8h]\n\n  for ( i = 0LL; *(_QWORD *)(8 * i + a2); ++i )\n  {\n    if ( !memcmp(a1, (const void *)(i * a4 + a3), a4) )\n      return *(_QWORD *)(8 * i + a2);\n  }\n  return 0LL;\n}\n"], [4206697, "sub_403069", "__int64 __fastcall sub_403069(__int64 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  qword_6113C8 = a1;\n  return result;\n}\n"], [4206718, "sub_40307E", "__int64 __fastcall sub_40307E(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_6113D0 = a1;\n  return result;\n}\n"], [4206739, "sub_403093", "__int64 sub_403093()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40A5F0(stdout) && (byte_6113D0 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_6113C8 )\n    {\n      v0 = (const char *)sub_409060(qword_6113C8);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40A5F0(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4206974, "sub_40317E", "_BYTE *__fastcall sub_40317E(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4207079, "sub_4031E7", "size_t __fastcall sub_4031E7(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4207157, "sub_403235", "__int64 __fastcall sub_403235(int a1, unsigned int a2, __int64 a3, __int64 a4, unsigned int a5)\n{\n  unsigned int v9; // [rsp+2Ch] [rbp-4h]\n\n  v9 = 1;\n  if ( a1 >= 0 )\n    v9 = sub_409D30((unsigned int)a1, a4);\n  if ( a3 && (a1 < 0 || v9 == -1 && *__errno_location() == 38) )\n    v9 = sub_409D80(a2, a3, a4, a5);\n  if ( v9 == 1 )\n  {\n    *__errno_location() = 9;\n    v9 = -1;\n  }\n  return v9;\n}\n"], [4207300, "sub_4032C4", "int __fastcall sub_4032C4(struct timespec *a1)\n{\n  int result; // eax\n  struct timeval tv; // [rsp+10h] [rbp-10h] BYREF\n\n  result = clock_gettime(0, a1);\n  if ( result )\n  {\n    gettimeofday(&tv, 0LL);\n    a1->tv_sec = tv.tv_sec;\n    result = (int)a1;\n    a1->tv_nsec = 1000 * tv.tv_usec;\n  }\n  return result;\n}\n"], [4207384, "sub_403318", "__int64 __fastcall sub_403318(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, unsigned __int64 a9)\n{\n  __int64 result; // rax\n\n  if ( *(_QWORD *)(a1 + 176) && !*(_QWORD *)(a1 + 56) && *(_BYTE *)(a1 + 169) != 1 && (*(_QWORD *)(a1 + 208) || a9 > 2) )\n  {\n    result = a1;\n    *(_QWORD *)(a1 + 40) = a7;\n    *(_QWORD *)(a1 + 48) = a8;\n    *(_QWORD *)(a1 + 56) = a9;\n  }\n  else if ( a9 <= 4 )\n  {\n    ++*(_QWORD *)(a1 + 208);\n    if ( a9 > 2 )\n    {\n      *(_QWORD *)(a1 + 80) = a8 / 100;\n      *(_QWORD *)(a1 + 88) = a8 % 100;\n    }\n    else\n    {\n      *(_QWORD *)(a1 + 80) = a8;\n      *(_QWORD *)(a1 + 88) = 0LL;\n    }\n    *(_QWORD *)(a1 + 96) = 0LL;\n    *(_QWORD *)(a1 + 104) = 0LL;\n    result = a1;\n    *(_DWORD *)(a1 + 32) = 2;\n  }\n  else\n  {\n    ++*(_QWORD *)(a1 + 176);\n    *(_QWORD *)(a1 + 72) = a8 % 100;\n    *(_QWORD *)(a1 + 64) = a8 / 100 % 100;\n    *(_QWORD *)(a1 + 48) = a8 / 10000;\n    result = a1;\n    *(_QWORD *)(a1 + 56) = a9 - 4;\n  }\n  return result;\n}\n"], [4208032, "sub_4035A0", "__int64 __fastcall sub_4035A0(__int64 a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __int64 a7, __int64 a8, __int64 a9, __int64 a10, __int64 a11, __int64 a12, __int64 a13)\n{\n  __int64 result; // rax\n\n  *(_QWORD *)(a1 + 160) += a2 * a13;\n  *(_QWORD *)(a1 + 152) += a2 * a12;\n  *(_QWORD *)(a1 + 144) += a2 * a11;\n  *(_QWORD *)(a1 + 136) += a2 * a10;\n  *(_QWORD *)(a1 + 128) += a2 * a9;\n  *(_QWORD *)(a1 + 120) += a2 * a8;\n  *(_QWORD *)(a1 + 112) += a2 * a7;\n  result = a1;\n  *(_BYTE *)(a1 + 169) = 1;\n  return result;\n}\n"], [4208317, "sub_4036BD", "_QWORD *__fastcall sub_4036BD(_QWORD *a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  _QWORD *result; // rax\n\n  a1[10] = a2;\n  a1[11] = a3;\n  a1[12] = a4;\n  result = a1;\n  a1[13] = a5;\n  return result;\n}\n"], [4208391, "sub_403707", "void sub_403707()\n{\n  ;\n}\n"], [4208428, "sub_40372C", "__int64 __fastcall sub_40372C(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6)\n{\n  int v6; // eax\n  __int64 *v7; // rax\n  __int64 *v8; // rax\n  __int64 v9; // rdx\n  __int64 v10; // rax\n  __int64 v11; // rbx\n  __int64 *v12; // rdx\n  __int64 *v13; // rdx\n  __int64 *v14; // rdx\n  __int64 *v15; // rdx\n  __int64 *v16; // rdx\n  __int64 v17; // r8\n  __int64 v18; // r9\n  __int64 *v19; // rax\n  unsigned int v20; // eax\n  __int64 *v21; // rax\n  unsigned int v22; // eax\n  int v24; // [rsp+40h] [rbp-590h]\n  int v25; // [rsp+44h] [rbp-58Ch]\n  int v26; // [rsp+48h] [rbp-588h]\n  int v27; // [rsp+48h] [rbp-588h]\n  int v28; // [rsp+4Ch] [rbp-584h]\n  int v29; // [rsp+50h] [rbp-580h]\n  unsigned int v30; // [rsp+54h] [rbp-57Ch]\n  unsigned int v31; // [rsp+58h] [rbp-578h]\n  int v32; // [rsp+5Ch] [rbp-574h]\n  void *src; // [rsp+60h] [rbp-570h]\n  char *v34; // [rsp+68h] [rbp-568h]\n  void *v35; // [rsp+70h] [rbp-560h]\n  __int64 *v36; // [rsp+78h] [rbp-558h]\n  unsigned __int64 v37; // [rsp+80h] [rbp-550h]\n  __int64 v38; // [rsp+88h] [rbp-548h]\n  void *ptr; // [rsp+90h] [rbp-540h]\n  void *dest; // [rsp+98h] [rbp-538h]\n  unsigned __int64 v41; // [rsp+A0h] [rbp-530h]\n  unsigned __int64 v42; // [rsp+A8h] [rbp-528h]\n  char v43[48]; // [rsp+B0h] [rbp-520h] BYREF\n  __int64 v44; // [rsp+E0h] [rbp-4F0h] BYREF\n  __int64 v45; // [rsp+E8h] [rbp-4E8h]\n  __int64 v46; // [rsp+F0h] [rbp-4E0h]\n  __int64 v47; // [rsp+F8h] [rbp-4D8h]\n  __int64 v48; // [rsp+100h] [rbp-4D0h]\n  __int64 v49; // [rsp+108h] [rbp-4C8h]\n  __int64 v50; // [rsp+110h] [rbp-4C0h]\n  __int64 v51[8]; // [rsp+120h] [rbp-4B0h] BYREF\n  char v52[1136]; // [rsp+160h] [rbp-470h] BYREF\n\n  v32 = 0;\n  v31 = 0;\n  src = v43;\n  v35 = v52;\n  v37 = 20LL;\n  v26 = 0;\n  v28 = 0;\n  v25 = 0;\n  v24 = -2;\n  v34 = v43;\n  v36 = (__int64 *)v52;\n  while ( 1 )\n  {\n    *(_WORD *)v34 = v26;\n    if ( (char *)src + 2 * v37 - 2 > v34 )\n      goto LABEL_11;\n    v38 = ((v34 - (_BYTE *)src) >> 1) + 1;\n    if ( v37 > 0x13 )\n      break;\n    v37 *= 2LL;\n    if ( v37 > 0x14 )\n      v37 = 20LL;\n    ptr = src;\n    dest = malloc(58 * v37 + 55);\n    if ( !dest )\n      break;\n    memcpy(dest, src, 2 * v38);\n    src = dest;\n    v41 = 2 * v37 + 55;\n    dest = (char *)dest + 56 * (v41 / 0x38);\n    a2 = (__int64)v35;\n    memcpy(dest, v35, 56 * v38);\n    v35 = dest;\n    v42 = 56 * v37 + 55;\n    dest = (char *)dest + 56 * (v42 / 0x38);\n    if ( ptr != v43 )\n      free(ptr);\n    v34 = (char *)src + 2 * v38 - 2;\n    v36 = (__int64 *)((char *)v35 + 56 * v38 - 56);\n    if ( (char *)src + 2 * v37 - 2 <= v34 )\n    {\nLABEL_224:\n      v30 = 1;\n      goto LABEL_226;\n    }\nLABEL_11:\n    if ( v26 == 12 )\n    {\n      v30 = 0;\n      goto LABEL_226;\n    }\n    v29 = byte_40D500[v26];\n    if ( v29 == -93 )\n      goto LABEL_30;\n    if ( v24 == -2 )\n    {\n      a2 = a1;\n      v24 = sub_405C3B(&v44, a1);\n    }\n    if ( v24 > 0 )\n    {\n      v6 = (unsigned int)v24 > 0x115 ? 2 : (unsigned __int8)byte_40D3E0[v24];\n      v31 = v6;\n    }\n    else\n    {\n      v31 = 0;\n      v24 = 0;\n    }\n    v29 += v31;\n    if ( v29 < 0 || v29 > 112 || byte_40D6C0[v29] != v31 )\n    {\nLABEL_30:\n      v29 = (unsigned __int8)byte_40D580[v26];\n      if ( v29 )\n        goto LABEL_33;\n      if ( v24 == -2 )\n      {\n        v20 = -2;\n      }\n      else if ( (unsigned int)v24 > 0x115 )\n      {\n        v20 = 2;\n      }\n      else\n      {\n        v20 = (unsigned __int8)byte_40D3E0[v24];\n      }\n      v31 = v20;\n      if ( !v28 )\n      {\n        ++v25;\n        a2 = (__int64)\"syntax error\";\n        sub_406196(a1, \"syntax error\");\n      }\n      if ( v28 == 3 )\n      {\n        if ( v24 > 0 )\n        {\n          a2 = v31;\n          sub_403707();\n          v24 = -2;\n        }\n        else if ( !v24 )\n        {\n          goto LABEL_224;\n        }\n      }\n      v28 = 3;\n      while ( 1 )\n      {\n        v29 = byte_40D500[v26];\n        if ( v29 != -93 && ++v29 >= 0 && v29 <= 112 && byte_40D6C0[v29] == 1 )\n        {\n          v29 = (unsigned __int8)byte_40D640[v29];\n          if ( v29 > 0 )\n            break;\n        }\n        if ( v34 == src )\n          goto LABEL_224;\n        a2 = (unsigned __int8)byte_40D740[v26];\n        sub_403707();\n        v36 -= 7;\n        v34 -= 2;\n        v26 = *(__int16 *)v34;\n      }\n      v36 += 7;\n      v21 = v36;\n      *v36 = v44;\n      v21[1] = v45;\n      v21[2] = v46;\n      v21[3] = v47;\n      v21[4] = v48;\n      v21[5] = v49;\n      v21[6] = v50;\n      v26 = v29;\n    }\n    else\n    {\n      v29 = (unsigned __int8)byte_40D640[v29];\n      if ( v29 <= 0 )\n      {\n        v29 = -v29;\nLABEL_33:\n        v32 = (unsigned __int8)byte_40D820[v29];\n        v8 = &v36[7 * (1 - v32)];\n        v51[0] = *v8;\n        v51[1] = v8[1];\n        v51[2] = v8[2];\n        v51[3] = v8[3];\n        v51[4] = v8[4];\n        v51[5] = v8[5];\n        v51[6] = v8[6];\n        if ( v29 == 50 )\n        {\n          v16 = v36 - 14;\n          *(_QWORD *)(a1 + 40) = *(v36 - 14);\n          *(_QWORD *)(a1 + 48) = v16[1];\n          *(_QWORD *)(a1 + 56) = v16[2];\n          *(_QWORD *)(a1 + 64) = -*(v36 - 6);\n          *(_QWORD *)(a1 + 72) = -v36[1];\n          goto LABEL_199;\n        }\n        if ( v29 <= 50 )\n        {\n          if ( v29 == 31 )\n          {\n            *(_QWORD *)(a1 + 24) = 420LL;\n          }\n          else if ( v29 > 31 )\n          {\n            if ( v29 == 40 )\n            {\n              *(_QWORD *)(a1 + 8) = *(v36 - 6);\n              *(_DWORD *)(a1 + 16) = *v36;\n            }\n            else if ( v29 > 40 )\n            {\n              if ( v29 == 44 )\n              {\n                *(_QWORD *)(a1 + 64) = *(v36 - 14);\n                *(_QWORD *)(a1 + 72) = -*(v36 - 6);\n                *(_QWORD *)(a1 + 48) = -v36[1];\n                *(_QWORD *)(a1 + 56) = v36[2];\n              }\n              else if ( v29 > 44 )\n              {\n                if ( v29 == 46 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 21);\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  v14 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v14[1];\n                  *(_QWORD *)(a1 + 56) = v14[2];\n                }\n                else if ( v29 < 46 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                  *(_QWORD *)(a1 + 72) = v36[1];\n                }\n                else if ( v29 == 47 )\n                {\n                  *(_QWORD *)(a1 + 72) = *(v36 - 6);\n                  *(_QWORD *)(a1 + 64) = *v36;\n                }\n                else if ( v29 == 48 )\n                {\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                  v15 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v15[1];\n                  *(_QWORD *)(a1 + 56) = v15[2];\n                }\n              }\n              else if ( v29 == 42 )\n              {\n                if ( (unsigned __int64)*(v36 - 26) <= 3 )\n                {\n                  *(_QWORD *)(a1 + 64) = *(v36 - 27);\n                  *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                  v13 = v36;\n                  *(_QWORD *)(a1 + 40) = *v36;\n                  *(_QWORD *)(a1 + 48) = v13[1];\n                  *(_QWORD *)(a1 + 56) = v13[2];\n                }\n                else\n                {\n                  v12 = v36 - 28;\n                  *(_QWORD *)(a1 + 40) = *(v36 - 28);\n                  *(_QWORD *)(a1 + 48) = v12[1];\n                  *(_QWORD *)(a1 + 56) = v12[2];\n                  *(_QWORD *)(a1 + 64) = *(v36 - 13);\n                  *(_QWORD *)(a1 + 72) = v36[1];\n                }\n              }\n              else if ( v29 > 42 )\n              {\n                *(_QWORD *)(a1 + 72) = *(v36 - 13);\n                *(_QWORD *)(a1 + 64) = *(v36 - 7);\n                *(_QWORD *)(a1 + 48) = -v36[1];\n                *(_QWORD *)(a1 + 56) = v36[2];\n              }\n              else\n              {\n                *(_QWORD *)(a1 + 64) = *(v36 - 13);\n                *(_QWORD *)(a1 + 72) = v36[1];\n              }\n            }\n            else if ( v29 == 35 )\n            {\n              *(_QWORD *)(a1 + 24) = *v36 + 60;\n            }\n            else if ( v29 > 35 )\n            {\n              if ( v29 == 37 )\n              {\n                *(_QWORD *)(a1 + 8) = 0LL;\n                *(_DWORD *)(a1 + 16) = *v36;\n              }\n              else if ( v29 < 37 )\n              {\n                *(_QWORD *)(a1 + 24) = *(v36 - 7) + 60;\n              }\n              else if ( v29 == 38 )\n              {\n                *(_QWORD *)(a1 + 8) = 0LL;\n                *(_DWORD *)(a1 + 16) = *(v36 - 7);\n              }\n              else\n              {\n                *(_QWORD *)(a1 + 8) = *(v36 - 7);\n                *(_DWORD *)(a1 + 16) = *v36;\n              }\n            }\n            else if ( v29 == 33 )\n            {\n              *(_QWORD *)(a1 + 24) = 420LL;\n              a2 = 1LL;\n              sub_4035A0(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n            else if ( v29 > 33 )\n            {\n              v11 = *(v36 - 14);\n              a2 = *v36;\n              *(_QWORD *)(a1 + 24) = v11 + sub_405646(a1, *v36, a1, *v36, a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n            }\n            else\n            {\n              *(_QWORD *)(a1 + 24) = *(v36 - 7);\n              a2 = 1LL;\n              sub_4035A0(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n          }\n          else if ( v29 == 19 )\n          {\n            a2 = *(v36 - 20);\n            sub_4036BD((_QWORD *)a1, a2, *(v36 - 6), 0LL, 0LL);\n            *(_DWORD *)(a1 + 32) = *v36;\n          }\n          else if ( v29 > 19 )\n          {\n            if ( v29 == 24 )\n            {\n              a2 = *(v36 - 34);\n              sub_4036BD((_QWORD *)a1, a2, *(v36 - 20), *(v36 - 7), *(v36 - 6));\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 > 24 )\n            {\n              if ( v29 == 28 )\n              {\n                *(_DWORD *)(a1 + 20) = *v36;\n                *(_QWORD *)(a1 + 200) += *v36 > 0;\n              }\n              else if ( v29 > 28 )\n              {\n                if ( v29 == 29 )\n                {\n                  *(_DWORD *)(a1 + 20) = 1;\n                  if ( *(v36 - 7) <= 0 )\n                    v10 = 1LL;\n                  else\n                    v10 = 2LL;\n                  *(_QWORD *)(a1 + 200) += v10;\n                }\n                else\n                {\n                  *(_QWORD *)(a1 + 24) = *v36;\n                }\n              }\n              else if ( v29 == 27 )\n              {\n                ++*(_QWORD *)(a1 + 216);\n                a2 = *v36;\n                *(_QWORD *)(a1 + 24) = sub_405646(a1, *v36, a1, *v36, a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n              }\n            }\n            else if ( v29 == 22 )\n            {\n              a2 = *(v36 - 6);\n              sub_4036BD((_QWORD *)a1, a2, 0LL, 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 > 22 )\n            {\n              a2 = *(v36 - 20);\n              sub_4036BD((_QWORD *)a1, a2, *(v36 - 6), 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = 2;\n            }\n            else if ( v29 == 20 )\n            {\n              a2 = *(v36 - 34);\n              sub_4036BD((_QWORD *)a1, a2, *(v36 - 20), *(v36 - 7), *(v36 - 6));\n              *(_DWORD *)(a1 + 32) = *v36;\n            }\n          }\n          else if ( v29 == 9 )\n          {\n            ++*(_QWORD *)(a1 + 192);\n          }\n          else if ( v29 > 9 )\n          {\n            if ( v29 == 11 )\n            {\n              ++*(_QWORD *)(a1 + 176);\n            }\n            else if ( v29 < 11 )\n            {\n              ++*(_QWORD *)(a1 + 216);\n            }\n            else if ( v29 == 12 )\n            {\n              ++*(_QWORD *)(a1 + 184);\n            }\n            else if ( v29 == 18 )\n            {\n              a2 = *(v36 - 6);\n              sub_4036BD((_QWORD *)a1, a2, 0LL, 0LL, 0LL);\n              *(_DWORD *)(a1 + 32) = *v36;\n            }\n          }\n          else if ( v29 == 7 )\n          {\n            ++*(_QWORD *)(a1 + 208);\n            ++*(_QWORD *)(a1 + 176);\n          }\n          else if ( v29 > 7 )\n          {\n            ++*(_QWORD *)(a1 + 208);\n          }\n          else if ( v29 == 4 )\n          {\n            v9 = v36[1];\n            *(_QWORD *)(a1 + 96) = *v36;\n            *(_QWORD *)(a1 + 104) = v9;\n            *(_BYTE *)(a1 + 168) = 1;\n          }\n          goto LABEL_199;\n        }\n        if ( v29 == 68 )\n        {\n          a2 = (__int64)v51;\n          memset(v51, 0, 0x38uLL);\n          v51[4] = 1LL;\n          goto LABEL_199;\n        }\n        if ( v29 <= 68 )\n        {\n          if ( v29 == 59 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[1] = 1LL;\n            goto LABEL_199;\n          }\n          if ( v29 <= 59 )\n          {\n            if ( v29 == 54 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[0] = *(v36 - 7);\n              goto LABEL_199;\n            }\n            if ( v29 <= 54 )\n            {\n              if ( v29 == 52 || v29 > 52 )\n              {\n                a2 = 1LL;\n                sub_4035A0(a1, 1, a1, v36[5], a5, a6, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n              }\n              else\n              {\n                a2 = 0xFFFFFFFFLL;\n                sub_4035A0(\n                  a1,\n                  -1,\n                  a1,\n                  *(v36 - 2),\n                  a5,\n                  a6,\n                  *(v36 - 7),\n                  *(v36 - 6),\n                  *(v36 - 5),\n                  *(v36 - 4),\n                  *(v36 - 3),\n                  *(v36 - 2),\n                  *(v36 - 1));\n              }\n              goto LABEL_199;\n            }\n            if ( v29 == 56 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[0] = 1LL;\n              goto LABEL_199;\n            }\n            if ( v29 >= 56 )\n            {\n              if ( v29 != 57 )\n              {\nLABEL_173:\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[1] = *(v36 - 6);\n                goto LABEL_199;\n              }\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[1] = *(v36 - 7);\nLABEL_199:\n              v36 -= 7 * v32;\n              v34 -= 2 * v32;\n              v32 = 0;\n              v36 += 7;\n              v19 = v36;\n              *v36 = v51[0];\n              v19[1] = v51[1];\n              v19[2] = v51[2];\n              v19[3] = v51[3];\n              v19[4] = v51[4];\n              v19[5] = v51[5];\n              v19[6] = v51[6];\n              v29 = (unsigned __int8)byte_40D7C0[v29];\n              v27 = byte_40D600[v29 - 28] + *(__int16 *)v34;\n              if ( v27 >= 0 && v27 <= 112 && byte_40D6C0[v27] == *(_WORD *)v34 )\n                v26 = (unsigned __int8)byte_40D640[v27];\n              else\n                v26 = byte_40D620[v29 - 28];\n              goto LABEL_2;\n            }\nLABEL_170:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[0] = *(v36 - 6);\n            goto LABEL_199;\n          }\n          if ( v29 == 63 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[3] = *(v36 - 7);\n            goto LABEL_199;\n          }\n          if ( v29 <= 63 )\n          {\n            if ( v29 != 61 )\n            {\n              if ( v29 <= 61 )\n              {\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[2] = *(v36 - 7) * *v36;\n                goto LABEL_199;\n              }\nLABEL_176:\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[2] = *v36;\n              goto LABEL_199;\n            }\nLABEL_175:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[2] = *(v36 - 6) * *v36;\n            goto LABEL_199;\n          }\n          if ( v29 == 65 )\n          {\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[3] = 1LL;\n            goto LABEL_199;\n          }\n          if ( v29 >= 65 )\n          {\n            if ( v29 == 66 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[4] = *(v36 - 7);\n              goto LABEL_199;\n            }\n            goto LABEL_181;\n          }\nLABEL_178:\n          a2 = (__int64)v51;\n          memset(v51, 0, 0x38uLL);\n          v51[3] = *(v36 - 6);\n          goto LABEL_199;\n        }\n        if ( v29 == 78 )\n          goto LABEL_178;\n        if ( v29 > 78 )\n        {\n          if ( v29 == 87 )\n          {\n            v51[0] = v36[1];\n            v51[1] = 0LL;\n            goto LABEL_199;\n          }\n          if ( v29 > 87 )\n          {\n            if ( v29 == 89 )\n            {\n              sub_403318(a1, a2, a1, *(v36 - 6), a5, a6, *(v36 - 7), *(v36 - 6), *(v36 - 5));\n              a2 = 1LL;\n              sub_4035A0(a1, 1, a1, v36[5], v17, v18, *v36, v36[1], v36[2], v36[3], v36[4], v36[5], v36[6]);\n            }\n            else if ( v29 < 89 )\n            {\n              sub_403318(a1, a2, a1, v36[1], a5, a6, *v36, v36[1], v36[2]);\n            }\n            else if ( v29 == 90 )\n            {\n              v51[0] = -1LL;\n            }\n            else if ( v29 == 91 )\n            {\n              v51[0] = v36[1];\n            }\n            goto LABEL_199;\n          }\n          if ( v29 != 80 )\n          {\n            if ( v29 >= 80 )\n            {\n              if ( v29 != 81 )\n              {\n                if ( v29 == 85 )\n                {\n                  v51[0] = v36[1];\n                  v51[1] = 0LL;\n                }\n                goto LABEL_199;\n              }\n              goto LABEL_176;\n            }\nLABEL_181:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[4] = *(v36 - 6);\n            goto LABEL_199;\n          }\n        }\n        else\n        {\n          if ( v29 == 72 )\n            goto LABEL_184;\n          if ( v29 > 72 )\n          {\n            if ( v29 == 75 )\n              goto LABEL_170;\n            if ( v29 <= 75 )\n            {\n              if ( v29 == 73 )\n              {\n                a2 = (__int64)v51;\n                memset(v51, 0, 0x38uLL);\n                v51[5] = 1LL;\n              }\n              goto LABEL_199;\n            }\n            if ( v29 == 76 )\n              goto LABEL_173;\n            goto LABEL_175;\n          }\n          if ( v29 != 70 )\n          {\n            if ( v29 <= 70 )\n            {\n              a2 = (__int64)v51;\n              memset(v51, 0, 0x38uLL);\n              v51[5] = *(v36 - 7);\n              goto LABEL_199;\n            }\nLABEL_184:\n            a2 = (__int64)v51;\n            memset(v51, 0, 0x38uLL);\n            v51[5] = *(v36 - 7);\n            v51[6] = *(v36 - 6);\n            goto LABEL_199;\n          }\n        }\n        a2 = (__int64)v51;\n        memset(v51, 0, 0x38uLL);\n        v51[5] = *(v36 - 6);\n        goto LABEL_199;\n      }\n      if ( v28 )\n        --v28;\n      v24 = -2;\n      v26 = v29;\n      v36 += 7;\n      v7 = v36;\n      *v36 = v44;\n      v7[1] = v45;\n      v7[2] = v46;\n      v7[3] = v47;\n      v7[4] = v48;\n      v7[5] = v49;\n      v7[6] = v50;\n    }\nLABEL_2:\n    v34 += 2;\n  }\n  sub_406196(a1, \"memory exhausted\");\n  v30 = 2;\nLABEL_226:\n  if ( v24 != -2 )\n  {\n    if ( (unsigned int)v24 > 0x115 )\n      v22 = 2;\n    else\n      v22 = (unsigned __int8)byte_40D3E0[v24];\n    v31 = v22;\n    sub_403707();\n  }\n  v36 -= 7 * v32;\n  for ( v34 -= 2 * v32; v34 != src; v34 -= 2 )\n  {\n    sub_403707();\n    v36 -= 7;\n  }\n  if ( src != v43 )\n    free(src);\n  return v30;\n}\n"], [4216390, "sub_405646", "__int64 __fastcall sub_405646(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, char a7, __int64 a8, unsigned __int64 a9)\n{\n  __int64 v9; // rax\n  __int64 v11; // [rsp+18h] [rbp-8h]\n\n  if ( a9 <= 2 && a2 < 0 )\n    a8 *= 100LL;\n  if ( a2 >= 0 )\n  {\n    if ( a7 )\n      v9 = -a2;\n    else\n      v9 = a2;\n    v11 = 60 * a8 + v9;\n  }\n  else\n  {\n    v11 = 60 * (a8 / 100) + a8 % 100;\n  }\n  if ( (int)abs32(v11) > 1440 )\n    ++*(_QWORD *)(a1 + 216);\n  return v11;\n}\n"], [4216700, "sub_40577C", "__int64 __fastcall sub_40577C(__int64 a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( a2 )\n  {\n    if ( a2 == 1 )\n    {\n      if ( a1 <= 0 || a1 > 11 )\n      {\n        if ( a1 == 12 )\n          result = 12LL;\n        else\n          result = 0xFFFFFFFFLL;\n      }\n      else\n      {\n        result = (unsigned int)(a1 + 12);\n      }\n    }\n    else if ( a1 < 0 || a1 > 23 )\n    {\n      result = 0xFFFFFFFFLL;\n    }\n    else\n    {\n      result = a1;\n    }\n  }\n  else if ( a1 > 0 && a1 <= 11 )\n  {\n    result = a1;\n  }\n  else if ( a1 == 12 )\n  {\n    result = 0LL;\n  }\n  else\n  {\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4216835, "sub_405803", "__int64 __fastcall sub_405803(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, int a7, __int64 a8, __int64 a9)\n{\n  __int64 v9; // rax\n  __int64 v11; // [rsp+0h] [rbp-8h]\n\n  v11 = a8;\n  if ( a8 < 0 )\n    return -a8;\n  if ( a9 == 2 )\n  {\n    if ( a8 > 68 )\n      v9 = 1900LL;\n    else\n      v9 = 2000LL;\n    v11 = v9 + a8;\n  }\n  return v11;\n}\n"], [4216899, "sub_405843", "const char **__fastcall sub_405843(__int64 a1, const char *a2)\n{\n  const char **i; // [rsp+18h] [rbp-8h]\n  const char **j; // [rsp+18h] [rbp-8h]\n  const char **k; // [rsp+18h] [rbp-8h]\n\n  for ( i = (const char **)&off_40DEC0; *i; i += 2 )\n  {\n    if ( !strcmp(a2, *i) )\n      return i;\n  }\n  for ( j = (const char **)(a1 + 224); *j; j += 2 )\n  {\n    if ( !strcmp(a2, *j) )\n      return j;\n  }\n  for ( k = (const char **)&off_40DFE0; *k; k += 2 )\n  {\n    if ( !strcmp(a2, *k) )\n      return k;\n  }\n  return 0LL;\n}\n"], [4217108, "sub_405914", "char **__fastcall sub_405914(__int64 a1, _BYTE *a2)\n{\n  char **result; // rax\n  bool v3; // al\n  bool v4; // al\n  char v5; // [rsp+1Dh] [rbp-23h]\n  bool v6; // [rsp+1Fh] [rbp-21h]\n  _BYTE *i; // [rsp+20h] [rbp-20h]\n  _BYTE *v8; // [rsp+20h] [rbp-20h]\n  _BYTE *v9; // [rsp+28h] [rbp-18h]\n  const char **j; // [rsp+30h] [rbp-10h]\n  const char **k; // [rsp+30h] [rbp-10h]\n  const char **v12; // [rsp+30h] [rbp-10h]\n  const char **l; // [rsp+30h] [rbp-10h]\n  const char **m; // [rsp+30h] [rbp-10h]\n  const char **n; // [rsp+30h] [rbp-10h]\n  __int16 **ii; // [rsp+30h] [rbp-10h]\n  const char **v17; // [rsp+30h] [rbp-10h]\n  size_t v18; // [rsp+38h] [rbp-8h]\n\n  for ( i = a2; *i; ++i )\n    *i = sub_40A5D0((unsigned __int8)*i);\n  for ( j = (const char **)&off_40D920; *j; j += 2 )\n  {\n    if ( !strcmp(a2, *j) )\n      return (char **)j;\n  }\n  v18 = strlen(a2);\n  v3 = v18 == 3 || v18 == 4 && a2[3] == 46;\n  v6 = v3;\n  for ( k = (const char **)&off_40DA40; *k; k += 2 )\n  {\n    if ( v6 )\n      v4 = strncmp(a2, *k, 3uLL) == 0;\n    else\n      v4 = strcmp(a2, *k) == 0;\n    if ( v4 )\n      return (char **)k;\n  }\n  v12 = sub_405843(a1, a2);\n  if ( v12 )\n    return (char **)v12;\n  if ( !strcmp(a2, \"DST\") )\n    return &off_40D980;\n  for ( l = (const char **)&off_40DC20; *l; l += 2 )\n  {\n    if ( !strcmp(a2, *l) )\n      return (char **)l;\n  }\n  if ( a2[v18 - 1] == 83 )\n  {\n    a2[v18 - 1] = 0;\n    for ( m = (const char **)&off_40DC20; *m; m += 2 )\n    {\n      if ( !strcmp(a2, *m) )\n        return (char **)m;\n    }\n    a2[v18 - 1] = 83;\n  }\n  for ( n = (const char **)&off_40DD60; *n; n += 2 )\n  {\n    if ( !strcmp(a2, *n) )\n      return (char **)n;\n  }\n  if ( v18 == 1 )\n  {\n    for ( ii = &off_40E320; *ii; ii += 2 )\n    {\n      if ( *a2 == *(_BYTE *)*ii )\n        return (char **)ii;\n    }\n  }\n  v5 = 0;\n  v9 = a2;\n  v8 = a2;\n  while ( 1 )\n  {\n    *v8 = *v9;\n    if ( !*v8 )\n      break;\n    if ( *v9 == 46 )\n      v5 = 1;\n    else\n      ++v8;\n    ++v9;\n  }\n  if ( v5 && (v17 = sub_405843(a1, a2)) != 0LL )\n    result = (char **)v17;\n  else\n    result = 0LL;\n  return result;\n}\n"], [4217915, "sub_405C3B", "__int64 __fastcall sub_405C3B(__int64 *a1, unsigned __int8 **a2)\n{\n  int v2; // eax\n  __int64 v3; // rdx\n  __int64 result; // rax\n  char *v5; // rax\n  char *v6; // rax\n  char *v7; // rax\n  char *v8; // rax\n  unsigned __int8 *v9; // rax\n  unsigned __int8 v10; // [rsp+13h] [rbp-7Dh]\n  unsigned __int8 v11; // [rsp+13h] [rbp-7Dh]\n  int v12; // [rsp+14h] [rbp-7Ch]\n  int v13; // [rsp+18h] [rbp-78h]\n  int j; // [rsp+1Ch] [rbp-74h]\n  __int64 v15; // [rsp+20h] [rbp-70h]\n  unsigned __int8 *v16; // [rsp+28h] [rbp-68h]\n  unsigned __int8 *v17; // [rsp+28h] [rbp-68h]\n  unsigned __int64 i; // [rsp+30h] [rbp-60h]\n  __int64 v19; // [rsp+38h] [rbp-58h]\n  __int64 v20; // [rsp+40h] [rbp-50h]\n  char *v21; // [rsp+48h] [rbp-48h]\n  char **v22; // [rsp+50h] [rbp-40h]\n  __int64 v23; // [rsp+58h] [rbp-38h]\n  char v24[24]; // [rsp+60h] [rbp-30h] BYREF\n  unsigned __int64 v25; // [rsp+78h] [rbp-18h]\n\n  v25 = __readfsqword(0x28u);\n  while ( 1 )\n  {\nLABEL_3:\n    while ( 1 )\n    {\n      v10 = **a2;\n      if ( !(unsigned __int8)sub_40A516(v10) )\n        break;\n      ++*a2;\n    }\n    if ( (unsigned int)v10 - 48 > 9 && v10 != 45 && v10 != 43 )\n    {\n      if ( (unsigned __int8)sub_40A3C6(v10) )\n      {\n        v21 = v24;\n        do\n        {\n          if ( (unsigned __int64)(v21 - v24) <= 0x12 )\n          {\n            v7 = v21++;\n            *v7 = v10;\n          }\n          v10 = *++*a2;\n        }\n        while ( (unsigned __int8)sub_40A3C6(v10) || v10 == 46 );\n        *v21 = 0;\n        v22 = sub_405914((__int64)a2, v24);\n        if ( v22 )\n        {\n          *a1 = *((int *)v22 + 3);\n          result = *((unsigned int *)v22 + 2);\n        }\n        else\n        {\n          result = 63LL;\n        }\n      }\n      else if ( v10 == 40 )\n      {\n        v15 = 0LL;\n        while ( 1 )\n        {\n          v9 = (*a2)++;\n          v11 = *v9;\n          if ( !*v9 )\n            break;\n          if ( v11 == 40 )\n          {\n            ++v15;\n          }\n          else if ( v11 == 41 )\n          {\n            --v15;\n          }\n          if ( !v15 )\n            goto LABEL_3;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        v8 = (char *)(*a2)++;\n        result = (unsigned int)*v8;\n      }\n      return result;\n    }\n    if ( v10 != 45 && v10 != 43 )\n      break;\n    if ( v10 == 45 )\n      v2 = -1;\n    else\n      v2 = 1;\n    v12 = v2;\n    do\n      v10 = *++*a2;\n    while ( (unsigned __int8)sub_40A516(v10) );\n    if ( (unsigned int)v10 - 48 <= 9 )\n      goto LABEL_17;\n  }\n  v12 = 0;\nLABEL_17:\n  v16 = *a2;\n  for ( i = 0LL; ; i = 10 * v23 )\n  {\n    v3 = v10 - 48;\n    v23 = v3 + i;\n    if ( v3 + i < i )\n      return 63LL;\n    v10 = *++v16;\n    if ( (unsigned int)*v16 - 48 > 9 )\n      break;\n    if ( (unsigned __int64)v23 > 0x1999999999999999LL )\n      return 63LL;\n  }\n  if ( (v10 == 46 || v10 == 44) && (unsigned int)((char)v16[1] - 48) <= 9 )\n  {\n    if ( v12 >= 0 )\n    {\n      v19 = v3 + i;\n      if ( v23 < 0 )\n        return 63LL;\n      v20 = v3 + i;\n    }\n    else\n    {\n      v19 = -v23;\n      if ( -v23 >= 0 && v23 != 0 )\n        return 63LL;\n      v20 = v3 + i;\n    }\n    if ( v23 != v20 )\n      return 63LL;\n    v5 = (char *)(v16 + 1);\n    v17 = v16 + 2;\n    v13 = *v5 - 48;\n    for ( j = 2; j <= 9; ++j )\n    {\n      v13 *= 10;\n      if ( (unsigned int)((char)*v17 - 48) <= 9 )\n      {\n        v6 = (char *)v17++;\n        v13 += *v6 - 48;\n      }\n    }\n    if ( v12 < 0 )\n    {\n      while ( (unsigned int)((char)*v17 - 48) <= 9 )\n      {\n        if ( *v17 != 48 )\n        {\n          ++v13;\n          break;\n        }\n        ++v17;\n      }\n    }\n    while ( (unsigned int)((char)*v17 - 48) <= 9 )\n      ++v17;\n    if ( v12 < 0 && v13 )\n    {\n      if ( --v19 >= 0 )\n        return 63LL;\n      v13 = 1000000000 - v13;\n    }\n    *a1 = v19;\n    a1[1] = v13;\n    *a2 = v17;\n    if ( v12 )\n      result = 276LL;\n    else\n      result = 277LL;\n  }\n  else\n  {\n    *(_BYTE *)a1 = v12 < 0;\n    if ( v12 >= 0 )\n    {\n      a1[1] = v23;\n      if ( a1[1] < 0 )\n        return 63LL;\n    }\n    else\n    {\n      a1[1] = -v23;\n      if ( a1[1] > 0 )\n        return 63LL;\n    }\n    a1[2] = v16 - *a2;\n    *a2 = v16;\n    if ( v12 )\n      result = 274LL;\n    else\n      result = 275LL;\n  }\n  return result;\n}\n"], [4219286, "sub_406196", "__int64 sub_406196()\n{\n  return 0LL;\n}\n"], [4219305, "sub_4061A9", "bool __fastcall sub_4061A9(_DWORD *a1, struct tm *a2, time_t a3)\n{\n  bool result; // al\n  time_t timer; // [rsp+8h] [rbp-18h] BYREF\n  struct tm *v5; // [rsp+10h] [rbp-10h]\n  _DWORD *v6; // [rsp+18h] [rbp-8h]\n\n  v6 = a1;\n  v5 = a2;\n  timer = a3;\n  if ( a3 != -1 || (v5 = localtime(&timer)) != 0LL )\n    result = (v6[4] ^ v5->tm_mon | v6[3] ^ v5->tm_mday | v6[2] ^ v5->tm_hour | v6[1] ^ v5->tm_min | v5->tm_sec ^ *v6 | v6[5] ^ v5->tm_year) == 0;\n  else\n    result = 0;\n  return result;\n}\n"], [4219478, "sub_406256", "const char *__fastcall sub_406256(void *a1)\n{\n  const char *v1; // rax\n  const char *s; // [rsp+10h] [rbp-10h]\n  size_t n; // [rsp+18h] [rbp-8h]\n\n  s = getenv(\"TZ\");\n  if ( s )\n  {\n    n = strlen(s) + 1;\n    if ( n > 0x64 )\n      v1 = (const char *)sub_409C9D(s, n);\n    else\n      v1 = (const char *)memcpy(a1, s, n);\n    s = v1;\n  }\n  return s;\n}\n"], [4219592, "sub_4062C8", "_BOOL8 __fastcall sub_4062C8(_QWORD *a1, const char *a2, struct timespec *a3)\n{\n  __int64 v4; // r8\n  __int64 v5; // r9\n  char *v6; // rax\n  char *v7; // rax\n  char *v8; // rsi\n  __int64 v9; // rdx\n  __int64 v10; // rcx\n  __int64 v11; // r8\n  __int64 v12; // r9\n  __int64 v13; // rdx\n  __int64 v14; // rcx\n  const char *v15; // rax\n  _BOOL4 v16; // eax\n  bool v17; // al\n  struct timespec *timer; // [rsp+18h] [rbp-3A8h]\n  char v20; // [rsp+3Fh] [rbp-381h]\n  bool v21; // [rsp+40h] [rbp-380h]\n  bool v22; // [rsp+43h] [rbp-37Dh]\n  int j; // [rsp+44h] [rbp-37Ch]\n  time_t v24; // [rsp+58h] [rbp-368h]\n  time_t v25; // [rsp+58h] [rbp-368h]\n  char *ptr; // [rsp+60h] [rbp-360h]\n  unsigned __int64 v27; // [rsp+68h] [rbp-358h]\n  const char *i; // [rsp+70h] [rbp-350h]\n  const char *v29; // [rsp+70h] [rbp-350h]\n  char *v30; // [rsp+78h] [rbp-348h]\n  __int64 v31; // [rsp+80h] [rbp-340h]\n  struct tm *v32; // [rsp+88h] [rbp-338h]\n  const char *v33; // [rsp+90h] [rbp-330h]\n  char *value; // [rsp+98h] [rbp-328h]\n  struct tm *v35; // [rsp+A0h] [rbp-320h]\n  __int64 v36; // [rsp+A8h] [rbp-318h]\n  signed __int64 v37; // [rsp+B0h] [rbp-310h]\n  __int64 v38; // [rsp+D8h] [rbp-2E8h]\n  __int64 v39; // [rsp+118h] [rbp-2A8h]\n  struct timespec v40; // [rsp+130h] [rbp-290h] BYREF\n  struct tm tp; // [rsp+140h] [rbp-280h] BYREF\n  struct tm v42; // [rsp+180h] [rbp-240h] BYREF\n  const char *v43; // [rsp+1C0h] [rbp-200h] BYREF\n  __int64 v44; // [rsp+1C8h] [rbp-1F8h]\n  int v45; // [rsp+1D0h] [rbp-1F0h]\n  int v46; // [rsp+1D4h] [rbp-1ECh]\n  __int64 v47; // [rsp+1D8h] [rbp-1E8h]\n  int v48; // [rsp+1E0h] [rbp-1E0h]\n  __int64 v49; // [rsp+1E8h] [rbp-1D8h]\n  __int64 v50; // [rsp+1F0h] [rbp-1D0h]\n  __int64 v51; // [rsp+1F8h] [rbp-1C8h]\n  __int64 v52; // [rsp+200h] [rbp-1C0h]\n  __int64 v53; // [rsp+208h] [rbp-1B8h]\n  __int64 v54; // [rsp+210h] [rbp-1B0h]\n  __int64 v55; // [rsp+218h] [rbp-1A8h]\n  __int64 v56; // [rsp+220h] [rbp-1A0h]\n  __int64 v57; // [rsp+228h] [rbp-198h]\n  __int64 v58[7]; // [rsp+230h] [rbp-190h] BYREF\n  char v59; // [rsp+268h] [rbp-158h]\n  char v60; // [rsp+269h] [rbp-157h]\n  __int64 v61; // [rsp+270h] [rbp-150h]\n  __int64 v62; // [rsp+278h] [rbp-148h]\n  __int64 v63; // [rsp+280h] [rbp-140h]\n  __int64 v64; // [rsp+288h] [rbp-138h]\n  __int64 v65; // [rsp+290h] [rbp-130h]\n  __int64 v66; // [rsp+298h] [rbp-128h]\n  char *v67; // [rsp+2A0h] [rbp-120h]\n  int v68; // [rsp+2A8h] [rbp-118h]\n  int v69; // [rsp+2ACh] [rbp-114h]\n  char *s2; // [rsp+2B0h] [rbp-110h]\n  int v71; // [rsp+2B8h] [rbp-108h]\n  int v72; // [rsp+2BCh] [rbp-104h]\n  __int64 v73; // [rsp+2C0h] [rbp-100h]\n  char v74[112]; // [rsp+2D0h] [rbp-F0h] BYREF\n  char s[104]; // [rsp+340h] [rbp-80h] BYREF\n  unsigned __int64 v76; // [rsp+3A8h] [rbp-18h]\n\n  timer = a3;\n  v76 = __readfsqword(0x28u);\n  v20 = 0;\n  ptr = 0LL;\n  v21 = 1;\n  if ( !a3 )\n  {\n    sub_4032C4(&v40);\n    timer = &v40;\n  }\n  v24 = timer->tv_sec;\n  v31 = timer->tv_nsec;\n  v32 = localtime(&timer->tv_sec);\n  if ( !v32 )\n    return 0LL;\n  while ( (unsigned __int8)sub_40A516(*(unsigned __int8 *)a2) )\n    ++a2;\n  if ( !strncmp(a2, \"TZ=\\\"\", 4uLL) )\n  {\n    v33 = a2 + 4;\n    v27 = 1LL;\n    for ( i = a2 + 4; *i; ++i )\n    {\n      if ( *i == 92 )\n      {\n        if ( *++i != 92 && *i != 34 )\n          break;\n      }\n      else if ( *i == 34 )\n      {\n        free(ptr);\n        ptr = (char *)sub_406256(v74);\n        if ( v27 <= 0x64 )\n          v6 = s;\n        else\n          v6 = (char *)sub_409B79(v27);\n        value = v6;\n        v30 = v6;\n        for ( i = v33; *i != 34; i = v29 + 1 )\n        {\n          v7 = v30++;\n          v29 = &i[*i == 92];\n          *v7 = *v29;\n        }\n        *v30 = 0;\n        v22 = setenv(\"TZ\", value, 1) == 0;\n        if ( v27 > 0x64 )\n          free(value);\n        if ( !v22 )\n          goto LABEL_79;\n        v20 = 1;\n        a2 = i + 1;\n      }\n      ++v27;\n    }\n  }\n  if ( !*a2 )\n    a2 = \"0\";\n  v43 = a2;\n  v50 = v32->tm_year;\n  v50 += 1900LL;\n  v51 = 0LL;\n  v52 = v32->tm_mon + 1;\n  v53 = v32->tm_mday;\n  v54 = v32->tm_hour;\n  v55 = v32->tm_min;\n  v56 = v32->tm_sec;\n  v57 = v31;\n  tp.tm_isdst = v32->tm_isdst;\n  v48 = 2;\n  v8 = (char *)v58;\n  v9 = 7LL;\n  memset(v58, 0, sizeof(v58));\n  v10 = 0LL;\n  v59 = 0;\n  v60 = 0;\n  v61 = 0LL;\n  v62 = 0LL;\n  v65 = 0LL;\n  v63 = 0LL;\n  v64 = 0LL;\n  v66 = 0LL;\n  v67 = (char *)v32->tm_zone;\n  v68 = 269;\n  v69 = v32->tm_isdst;\n  s2 = 0LL;\n  for ( j = 1; j <= 3; ++j )\n  {\n    *(_QWORD *)&v42.tm_sec = 7776000 * j + v24;\n    v35 = localtime((const time_t *)&v42.tm_sec);\n    if ( v35 )\n    {\n      if ( v35->tm_zone )\n      {\n        v9 = (unsigned int)v35->tm_isdst;\n        if ( (_DWORD)v9 != v69 )\n        {\n          s2 = (char *)v35->tm_zone;\n          v71 = 269;\n          v72 = v35->tm_isdst;\n          v73 = 0LL;\n          break;\n        }\n      }\n    }\n  }\n  if ( v67 )\n  {\n    if ( s2 )\n    {\n      v8 = s2;\n      if ( !strcmp(v67, s2) )\n      {\n        v69 = -1;\n        s2 = 0LL;\n      }\n    }\n  }\n  if ( (unsigned int)sub_40372C((__int64)&v43, (__int64)v8, v9, v10, v4, v5) )\n    goto LABEL_79;\n  if ( !v59 )\n  {\n    v14 = v64 | v62 | v61 | v65;\n    if ( (v14 | (unsigned __int64)(v63 + v66)) <= 1 )\n    {\n      tp.tm_year = sub_405803((__int64)&v43, (__int64)v8, v63, v14, v11, v12, v49, v50, v51) - 1900;\n      tp.tm_mon = v52 - 1;\n      tp.tm_mday = v53;\n      if ( !v65 && (!v60 || v61 || v62) )\n      {\n        tp.tm_sec = 0;\n        tp.tm_min = 0;\n        tp.tm_hour = 0;\n        v57 = 0LL;\n      }\n      else\n      {\n        tp.tm_hour = sub_40577C(v54, v48);\n        if ( tp.tm_hour < 0 )\n          goto LABEL_79;\n        tp.tm_min = v55;\n        tp.tm_sec = v56;\n      }\n      if ( v62 | v61 | v65 )\n        tp.tm_isdst = -1;\n      if ( v63 )\n        tp.tm_isdst = v46;\n      v42 = tp;\n      v25 = mktime(&tp);\n      if ( !sub_4061A9(&v42, &tp, v25) )\n      {\n        if ( !v66 )\n          goto LABEL_79;\n        v36 = v47;\n        v37 = abs64(v47);\n        if ( v20 != 1 )\n          ptr = (char *)sub_406256(v74);\n        v15 = v36 >= 0 ? \"-\" : \"\";\n        sprintf(s, \"XXX%s%ld:%02d\", v15, v37 / 60, (unsigned int)(v37 % 60));\n        if ( setenv(\"TZ\", s, 1) )\n          goto LABEL_79;\n        v20 = 1;\n        tp = v42;\n        v25 = mktime(&tp);\n        if ( !sub_4061A9(&v42, &tp, v25) )\n          goto LABEL_79;\n      }\n      if ( v62 && !v61 )\n      {\n        v16 = v44 > 0 && tp.tm_wday != v45;\n        tp.tm_mday += (v45 - tp.tm_wday + 7) % 7 + 7 * (v44 - v16);\n        tp.tm_isdst = -1;\n        v25 = mktime(&tp);\n        if ( v25 == -1 )\n          goto LABEL_79;\n      }\n      if ( v58[1] | v58[0] | v58[2] )\n      {\n        if ( (tp.tm_mon > tp.tm_mon + LODWORD(v58[1])) ^ (v58[1] < 0) | (v58[0] < 0) ^ (tp.tm_year > tp.tm_year + LODWORD(v58[0])) | (tp.tm_mday > tp.tm_mday + LODWORD(v58[2])) ^ (v58[2] < 0) )\n          goto LABEL_79;\n        tp.tm_year += LODWORD(v58[0]);\n        tp.tm_mon += LODWORD(v58[1]);\n        tp.tm_mday += LODWORD(v58[2]);\n        tp.tm_hour = v42.tm_hour;\n        *(_QWORD *)&tp.tm_sec = *(_QWORD *)&v42.tm_sec;\n        tp.tm_isdst = v42.tm_isdst;\n        v25 = mktime(&tp);\n        if ( v25 == -1 )\n          goto LABEL_79;\n      }\n      if ( v66 )\n      {\n        if ( v25 < v25 - (60 * v47 - tp.tm_gmtoff) != 60 * v47 - tp.tm_gmtoff < 0 )\n          goto LABEL_79;\n        v25 -= 60 * v47 - tp.tm_gmtoff;\n      }\n      v38 = ((v57 + v58[6]) % 1000000000 + 1000000000) % 1000000000;\n      v39 = (v57 + v58[6] - v38) / 1000000000;\n      if ( !((v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] + v39 < v25 + 3600 * v58[3] + 60 * v58[4] + v58[5]) ^ (unsigned int)(v39 < 0) | (v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] < v25 + 3600 * v58[3] + 60 * v58[4]) ^ (unsigned int)(v58[5] < 0) | (v25 + 3600 * v58[3] + 60 * v58[4] < v25 + 3600 * v58[3]) ^ (unsigned int)(60 * v58[4] < 0) | (v25 + 3600 * v58[3] < v25) ^ (unsigned int)(3600 * v58[3] < 0) | (60 * v58[4] / 60) ^ v58[4] | v58[3] ^ (3600 * v58[3] / 3600)) )\n      {\n        *a1 = v25 + 3600 * v58[3] + 60 * v58[4] + v58[5] + v39;\n        a1[1] = v38;\n        goto LABEL_80;\n      }\n    }\nLABEL_79:\n    v21 = 0;\n    goto LABEL_80;\n  }\n  v13 = v57;\n  *a1 = v56;\n  a1[1] = v13;\nLABEL_80:\n  if ( v20 )\n  {\n    if ( ptr )\n      v17 = setenv(\"TZ\", ptr, 1) == 0;\n    else\n      v17 = unsetenv(\"TZ\") == 0;\n    v21 = v21 && v17;\n  }\n  if ( ptr != v74 )\n    free(ptr);\n  return v21;\n}\n"], [4223701, "sub_4072D5", "__int64 __fastcall sub_4072D5(__int64 a1, _DWORD *a2, __int64 a3, char a4)\n{\n  time_t timer; // [rsp+20h] [rbp-10h] BYREF\n  struct tm *v6; // [rsp+28h] [rbp-8h]\n\n  if ( a3 == 1 )\n  {\n    *(_DWORD *)(a1 + 20) = *a2;\n    if ( (int)*a2 <= 68 )\n    {\n      if ( (a4 & 0x10) != 0 )\n        return 1LL;\n      *(_DWORD *)(a1 + 20) += 100;\n    }\n  }\n  else if ( a3 )\n  {\n    if ( a3 != 2 )\n      abort();\n    if ( (a4 & 4) == 0 )\n      return 1LL;\n    *(_DWORD *)(a1 + 20) = 100 * *a2 + a2[1] - 1900;\n  }\n  else\n  {\n    time(&timer);\n    v6 = localtime(&timer);\n    if ( !v6 )\n      return 1LL;\n    *(_DWORD *)(a1 + 20) = v6->tm_year;\n  }\n  return 0LL;\n}\n"], [4223943, "sub_4073C7", "__int64 __fastcall sub_4073C7(_DWORD *a1, const char *a2, char a3)\n{\n  size_t v3; // rax\n  _DWORD *v5; // rax\n  char *v7; // [rsp+28h] [rbp-48h]\n  char *v8; // [rsp+28h] [rbp-48h]\n  int *v9; // [rsp+30h] [rbp-40h]\n  _DWORD *v10; // [rsp+30h] [rbp-40h]\n  unsigned __int64 i; // [rsp+38h] [rbp-38h]\n  unsigned __int64 j; // [rsp+38h] [rbp-38h]\n  unsigned __int64 v13; // [rsp+40h] [rbp-30h]\n  size_t v14; // [rsp+48h] [rbp-28h]\n  int v15[8]; // [rsp+50h] [rbp-20h] BYREF\n\n  v7 = 0LL;\n  v14 = strlen(a2);\n  if ( (a3 & 8) != 0 && (v7 = strchr(a2, 46)) != 0LL )\n    v3 = v7 - a2;\n  else\n    v3 = v14;\n  v13 = v3;\n  if ( v3 != 8 && v13 != 10 && v13 != 12 )\n    return 1LL;\n  if ( v7 )\n  {\n    if ( (a3 & 8) == 0 )\n      return 1LL;\n    if ( v14 - v13 != 3 )\n      return 1LL;\n  }\n  for ( i = 0LL; i < v13; ++i )\n  {\n    if ( (unsigned int)(a2[i] - 48) > 9 )\n      return 1LL;\n  }\n  v13 >>= 1;\n  for ( j = 0LL; j < v13; ++j )\n    v15[j] = 10 * (a2[2 * j] - 48) + a2[2 * j + 1] - 48;\n  v9 = v15;\n  if ( (a3 & 1) != 0 )\n  {\n    if ( (unsigned int)sub_4072D5((__int64)a1, v15, v13 - 4, a3) )\n      return 1LL;\n    v9 = &v15[v13 - 4];\n    v13 = 4LL;\n  }\n  a1[4] = *v9 - 1;\n  a1[3] = v9[1];\n  a1[2] = v9[2];\n  v5 = v9 + 3;\n  v10 = v9 + 4;\n  a1[1] = *v5;\n  v13 -= 4LL;\n  if ( (a3 & 2) != 0 && (unsigned int)sub_4072D5((__int64)a1, v10, v13, a3) )\n    return 1LL;\n  if ( v7 )\n  {\n    v8 = v7 + 1;\n    if ( (unsigned int)(*v8 - 48) > 9 || (unsigned int)(v8[1] - 48) > 9 )\n      return 1LL;\n    *a1 = 10 * (*v8 - 48) + v8[1] - 48;\n  }\n  else\n  {\n    *a1 = 0;\n  }\n  return 0LL;\n}\n"], [4224664, "sub_407698", "__int64 __fastcall sub_407698(time_t *a1, const char *a2, unsigned int a3)\n{\n  time_t timer; // [rsp+20h] [rbp-D0h] BYREF\n  char v6[8]; // [rsp+28h] [rbp-C8h] BYREF\n  struct tm *v7; // [rsp+30h] [rbp-C0h]\n  char *v8; // [rsp+38h] [rbp-B8h]\n  __int64 v9; // [rsp+40h] [rbp-B0h] BYREF\n  __int64 v10; // [rsp+48h] [rbp-A8h]\n  __int64 v11; // [rsp+50h] [rbp-A0h]\n  __int64 v12; // [rsp+58h] [rbp-98h]\n  __int64 v13; // [rsp+60h] [rbp-90h]\n  __int64 v14; // [rsp+68h] [rbp-88h]\n  const char *v15; // [rsp+70h] [rbp-80h]\n  struct tm tp; // [rsp+80h] [rbp-70h] BYREF\n  char dest[24]; // [rsp+C0h] [rbp-30h] BYREF\n  unsigned __int64 v18; // [rsp+D8h] [rbp-18h]\n\n  v18 = __readfsqword(0x28u);\n  if ( (unsigned int)sub_4073C7(&v9, a2, a3) )\n    return 0LL;\n  *(_QWORD *)&tp.tm_sec = v9;\n  *(_QWORD *)&tp.tm_hour = v10;\n  *(_QWORD *)&tp.tm_mon = v11;\n  *(_QWORD *)&tp.tm_wday = v12;\n  *(&tp.tm_isdst + 1) = HIDWORD(v13);\n  tp.tm_gmtoff = v14;\n  tp.tm_zone = v15;\n  tp.tm_isdst = -1;\n  timer = mktime(&tp);\n  if ( timer == -1 )\n  {\n    v7 = localtime(&timer);\n    if ( !v7 )\n      return 0LL;\n  }\n  else\n  {\n    v7 = &tp;\n  }\n  if ( !(HIDWORD(v9) ^ v7->tm_min | (unsigned int)v10 ^ v7->tm_hour | HIDWORD(v10) ^ v7->tm_mday | (unsigned int)v11 ^ v7->tm_mon | v7->tm_year ^ HIDWORD(v11) | (unsigned int)v9 ^ v7->tm_sec) )\n    goto LABEL_12;\n  if ( (_DWORD)v9 != 60 )\n    return 0LL;\n  v8 = stpcpy(dest, a2);\n  strcpy(v8 - 2, \"59\");\n  if ( (unsigned __int8)sub_407698(v6, dest, a3) != 1 )\n    return 0LL;\nLABEL_12:\n  *a1 = timer;\n  return 1LL;\n}\n"], [4225208, "sub_4078B8", "__int64 sub_4078B8()\n{\n  __int64 result; // rax\n  char *endptr; // [rsp+0h] [rbp-20h] BYREF\n  __int64 v2; // [rsp+8h] [rbp-18h]\n  char *nptr; // [rsp+10h] [rbp-10h]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v2 = 200809LL;\n  nptr = getenv(\"_POSIX2_VERSION\");\n  if ( nptr )\n  {\n    if ( *nptr )\n    {\n      v4 = strtol(nptr, &endptr, 10);\n      if ( !*endptr )\n        v2 = v4;\n    }\n  }\n  if ( v2 < (__int64)0xFFFFFFFF80000000LL )\n    return 0x80000000LL;\n  result = 0x7FFFFFFFLL;\n  if ( v2 <= 0x7FFFFFFF )\n    result = v2;\n  return result;\n}\n"], [4225340, "sub_40793C", "char *__fastcall sub_40793C(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_6113D8 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4225571, "sub_407A23", "__int64 __fastcall sub_407A23(unsigned int a1, __int64 a2)\n{\n  return sub_408ED2(a1, 6LL, a2);\n}\n"], [4225607, "sub_407A47", "__int64 __fastcall sub_407A47(__int64 a1)\n{\n  return sub_407A23(0, a1);\n}\n"], [4225638, "sub_407A66", "__int64 __fastcall sub_407A66(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6113E0;\n  v4 = sub_409C9D(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4225711, "sub_407AAF", "__int64 __fastcall sub_407AAF(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_6113E0;\n  return *(unsigned int *)v1;\n}\n"], [4225741, "sub_407ACD", "__int64 *__fastcall sub_407ACD(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_6113E0;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4225777, "sub_407AF1", "__int64 __fastcall sub_407AF1(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_6113E0;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4225913, "sub_407B79", "__int64 __fastcall sub_407B79(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_6113E0;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4225964, "sub_407BAC", "__int64 *__fastcall sub_407BAC(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_6113E0;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4226054, "sub_407C06", "_QWORD *__fastcall sub_407C06(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4226174, "sub_407C7E", "char *__fastcall sub_407C7E(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)L\"\\\"`'\";\n  return v3;\n}\n"], [4226235, "sub_407CBB", "unsigned __int64 __fastcall sub_407CBB(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_407C7E((const char *)L\"`'\", a5);\n        a9 = sub_407C7E((const char *)L\"'\", a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)L\"\\\"`'\";\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(L\"\\\"`'\" + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_407CBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4229382, "sub_408906", "unsigned __int64 __fastcall sub_408906(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_6113E0;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_407CBB(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4229542, "sub_4089A6", "__int64 __fastcall sub_4089A6(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4089D8(a1, a2, 0LL, a3);\n}\n"], [4229592, "sub_4089D8", "__int64 __fastcall sub_4089D8(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_6113E0;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_407CBB(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_409B5F(v10);\n  sub_407CBB(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4229892, "sub_408B04", "void sub_408B04()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_611300;\n  for ( i = 1; i < dword_6112E0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_611420 )\n  {\n    free(ptr[1]);\n    qword_6112F0 = 256LL;\n    off_6112F8 = &unk_611420;\n  }\n  if ( ptr != (void **)&qword_6112F0 )\n  {\n    free(ptr);\n    off_611300 = &qword_6112F0;\n  }\n  dword_6112E0 = 1;\n}\n"], [4230063, "sub_408BAF", "void *__fastcall sub_408BAF(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_611300;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6112E0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_611300 == &qword_6112F0;\n    if ( off_611300 == &qword_6112F0 )\n      v4 = 0LL;\n    else\n      v4 = off_611300;\n    v12 = (__int64 *)sub_409BAE(v4, 16 * v14);\n    off_611300 = v12;\n    if ( v9 )\n    {\n      v5 = off_6112F8;\n      *v12 = qword_6112F0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6112E0], 0, 16 * (v14 - (unsigned int)dword_6112E0));\n    dword_6112E0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_407CBB((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_611420 )\n      free(ptr);\n    ptr = (void *)sub_409B5F(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_407CBB((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4230709, "sub_408E35", "void *__fastcall sub_408E35(int a1, __int64 a2)\n{\n  return sub_408BAF(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_6113E0);\n}\n"], [4230752, "sub_408E60", "void *__fastcall sub_408E60(int a1, __int64 a2, size_t a3)\n{\n  return sub_408BAF(a1, a2, a3, (__int64)&qword_6113E0);\n}\n"], [4230796, "sub_408E8C", "void *__fastcall sub_408E8C(__int64 a1)\n{\n  return sub_408E35(0, a1);\n}\n"], [4230827, "sub_408EAB", "void *__fastcall sub_408EAB(__int64 a1, size_t a2)\n{\n  return sub_408E60(0, a1, a2);\n}\n"], [4230866, "sub_408ED2", "void *__fastcall sub_408ED2(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_407C06(v5, a2);\n  return sub_408BAF(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4230931, "sub_408F13", "void *__fastcall sub_408F13(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_407C06(v7, a2);\n  return sub_408BAF(a1, a3, a4, (__int64)v7);\n}\n"], [4230994, "sub_408F52", "void *__fastcall sub_408F52(int a1, __int64 a2)\n{\n  return sub_408ED2(0, a1, a2);\n}\n"], [4231030, "sub_408F76", "void *__fastcall sub_408F76(int a1, __int64 a2, size_t a3)\n{\n  return sub_408F13(0, a1, a2, a3);\n}\n"], [4231074, "sub_408FA2", "void *__fastcall sub_408FA2(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_6113E0;\n  v4[1] = qword_6113E8;\n  v4[2] = qword_6113F0;\n  v4[3] = qword_6113F8;\n  v4[4] = qword_611400;\n  v4[5] = qword_611408;\n  v4[6] = qword_611410;\n  sub_407AF1(v4, a3, 1);\n  return sub_408BAF(0, a1, a2, (__int64)v4);\n}\n"], [4231222, "sub_409036", "void *__fastcall sub_409036(__int64 a1, unsigned __int8 a2)\n{\n  return sub_408FA2(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4231264, "sub_409060", "void *__fastcall sub_409060(__int64 a1)\n{\n  return sub_409036(a1, 0x3Au);\n}\n"], [4231295, "sub_40907F", "void *__fastcall sub_40907F(__int64 a1, size_t a2)\n{\n  return sub_408FA2(a1, a2, 0x3Au);\n}\n"], [4231337, "sub_4090A9", "__int64 __fastcall sub_4090A9(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4090DF(a1, a2, a3, a4, -1LL);\n}\n"], [4231391, "sub_4090DF", "void *__fastcall sub_4090DF(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_6113E0;\n  v8[1] = qword_6113E8;\n  v8[2] = qword_6113F0;\n  v8[3] = qword_6113F8;\n  v8[4] = qword_611400;\n  v8[5] = qword_611408;\n  v8[6] = qword_611410;\n  sub_407BAC(v8, a2, a3);\n  return sub_408BAF(a1, a4, a5, (__int64)v8);\n}\n"], [4231542, "sub_409176", "__int64 __fastcall sub_409176(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4090A9(0, a1, a2, a3);\n}\n"], [4231589, "sub_4091A5", "void *__fastcall sub_4091A5(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4090DF(0, a1, a2, a3, a4);\n}\n"], [4231647, "sub_4091DF", "int __fastcall sub_4091DF(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4233162, "sub_4097CA", "int __fastcall sub_4097CA(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_4091DF(a1, a2, a3, a4, a5, i);\n}\n"], [4233272, "sub_409838", "int __fastcall sub_409838(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_4091DF(a1, a2, a3, a4, v8, i);\n}\n"], [4233489, "sub_409911", "int sub_409911(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_409838(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4233671, "sub_4099C7", "int sub_4099C7()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4233776, "sub_409A30", "__int64 __fastcall sub_409A30(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_409CFB(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_409B79(a2 * a1);\n}\n"], [4233838, "sub_409A6E", "__int64 __fastcall sub_409A6E(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_409CFB(a1, a2, v4);\n  return sub_409BAE(a1, a3 * a2);\n}\n"], [4233914, "sub_409ABA", "__int64 __fastcall sub_409ABA(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_409CFB(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_409BAE(a1, a3 * v6);\n}\n"], [4234079, "sub_409B5F", "__int64 __fastcall sub_409B5F(__int64 a1)\n{\n  return sub_409B79(a1);\n}\n"], [4234105, "sub_409B79", "void *__fastcall sub_409B79(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_409CFB(a1, a2, v2);\n  return v4;\n}\n"], [4234158, "sub_409BAE", "void *__fastcall sub_409BAE(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_409CFB(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4234255, "sub_409C0F", "__int64 __fastcall sub_409C0F(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_409ABA(a1, a2, 1uLL);\n}\n"], [4234297, "sub_409C39", "void *__fastcall sub_409C39(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_409B79(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4234340, "sub_409C64", "void *__fastcall sub_409C64(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_409CFB(a1, a2, v2);\n  return v4;\n}\n"], [4234397, "sub_409C9D", "void *__fastcall sub_409C9D(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_409B79(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4234446, "sub_409CCE", "void *__fastcall sub_409CCE(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_409C9D(a1, v1 + 1);\n}\n"], [4234491, "sub_409CFB", "void __noreturn sub_409CFB()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4234544, "sub_409D30", "__int64 __fastcall sub_409D30(unsigned int a1, __int64 a2)\n{\n  return sub_40AAD5(a1, 0LL, a2);\n}\n"], [4234580, "sub_409D54", "__int64 __fastcall sub_409D54(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4234602, "sub_409D6A", "__int64 __fastcall sub_409D6A(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4234624, "sub_409D80", "__int64 __fastcall sub_409D80(unsigned int a1, char *a2, struct timespec *a3, unsigned int a4)\n{\n  __int64 result; // rax\n  __int64 v5; // rdx\n  __int64 v6; // rdx\n  unsigned int v7; // eax\n  struct timespec *times; // [rsp+8h] [rbp-D8h]\n  unsigned int v10; // [rsp+2Ch] [rbp-B4h]\n  __int64 v11[2]; // [rsp+30h] [rbp-B0h] BYREF\n  __int64 v12; // [rsp+40h] [rbp-A0h]\n  __int64 v13; // [rsp+48h] [rbp-98h]\n  struct stat stat_buf; // [rsp+50h] [rbp-90h] BYREF\n\n  times = a3;\n  if ( dword_611520 < 0 )\n    goto LABEL_25;\n  if ( a3 && (a3->tv_nsec == 1073741822 || a3[1].tv_nsec == 1073741822) )\n  {\n    if ( (unsigned int)sub_40C880(a1, a2, &stat_buf, a4) )\n      return 0xFFFFFFFFLL;\n    if ( times->tv_nsec == 1073741822 && times[1].tv_nsec == 1073741822 )\n      return 0LL;\n    if ( times->tv_nsec == 1073741822 )\n    {\n      v11[0] = sub_409D54((__int64)&stat_buf);\n    }\n    else\n    {\n      v5 = times->tv_nsec;\n      v11[0] = times->tv_sec;\n    }\n    v11[1] = v5;\n    if ( times[1].tv_nsec == 1073741822 )\n    {\n      v12 = sub_409D6A((__int64)&stat_buf);\n    }\n    else\n    {\n      v6 = times[1].tv_nsec;\n      v12 = times[1].tv_sec;\n    }\n    v13 = v6;\n    times = (struct timespec *)v11;\n  }\n  v10 = utimensat(a1, a2, times, a4);\n  if ( v10 == -1 && *__errno_location() == 22 )\n  {\n    v7 = a4;\n    BYTE1(v7) = BYTE1(a4) & 0xFE;\n    if ( v7 )\n      return 0xFFFFFFFFLL;\n  }\n  if ( v10 && (*__errno_location() == 38 || *__errno_location() == 22) )\n  {\nLABEL_25:\n    if ( dword_611520 >= 0 && *__errno_location() == 38 )\n      dword_611520 = -1;\n    result = sub_409FC8(a1, a2, times, a4);\n  }\n  else\n  {\n    dword_611520 = 1;\n    result = v10;\n  }\n  return result;\n}\n"], [4235208, "sub_409FC8", "__int64 __fastcall sub_409FC8(int a1, _BYTE *a2, __int64 a3, int a4)\n{\n  int v4; // eax\n  __int64 result; // rax\n  unsigned int v6; // eax\n  int *v7; // rax\n  unsigned int v8; // eax\n  int v9; // eax\n  int *v10; // rax\n  int v12; // [rsp+18h] [rbp-1018h]\n  unsigned int v13; // [rsp+28h] [rbp-1008h]\n  int v14; // [rsp+2Ch] [rbp-1004h]\n  int v15; // [rsp+30h] [rbp-1000h]\n  int v16; // [rsp+30h] [rbp-1000h]\n  unsigned int v17; // [rsp+34h] [rbp-FFCh]\n  char *ptr; // [rsp+38h] [rbp-FF8h]\n  int v19[4]; // [rsp+40h] [rbp-FF0h] BYREF\n  char v20[4040]; // [rsp+50h] [rbp-FE0h] BYREF\n  unsigned __int64 v21; // [rsp+1018h] [rbp-18h]\n\n  v12 = a4;\n  v21 = __readfsqword(0x28u);\n  v4 = a4;\n  BYTE1(v4) = BYTE1(a4) & 0xFE;\n  if ( v4 )\n  {\n    *__errno_location() = 22;\n    return 0xFFFFFFFFLL;\n  }\n  if ( a1 == -100 || *a2 == 47 )\n  {\n    if ( a4 == 256 )\n      result = sub_40B14B(a2, a3);\n    else\n      result = sub_40B124(a2, a3);\n  }\n  else\n  {\n    ptr = (char *)sub_40C17F(v20, (unsigned int)a1, a2);\n    if ( !ptr )\n      goto LABEL_43;\n    if ( v12 == 256 )\n      v6 = sub_40B14B(ptr, a3);\n    else\n      v6 = sub_40B124(ptr, a3);\n    v13 = v6;\n    v14 = *__errno_location();\n    if ( ptr != v20 )\n      free(ptr);\n    if ( v13 != -1 )\n      return v13;\n    if ( v14 == 20 || v14 == 2 || v14 == 1 || v14 == 13 || v14 == 38 || v14 == 95 )\n    {\nLABEL_43:\n      if ( (unsigned int)sub_40A6E3(v19) )\n      {\n        v7 = __errno_location();\n        sub_40A67B((unsigned int)*v7);\n      }\n      if ( a1 >= 0 && v19[0] == a1 )\n      {\n        sub_40A7A1(v19);\n        *__errno_location() = 9;\n        result = 0xFFFFFFFFLL;\n      }\n      else if ( fchdir(a1) )\n      {\n        v15 = *__errno_location();\n        sub_40A7A1(v19);\n        *__errno_location() = v15;\n        result = 0xFFFFFFFFLL;\n      }\n      else\n      {\n        if ( v12 == 256 )\n          v8 = sub_40B14B(a2, a3);\n        else\n          v8 = sub_40B124(a2, a3);\n        v17 = v8;\n        if ( v8 == -1 )\n          v9 = *__errno_location();\n        else\n          v9 = 0;\n        v16 = v9;\n        if ( (unsigned int)sub_40A76A(v19) )\n        {\n          v10 = __errno_location();\n          sub_40A6AF((unsigned int)*v10);\n        }\n        sub_40A7A1(v19);\n        if ( v16 )\n          *__errno_location() = v16;\n        result = v17;\n      }\n    }\n    else\n    {\n      *__errno_location() = v14;\n      result = 0xFFFFFFFFLL;\n    }\n  }\n  return result;\n}\n"], [4236015, "sub_40A2EF", "__int64 __fastcall sub_40A2EF(int a1, const char *a2, int a3, unsigned int a4)\n{\n  int fd; // [rsp+24h] [rbp-Ch]\n  unsigned int v6; // [rsp+28h] [rbp-8h]\n  int v7; // [rsp+2Ch] [rbp-4h]\n\n  fd = open(a2, a3, a4);\n  if ( fd == a1 || fd < 0 )\n    return (unsigned int)fd;\n  v6 = dup2(fd, a1);\n  v7 = *__errno_location();\n  close(fd);\n  *__errno_location() = v7;\n  return v6;\n}\n"], [4236136, "sub_40A368", "_BOOL8 __fastcall sub_40A368(int a1)\n{\n  return a1 >= 0 && a1 <= 127;\n}\n"], [4236172, "sub_40A38C", "_BOOL8 __fastcall sub_40A38C(int a1)\n{\n  return a1 > 47 && a1 <= 57 || (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 90;\n}\n"], [4236230, "sub_40A3C6", "_BOOL8 __fastcall sub_40A3C6(int a1)\n{\n  return (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 90;\n}\n"], [4236276, "sub_40A3F4", "_BOOL8 __fastcall sub_40A3F4(int a1)\n{\n  return a1 == 32 || a1 == 9;\n}\n"], [4236312, "sub_40A418", "_BOOL8 __fastcall sub_40A418(int a1)\n{\n  return (a1 & 0xFFFFFFE0) == 0 || a1 == 127;\n}\n"], [4236352, "sub_40A440", "_BOOL8 __fastcall sub_40A440(int a1)\n{\n  return a1 > 47 && a1 <= 57;\n}\n"], [4236388, "sub_40A464", "_BOOL8 __fastcall sub_40A464(int a1)\n{\n  return a1 > 96 && a1 <= 122;\n}\n"], [4236424, "sub_40A488", "_BOOL8 __fastcall sub_40A488(int a1)\n{\n  return a1 > 32 && a1 <= 126;\n}\n"], [4236460, "sub_40A4AC", "_BOOL8 __fastcall sub_40A4AC(int a1)\n{\n  return a1 > 31 && a1 <= 126;\n}\n"], [4236496, "sub_40A4D0", "_BOOL8 __fastcall sub_40A4D0(int a1)\n{\n  return a1 > 32 && a1 <= 126 && (a1 <= 47 || a1 > 57) && ((int)(a1 & 0xFFFFFFDF) <= 64 || (int)(a1 & 0xFFFFFFDF) > 90);\n}\n"], [4236566, "sub_40A516", "_BOOL8 __fastcall sub_40A516(int a1)\n{\n  return a1 == 32 || a1 == 9 || a1 == 10 || a1 == 11 || a1 == 12 || a1 == 13;\n}\n"], [4236626, "sub_40A552", "_BOOL8 __fastcall sub_40A552(int a1)\n{\n  return a1 > 64 && a1 <= 90;\n}\n"], [4236662, "sub_40A576", "_BOOL8 __fastcall sub_40A576(int a1)\n{\n  return a1 > 47 && a1 <= 57 || (int)(a1 & 0xFFFFFFDF) > 64 && (int)(a1 & 0xFFFFFFDF) <= 70;\n}\n"], [4236720, "sub_40A5B0", "__int64 __fastcall sub_40A5B0(int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 <= 64 || a1 > 90 )\n    result = (unsigned int)a1;\n  else\n    result = (unsigned int)(a1 + 32);\n  return result;\n}\n"], [4236752, "sub_40A5D0", "__int64 __fastcall sub_40A5D0(int a1)\n{\n  __int64 result; // rax\n\n  if ( a1 <= 96 || a1 > 122 )\n    result = (unsigned int)a1;\n  else\n    result = (unsigned int)(a1 - 32);\n  return result;\n}\n"], [4236784, "sub_40A5F0", "__int64 __fastcall sub_40A5F0(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = (unsigned int)sub_40B802(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4236923, "sub_40A67B", "void __fastcall __noreturn sub_40A67B(int a1)\n{\n  char *v1; // rax\n\n  v1 = gettext(\"unable to record current working directory\");\n  error(status, a1, v1);\n  abort();\n}\n"], [4236975, "sub_40A6AF", "void __fastcall __noreturn sub_40A6AF(int a1)\n{\n  char *v1; // rax\n\n  v1 = gettext(\"failed to return to initial working directory\");\n  error(status, a1, v1);\n  abort();\n}\n"], [4237027, "sub_40A6E3", "__int64 __fastcall sub_40A6E3(unsigned int *a1, __int64 a2, int a3, int a4, int a5, int a6)\n{\n  __int64 result; // rax\n\n  *((_QWORD *)a1 + 1) = 0LL;\n  *a1 = sub_40C371((unsigned int)\".\", 0, a3, a4, a5, a6);\n  if ( (*a1 & 0x80000000) == 0 )\n  {\n    sub_40C2D0(*a1, 1LL);\n    result = 0LL;\n  }\n  else\n  {\n    *((_QWORD *)a1 + 1) = sub_40B9ED(0LL, 0LL);\n    if ( *((_QWORD *)a1 + 1) )\n      result = 0LL;\n    else\n      result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4237162, "sub_40A76A", "int __fastcall sub_40A76A(__int64 a1)\n{\n  int result; // eax\n\n  if ( *(int *)a1 < 0 )\n    result = sub_40B50D(*(_QWORD *)(a1 + 8));\n  else\n    result = fchdir(*(_DWORD *)a1);\n  return result;\n}\n"], [4237217, "sub_40A7A1", "void __fastcall sub_40A7A1(__int64 a1)\n{\n  if ( *(int *)a1 >= 0 )\n    close(*(_DWORD *)a1);\n  free(*(void **)(a1 + 8));\n}\n"], [4237270, "sub_40A7D6", "__int64 __fastcall sub_40A7D6(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 80);\n}\n"], [4237288, "sub_40A7E8", "__int64 __fastcall sub_40A7E8(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 96);\n}\n"], [4237306, "sub_40A7FA", "__int64 __fastcall sub_40A7FA(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 72);\n}\n"], [4237328, "sub_40A810", "__int64 __fastcall sub_40A810(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4237350, "sub_40A826", "__int64 __fastcall sub_40A826(_QWORD *a1)\n{\n  __int64 result; // rax\n  int v2; // [rsp+18h] [rbp-8h]\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v2 = 0;\n  v3 = 0;\n  if ( !a1 )\n    __assert_fail(\"timespec\", \"../../src/lib/utimens.c\", 0x59u, \"validate_timespec\");\n  if ( (a1[1] == 0x3FFFFFFFLL || a1[1] == 1073741822LL || (__int64)a1[1] >= 0 && (__int64)a1[1] <= 999999999)\n    && (a1[3] == 0x3FFFFFFFLL || a1[3] == 1073741822LL || (__int64)a1[3] >= 0 && (__int64)a1[3] <= 999999999) )\n  {\n    if ( a1[1] == 0x3FFFFFFFLL || a1[1] == 1073741822LL )\n    {\n      *a1 = 0LL;\n      v2 = 1;\n      if ( a1[1] == 1073741822LL )\n        v3 = 1;\n    }\n    if ( a1[3] == 0x3FFFFFFFLL || a1[3] == 1073741822LL )\n    {\n      a1[2] = 0LL;\n      v2 = 1;\n      if ( a1[3] == 1073741822LL )\n        ++v3;\n    }\n    result = (unsigned int)(v3 == 1) + v2;\n  }\n  else\n  {\n    *__errno_location() = 22;\n    result = 0xFFFFFFFFLL;\n  }\n  return result;\n}\n"], [4237740, "sub_40A9AC", "__int64 __fastcall sub_40A9AC(__int64 a1, struct timespec **a2)\n{\n  __int64 result; // rax\n  __syscall_slong_t v3; // rdx\n  __syscall_slong_t v4; // rdx\n  struct timespec *v5; // [rsp+18h] [rbp-18h]\n\n  v5 = *a2;\n  if ( (*a2)->tv_nsec == 1073741822 && v5[1].tv_nsec == 1073741822 )\n    return 1LL;\n  if ( v5->tv_nsec == 0x3FFFFFFF && v5[1].tv_nsec == 0x3FFFFFFF )\n  {\n    *a2 = 0LL;\n    result = 0LL;\n  }\n  else\n  {\n    if ( v5->tv_nsec == 1073741822 )\n    {\n      v5->tv_sec = sub_40A7FA(a1);\n      v5->tv_nsec = v3;\n    }\n    else if ( v5->tv_nsec == 0x3FFFFFFF )\n    {\n      sub_4032C4(v5);\n    }\n    if ( v5[1].tv_nsec == 1073741822 )\n    {\n      v5[1].tv_sec = sub_40A810(a1);\n      v5[1].tv_nsec = v4;\n    }\n    else if ( v5[1].tv_nsec == 0x3FFFFFFF )\n    {\n      sub_4032C4(v5 + 1);\n    }\n    result = 0LL;\n  }\n  return result;\n}\n"], [4238037, "sub_40AAD5", "int __fastcall sub_40AAD5(int a1, char *a2, __int64 *a3)\n{\n  struct timespec *v3; // rax\n  __int64 v4; // rdx\n  __int64 v5; // rdx\n  int result; // eax\n  bool v7; // al\n  struct timespec *v8; // rbx\n  __syscall_slong_t v9; // rdx\n  struct timespec *v10; // rbx\n  __syscall_slong_t v11; // rdx\n  __suseconds_t v13; // rdx\n  __suseconds_t v14; // rdx\n  bool v16; // [rsp+2Eh] [rbp-132h]\n  bool v17; // [rsp+2Fh] [rbp-131h]\n  int v18; // [rsp+30h] [rbp-130h]\n  int v19; // [rsp+34h] [rbp-12Ch]\n  int v20; // [rsp+34h] [rbp-12Ch]\n  struct timespec *times; // [rsp+38h] [rbp-128h] BYREF\n  struct timeval *tvp; // [rsp+40h] [rbp-120h]\n  struct timeval *v23; // [rsp+48h] [rbp-118h]\n  __time_t v24; // [rsp+50h] [rbp-110h]\n  __time_t v25; // [rsp+58h] [rbp-108h]\n  __int64 v26[4]; // [rsp+60h] [rbp-100h] BYREF\n  __int64 v27[4]; // [rsp+80h] [rbp-E0h] BYREF\n  __time_t v28; // [rsp+A0h] [rbp-C0h] BYREF\n  __suseconds_t v29; // [rsp+A8h] [rbp-B8h]\n  __time_t v30; // [rsp+B0h] [rbp-B0h]\n  __suseconds_t v31; // [rsp+B8h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+C0h] [rbp-A0h] BYREF\n\n  if ( a3 )\n    v3 = (struct timespec *)v26;\n  else\n    v3 = 0LL;\n  times = v3;\n  v18 = 0;\n  if ( v3 )\n  {\n    v4 = a3[1];\n    v26[0] = *a3;\n    v26[1] = v4;\n    v5 = a3[3];\n    v26[2] = a3[2];\n    v26[3] = v5;\n    v18 = sub_40A826(times);\n  }\n  if ( v18 < 0 )\n    return -1;\n  if ( !a2 )\n  {\n    if ( a1 < 0 )\n    {\n      *__errno_location() = 9;\n      return -1;\n    }\n    if ( dup2(a1, a1) != a1 )\n      return -1;\n  }\n  if ( dword_611524 >= 0 )\n  {\n    if ( v18 == 2 )\n    {\n      if ( a1 >= 0 )\n        v7 = (unsigned int)sub_40C860(a1, &stat_buf) != 0;\n      else\n        v7 = (unsigned int)sub_40C850(a2, &stat_buf) != 0;\n      if ( v7 )\n        return -1;\n      if ( times->tv_nsec == 1073741822 )\n      {\n        v8 = times;\n        times->tv_sec = sub_40A7FA((__int64)&stat_buf);\n        v8->tv_nsec = v9;\n      }\n      else if ( times[1].tv_nsec == 1073741822 )\n      {\n        v10 = times + 1;\n        times[1].tv_sec = sub_40A810((__int64)&stat_buf);\n        v10->tv_nsec = v11;\n      }\n      v18 = 3;\n    }\n    if ( a1 < 0 )\n    {\n      v19 = utimensat(-100, a2, times, 0);\n      if ( v19 > 0 )\n        *__errno_location() = 38;\n      if ( !v19 || *__errno_location() != 38 )\n      {\n        dword_611524 = 1;\n        return v19;\n      }\n    }\n    if ( a1 >= 0 )\n    {\n      v20 = futimens(a1, times);\n      if ( v20 > 0 )\n        *__errno_location() = 38;\n      if ( !v20 || *__errno_location() != 38 )\n      {\n        dword_611524 = 1;\n        return v20;\n      }\n    }\n  }\n  dword_611524 = -1;\n  dword_611528 = -1;\n  if ( !v18 )\n    goto LABEL_47;\n  if ( v18 != 3 )\n  {\n    if ( a1 >= 0 ? (unsigned int)sub_40C860(a1, &stat_buf) != 0 : (unsigned int)sub_40C850(a2, &stat_buf) != 0 )\n      return -1;\n  }\n  if ( times && (unsigned __int8)sub_40A9AC((__int64)&stat_buf, &times) )\n    return 0;\nLABEL_47:\n  if ( times )\n  {\n    v27[0] = times->tv_sec;\n    v27[1] = times->tv_nsec / 1000;\n    v27[2] = times[1].tv_sec;\n    v27[3] = times[1].tv_nsec / 1000;\n    tvp = (struct timeval *)v27;\n  }\n  else\n  {\n    tvp = 0LL;\n  }\n  if ( a1 < 0 )\n    return futimesat(-100, a2, tvp);\n  if ( futimesat(a1, 0LL, tvp) )\n  {\n    if ( a2 )\n      result = utimes(a2, tvp);\n    else\n      result = -1;\n  }\n  else\n  {\n    if ( tvp )\n    {\n      v16 = tvp->tv_usec > 499999;\n      v17 = tvp[1].tv_usec > 499999;\n      if ( (v16 || v17) && !(unsigned int)sub_40C860(a1, &stat_buf) )\n      {\n        v24 = stat_buf.st_atim.tv_sec - tvp->tv_sec;\n        v25 = stat_buf.st_mtim.tv_sec - tvp[1].tv_sec;\n        v23 = 0LL;\n        v13 = tvp->tv_usec;\n        v28 = tvp->tv_sec;\n        v29 = v13;\n        v14 = tvp[1].tv_usec;\n        v30 = tvp[1].tv_sec;\n        v31 = v14;\n        if ( v16 && v24 == 1 && !sub_40A7D6((__int64)&stat_buf) )\n        {\n          v23 = (struct timeval *)&v28;\n          v29 = 0LL;\n        }\n        if ( v17 && v25 == 1 && !sub_40A7E8((__int64)&stat_buf) )\n        {\n          v23 = (struct timeval *)&v28;\n          v31 = 0LL;\n        }\n        if ( v23 )\n          futimesat(a1, 0LL, v23);\n      }\n    }\n    result = 0;\n  }\n  return result;\n}\n"], [4239652, "sub_40B124", "int __fastcall sub_40B124(char *a1, __int64 *a2)\n{\n  return sub_40AAD5(-1, a1, a2);\n}\n"], [4239691, "sub_40B14B", "int __fastcall sub_40B14B(char *a1, __int64 *a2)\n{\n  struct timespec *v2; // rax\n  __int64 v3; // rdx\n  __int64 v4; // rdx\n  struct timespec *v6; // rbx\n  __syscall_slong_t v7; // rdx\n  struct timespec *v8; // rbx\n  __syscall_slong_t v9; // rdx\n  int v10; // [rsp+10h] [rbp-D0h]\n  int v11; // [rsp+14h] [rbp-CCh]\n  struct timespec *times; // [rsp+18h] [rbp-C8h] BYREF\n  __int64 v13[4]; // [rsp+20h] [rbp-C0h] BYREF\n  struct stat stat_buf; // [rsp+40h] [rbp-A0h] BYREF\n\n  if ( a2 )\n    v2 = (struct timespec *)v13;\n  else\n    v2 = 0LL;\n  times = v2;\n  v10 = 0;\n  if ( v2 )\n  {\n    v3 = a2[1];\n    v13[0] = *a2;\n    v13[1] = v3;\n    v4 = a2[3];\n    v13[2] = a2[2];\n    v13[3] = v4;\n    v10 = sub_40A826(times);\n  }\n  if ( v10 < 0 )\n    return -1;\n  if ( dword_611528 >= 0 )\n  {\n    if ( v10 == 2 )\n    {\n      if ( (unsigned int)sub_40C870(a1, &stat_buf) )\n        return -1;\n      if ( times->tv_nsec == 1073741822 )\n      {\n        v6 = times;\n        times->tv_sec = sub_40A7FA((__int64)&stat_buf);\n        v6->tv_nsec = v7;\n      }\n      else if ( times[1].tv_nsec == 1073741822 )\n      {\n        v8 = times + 1;\n        times[1].tv_sec = sub_40A810((__int64)&stat_buf);\n        v8->tv_nsec = v9;\n      }\n      v10 = 3;\n    }\n    v11 = utimensat(-100, a1, times, 256);\n    if ( v11 > 0 )\n      *__errno_location() = 38;\n    if ( !v11 || *__errno_location() != 38 )\n    {\n      dword_611524 = 1;\n      dword_611528 = 1;\n      return v11;\n    }\n  }\n  dword_611528 = -1;\n  if ( !v10 )\n    goto LABEL_37;\n  if ( v10 != 3 && (unsigned int)sub_40C870(a1, &stat_buf) )\n    return -1;\n  if ( times && (unsigned __int8)sub_40A9AC((__int64)&stat_buf, &times) )\n    return 0;\nLABEL_37:\n  if ( !v10 && (unsigned int)sub_40C870(a1, &stat_buf) )\n    return -1;\n  if ( (stat_buf.st_mode & 0xF000) != 40960 )\n    return sub_40AAD5(-1, a1, &times->tv_sec);\n  *__errno_location() = 38;\n  return -1;\n}\n"], [4240389, "sub_40B405", "_DWORD *__fastcall sub_40B405(_DWORD *a1)\n{\n  _DWORD *result; // rax\n\n  result = a1;\n  *a1 = -100;\n  return result;\n}\n"], [4240409, "sub_40B419", "int __fastcall sub_40B419(int *a1)\n{\n  return fchdir(*a1);\n}\n"], [4240436, "sub_40B434", "__int64 __fastcall sub_40B434(int *a1)\n{\n  __int64 result; // rax\n\n  result = (unsigned int)*a1;\n  if ( (int)result >= 0 )\n  {\n    result = close(*a1) == 0;\n    if ( !(_BYTE)result )\n      __assert_fail(\"! close_fail\", \"../../src/lib/chdir-long.c\", 0x3Fu, \"cdb_free\");\n  }\n  return result;\n}\n"], [4240517, "sub_40B485", "__int64 __fastcall sub_40B485(int *a1, const char *a2)\n{\n  int v3; // [rsp+1Ch] [rbp-4h]\n\n  v3 = openat(*a1, a2, 67840);\n  if ( v3 < 0 )\n    return 0xFFFFFFFFLL;\n  sub_40B434(a1);\n  *a1 = v3;\n  return 0LL;\n}\n"], [4240607, "sub_40B4DF", "const char *__fastcall sub_40B4DF(const char *a1)\n{\n  return &a1[strspn(a1, \"/\")];\n}\n"], [4240653, "sub_40B50D", "__int64 __fastcall sub_40B50D(const char *a1)\n{\n  char *path; // [rsp+8h] [rbp-48h]\n  int v3; // [rsp+10h] [rbp-40h] BYREF\n  unsigned int v4; // [rsp+18h] [rbp-38h]\n  int v5; // [rsp+1Ch] [rbp-34h]\n  int v6; // [rsp+20h] [rbp-30h]\n  int v7; // [rsp+24h] [rbp-2Ch]\n  size_t v8; // [rsp+28h] [rbp-28h]\n  unsigned __int64 v9; // [rsp+30h] [rbp-20h]\n  size_t v10; // [rsp+38h] [rbp-18h]\n  char *v11; // [rsp+40h] [rbp-10h]\n  void *v12; // [rsp+48h] [rbp-8h]\n\n  path = (char *)a1;\n  v4 = chdir(a1);\n  if ( !v4 || *__errno_location() != 36 )\n    return v4;\n  v8 = strlen(a1);\n  v9 = (unsigned __int64)&a1[v8];\n  sub_40B405(&v3);\n  if ( !v8 )\n    __assert_fail(\"0 < len\", \"../../src/lib/chdir-long.c\", 0x7Du, \"chdir_long\");\n  if ( v8 <= 0xFFF )\n    __assert_fail(\"4096 <= len\", \"../../src/lib/chdir-long.c\", 0x7Eu, \"chdir_long\");\n  v10 = strspn(a1, \"/\");\n  if ( v10 == 2 )\n  {\n    v11 = (char *)memchr(a1 + 3, 47, v9 - (_QWORD)(a1 + 3));\n    if ( !v11 )\n    {\nLABEL_10:\n      *__errno_location() = 36;\n      return 0xFFFFFFFFLL;\n    }\n    *v11 = 0;\n    v5 = sub_40B485(&v3, a1);\n    *v11 = 47;\n    if ( v5 )\n      goto LABEL_31;\n    path = (char *)sub_40B4DF(v11 + 1);\n  }\n  else if ( v10 )\n  {\n    if ( (unsigned int)sub_40B485(&v3, \"/\") )\n      goto LABEL_31;\n    path = (char *)&a1[v10];\n  }\n  if ( *path == 47 )\n    __assert_fail(\"*dir != '/'\", \"../../src/lib/chdir-long.c\", 0xA1u, \"chdir_long\");\n  if ( (unsigned __int64)path > v9 )\n    __assert_fail(\"dir <= dir_end\", \"../../src/lib/chdir-long.c\", 0xA2u, \"chdir_long\");\n  while ( (__int64)(v9 - (_QWORD)path) > 4095 )\n  {\n    v12 = memrchr(path, 47, 0x1000uLL);\n    if ( !v12 )\n      goto LABEL_10;\n    *(_BYTE *)v12 = 0;\n    if ( (_BYTE *)v12 - path > 4095 )\n      __assert_fail(\"slash - dir < 4096\", \"../../src/lib/chdir-long.c\", 0xB2u, \"chdir_long\");\n    v6 = sub_40B485(&v3, path);\n    *(_BYTE *)v12 = 47;\n    if ( v6 )\n      goto LABEL_31;\n    path = (char *)sub_40B4DF((const char *)v12 + 1);\n  }\n  if ( ((unsigned __int64)path >= v9 || !(unsigned int)sub_40B485(&v3, path)) && !sub_40B419(&v3) )\n  {\n    sub_40B434(&v3);\n    return 0LL;\n  }\nLABEL_31:\n  v7 = *__errno_location();\n  sub_40B434(&v3);\n  *__errno_location() = v7;\n  return 0xFFFFFFFFLL;\n}\n"], [4241410, "sub_40B802", "int __fastcall sub_40B802(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40B8EA(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4241591, "sub_40B8B7", "__int64 __fastcall sub_40B8B7(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_40B935(a1, 0LL, 1LL);\n  return result;\n}\n"], [4241642, "sub_40B8EA", "int __fastcall sub_40B8EA(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40B8B7(a1);\n  return fflush(a1);\n}\n"], [4241717, "sub_40B935", "int __fastcall sub_40B935(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4241901, "sub_40B9ED", "char *__fastcall sub_40B9ED(char *a1, size_t a2)\n{\n  char *v3; // rbx\n  char v4; // al\n  size_t v5; // rax\n  char *v6; // rbx\n  char *buf; // [rsp+8h] [rbp-1148h]\n  char v8; // [rsp+14h] [rbp-113Ch]\n  char v9; // [rsp+15h] [rbp-113Bh]\n  bool v10; // [rsp+16h] [rbp-113Ah]\n  int fd; // [rsp+18h] [rbp-1138h]\n  int v12; // [rsp+24h] [rbp-112Ch]\n  DIR *dirp; // [rsp+28h] [rbp-1128h]\n  __dev_t v14; // [rsp+30h] [rbp-1120h]\n  __ino_t v15; // [rsp+38h] [rbp-1118h]\n  char *s; // [rsp+40h] [rbp-1110h]\n  const char *sa; // [rsp+40h] [rbp-1110h]\n  char *sb; // [rsp+40h] [rbp-1110h]\n  size_t v19; // [rsp+48h] [rbp-1108h]\n  struct dirent *v20; // [rsp+50h] [rbp-1100h]\n  __dev_t v21; // [rsp+58h] [rbp-10F8h]\n  __ino_t v22; // [rsp+60h] [rbp-10F0h]\n  __dev_t v23; // [rsp+70h] [rbp-10E0h]\n  __ino_t v24; // [rsp+78h] [rbp-10D8h]\n  size_t n; // [rsp+88h] [rbp-10C8h]\n  size_t v26; // [rsp+90h] [rbp-10C0h]\n  char *v27; // [rsp+98h] [rbp-10B8h]\n  struct stat stat_buf; // [rsp+A0h] [rbp-10B0h] BYREF\n  char v29[4104]; // [rsp+130h] [rbp-1020h] BYREF\n  unsigned __int64 v30; // [rsp+1138h] [rbp-18h]\n\n  buf = a1;\n  v30 = __readfsqword(0x28u);\n  fd = -100;\n  v8 = 0;\n  dirp = 0LL;\n  v19 = a2;\n  s = getcwd(a1, a2);\n  if ( s || a2 && *__errno_location() == 34 )\n    return s;\n  if ( *__errno_location() == 22 && !a1 && !a2 )\n  {\n    sa = getcwd(v29, 0x1000uLL);\n    if ( sa )\n      return strdup(sa);\n  }\n  if ( !a2 )\n  {\n    if ( a1 )\n    {\n      *__errno_location() = 22;\n      return 0LL;\n    }\n    v19 = 4096LL;\n  }\n  if ( a1 )\n  {\n    sb = a1;\n  }\n  else\n  {\n    sb = (char *)malloc(v19);\n    if ( !sb )\n      return 0LL;\n  }\n  v3 = &sb[v19 - 1];\n  *v3 = 0;\n  if ( (int)sub_40C870(\".\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v14 = stat_buf.st_dev;\n  v15 = stat_buf.st_ino;\n  if ( (int)sub_40C870(\"/\", &stat_buf) < 0 )\n    goto LABEL_75;\n  v21 = stat_buf.st_dev;\n  v22 = stat_buf.st_ino;\n  while ( 2 )\n  {\n    if ( v14 != v21 || v15 != v22 )\n    {\n      v9 = 1;\n      fd = openat(fd, \"..\", 0);\n      if ( fd >= 0 )\n      {\n        v8 = 1;\n        if ( !(unsigned int)sub_40C860(fd, &stat_buf) )\n        {\n          if ( dirp && closedir(dirp) )\n          {\n            dirp = 0LL;\n          }\n          else\n          {\n            v23 = stat_buf.st_dev;\n            v24 = stat_buf.st_ino;\n            v10 = stat_buf.st_dev != v14;\n            dirp = fdopendir(fd);\n            if ( dirp )\n            {\n              v8 = 0;\n              while ( 1 )\n              {\n                *__errno_location() = 0;\n                v20 = readdir(dirp);\n                if ( !v20 && !*__errno_location() && v9 )\n                {\n                  v9 = 0;\n                  rewinddir(dirp);\n                  v20 = readdir(dirp);\n                }\n                if ( !v20 )\n                {\n                  if ( !*__errno_location() )\n                    *__errno_location() = 2;\n                  goto LABEL_75;\n                }\n                if ( v20->d_name[0] != 46 || v20->d_name[1] && (v20->d_name[1] != 46 || v20->d_name[2]) )\n                {\n                  if ( !v9 || (v20->d_ino != v15 && !v10 ? (v4 = 0) : (v4 = 1), (v4 & 1) != 0) )\n                  {\n                    if ( !(unsigned int)sub_40C880(fd, v20->d_name, &stat_buf, 256)\n                      && (stat_buf.st_mode & 0xF000) == 0x4000\n                      && stat_buf.st_dev == v14\n                      && stat_buf.st_ino == v15 )\n                    {\n                      break;\n                    }\n                  }\n                }\n              }\n              n = strlen(v20->d_name);\n              if ( v3 - sb > n )\n              {\nLABEL_61:\n                v6 = &v3[-n];\n                memcpy(v6, v20->d_name, n);\n                v3 = v6 - 1;\n                *v3 = 47;\n                v14 = v23;\n                v15 = v24;\n                continue;\n              }\n              if ( a2 )\n              {\n                *__errno_location() = 34;\n                goto LABEL_75;\n              }\n              v26 = v19;\n              v5 = n;\n              if ( v19 >= n )\n                v5 = v19;\n              v19 += v5;\n              if ( v19 >= v26 )\n              {\n                v27 = (char *)realloc(sb, v19);\n                if ( v27 )\n                {\n                  v3 = (char *)memcpy(&v27[v19 + v3 - sb - v26], &v27[v3 - sb], v26 - (v3 - sb));\n                  sb = v27;\n                  goto LABEL_61;\n                }\n              }\n              *__errno_location() = 12;\n            }\n          }\n        }\n      }\n      goto LABEL_75;\n    }\n    break;\n  }\n  if ( dirp && closedir(dirp) )\n  {\n    dirp = 0LL;\nLABEL_75:\n    v12 = *__errno_location();\n    if ( dirp )\n      closedir(dirp);\n    if ( v8 )\n      close(fd);\n    if ( !a1 )\n      free(sb);\n    *__errno_location() = v12;\n    return 0LL;\n  }\n  if ( &sb[v19 - 1] == v3 )\n    *--v3 = 47;\n  memmove(sb, v3, &sb[v19] - v3);\n  if ( !a2 )\n    buf = (char *)realloc(sb, &sb[v19] - v3);\n  if ( !buf )\n    buf = sb;\n  return buf;\n}\n"], [4243839, "sub_40C17F", "char *__fastcall sub_40C17F(char *a1, unsigned int a2, const char *a3)\n{\n  char *result; // rax\n  int v4; // eax\n  int fd; // [rsp+2Ch] [rbp-54h]\n  char *v7; // [rsp+30h] [rbp-50h]\n  size_t size; // [rsp+38h] [rbp-48h]\n  char s[40]; // [rsp+40h] [rbp-40h] BYREF\n  unsigned __int64 v10; // [rsp+68h] [rbp-18h]\n\n  v10 = __readfsqword(0x28u);\n  if ( *a3 )\n  {\n    if ( !dword_61152C )\n    {\n      fd = open(\"/proc/self/fd\", 67840);\n      if ( fd >= 0 )\n      {\n        sprintf(s, \"/proc/self/fd/%d/%s\", (unsigned int)fd, \"../fd\");\n        if ( access(s, 0) )\n          v4 = -1;\n        else\n          v4 = 1;\n        dword_61152C = v4;\n        close(fd);\n      }\n      else\n      {\n        dword_61152C = -1;\n      }\n    }\n    if ( dword_61152C >= 0 )\n    {\n      size = strlen(a3) + 27;\n      v7 = a1;\n      if ( size <= 0xFC0 || (v7 = (char *)malloc(size)) != 0LL )\n      {\n        sprintf(v7, \"/proc/self/fd/%d/%s\", a2, a3);\n        result = v7;\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n    else\n    {\n      result = 0LL;\n    }\n  }\n  else\n  {\n    *a1 = 0;\n    result = a1;\n  }\n  return result;\n}\n"], [4244176, "sub_40C2D0", "__int64 __fastcall sub_40C2D0(int a1, char a2, __int64 a3, int a4, int a5, int a6)\n{\n  int v6; // ecx\n  int v7; // er8\n  int v8; // er9\n  unsigned int v9; // eax\n  __int64 result; // rax\n  int v11; // [rsp+18h] [rbp-8h]\n\n  v11 = sub_40C4D0(a1, 1, 0, a4, a5, a6);\n  if ( v11 < 0\n    || (!a2 ? (v9 = v11 & 0xFFFFFFFE) : (v9 = v11 | 1),\n        v11 != v9 && (unsigned int)sub_40C4D0(a1, 2, v9, v6, v7, v8) == -1) )\n  {\n    result = 0xFFFFFFFFLL;\n  }\n  else\n  {\n    result = 0LL;\n  }\n  return result;\n}\n"], [4244299, "sub_40C34B", "__int64 __fastcall sub_40C34B(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_40C4D0(a1, 1030, 0, a4, a5, a6);\n}\n"], [4244337, "sub_40C371", "__int64 __fastcall sub_40C371(const char *a1, char a2, unsigned int a3)\n{\n  unsigned int v3; // eax\n  unsigned int v5; // [rsp+14h] [rbp-CCh]\n\n  v5 = 0;\n  if ( (a2 & 0x40) != 0 )\n    v5 = a3;\n  v3 = open(a1, a2, v5);\n  return sub_40C483(v3);\n}\n"], [4244611, "sub_40C483", "__int64 __fastcall sub_40C483(int a1)\n{\n  unsigned int fd; // [rsp+Ch] [rbp-14h]\n  unsigned int v3; // [rsp+18h] [rbp-8h]\n  int v4; // [rsp+1Ch] [rbp-4h]\n\n  fd = a1;\n  if ( a1 >= 0 && a1 <= 2 )\n  {\n    v3 = sub_40C78A((unsigned int)a1);\n    v4 = *__errno_location();\n    close(a1);\n    *__errno_location() = v4;\n    fd = v3;\n  }\n  return fd;\n}\n"], [4244688, "sub_40C4D0", "__int64 __fastcall sub_40C4D0(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_611530 < 0 )\n  {\n    v18 = sub_40C4D0(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_40C4D0(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_611530 = -1;\n    }\n    else\n    {\n      dword_611530 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_611530 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4245386, "sub_40C78A", "__int64 __fastcall sub_40C78A(int a1, __m128 a2, __m128 a3, __m128 a4, __m128 a5, __m128 a6, __m128 a7, __m128 a8, __m128 a9, __int64 a10, __int64 a11, __int64 a12, __int64 a13, __int64 a14)\n{\n  return sub_40C4D0(a1, 0, 3LL, a12, a13, a14, a2, a3, a4, a5, a6, a7, a8, a9);\n}\n"], [4245424, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_610E18 - off_610E10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_610E10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4245536, "fini", "void fini(void)\n{\n  ;\n}\n"], [4245552, "sub_40C830", "int __fastcall sub_40C830(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_6112B8 )\n    v1 = (void *)qword_6112B8;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4245584, "sub_40C850", "int __fastcall sub_40C850(char *filename, struct stat *stat_buf)\n{\n  return __xstat(1, filename, stat_buf);\n}\n"], [4245600, "sub_40C860", "int __fastcall sub_40C860(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4245616, "sub_40C870", "int __fastcall sub_40C870(char *filename, struct stat *stat_buf)\n{\n  return __lxstat(1, filename, stat_buf);\n}\n"], [4245632, "sub_40C880", "int __fastcall sub_40C880(int fildes, char *filename, struct stat *stat_buf, int flag)\n{\n  return __fxstatat(1, fildes, filename, stat_buf, flag);\n}\n"], [4245656, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]