[[4199736, ".init_proc", "void *init_proc()\n{\n  void *result; // rax\n\n  result = &_gmon_start__;\n  if ( &_gmon_start__ )\n    result = (void *)__gmon_start__();\n  return result;\n}\n"], [4199776, "sub_401560", "__int64 sub_401560()\n{\n  return qword_610010();\n}\n"], [4199792, ".getenv", "// attributes: thunk\nchar *getenv(const char *name)\n{\n  return getenv(name);\n}\n"], [4199808, ".free", "// attributes: thunk\nvoid free(void *ptr)\n{\n  free(ptr);\n}\n"], [4199824, ".localtime", "// attributes: thunk\nstruct tm *localtime(const time_t *timer)\n{\n  return localtime(timer);\n}\n"], [4199840, ".abort", "// attributes: thunk\nvoid __noreturn abort(void)\n{\n  abort();\n}\n"], [4199856, ".__errno_location", "// attributes: thunk\nint *__errno_location(void)\n{\n  return _errno_location();\n}\n"], [4199872, ".strncmp", "// attributes: thunk\nint strncmp(const char *s1, const char *s2, size_t n)\n{\n  return strncmp(s1, s2, n);\n}\n"], [4199888, "._exit", "// attributes: thunk\nvoid __noreturn _exit(int status)\n{\n  exit(status);\n}\n"], [4199904, ".strcpy", "// attributes: thunk\nchar *strcpy(char *dest, const char *src)\n{\n  return strcpy(dest, src);\n}\n"], [4199920, ".__fpending", "// attributes: thunk\nsize_t __fpending(FILE *fp)\n{\n  return _fpending(fp);\n}\n"], [4199936, ".toupper", "// attributes: thunk\nint toupper(int c)\n{\n  return toupper(c);\n}\n"], [4199952, ".getc_unlocked", "// attributes: thunk\nint getc_unlocked(FILE *stream)\n{\n  return getc_unlocked(stream);\n}\n"], [4199968, ".iswcntrl", "// attributes: thunk\nint iswcntrl(wint_t wc)\n{\n  return iswcntrl(wc);\n}\n"], [4199984, ".fcntl", "// attributes: thunk\nint fcntl(int fd, int cmd, ...)\n{\n  return fcntl(fd, cmd);\n}\n"], [4200000, ".clock_gettime", "// attributes: thunk\nint clock_gettime(clockid_t clock_id, struct timespec *tp)\n{\n  return clock_gettime(clock_id, tp);\n}\n"], [4200016, ".textdomain", "// attributes: thunk\nchar *textdomain(const char *domainname)\n{\n  return textdomain(domainname);\n}\n"], [4200032, ".fclose", "// attributes: thunk\nint fclose(FILE *stream)\n{\n  return fclose(stream);\n}\n"], [4200048, ".bindtextdomain", "// attributes: thunk\nchar *bindtextdomain(const char *domainname, const char *dirname)\n{\n  return bindtextdomain(domainname, dirname);\n}\n"], [4200064, ".__ctype_get_mb_cur_max", "// attributes: thunk\nsize_t __ctype_get_mb_cur_max(void)\n{\n  return _ctype_get_mb_cur_max();\n}\n"], [4200080, ".strlen", "// attributes: thunk\nsize_t strlen(const char *s)\n{\n  return strlen(s);\n}\n"], [4200096, ".__stack_chk_fail", "// attributes: thunk\nvoid __noreturn __stack_chk_fail()\n{\n  _stack_chk_fail();\n}\n"], [4200112, ".getopt_long", "// attributes: thunk\nint getopt_long(int argc, char *const *argv, const char *shortopts, const struct option *longopts, int *longind)\n{\n  return getopt_long(argc, argv, shortopts, longopts, longind);\n}\n"], [4200128, ".mbrtowc", "// attributes: thunk\nsize_t mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *p)\n{\n  return mbrtowc(pwc, s, n, p);\n}\n"], [4200144, ".gettext", "// attributes: thunk\nchar *gettext(const char *msgid)\n{\n  return gettext(msgid);\n}\n"], [4200160, ".strchr", "// attributes: thunk\nchar *strchr(const char *s, int c)\n{\n  return strchr(s, c);\n}\n"], [4200176, ".printf", "// attributes: thunk\nint printf(const char *format, ...)\n{\n  return printf(format);\n}\n"], [4200192, ".strrchr", "// attributes: thunk\nchar *strrchr(const char *s, int c)\n{\n  return strrchr(s, c);\n}\n"], [4200208, ".lseek", "// attributes: thunk\n__off_t lseek(int fd, __off_t offset, int whence)\n{\n  return lseek(fd, offset, whence);\n}\n"], [4200224, ".gettimeofday", "// attributes: thunk\nint gettimeofday(struct timeval *tv, __timezone_ptr_t tz)\n{\n  return gettimeofday(tv, tz);\n}\n"], [4200240, ".__assert_fail", "// attributes: thunk\nvoid __noreturn __assert_fail(const char *assertion, const char *file, unsigned int line, const char *function)\n{\n  _assert_fail(assertion, file, line, function);\n}\n"], [4200256, ".memset", "// attributes: thunk\nvoid *memset(void *s, int c, size_t n)\n{\n  return memset(s, c, n);\n}\n"], [4200272, ".close", "// attributes: thunk\nint close(int fd)\n{\n  return close(fd);\n}\n"], [4200288, ".posix_fadvise", "// attributes: thunk\nint posix_fadvise(int fd, off_t offset, off_t len, int advise)\n{\n  return posix_fadvise(fd, offset, len, advise);\n}\n"], [4200304, ".__libc_start_main", "// attributes: thunk\nint __fastcall __libc_start_main(int (__fastcall *main)(int, char **, char **), int argc, char **ubp_av, void (*init)(void), void (*fini)(void), void (*rtld_fini)(void), void *stack_end)\n{\n  return _libc_start_main(main, argc, ubp_av, init, fini, rtld_fini, stack_end);\n}\n"], [4200320, ".memcmp", "// attributes: thunk\nint memcmp(const void *s1, const void *s2, size_t n)\n{\n  return memcmp(s1, s2, n);\n}\n"], [4200336, ".fputs_unlocked", "// attributes: thunk\nint fputs_unlocked(const char *s, FILE *stream)\n{\n  return fputs_unlocked(s, stream);\n}\n"], [4200352, ".ferror_unlocked", "// attributes: thunk\nint ferror_unlocked(FILE *stream)\n{\n  return ferror_unlocked(stream);\n}\n"], [4200368, ".calloc", "// attributes: thunk\nvoid *calloc(size_t nmemb, size_t size)\n{\n  return calloc(nmemb, size);\n}\n"], [4200384, ".strcmp", "// attributes: thunk\nint strcmp(const char *s1, const char *s2)\n{\n  return strcmp(s1, s2);\n}\n"], [4200400, ".fprintf", "// attributes: thunk\nint fprintf(FILE *stream, const char *format, ...)\n{\n  return fprintf(stream, format);\n}\n"], [4200416, ".__gmon_start__", "// attributes: thunk\n__int64 __gmon_start__(void)\n{\n  return _gmon_start__();\n}\n"], [4200432, ".strtol", "// attributes: thunk\n__int64 strtol(const char *nptr, char **endptr, int base)\n{\n  return strtol(nptr, endptr, base);\n}\n"], [4200448, ".memcpy", "// attributes: thunk\nvoid *memcpy(void *dest, const void *src, size_t n)\n{\n  return memcpy(dest, src, n);\n}\n"], [4200464, ".putchar_unlocked", "// attributes: thunk\nint putchar_unlocked(int c)\n{\n  return putchar_unlocked(c);\n}\n"], [4200480, ".fileno", "// attributes: thunk\nint fileno(FILE *stream)\n{\n  return fileno(stream);\n}\n"], [4200496, ".wcwidth", "// attributes: thunk\nint wcwidth(wchar_t c)\n{\n  return wcwidth(c);\n}\n"], [4200512, ".tolower", "// attributes: thunk\nint tolower(int c)\n{\n  return tolower(c);\n}\n"], [4200528, ".malloc", "// attributes: thunk\nvoid *malloc(size_t size)\n{\n  return malloc(size);\n}\n"], [4200544, ".fflush", "// attributes: thunk\nint fflush(FILE *stream)\n{\n  return fflush(stream);\n}\n"], [4200560, ".ungetc", "// attributes: thunk\nint ungetc(int c, FILE *stream)\n{\n  return ungetc(c, stream);\n}\n"], [4200576, ".__fxstat", "// attributes: thunk\nint __fxstat(int ver, int fildes, struct stat *stat_buf)\n{\n  return _fxstat(ver, fildes, stat_buf);\n}\n"], [4200592, ".mktime", "// attributes: thunk\ntime_t mktime(struct tm *tp)\n{\n  return mktime(tp);\n}\n"], [4200608, ".__freading", "// attributes: thunk\nint __freading(FILE *fp)\n{\n  return _freading(fp);\n}\n"], [4200624, ".realloc", "// attributes: thunk\nvoid *realloc(void *ptr, size_t size)\n{\n  return realloc(ptr, size);\n}\n"], [4200640, ".fdopen", "// attributes: thunk\nFILE *fdopen(int fd, const char *modes)\n{\n  return fdopen(fd, modes);\n}\n"], [4200656, ".setlocale", "// attributes: thunk\nchar *setlocale(int category, const char *locale)\n{\n  return setlocale(category, locale);\n}\n"], [4200672, ".strftime", "// attributes: thunk\nsize_t strftime(char *s, size_t maxsize, const char *format, const struct tm *tp)\n{\n  return strftime(s, maxsize, format, tp);\n}\n"], [4200688, ".error", "// attributes: thunk\nvoid error(int status, int errnum, const char *format, ...)\n{\n  error(status, errnum, format);\n}\n"], [4200704, ".fseeko", "// attributes: thunk\nint fseeko(FILE *stream, __off_t off, int whence)\n{\n  return fseeko(stream, off, whence);\n}\n"], [4200720, ".fopen", "// attributes: thunk\nFILE *fopen(const char *filename, const char *modes)\n{\n  return fopen(filename, modes);\n}\n"], [4200736, ".strtoumax", "// attributes: thunk\nuintmax_t strtoumax(const char *nptr, char **endptr, int base)\n{\n  return strtoumax(nptr, endptr, base);\n}\n"], [4200752, ".__cxa_atexit", "// attributes: thunk\nint __fastcall __cxa_atexit(void (__fastcall *lpfunc)(void *), void *obj, void *lpdso_handle)\n{\n  return _cxa_atexit(lpfunc, obj, lpdso_handle);\n}\n"], [4200768, ".sprintf", "// attributes: thunk\nint sprintf(char *s, const char *format, ...)\n{\n  return sprintf(s, format);\n}\n"], [4200784, ".exit", "// attributes: thunk\nvoid __noreturn exit(int status)\n{\n  exit(status);\n}\n"], [4200800, ".fwrite", "// attributes: thunk\nsize_t fwrite(const void *ptr, size_t size, size_t n, FILE *s)\n{\n  return fwrite(ptr, size, n, s);\n}\n"], [4200816, ".mbsinit", "// attributes: thunk\nint mbsinit(const mbstate_t *ps)\n{\n  return mbsinit(ps);\n}\n"], [4200832, ".iswprint", "// attributes: thunk\nint iswprint(wint_t wc)\n{\n  return iswprint(wc);\n}\n"], [4200848, ".__ctype_b_loc", "// attributes: thunk\nconst unsigned __int16 **__ctype_b_loc(void)\n{\n  return _ctype_b_loc();\n}\n"], [4200864, "start", "// positive sp value has been detected, the output may be wrong!\nvoid __fastcall __noreturn start(__int64 a1, __int64 a2, void (*a3)(void))\n{\n  __int64 v3; // rax\n  int v4; // esi\n  __int64 v5; // [rsp-8h] [rbp-8h] BYREF\n  char *retaddr; // [rsp+0h] [rbp+0h] BYREF\n\n  v4 = v5;\n  v5 = v3;\n  __libc_start_main(main, v4, &retaddr, init, fini, a3, &v5);\n  __halt();\n}\n"], [4200912, "sub_4019D0", "signed __int64 sub_4019D0()\n{\n  signed __int64 result; // rax\n\n  result = &unk_6102DF - &unk_6102D8;\n  if ( (unsigned __int64)(&unk_6102DF - &unk_6102D8) > 0xE )\n    result = 0LL;\n  return result;\n}\n"], [4200960, "sub_401A00", "__int64 sub_401A00()\n{\n  return 0LL;\n}\n"], [4201024, "sub_401A40", "signed __int64 sub_401A40()\n{\n  signed __int64 result; // rax\n\n  if ( !byte_610338 )\n  {\n    result = sub_4019D0();\n    byte_610338 = 1;\n  }\n  return result;\n}\n"], [4201056, "sub_401A60", "__int64 sub_401A60()\n{\n  return sub_401A00();\n}\n"], [4201101, "sub_401A8D", "__int64 __fastcall sub_401A8D(unsigned __int8 a1)\n{\n  return a1;\n}\n"], [4201116, "sub_401A9C", "int sub_401A9C()\n{\n  __int64 v0; // rbx\n  char *v1; // rax\n  char *v2; // rax\n  FILE *v3; // rbx\n  char *v4; // rax\n  __int64 v5; // rbx\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  const char *s1; // [rsp+8h] [rbp-18h]\n\n  v0 = sub_4054C6(qword_610450);\n  v1 = gettext(\"\\nReport %s bugs to %s\\n\");\n  printf(v1, v0, \"bug-coreutils@gnu.org\");\n  v2 = gettext(\"%s home page: <%s>\\n\");\n  printf(v2, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v3 = stdout;\n  v4 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  fputs_unlocked(v4, v3);\n  s1 = setlocale(5, 0LL);\n  if ( s1 && strncmp(s1, \"en_\", 3uLL) )\n  {\n    v5 = sub_4054C6(qword_610450);\n    v6 = gettext(\"Report %s translation bugs to <http://translationproject.org/team/>\\n\");\n    printf(v6, v5);\n  }\n  v7 = sub_4054C6(qword_610450);\n  v8 = gettext(\"For complete documentation, run: info coreutils '%s invocation'\\n\");\n  return printf(v8, v7);\n}\n"], [4201382, "sub_401BA6", "__int64 __fastcall sub_401BA6(__int64 a1)\n{\n  return a1;\n}\n"], [4201396, "sub_401BB4", "__int64 __fastcall sub_401BB4(__int64 a1)\n{\n  return *(_QWORD *)(a1 + 88);\n}\n"], [4201418, "sub_401BCA", "__int64 sub_401BCA()\n{\n  int i; // [rsp+0h] [rbp-10h]\n  unsigned int v2; // [rsp+4h] [rbp-Ch]\n  _DWORD *v3; // [rsp+8h] [rbp-8h]\n\n  v2 = 0;\n  v3 = qword_610340;\n  for ( i = 0; i < dword_61025C; ++i )\n  {\n    if ( !v3[4] || v3[4] == 1 || byte_610241 && (int)v3[11] > 0 && (int)v3[12] > 0 )\n      ++v2;\n    v3 += 16;\n  }\n  return v2;\n}\n"], [4201534, "sub_401C3E", "__int64 __fastcall sub_401C3E(unsigned int a1, char a2, _BYTE *a3)\n{\n  unsigned int v5; // [rsp+1Ch] [rbp-24h]\n  unsigned int v6; // [rsp+1Ch] [rbp-24h]\n  _BYTE *v7; // [rsp+20h] [rbp-20h] BYREF\n  unsigned __int64 v8; // [rsp+28h] [rbp-18h] BYREF\n  unsigned __int64 v9; // [rsp+30h] [rbp-10h] BYREF\n  _BYTE *v10; // [rsp+38h] [rbp-8h]\n\n  v9 = -1LL;\n  v5 = sub_40AFC0(a3, &v7, 10LL, &v8, &locale);\n  if ( v5 && v5 != 2 )\n    sub_40AEDA(v5, a1, (unsigned int)a2, &longopts, a3);\n  if ( v7 == a3 || !v8 )\n    return 0LL;\n  if ( *v7 == 58 )\n  {\n    v10 = v7 + 1;\n    v6 = sub_40AFC0(v7 + 1, &v7, 10LL, &v9, &locale);\n    if ( v6 )\n      sub_40AEDA(v6, a1, (unsigned int)a2, &longopts, a3);\n    if ( v10 == v7 || v9 < v8 )\n      return 0LL;\n  }\n  if ( *v7 )\n    return 0LL;\n  qword_6103A0 = v8;\n  qword_610260 = v9;\n  return 1LL;\n}\n"], [4201841, "sub_401D71", "__int64 __fastcall sub_401D71(__int64 a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  __int64 result; // rax\n  __int64 v4[3]; // [rsp+18h] [rbp-18h] BYREF\n\n  if ( (unsigned int)sub_40A9E8(a1, 0LL, 10LL, v4, &locale) || v4[0] <= 0 || v4[0] > 0x7FFFFFFF )\n  {\n    v1 = sub_405B47(a1);\n    v2 = gettext(\"invalid number of columns: %s\");\n    error(1, 0, v2, v1);\n  }\n  result = v4[0];\n  dword_61025C = v4[0];\n  byte_610374 = 1;\n  return result;\n}\n"], [4201989, "sub_401E05", "char *__fastcall sub_401E05(const char *a1)\n{\n  dword_6103DC = strlen(a1);\n  dest = (char *)sub_40A750(dword_6103DC + 1);\n  return strcpy(dest, a1);\n}\n"], [4202069, "main", "void __fastcall __noreturn main(int a1, char **a2, char **a3)\n{\n  __int64 v3; // rax\n  __int64 v4; // rax\n  int v5; // eax\n  char *v6; // rax\n  __int64 v7; // rbx\n  char *v8; // rax\n  __int64 v9; // rbx\n  char *v10; // rax\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // rbx\n  char *v14; // rax\n  __int64 v15; // rbx\n  char *v16; // rax\n  __int64 v17; // rbx\n  char *v18; // rax\n  const char *v19; // rax\n  char *v20; // rax\n  char *v21; // rax\n  int v22; // eax\n  char *v23; // rbx\n  int *v24; // rax\n  char v25; // [rsp+25h] [rbp-4Bh]\n  char v26; // [rsp+26h] [rbp-4Ah]\n  char v27; // [rsp+27h] [rbp-49h]\n  int longind; // [rsp+28h] [rbp-48h] BYREF\n  unsigned int v29; // [rsp+2Ch] [rbp-44h]\n  unsigned int i; // [rsp+30h] [rbp-40h]\n  int v31; // [rsp+34h] [rbp-3Ch]\n  unsigned __int64 v32; // [rsp+38h] [rbp-38h] BYREF\n  __int64 v33; // [rsp+40h] [rbp-30h] BYREF\n  void *ptr; // [rsp+48h] [rbp-28h]\n  __int64 v35; // [rsp+50h] [rbp-20h]\n  __int64 v36; // [rsp+58h] [rbp-18h]\n\n  v25 = 0;\n  v26 = 0;\n  v27 = 0;\n  ptr = 0LL;\n  v35 = 0LL;\n  v32 = 0LL;\n  sub_405A3C(*a2, a2, a3);\n  setlocale(6, &locale);\n  bindtextdomain(\"coreutils\", \"/root/Product/coreutils/exe/share/locale\");\n  textdomain(\"coreutils\");\n  sub_40B9E0(sub_4053DB);\n  v29 = 0;\n  if ( a1 <= 1 )\n    v3 = 0LL;\n  else\n    v3 = sub_40A750(8LL * (a1 - 1));\n  v36 = v3;\n  while ( 1 )\n  {\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        while ( 1 )\n        {\n          longind = -1;\n          v31 = getopt_long(a1, a2, \"-0123456789D:FJN:S::TW:abcde::fh:i::l:mn::o:rs::tvw:\", &longopts, &longind);\n          if ( v31 == -1 )\n          {\n            if ( ptr )\n            {\n              sub_401D71((__int64)ptr);\n              free(ptr);\n            }\n            if ( !qword_6103F8 )\n            {\n              if ( getenv(\"POSIXLY_CORRECT\") && (unsigned __int8)sub_405721(2LL) != 1 )\n                v19 = \"%b %e %H:%M %Y\";\n              else\n                v19 = \"%Y-%m-%d %H:%M\";\n              qword_6103F8 = (__int64)v19;\n            }\n            if ( !qword_6103A0 )\n              qword_6103A0 = 1LL;\n            if ( byte_610370 && byte_610374 )\n            {\n              v20 = gettext(\"cannot specify number of columns when printing in parallel\");\n              error(1, 0, v20);\n            }\n            if ( byte_610370 && byte_61037A )\n            {\n              v21 = gettext(\"cannot specify both printing across and printing in parallel\");\n              error(1, 0, v21);\n            }\n            if ( v25 )\n            {\n              if ( v26 )\n              {\n                if ( byte_610370 || byte_610374 )\n                {\n                  byte_610380 = 1;\n                  if ( v27 )\n                    byte_6103D9 = 1;\n                }\n                else\n                {\n                  byte_610381 = 1;\n                }\n              }\n              else if ( byte_6103D9 != 1 && v27 && (byte_610370 || byte_610374) )\n              {\n                if ( byte_610380 != 1 )\n                {\n                  byte_610381 = 1;\n                  if ( dword_6103DC > 0 )\n                    byte_6103D9 = 1;\n                }\n                else\n                {\n                  byte_6103D9 = 1;\n                }\n              }\n            }\n            while ( optind < a1 )\n            {\n              v22 = v29++;\n              *(_QWORD *)(v36 + 8LL * v22) = a2[optind++];\n            }\n            if ( v29 )\n            {\n              if ( byte_610370 )\n              {\n                sub_40348D(v29, v36);\n              }\n              else\n              {\n                for ( i = 0; v29 > i; ++i )\n                  sub_40348D(1LL, 8LL * i + v36);\n              }\n            }\n            else\n            {\n              sub_40348D(0LL, 0LL);\n            }\n            sub_40511C();\n            if ( byte_610379 && (unsigned int)sub_40B42C(stdin) == -1 )\n            {\n              v23 = gettext(\"standard input\");\n              v24 = __errno_location();\n              error(1, *v24, v23);\n            }\n            if ( byte_61039C )\n              exit(1);\n            exit(0);\n          }\n          if ( (unsigned int)(v31 - 48) > 9 )\n            break;\n          if ( v35 + 1 >= v32 )\n            ptr = (void *)sub_40A7E6(ptr, &v32);\n          v4 = v35++;\n          *((_BYTE *)ptr + v4) = v31;\n          *((_BYTE *)ptr + v35) = 0;\n        }\n        v35 = 0LL;\n        if ( v31 != 101 )\n          break;\n        if ( optarg )\n          sub_4029C3(optarg, 101LL, &byte_61024C, &dword_610250);\n        byte_610388 = 1;\n      }\n      if ( v31 <= 101 )\n        break;\n      if ( v31 == 111 )\n      {\n        if ( (unsigned int)sub_40A9E8(optarg, 0LL, 10LL, &v33, &locale) || v33 < 0 || v33 > 0x7FFFFFFF )\n        {\n          v13 = sub_405B47(optarg);\n          v14 = gettext(\"`-o MARGIN' invalid line offset: %s\");\n          error(1, 0, v14, v13);\n        }\n        dword_610390 = v33;\n      }\n      else if ( v31 > 111 )\n      {\n        if ( v31 == 118 )\n        {\n          byte_6103D0 = 1;\n        }\n        else if ( v31 > 118 )\n        {\n          switch ( v31 )\n          {\n            case 128:\n              sub_401D71(optarg);\n              free(ptr);\n              ptr = 0LL;\n              v32 = 0LL;\n              break;\n            case 129:\n              if ( optarg )\n              {\n                if ( (unsigned __int8)sub_401C3E(longind, 0, (_BYTE *)optarg) != 1 )\n                {\n                  v7 = sub_405B47(optarg);\n                  v8 = gettext(\"invalid page range %s\");\n                  error(1, 0, v8, v7);\n                }\n              }\n              else\n              {\n                v6 = gettext(\"`--pages=FIRST_PAGE[:LAST_PAGE]' missing argument\");\n                error(1, 0, v6);\n              }\n              break;\n            case 119:\n              v25 = 1;\n              v26 = 1;\n              if ( (unsigned int)sub_40A9E8(optarg, 0LL, 10LL, &v33, &locale) || v33 <= 0 || v33 > 0x7FFFFFFF )\n              {\n                v15 = sub_405B47(optarg);\n                v16 = gettext(\"`-w PAGE_WIDTH' invalid number of characters: %s\");\n                error(1, 0, v16, v15);\n              }\n              if ( byte_610380 != 1 )\n                dword_610248 = v33;\n              break;\n            default:\n              goto LABEL_121;\n          }\n        }\n        else\n        {\n          switch ( v31 )\n          {\n            case 's':\n              v25 = 1;\n              v27 = 1;\n              if ( byte_6103D9 != 1 && optarg )\n                goto LABEL_100;\n              break;\n            case 't':\n              byte_610240 = 0;\n              byte_610375 = 1;\n              break;\n            case 'r':\n              byte_6103D8 = 1;\n              break;\n            default:\n              goto LABEL_121;\n          }\n        }\n      }\n      else if ( v31 == 105 )\n      {\n        if ( optarg )\n          sub_4029C3(optarg, 105LL, &byte_610254, &dword_610258);\n        byte_610389 = 1;\n      }\n      else if ( v31 > 105 )\n      {\n        if ( v31 == 109 )\n        {\n          byte_610370 = 1;\n          byte_610241 = 0;\n        }\n        else if ( v31 > 109 )\n        {\n          byte_6103C0 = 1;\n          if ( optarg )\n            sub_4029C3(optarg, 110LL, &byte_610268, &dword_610278);\n        }\n        else\n        {\n          if ( v31 != 108 )\n            goto LABEL_121;\n          if ( (unsigned int)sub_40A9E8(optarg, 0LL, 10LL, &v33, &locale) || v33 <= 0 || v33 > 0x7FFFFFFF )\n          {\n            v9 = sub_405B47(optarg);\n            v10 = gettext(\"`-l PAGE_LENGTH' invalid number of lines: %s\");\n            error(1, 0, v10, v9);\n          }\n          dword_610244 = v33;\n        }\n      }\n      else\n      {\n        if ( v31 == 102 )\n          goto LABEL_73;\n        if ( v31 != 104 )\n          goto LABEL_121;\n        qword_6103F0 = optarg;\n      }\n    }\n    if ( v31 == 78 )\n    {\n      byte_610270 = 0;\n      if ( (unsigned int)sub_40A9E8(optarg, 0LL, 10LL, &v33, &locale) || v33 > 0x7FFFFFFF )\n      {\n        v11 = sub_405B47(optarg);\n        v12 = gettext(\"`-N NUMBER' invalid starting line number: %s\");\n        error(1, 0, v12, v11);\n      }\n      dword_610274 = v33;\n    }\n    else if ( v31 > 78 )\n    {\n      if ( v31 == 97 )\n      {\n        byte_61037A = 1;\n        byte_610241 = 0;\n      }\n      else if ( v31 > 97 )\n      {\n        if ( v31 == 99 )\n        {\n          byte_6103D1 = 1;\n        }\n        else if ( v31 > 99 )\n        {\n          byte_6103D2 = 1;\n        }\n        else\n        {\n          byte_61037B = 1;\n        }\n      }\n      else\n      {\n        switch ( v31 )\n        {\n          case 'T':\n            byte_610240 = 0;\n            byte_610375 = 0;\n            break;\n          case 'W':\n            v26 = 0;\n            byte_610380 = 1;\n            if ( (unsigned int)sub_40A9E8(optarg, 0LL, 10LL, &v33, &locale) || v33 <= 0 || v33 > 0x7FFFFFFF )\n            {\n              v17 = sub_405B47(optarg);\n              v18 = gettext(\"`-W PAGE_WIDTH' invalid number of characters: %s\");\n              error(1, 0, v18, v17);\n            }\n            dword_610248 = v33;\n            break;\n          case 'S':\n            v27 = 0;\n            dest = (char *)sub_401BA6((__int64)&locale);\n            dword_6103DC = 0;\n            byte_6103D9 = 1;\n            if ( optarg )\nLABEL_100:\n              sub_401E05((const char *)optarg);\n            break;\n          default:\n            goto LABEL_121;\n        }\n      }\n    }\n    else if ( v31 == 1 )\n    {\n      if ( qword_6103A0\n        || *(_BYTE *)optarg != 43\n        || (unsigned __int8)sub_401C3E(0xFFFFFFFE, 43, (_BYTE *)(optarg + 1)) != 1 )\n      {\n        v5 = v29++;\n        *(_QWORD *)(v36 + 8LL * v5) = optarg;\n      }\n    }\n    else\n    {\n      if ( v31 <= 1 )\n      {\n        if ( v31 == -131 )\n        {\n          sub_40A4E8(\n            (_DWORD)stdout,\n            (unsigned int)\"pr\",\n            (unsigned int)\"GNU coreutils\",\n            (_DWORD)off_610298,\n            (unsigned int)\"Pete TerMaat\",\n            (unsigned int)\"Roland Huebner\",\n            0);\n          exit(0);\n        }\n        if ( v31 == -130 )\n          sub_40517C(0LL);\nLABEL_121:\n        sub_40517C(1LL);\n      }\n      switch ( v31 )\n      {\n        case 'F':\nLABEL_73:\n          byte_610378 = 1;\n          break;\n        case 'J':\n          byte_610381 = 1;\n          break;\n        case 'D':\n          qword_6103F8 = optarg;\n          break;\n        default:\n          goto LABEL_121;\n      }\n    }\n  }\n}\n"], [4204995, "sub_4029C3", "_DWORD *__fastcall sub_4029C3(unsigned __int8 *a1, char a2, unsigned __int8 *a3, _DWORD *a4)\n{\n  _DWORD *result; // rax\n  __int64 v5; // r12\n  char *v6; // rax\n  unsigned __int8 *v8; // [rsp+18h] [rbp-28h]\n  __int64 v9[3]; // [rsp+28h] [rbp-18h] BYREF\n\n  v8 = a1;\n  if ( (unsigned int)((char)*a1 - 48) > 9 )\n  {\n    v8 = a1 + 1;\n    *a3 = *a1;\n  }\n  result = (_DWORD *)*v8;\n  if ( (_BYTE)result )\n  {\n    if ( (unsigned int)sub_40A9E8(v8, 0LL, 10LL, v9, &locale) || v9[0] <= 0 || v9[0] > 0x7FFFFFFF )\n    {\n      v5 = sub_405B47(v8);\n      v6 = gettext(\"`-%c' extra characters or invalid number in the argument: %s\");\n      error(0, 0, v6, (unsigned int)a2, v5);\n      sub_40517C(1LL);\n    }\n    result = a4;\n    *a4 = v9[0];\n  }\n  return result;\n}\n"], [4205225, "sub_402AA9", "void *__fastcall sub_402AA9(int a1)\n{\n  char *v1; // rax\n  int v2; // eax\n  void *result; // rax\n  int v4; // [rsp+14h] [rbp-1Ch]\n  int v5; // [rsp+18h] [rbp-18h]\n\n  v4 = 0;\n  dword_61037C = dword_610244 - 10;\n  if ( dword_610244 - 10 <= 0 )\n  {\n    byte_610240 = 0;\n    byte_610375 = 1;\n  }\n  if ( byte_610240 != 1 )\n    dword_61037C = dword_610244;\n  if ( byte_6103D2 )\n    dword_61037C /= 2;\n  if ( !a1 )\n    byte_610370 = 0;\n  if ( byte_610370 )\n    dword_61025C = a1;\n  if ( byte_610241 )\n    byte_61037B = 1;\n  if ( dword_61025C <= 1 )\n  {\n    byte_610241 = 0;\n  }\n  else\n  {\n    if ( byte_6103D9 != 1 )\n    {\n      if ( byte_610381 )\n        dest = off_610290[0];\n      else\n        dest = off_610288[0];\n      dword_6103DC = 1;\n      byte_6103D9 = 1;\n    }\n    else if ( byte_610381 != 1 && *dest == 9 )\n    {\n      dest = off_610288[0];\n    }\n    byte_610380 = 1;\n    byte_610389 = 1;\n  }\n  if ( byte_610381 )\n    byte_610380 = 0;\n  if ( byte_6103C0 )\n  {\n    dword_61026C = dword_610274;\n    if ( byte_610268 == 9 )\n      dword_6103C4 = 8 - dword_610278 % 8 + dword_610278;\n    else\n      dword_6103C4 = dword_610278 + 1;\n    if ( byte_610370 )\n      v4 = dword_6103C4;\n    v5 = dword_610278;\n    dword_6103BC = 1;\n    while ( v5 > 0 )\n    {\n      dword_6103BC *= 10;\n      --v5;\n    }\n  }\n  dword_610384 = (dword_610248 - v4 + (1 - dword_61025C) * dword_6103DC) / dword_61025C;\n  if ( dword_610384 <= 0 )\n  {\n    v1 = gettext(\"page width too narrow\");\n    error(1, 0, v1);\n  }\n  if ( byte_6103C0 )\n  {\n    free(ptr);\n    ptr = (char *)sub_40A750(2 * dword_610278);\n  }\n  free(qword_610418);\n  v2 = dword_610250;\n  if ( dword_610250 < 8 )\n    v2 = 8;\n  result = (void *)sub_40A750(v2);\n  qword_610418 = result;\n  return result;\n}\n"], [4205929, "sub_402D69", "__int64 __fastcall sub_402D69(int a1, _QWORD *a2)\n{\n  unsigned int v4; // eax\n  _QWORD *v5; // [rsp+0h] [rbp-30h]\n  int v6; // [rsp+10h] [rbp-20h]\n  int v7; // [rsp+14h] [rbp-1Ch]\n  char *i; // [rsp+18h] [rbp-18h]\n  _QWORD *v9; // [rsp+18h] [rbp-18h]\n  char *v10; // [rsp+18h] [rbp-18h]\n  __int64 v11; // [rsp+20h] [rbp-10h]\n  FILE *v12; // [rsp+28h] [rbp-8h]\n\n  v5 = a2;\n  dword_6103D4 = 0;\n  free(qword_610340);\n  qword_610340 = (void *)sub_40A607(dword_61025C, 64LL);\n  if ( byte_610370 )\n  {\n    v7 = a1;\n    for ( i = (char *)qword_610340; v7--; i += 64 )\n    {\n      if ( (unsigned __int8)sub_403161(*v5, i) != 1 )\n      {\n        i -= 64;\n        --dword_61025C;\n      }\n      ++v5;\n    }\n    if ( !dword_61025C )\n      return 0LL;\n    sub_40352D(&locale, 0xFFFFFFFFLL);\n  }\n  else\n  {\n    v9 = qword_610340;\n    if ( a1 <= 0 )\n    {\n      v9[1] = gettext(\"standard input\");\n      *v9 = stdin;\n      byte_610379 = 1;\n      *((_DWORD *)v9 + 4) = 0;\n      *((_BYTE *)v9 + 57) = 0;\n      ++dword_6103D4;\n      sub_40352D(&locale, 0xFFFFFFFFLL);\n      *((_DWORD *)v9 + 11) = 0;\n    }\n    else\n    {\n      if ( (unsigned __int8)sub_403161(*a2, qword_610340) != 1 )\n        return 0LL;\n      v4 = fileno((FILE *)*v9);\n      sub_40352D(*a2, v4);\n      *((_DWORD *)v9 + 11) = 0;\n    }\n    v11 = v9[1];\n    v12 = (FILE *)*v9;\n    v6 = dword_61025C - 1;\n    v10 = (char *)(v9 + 8);\n    while ( v6 )\n    {\n      *((_QWORD *)v10 + 1) = v11;\n      *(_QWORD *)v10 = v12;\n      *((_DWORD *)v10 + 4) = 0;\n      v10[57] = 0;\n      *((_DWORD *)v10 + 11) = 0;\n      --v6;\n      v10 += 64;\n    }\n  }\n  dword_6103A8 = dword_6103D4;\n  return 1LL;\n}\n"], [4206474, "sub_402F8A", "_QWORD *sub_402F8A()\n{\n  bool v0; // al\n  bool v1; // al\n  _QWORD *result; // rax\n  int i; // [rsp+0h] [rbp-14h]\n  int v4; // [rsp+4h] [rbp-10h]\n  int v5; // [rsp+8h] [rbp-Ch]\n  _QWORD *v6; // [rsp+Ch] [rbp-8h]\n\n  if ( byte_610380 != 1 )\n  {\n    v5 = 0;\n  }\n  else if ( byte_610370 && byte_6103C0 )\n  {\n    v5 = dword_610390 + dword_610384 + dword_6103C4;\n  }\n  else\n  {\n    v5 = dword_610384 + dword_610390;\n  }\n  v4 = dword_6103DC + dword_610390;\n  v6 = qword_610340;\n  for ( i = 1; i < dword_61025C; ++i )\n  {\n    if ( byte_610241 )\n    {\n      v6[4] = sub_403ED4;\n      v6[3] = sub_404C92;\n    }\n    else\n    {\n      v6[4] = sub_404537;\n      v6[3] = sub_4048CB;\n    }\n    v0 = byte_6103C0 && (byte_610370 != 1 || i == 1);\n    *((_BYTE *)v6 + 56) = v0;\n    *((_DWORD *)v6 + 13) = v4;\n    if ( byte_610380 != 1 )\n    {\n      v4 = 0;\n      v5 = 0;\n    }\n    else\n    {\n      v4 = dword_6103DC + v5;\n      v5 += dword_610384 + dword_6103DC;\n    }\n    v6 += 8;\n  }\n  if ( byte_610241 && byte_61037B )\n  {\n    v6[4] = sub_403ED4;\n    v6[3] = sub_404C92;\n  }\n  else\n  {\n    v6[4] = sub_404537;\n    v6[3] = sub_4048CB;\n  }\n  v1 = byte_6103C0 && (byte_610370 != 1 || i == 1);\n  *((_BYTE *)v6 + 56) = v1;\n  result = v6;\n  *((_DWORD *)v6 + 13) = v4;\n  return result;\n}\n"], [4206945, "sub_403161", "__int64 __fastcall sub_403161(const char *a1, __int64 a2)\n{\n  int *v2; // rax\n  __int64 result; // rax\n\n  if ( !strcmp(a1, \"-\") )\n  {\n    *(_QWORD *)(a2 + 8) = gettext(\"standard input\");\n    *(_QWORD *)a2 = stdin;\n    byte_610379 = 1;\n  }\n  else\n  {\n    *(_QWORD *)(a2 + 8) = a1;\n    *(_QWORD *)a2 = sub_4055E7(a1, \"r\");\n  }\n  if ( *(_QWORD *)a2 )\n  {\n    sub_4055AD(*(_QWORD *)a2, 2LL);\n    *(_DWORD *)(a2 + 16) = 0;\n    *(_BYTE *)(a2 + 57) = 0;\n    ++dword_6103D4;\n    result = 1LL;\n  }\n  else\n  {\n    byte_61039C = 1;\n    if ( byte_6103D8 != 1 )\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", a1);\n    }\n    result = 0LL;\n  }\n  return result;\n}\n"], [4207196, "sub_40325C", "__int64 __fastcall sub_40325C(_QWORD *a1)\n{\n  __int64 result; // rax\n  const char *v2; // rbx\n  int *v3; // rax\n  const char *v4; // rbx\n  int *v5; // rax\n  int i; // [rsp+14h] [rbp-1Ch]\n  _DWORD *v7; // [rsp+18h] [rbp-18h]\n\n  result = *((unsigned int *)a1 + 4);\n  if ( (_DWORD)result != 3 )\n  {\n    if ( ferror_unlocked((FILE *)*a1) )\n    {\n      v2 = (const char *)a1[1];\n      v3 = __errno_location();\n      error(1, *v3, \"%s\", v2);\n    }\n    if ( fileno((FILE *)*a1) && (unsigned int)sub_40B42C(*a1) )\n    {\n      v4 = (const char *)a1[1];\n      v5 = __errno_location();\n      error(1, *v5, \"%s\", v4);\n    }\n    if ( byte_610370 != 1 )\n    {\n      v7 = qword_610340;\n      for ( i = dword_61025C; i; --i )\n      {\n        v7[4] = 3;\n        if ( !v7[11] )\n          v7[12] = 0;\n        v7 += 16;\n      }\n    }\n    else\n    {\n      *((_DWORD *)a1 + 4) = 3;\n      *((_DWORD *)a1 + 12) = 0;\n    }\n    result = (unsigned int)--dword_6103A8;\n  }\n  return result;\n}\n"], [4207493, "sub_403385", "__int64 __fastcall sub_403385(__int64 a1)\n{\n  int i; // [rsp+Ch] [rbp-Ch]\n  _DWORD *v3; // [rsp+10h] [rbp-8h]\n\n  if ( byte_610370 != 1 )\n  {\n    v3 = qword_610340;\n    for ( i = dword_61025C; i; --i )\n    {\n      if ( byte_610241 )\n        v3[4] = 1;\n      else\n        v3[4] = 2;\n      v3 += 16;\n    }\n  }\n  else\n  {\n    *(_DWORD *)(a1 + 16) = 2;\n  }\n  *(_DWORD *)(a1 + 48) = 0;\n  return (unsigned int)--dword_6103A8;\n}\n"], [4207628, "sub_40340C", "__int64 sub_40340C()\n{\n  __int64 result; // rax\n  int v1; // [rsp+0h] [rbp-Ch]\n  _DWORD *v2; // [rsp+4h] [rbp-8h]\n\n  v1 = dword_61025C;\n  v2 = qword_610340;\n  while ( v1 )\n  {\n    if ( v2[4] == 2 )\n    {\n      v2[4] = 0;\n      ++dword_6103A8;\n    }\n    --v1;\n    v2 += 16;\n  }\n  result = (unsigned __int8)byte_610241;\n  if ( byte_610241 )\n  {\n    result = *((unsigned int *)qword_610340 + 4);\n    dword_6103A8 = result != 3;\n  }\n  return result;\n}\n"], [4207757, "sub_40348D", "__int64 __fastcall sub_40348D(int a1, _QWORD *a2)\n{\n  __int64 result; // rax\n\n  sub_402AA9(a1);\n  result = (unsigned int)sub_402D69(a1, a2) ^ 1;\n  if ( !(_BYTE)result )\n  {\n    if ( byte_610241 )\n      sub_403BF5();\n    if ( (unsigned __int64)qword_6103A0 <= 1 )\n    {\n      qword_6103B0 = 1LL;\n    }\n    else\n    {\n      result = (unsigned int)sub_4045D9(qword_6103A0) ^ 1;\n      if ( (_BYTE)result )\n        return result;\n      qword_6103B0 = qword_6103A0;\n    }\n    sub_402F8A();\n    dword_6103B8 = dword_61026C;\n    do\n      result = sub_4038C1();\n    while ( (_BYTE)result );\n  }\n  return result;\n}\n"], [4207917, "sub_40352D", "__int64 __fastcall sub_40352D(const char *a1, int a2)\n{\n  __int64 v2; // rdx\n  const char *v3; // rax\n  int v4; // ebx\n  int v5; // ebx\n  unsigned int v6; // ebx\n  __int64 result; // rax\n  unsigned int v9; // [rsp+14h] [rbp-CCh]\n  char *s; // [rsp+18h] [rbp-C8h]\n  struct tm *v11; // [rsp+20h] [rbp-C0h]\n  __int64 v12; // [rsp+28h] [rbp-B8h]\n  time_t timer; // [rsp+30h] [rbp-B0h] BYREF\n  __int64 v14; // [rsp+38h] [rbp-A8h]\n  struct stat stat_buf; // [rsp+40h] [rbp-A0h] BYREF\n\n  if ( !strcmp(a1, \"-\") )\n    a2 = -1;\n  if ( a2 < 0 || (unsigned int)sub_40BA00(a2, &stat_buf) )\n  {\n    if ( !qword_610430 )\n      sub_4056CD(&qword_610430);\n    timer = qword_610430;\n    v14 = qword_610438;\n  }\n  else\n  {\n    timer = sub_401BB4((__int64)&stat_buf);\n    v14 = v2;\n  }\n  v9 = v14;\n  v11 = localtime(&timer);\n  if ( v11 )\n  {\n    v12 = sub_409D41(0LL, -1LL, qword_6103F8, v11, 0LL, v9) + 1;\n    s = (char *)sub_40A750(v12);\n    sub_409D41(s, v12, qword_6103F8, v11, 0LL, v9);\n  }\n  else\n  {\n    s = (char *)sub_40A750(33LL);\n    sprintf(s, \"%ld.%09d\", timer, v9);\n  }\n  free(qword_610400);\n  qword_610400 = s;\n  if ( qword_6103F0 )\n  {\n    v3 = (const char *)qword_6103F0;\n  }\n  else if ( a2 < 0 )\n  {\n    v3 = &locale;\n  }\n  else\n  {\n    v3 = a1;\n  }\n  qword_610408 = (__int64)v3;\n  v4 = dword_610248;\n  v5 = v4 - sub_40577E(qword_610400, 0LL);\n  v6 = v5 - sub_40577E(qword_610408, 0LL);\n  result = v6;\n  dword_610410 = v6;\n  return result;\n}\n"], [4208493, "sub_40376D", "void *sub_40376D()\n{\n  void *result; // rax\n  int v1; // [rsp+4h] [rbp-Ch]\n  int v2; // [rsp+4h] [rbp-Ch]\n  _DWORD *v3; // [rsp+8h] [rbp-8h]\n  char *v4; // [rsp+8h] [rbp-8h]\n\n  if ( byte_610241 )\n  {\n    sub_403CB7();\n    v1 = dword_61025C - 1;\n    v3 = qword_610340;\n    while ( v1 )\n    {\n      v3[12] = v3[11];\n      --v1;\n      v3 += 16;\n    }\n    if ( byte_61037B )\n    {\n      result = v3;\n      v3[12] = v3[11];\n    }\n    else\n    {\n      result = v3;\n      if ( v3[4] )\n        v3[12] = 0;\n      else\n        v3[12] = dword_61037C;\n    }\n  }\n  else\n  {\n    v2 = dword_61025C;\n    result = qword_610340;\n    v4 = (char *)qword_610340;\n    while ( v2 )\n    {\n      result = v4;\n      if ( *((_DWORD *)v4 + 4) )\n        *((_DWORD *)v4 + 12) = 0;\n      else\n        *((_DWORD *)v4 + 12) = dword_61037C;\n      --v2;\n      v4 += 64;\n    }\n  }\n  return result;\n}\n"], [4208713, "sub_403849", "__int64 __fastcall sub_403849(__int64 a1)\n{\n  __int64 result; // rax\n\n  dword_6103E4 = *(_DWORD *)(a1 + 52);\n  if ( dword_6103E4 - dword_6103DC > 0 )\n  {\n    sub_4040D2((unsigned int)(dword_6103E4 - dword_6103DC));\n    dword_6103E4 = 0;\n  }\n  if ( byte_6103D9 )\n    sub_40441D();\n  result = *(unsigned __int8 *)(a1 + 56);\n  if ( (_BYTE)result )\n    result = sub_403F34(a1);\n  return result;\n}\n"], [4208833, "sub_4038C1", "__int64 sub_4038C1()\n{\n  bool v1; // [rsp+Fh] [rbp-11h]\n  int v2; // [rsp+10h] [rbp-10h]\n  int v3; // [rsp+10h] [rbp-10h]\n  int v4; // [rsp+14h] [rbp-Ch]\n  int *i; // [rsp+18h] [rbp-8h]\n  char *v6; // [rsp+18h] [rbp-8h]\n\n  sub_40376D();\n  if ( !(unsigned int)sub_401BCA() )\n    return 0LL;\n  if ( byte_610240 )\n    byte_610377 = 1;\n  byte_6103E8 = 0;\n  v1 = 0;\n  v4 = dword_61037C;\n  if ( byte_6103D2 )\n    v4 = 2 * dword_61037C;\nLABEL_39:\n  if ( v4 > 0 && (int)sub_401BCA() > 0 )\n  {\n    dword_610394 = 0;\n    dword_61038C = 0;\n    dword_6103E0 = 0;\n    byte_6103E8 = 0;\n    byte_610371 = 0;\n    byte_610372 = 1;\n    v2 = 1;\n    for ( i = (int *)qword_610340; ; i += 16 )\n    {\n      if ( v2 > dword_61025C )\n      {\nLABEL_32:\n        if ( byte_6103E8 )\n        {\n          putchar_unlocked(10);\n          --v4;\n        }\n        if ( (int)sub_401BCA() > 0 || byte_610240 == 1 )\n        {\n          if ( byte_6103D2 && v1 )\n          {\n            putchar_unlocked(10);\n            --v4;\n          }\n          goto LABEL_39;\n        }\n        goto LABEL_41;\n      }\n      dword_610398 = 0;\n      if ( i[12] <= 0 && i[4] != 1 )\n        break;\n      byte_610373 = 0;\n      dword_6103E4 = i[13];\n      if ( (*((unsigned __int8 (__fastcall **)(int *))i + 3))(i) != 1 )\n        sub_404169(i);\n      v1 = (v1 | (unsigned __int8)byte_6103E8) != 0;\n      if ( --i[12] <= 0 && (int)sub_401BCA() <= 0 )\n        goto LABEL_32;\n      if ( byte_610370 && i[4] )\n      {\n        if ( byte_610372 )\n        {\n          byte_610371 = 1;\n          goto LABEL_28;\n        }\n        if ( i[4] == 3 || i[4] == 2 && byte_610373 )\n          goto LABEL_27;\n      }\nLABEL_28:\n      if ( byte_6103D9 )\n        ++dword_6103E0;\n      ++v2;\n    }\n    if ( !byte_610370 )\n      goto LABEL_28;\n    if ( byte_610372 )\n    {\n      byte_610371 = 1;\n      goto LABEL_28;\n    }\nLABEL_27:\n    sub_403849((__int64)i);\n    goto LABEL_28;\n  }\nLABEL_41:\n  if ( !v4 )\n  {\n    v3 = 1;\n    v6 = (char *)qword_610340;\n    while ( v3 <= dword_61025C )\n    {\n      if ( !*((_DWORD *)v6 + 4) )\n        v6[57] = 1;\n      ++v3;\n      v6 += 64;\n    }\n  }\n  byte_6103E8 = v1;\n  if ( v1 && byte_610240 )\n  {\n    sub_404129((unsigned int)(v4 + 5));\n  }\n  else if ( byte_610375 && byte_610376 )\n  {\n    putchar_unlocked(12);\n    byte_610376 = 0;\n  }\n  if ( ++qword_6103B0 > (unsigned __int64)qword_610260 )\n    return 0LL;\n  sub_40340C();\n  return 1LL;\n}\n"], [4209653, "sub_403BF5", "void *sub_403BF5()\n{\n  __int64 v0; // rax\n  void *result; // rax\n  int v2; // [rsp+8h] [rbp-8h]\n  int v3; // [rsp+Ch] [rbp-4h]\n\n  v2 = dword_61037C * dword_61025C;\n  v3 = dword_61037C * dword_61025C * (dword_610384 + 1);\n  free(qword_610360);\n  qword_610360 = (void *)sub_40A750(4LL * (v2 + 1));\n  free(qword_610368);\n  qword_610368 = (void *)sub_40A750(4LL * v2);\n  free(qword_610348);\n  if ( byte_6103D9 )\n    v0 = 2 * v3;\n  else\n    v0 = v3;\n  qword_610358 = v0;\n  result = (void *)sub_40A750(v0);\n  qword_610348 = result;\n  return result;\n}\n"], [4209847, "sub_403CB7", "__int64 sub_403CB7()\n{\n  unsigned int v0; // eax\n  __int64 result; // rax\n  int v2; // [rsp+4h] [rbp-1Ch]\n  int v3; // [rsp+4h] [rbp-1Ch]\n  int i; // [rsp+8h] [rbp-18h]\n  unsigned int v5; // [rsp+Ch] [rbp-14h]\n  int v6; // [rsp+10h] [rbp-10h]\n  int v7; // [rsp+14h] [rbp-Ch]\n  _DWORD *v8; // [rsp+18h] [rbp-8h]\n  _DWORD *v9; // [rsp+18h] [rbp-8h]\n\n  v5 = 0;\n  dword_610350 = 0;\n  v6 = 0;\n  if ( byte_61037B )\n    v7 = dword_61025C;\n  else\n    v7 = dword_61025C - 1;\n  v2 = 1;\n  v8 = qword_610340;\n  while ( v2 <= v7 )\n  {\n    v8[11] = 0;\n    ++v2;\n    v8 += 16;\n  }\n  v3 = 1;\n  v9 = qword_610340;\n  while ( v3 <= v7 && dword_6103A8 )\n  {\n    v9[10] = v5;\n    for ( i = dword_61037C; i && dword_6103A8; --i )\n    {\n      if ( !v9[4] )\n      {\n        dword_610398 = 0;\n        if ( (unsigned __int8)sub_4048CB(v9) != 1 )\n          sub_404169(v9);\n        if ( !v9[4] || v6 != dword_610350 )\n        {\n          ++v9[11];\n          *((_DWORD *)qword_610360 + v5) = v6;\n          v0 = v5++;\n          *((_DWORD *)qword_610368 + v0) = dword_610398;\n          v6 = dword_610350;\n        }\n      }\n    }\n    ++v3;\n    v9 += 16;\n  }\n  *((_DWORD *)qword_610360 + v5) = v6;\n  result = (unsigned __int8)byte_61037B;\n  if ( byte_61037B )\n    result = sub_403E5C(v5);\n  return result;\n}\n"], [4210268, "sub_403E5C", "__int64 __fastcall sub_403E5C(int a1)\n{\n  __int64 result; // rax\n  int v2; // [rsp+10h] [rbp-14h]\n  int v3; // [rsp+14h] [rbp-10h]\n  int v4; // [rsp+18h] [rbp-Ch]\n  _DWORD *i; // [rsp+1Ch] [rbp-8h]\n\n  v4 = 0;\n  v2 = 1;\n  for ( i = qword_610340; ; i += 16 )\n  {\n    result = (unsigned int)dword_61025C;\n    if ( v2 > dword_61025C )\n      break;\n    v3 = a1 / dword_61025C;\n    if ( a1 % dword_61025C >= v2 )\n      ++v3;\n    i[11] = v3;\n    i[10] = v4;\n    v4 += v3;\n    ++v2;\n  }\n  return result;\n}\n"], [4210388, "sub_403ED4", "__int64 __fastcall sub_403ED4(unsigned __int8 a1)\n{\n  unsigned int v1; // eax\n  unsigned __int8 *v2; // rdx\n  __int64 result; // rax\n\n  if ( (unsigned int)dword_610350 >= (unsigned __int64)qword_610358 )\n    qword_610348 = (void *)sub_40A7E6(qword_610348, &qword_610358);\n  v1 = dword_610350++;\n  v2 = (unsigned __int8 *)qword_610348 + v1;\n  result = a1;\n  *v2 = a1;\n  return result;\n}\n"], [4210484, "sub_403F34", "__int64 __fastcall sub_403F34(__int64 a1)\n{\n  char *v1; // rax\n  int v2; // eax\n  __int64 result; // rax\n  int i; // [rsp+10h] [rbp-10h]\n  int v5; // [rsp+10h] [rbp-10h]\n  char *v6; // [rsp+18h] [rbp-8h]\n\n  if ( dword_6103B8 >= dword_6103BC )\n    sprintf(ptr, \"%0*d\", dword_610278, (unsigned int)(dword_6103B8 % dword_6103BC));\n  else\n    sprintf(ptr, \"%*d\", dword_610278, (unsigned int)dword_6103B8);\n  ++dword_6103B8;\n  v6 = ptr;\n  for ( i = dword_610278; i > 0; --i )\n  {\n    v1 = v6++;\n    (*(void (__fastcall **)(_QWORD))(a1 + 32))((unsigned int)*v1);\n  }\n  if ( dword_61025C <= 1 )\n  {\n    (*(void (__fastcall **)(_QWORD))(a1 + 32))((unsigned int)byte_610268);\n    if ( byte_610268 == 9 )\n      dword_610394 += dword_610258 - dword_610394 % dword_610258;\n  }\n  else if ( byte_610268 == 9 )\n  {\n    v5 = dword_6103C4 - dword_610278;\n    while ( 1 )\n    {\n      v2 = v5--;\n      if ( v2 <= 0 )\n        break;\n      (*(void (__fastcall **)(__int64))(a1 + 32))(32LL);\n    }\n  }\n  else\n  {\n    (*(void (__fastcall **)(_QWORD))(a1 + 32))((unsigned int)byte_610268);\n  }\n  result = (unsigned __int8)byte_610380;\n  if ( byte_610380 )\n  {\n    result = (unsigned __int8)byte_610370 ^ 1u;\n    if ( byte_610370 != 1 )\n    {\n      result = (unsigned int)(dword_610398 + dword_6103C4);\n      dword_610398 += dword_6103C4;\n    }\n  }\n  return result;\n}\n"], [4210898, "sub_4040D2", "__int64 __fastcall sub_4040D2(int a1)\n{\n  __int64 result; // rax\n  int v2; // [rsp+1Ch] [rbp-4h]\n\n  v2 = dword_610394;\n  if ( byte_610389 )\n  {\n    result = (unsigned int)(a1 - dword_610394);\n    dword_61038C = a1 - dword_610394;\n  }\n  else\n  {\n    while ( ++v2 <= a1 )\n      putchar_unlocked(32);\n    result = (unsigned int)a1;\n    dword_610394 = a1;\n  }\n  return result;\n}\n"], [4210985, "sub_404129", "int __fastcall sub_404129(int a1)\n{\n  int result; // eax\n  int i; // [rsp+1Ch] [rbp-4h]\n\n  if ( byte_610378 )\n    return putchar_unlocked(12);\n  result = a1;\n  for ( i = a1; i; --i )\n    result = putchar_unlocked(10);\n  return result;\n}\n"], [4211049, "sub_404169", "int __fastcall sub_404169(FILE **a1)\n{\n  int result; // eax\n  int c; // [rsp+14h] [rbp-Ch]\n  FILE *stream; // [rsp+18h] [rbp-8h]\n\n  stream = *a1;\n  for ( result = getc_unlocked(*a1); result != 10; result = getc_unlocked(stream) )\n  {\n    if ( result == 12 )\n    {\n      c = getc_unlocked(stream);\n      if ( c != 10 )\n        ungetc(c, stream);\n      if ( byte_610375 )\n        byte_610376 = 1;\n      return sub_403385((__int64)a1);\n    }\n    if ( result == -1 )\n      return sub_40325C(a1);\n  }\n  return result;\n}\n"], [4211193, "sub_4041F9", "__int64 __fastcall sub_4041F9(__int64 a1, int a2)\n{\n  __int64 result; // rax\n  unsigned __int8 v3; // [rsp+17h] [rbp-19h]\n  int c; // [rsp+18h] [rbp-18h]\n  int ca; // [rsp+18h] [rbp-18h]\n  int i; // [rsp+1Ch] [rbp-14h]\n  char *v7; // [rsp+20h] [rbp-10h]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = *(FILE **)a1;\n  v3 = 0;\n  c = getc_unlocked(*(FILE **)a1);\n  if ( c == 12 )\n  {\n    if ( *(_BYTE *)(a1 + 57) )\n    {\n      c = getc_unlocked(stream);\n      if ( c == 10 )\n        c = getc_unlocked(stream);\n    }\n  }\n  *(_BYTE *)(a1 + 57) = 0;\n  if ( c == 12 )\n    v3 = 1;\n  if ( byte_610420 )\n    *(_BYTE *)(a1 + 57) = 1;\n  while ( c != 10 )\n  {\n    if ( c == 12 )\n    {\n      if ( byte_610420 )\n      {\n        if ( byte_610370 != 1 )\n        {\n          v7 = (char *)qword_610340;\n          for ( i = dword_61025C; i; --i )\n          {\n            v7[57] = 0;\n            v7 += 64;\n          }\n        }\n        else\n        {\n          *(_BYTE *)(a1 + 57) = 0;\n        }\n      }\n      ca = getc_unlocked(stream);\n      if ( ca != 10 )\n        ungetc(ca, stream);\n      sub_403385(a1);\n      break;\n    }\n    if ( c == -1 )\n    {\n      sub_40325C((_QWORD *)a1);\n      break;\n    }\n    c = getc_unlocked(stream);\n  }\n  result = (unsigned __int8)byte_610270;\n  if ( byte_610270 )\n  {\n    result = (unsigned __int8)byte_610370 ^ 1u;\n    if ( byte_610370 != 1 || a2 == 1 )\n    {\n      result = v3 ^ 1u;\n      if ( v3 != 1 )\n        result = (unsigned int)++dword_61026C;\n    }\n  }\n  return result;\n}\n"], [4211585, "sub_404381", "__int64 sub_404381()\n{\n  __int64 result; // rax\n  int v1; // [rsp+4h] [rbp-Ch]\n  int v2; // [rsp+8h] [rbp-8h]\n  int v3; // [rsp+Ch] [rbp-4h]\n\n  v1 = dword_610394;\n  v2 = dword_61038C + dword_610394;\n  while ( v2 - v1 > 1 )\n  {\n    v3 = dword_610258 - v1 % dword_610258 + v1;\n    if ( v3 > v2 )\n      break;\n    putchar_unlocked(byte_610254);\n    v1 = v3;\n  }\n  while ( ++v1 <= v2 )\n    putchar_unlocked(32);\n  result = (unsigned int)v2;\n  dword_610394 = v2;\n  dword_61038C = 0;\n  return result;\n}\n"], [4211741, "sub_40441D", "__int64 sub_40441D()\n{\n  __int64 result; // rax\n  char *v1; // rax\n  int v2; // eax\n  int v3; // [rsp+4h] [rbp-Ch]\n  char *v4; // [rsp+8h] [rbp-8h]\n\n  v3 = dword_6103DC;\n  v4 = dest;\n  if ( dword_6103E0 > 0 )\n  {\n    while ( 1 )\n    {\n      result = (unsigned int)dword_6103E0;\n      if ( dword_6103E0 <= 0 )\n        break;\n      while ( 1 )\n      {\n        v2 = v3--;\n        if ( v2 <= 0 )\n          break;\n        if ( *v4 == 32 )\n        {\n          ++v4;\n          ++dword_61038C;\n        }\n        else\n        {\n          if ( dword_61038C > 0 )\n            sub_404381();\n          v1 = v4++;\n          putchar_unlocked(*v1);\n          ++dword_610394;\n        }\n      }\n      if ( dword_61038C > 0 )\n        sub_404381();\n      --dword_6103E0;\n    }\n  }\n  else\n  {\n    result = (unsigned int)dword_61038C;\n    if ( dword_61038C > 0 )\n      result = sub_404381();\n  }\n  return result;\n}\n"], [4211957, "sub_4044F5", "__int64 __fastcall sub_4044F5(__int64 a1, unsigned int a2, char *a3)\n{\n  char *v3; // rax\n  __int64 result; // rax\n\n  while ( 1 )\n  {\n    result = a2--;\n    if ( !(_DWORD)result )\n      break;\n    v3 = a3++;\n    (*(void (__fastcall **)(_QWORD))(a1 + 32))((unsigned int)*v3);\n  }\n  return result;\n}\n"], [4212023, "sub_404537", "int __fastcall sub_404537(signed __int8 a1)\n{\n  const unsigned __int16 *v2; // rbx\n\n  if ( byte_610389 )\n  {\n    if ( a1 == 32 )\n      return ++dword_61038C;\n    if ( dword_61038C > 0 )\n      sub_404381();\n    v2 = *__ctype_b_loc();\n    if ( (v2[(unsigned __int8)sub_401A8D(a1)] & 0x4000) != 0 )\n    {\n      ++dword_610394;\n    }\n    else if ( a1 == 8 )\n    {\n      --dword_610394;\n    }\n  }\n  return putchar_unlocked(a1);\n}\n"], [4212185, "sub_4045D9", "bool __fastcall sub_4045D9(unsigned __int64 a1)\n{\n  char *v1; // rax\n  int j; // [rsp+18h] [rbp-18h]\n  int v4; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+1Ch] [rbp-14h]\n  int v6; // [rsp+1Ch] [rbp-14h]\n  unsigned __int64 i; // [rsp+20h] [rbp-10h]\n  _DWORD *v8; // [rsp+28h] [rbp-8h]\n  _DWORD *v9; // [rsp+28h] [rbp-8h]\n  _DWORD *v10; // [rsp+28h] [rbp-8h]\n\n  for ( i = 1LL; i < a1; ++i )\n  {\n    for ( j = 1; j < dword_61037C; ++j )\n    {\n      v4 = 1;\n      v8 = qword_610340;\n      while ( v4 <= dword_61025C )\n      {\n        if ( !v8[4] )\n          sub_4041F9((__int64)v8, v4);\n        ++v4;\n        v8 += 16;\n      }\n    }\n    byte_610420 = 1;\n    v5 = 1;\n    v9 = qword_610340;\n    while ( v5 <= dword_61025C )\n    {\n      if ( !v9[4] )\n        sub_4041F9((__int64)v9, v5);\n      ++v5;\n      v9 += 16;\n    }\n    if ( byte_610241 )\n    {\n      v6 = 1;\n      v10 = qword_610340;\n      while ( v6 <= dword_61025C )\n      {\n        if ( v10[4] != 3 )\n          v10[4] = 2;\n        ++v6;\n        v10 += 16;\n      }\n    }\n    sub_40340C();\n    byte_610420 = 0;\n    if ( dword_6103A8 <= 0 )\n    {\n      v1 = gettext(\"starting page number %lu exceeds page count %lu\");\n      error(0, 0, v1, a1, i);\n      return dword_6103A8 > 0;\n    }\n  }\n  return dword_6103A8 > 0;\n}\n"], [4212554, "sub_40474A", "unsigned __int64 sub_40474A()\n{\n  char *v0; // rax\n  __int64 v1; // rbx\n  char *v2; // rax\n  int v3; // eax\n  int v5; // [rsp+24h] [rbp-13Ch]\n  char s[280]; // [rsp+30h] [rbp-130h] BYREF\n  unsigned __int64 v7; // [rsp+148h] [rbp-18h]\n\n  v7 = __readfsqword(0x28u);\n  dword_610394 = 0;\n  sub_4040D2(dword_610390);\n  sub_404381();\n  if ( !qword_6103B0 )\n  {\n    v0 = gettext(\"page number overflow\");\n    error(1, 0, v0);\n  }\n  v1 = qword_6103B0;\n  v2 = gettext(\"Page %lu\");\n  sprintf(s, v2, v1);\n  LODWORD(v1) = dword_610410;\n  v5 = v1 - sub_40577E(s, 0LL);\n  v3 = 0;\n  if ( v5 >= 0 )\n    v3 = v5;\n  printf(\n    \"\\n\\n%*s%s%*s%s%*s%s\\n\\n\\n\",\n    dword_610390,\n    &locale,\n    (const char *)qword_610400,\n    v3 >> 1,\n    \" \",\n    (const char *)qword_610408,\n    v3 - (v3 >> 1),\n    \" \",\n    s);\n  byte_610377 = 0;\n  dword_610394 = 0;\n  return __readfsqword(0x28u) ^ v7;\n}\n"], [4212939, "sub_4048CB", "__int64 __fastcall sub_4048CB(__int64 a1)\n{\n  int v2; // eax\n  unsigned int v3; // eax\n  int c; // [rsp+14h] [rbp-1Ch]\n  int ca; // [rsp+14h] [rbp-1Ch]\n  int cb; // [rsp+14h] [rbp-1Ch]\n  unsigned int v7; // [rsp+18h] [rbp-18h]\n  int v8; // [rsp+1Ch] [rbp-14h]\n  int v9; // [rsp+20h] [rbp-10h]\n  int v10; // [rsp+20h] [rbp-10h]\n  int v11; // [rsp+24h] [rbp-Ch]\n  char *v12; // [rsp+28h] [rbp-8h]\n\n  c = getc_unlocked(*(FILE **)a1);\n  v9 = dword_610398;\n  if ( c == 12 )\n  {\n    if ( *(_BYTE *)(a1 + 57) )\n    {\n      c = getc_unlocked(*(FILE **)a1);\n      if ( c == 10 )\n        c = getc_unlocked(*(FILE **)a1);\n    }\n  }\n  *(_BYTE *)(a1 + 57) = 0;\n  if ( c != 10 )\n  {\n    if ( c == 12 )\n    {\n      ca = getc_unlocked(*(FILE **)a1);\n      if ( ca != 10 )\n        ungetc(ca, *(FILE **)a1);\n      byte_610373 = 1;\n      if ( byte_610377 && byte_610241 != 1 )\n      {\n        byte_6103E8 = 1;\n        sub_40474A();\n      }\n      else if ( byte_610375 )\n      {\n        byte_610376 = 1;\n      }\n      goto LABEL_51;\n    }\n    if ( c == -1 )\n    {\nLABEL_17:\n      sub_40325C((_QWORD *)a1);\n      return 1LL;\n    }\n    v7 = sub_404E56((unsigned int)(char)c);\n  }\n  if ( byte_610380 && dword_610398 > dword_610384 )\n  {\n    dword_610398 = v9;\n    return 0LL;\n  }\n  if ( *(__int64 (__fastcall **)(unsigned __int8))(a1 + 32) != sub_403ED4 )\n  {\n    byte_6103E8 = 1;\n    if ( byte_610377 && byte_610241 != 1 )\n      sub_40474A();\n    if ( byte_610370 && byte_610371 )\n    {\n      v11 = dword_6103E0;\n      dword_6103E0 = 0;\n      v8 = 1;\n      v12 = (char *)qword_610340;\n      while ( v8 <= v11 )\n      {\n        sub_403849((__int64)v12);\n        ++dword_6103E0;\n        ++v8;\n        v12 += 64;\n      }\n      dword_6103E4 = *(_DWORD *)(a1 + 52);\n      if ( byte_610380 )\n        dword_61038C = dword_610384;\n      else\n        dword_61038C = 0;\n      byte_610371 = 0;\n    }\n    if ( dword_6103E4 - dword_6103DC > 0 )\n    {\n      sub_4040D2(dword_6103E4 - dword_6103DC);\n      dword_6103E4 = 0;\n    }\n    if ( byte_6103D9 )\n      sub_40441D();\n  }\n  if ( *(_BYTE *)(a1 + 56) )\n    sub_403F34(a1);\n  byte_610372 = 0;\n  if ( c == 10 )\n    return 1LL;\n  while ( 1 )\n  {\n    sub_4044F5(a1, v7, (char *)qword_610418);\n    v2 = getc_unlocked(*(FILE **)a1);\n    if ( v2 == 10 )\n      return 1LL;\n    if ( v2 == 12 )\n      break;\n    if ( v2 == -1 )\n      goto LABEL_17;\n    v10 = dword_610398;\n    v3 = sub_404E56((unsigned int)(char)v2);\n    v7 = v3;\n    if ( byte_610380 && dword_610398 > dword_610384 )\n    {\n      dword_610398 = v10;\n      return 0LL;\n    }\n  }\n  cb = getc_unlocked(*(FILE **)a1);\n  if ( cb != 10 )\n    ungetc(cb, *(FILE **)a1);\n  if ( byte_610375 )\n    byte_610376 = 1;\nLABEL_51:\n  sub_403385(a1);\n  return 1LL;\n}\n"], [4213906, "sub_404C92", "__int64 __fastcall sub_404C92(_DWORD *a1)\n{\n  int v1; // eax\n  __int64 result; // rax\n  signed __int8 *v3; // rax\n  int v4; // [rsp+10h] [rbp-20h]\n  int v5; // [rsp+14h] [rbp-1Ch]\n  _DWORD *v6; // [rsp+18h] [rbp-18h]\n  signed __int8 *v7; // [rsp+20h] [rbp-10h]\n  signed __int8 *v8; // [rsp+28h] [rbp-8h]\n\n  v1 = a1[10];\n  a1[10] = v1 + 1;\n  v5 = v1;\n  v7 = (char *)qword_610348 + *((int *)qword_610360 + v1);\n  v8 = (char *)qword_610348 + *((int *)qword_610360 + v1 + 1);\n  byte_6103E8 = 1;\n  if ( byte_610377 )\n    sub_40474A();\n  if ( a1[4] != 1 )\n    goto LABEL_11;\n  v4 = 1;\n  v6 = qword_610340;\n  while ( v4 <= dword_61025C )\n  {\n    v6[4] = 2;\n    ++v4;\n    v6 += 16;\n  }\n  if ( *((int *)qword_610340 + 12) <= 0 )\n  {\n    if ( byte_610240 != 1 )\n      byte_6103E8 = 0;\n    result = 1LL;\n  }\n  else\n  {\nLABEL_11:\n    if ( dword_6103E4 - dword_6103DC > 0 )\n    {\n      sub_4040D2(dword_6103E4 - dword_6103DC);\n      dword_6103E4 = 0;\n    }\n    if ( byte_6103D9 )\n      sub_40441D();\n    while ( v7 != v8 )\n    {\n      v3 = v7++;\n      sub_404537(*v3);\n    }\n    if ( !dword_61038C )\n    {\n      dword_610394 = a1[13] + *((_DWORD *)qword_610368 + v5);\n      if ( a1[13] - dword_6103DC == dword_610390 )\n        dword_610394 -= dword_6103DC;\n    }\n    result = 1LL;\n  }\n  return result;\n}\n"], [4214358, "sub_404E56", "__int64 __fastcall sub_404E56(unsigned __int8 a1)\n{\n  unsigned __int8 *v1; // rax\n  unsigned __int8 *v2; // rax\n  _BYTE *v3; // rax\n  unsigned __int8 *v4; // rax\n  _BYTE *v5; // rax\n  int i; // [rsp+18h] [rbp-28h]\n  int j; // [rsp+18h] [rbp-28h]\n  int k; // [rsp+18h] [rbp-28h]\n  int v10; // [rsp+1Ch] [rbp-24h]\n  unsigned int v11; // [rsp+20h] [rbp-20h]\n  int v12; // [rsp+24h] [rbp-1Ch]\n  unsigned __int8 *v13; // [rsp+28h] [rbp-18h]\n  _BYTE *v14; // [rsp+28h] [rbp-18h]\n  _BYTE *v15; // [rsp+28h] [rbp-18h]\n  char s[8]; // [rsp+30h] [rbp-10h] BYREF\n  unsigned __int64 v17; // [rsp+38h] [rbp-8h]\n\n  v17 = __readfsqword(0x28u);\n  v13 = (unsigned __int8 *)qword_610418;\n  v12 = 8;\n  if ( a1 == byte_61024C )\n    v12 = dword_610250;\n  if ( a1 == byte_61024C || a1 == 9 )\n  {\n    v10 = v12 - dword_610398 % v12;\n    if ( byte_610388 )\n    {\n      for ( i = v12 - dword_610398 % v12; i; --i )\n      {\n        v1 = v13++;\n        *v1 = 32;\n      }\n      v11 = v10;\n    }\n    else\n    {\n      *(_BYTE *)qword_610418 = a1;\n      v11 = 1;\n    }\n  }\n  else if ( ((*__ctype_b_loc())[a1] & 0x4000) != 0 )\n  {\n    v10 = 1;\n    v11 = 1;\n    *v13 = a1;\n  }\n  else if ( byte_6103D0 )\n  {\n    v10 = 4;\n    v11 = 4;\n    v2 = v13;\n    v14 = v13 + 1;\n    *v2 = 92;\n    sprintf(s, \"%03o\", a1);\n    for ( j = 0; j <= 2; ++j )\n    {\n      v3 = v14++;\n      *v3 = s[j];\n    }\n  }\n  else if ( byte_6103D1 )\n  {\n    if ( (a1 & 0x80u) != 0 )\n    {\n      v10 = 4;\n      v11 = 4;\n      v4 = v13;\n      v15 = v13 + 1;\n      *v4 = 92;\n      sprintf(s, \"%03o\", a1);\n      for ( k = 0; k <= 2; ++k )\n      {\n        v5 = v15++;\n        *v5 = s[k];\n      }\n    }\n    else\n    {\n      v10 = 2;\n      v11 = 2;\n      *v13 = 94;\n      v13[1] = a1 ^ 0x40;\n    }\n  }\n  else if ( a1 == 8 )\n  {\n    v10 = -1;\n    v11 = 1;\n    *v13 = 8;\n  }\n  else\n  {\n    v10 = 0;\n    v11 = 1;\n    *v13 = a1;\n  }\n  if ( v10 >= 0 || dword_610398 )\n  {\n    if ( v10 >= 0 || -v10 < dword_610398 )\n      dword_610398 += v10;\n    else\n      dword_610398 = 0;\n  }\n  else\n  {\n    v11 = 0;\n    dword_610398 = 0;\n  }\n  return v11;\n}\n"], [4215068, "sub_40511C", "void sub_40511C()\n{\n  free(ptr);\n  free(qword_610418);\n  free(qword_610340);\n  free(qword_610360);\n  free(qword_610368);\n  free(qword_610348);\n}\n"], [4215164, "sub_40517C", "void __fastcall __noreturn sub_40517C(int a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rax\n  char *v3; // rax\n  FILE *v4; // rbx\n  char *v5; // rax\n  FILE *v6; // rbx\n  char *v7; // rax\n  FILE *v8; // rbx\n  char *v9; // rax\n  FILE *v10; // rbx\n  char *v11; // rax\n  FILE *v12; // rbx\n  char *v13; // rax\n  FILE *v14; // rbx\n  char *v15; // rax\n  FILE *v16; // rbx\n  char *v17; // rax\n  FILE *v18; // rbx\n  char *v19; // rax\n  FILE *v20; // rbx\n  char *v21; // rax\n  FILE *v22; // rbx\n  char *v23; // rax\n  FILE *v24; // rbx\n  char *v25; // rax\n  FILE *v26; // rbx\n  char *v27; // rax\n  FILE *v28; // rbx\n  char *v29; // rax\n  FILE *v30; // rbx\n  char *v31; // rax\n  FILE *v32; // rbx\n  char *v33; // rax\n  FILE *v34; // rbx\n  char *v35; // rax\n\n  v1 = qword_610450;\n  if ( a1 )\n  {\n    v2 = gettext(\"Try `%s --help' for more information.\\n\");\n    fprintf(stderr, v2, v1);\n  }\n  else\n  {\n    v3 = gettext(\"Usage: %s [OPTION]... [FILE]...\\n\");\n    printf(v3, v1);\n    v4 = stdout;\n    v5 = gettext(\"Paginate or columnate FILE(s) for printing.\\n\\n\");\n    fputs_unlocked(v5, v4);\n    v6 = stdout;\n    v7 = gettext(\"Mandatory arguments to long options are mandatory for short options too.\\n\");\n    fputs_unlocked(v7, v6);\n    v8 = stdout;\n    v9 = gettext(\n           \"  +FIRST_PAGE[:LAST_PAGE], --pages=FIRST_PAGE[:LAST_PAGE]\\n\"\n           \"                    begin [stop] printing with page FIRST_[LAST_]PAGE\\n\"\n           \"  -COLUMN, --columns=COLUMN\\n\"\n           \"                    output COLUMN columns and print columns down,\\n\"\n           \"                    unless -a is used. Balance number of lines in the\\n\"\n           \"                    columns on each page\\n\");\n    fputs_unlocked(v9, v8);\n    v10 = stdout;\n    v11 = gettext(\n            \"  -a, --across      print columns across rather than down, used together\\n\"\n            \"                    with -COLUMN\\n\"\n            \"  -c, --show-control-chars\\n\"\n            \"                    use hat notation (^G) and octal backslash notation\\n\"\n            \"  -d, --double-space\\n\"\n            \"                    double space the output\\n\");\n    fputs_unlocked(v11, v10);\n    v12 = stdout;\n    v13 = gettext(\n            \"  -D, --date-format=FORMAT\\n\"\n            \"                    use FORMAT for the header date\\n\"\n            \"  -e[CHAR[WIDTH]], --expand-tabs[=CHAR[WIDTH]]\\n\"\n            \"                    expand input CHARs (TABs) to tab WIDTH (8)\\n\"\n            \"  -F, -f, --form-feed\\n\"\n            \"                    use form feeds instead of newlines to separate pages\\n\"\n            \"                    (by a 3-line page header with -F or a 5-line header\\n\"\n            \"                    and trailer without -F)\\n\");\n    fputs_unlocked(v13, v12);\n    v14 = stdout;\n    v15 = gettext(\n            \"  -h, --header=HEADER\\n\"\n            \"                    use a centered HEADER instead of filename in page header,\\n\"\n            \"                    -h \\\"\\\" prints a blank line, don't use -h\\\"\\\"\\n\"\n            \"  -i[CHAR[WIDTH]], --output-tabs[=CHAR[WIDTH]]\\n\"\n            \"                    replace spaces with CHARs (TABs) to tab WIDTH (8)\\n\"\n            \"  -J, --join-lines  merge full lines, turns off -W line truncation, no column\\n\"\n            \"                    alignment, --sep-string[=STRING] sets separators\\n\");\n    fputs_unlocked(v15, v14);\n    v16 = stdout;\n    v17 = gettext(\n            \"  -l, --length=PAGE_LENGTH\\n\"\n            \"                    set the page length to PAGE_LENGTH (66) lines\\n\"\n            \"                    (default number of lines of text 56, and with -F 63)\\n\"\n            \"  -m, --merge       print all files in parallel, one in each column,\\n\"\n            \"                    truncate lines, but join lines of full length with -J\\n\");\n    fputs_unlocked(v17, v16);\n    v18 = stdout;\n    v19 = gettext(\n            \"  -n[SEP[DIGITS]], --number-lines[=SEP[DIGITS]]\\n\"\n            \"                    number lines, use DIGITS (5) digits, then SEP (TAB),\\n\"\n            \"                    default counting starts with 1st line of input file\\n\"\n            \"  -N, --first-line-number=NUMBER\\n\"\n            \"                    start counting with NUMBER at 1st line of first\\n\"\n            \"                    page printed (see +FIRST_PAGE)\\n\");\n    fputs_unlocked(v19, v18);\n    v20 = stdout;\n    v21 = gettext(\n            \"  -o, --indent=MARGIN\\n\"\n            \"                    offset each line with MARGIN (zero) spaces, do not\\n\"\n            \"                    affect -w or -W, MARGIN will be added to PAGE_WIDTH\\n\"\n            \"  -r, --no-file-warnings\\n\"\n            \"                    omit warning when a file cannot be opened\\n\");\n    fputs_unlocked(v21, v20);\n    v22 = stdout;\n    v23 = gettext(\n            \"  -s[CHAR], --separator[=CHAR]\\n\"\n            \"                    separate columns by a single character, default for CHAR\\n\"\n            \"                    is the <TAB> character without -w and 'no char' with -w\\n\"\n            \"                    -s[CHAR] turns off line truncation of all 3 column\\n\"\n            \"                    options (-COLUMN|-a -COLUMN|-m) except -w is set\\n\");\n    fputs_unlocked(v23, v22);\n    v24 = stdout;\n    v25 = gettext(\n            \"  -SSTRING, --sep-string[=STRING]\\n\"\n            \"                    separate columns by STRING,\\n\"\n            \"                    without -S: Default separator <TAB> with -J and <space>\\n\"\n            \"                    otherwise (same as -S\\\" \\\"), no effect on column options\\n\"\n            \"  -t, --omit-header  omit page headers and trailers\\n\");\n    fputs_unlocked(v25, v24);\n    v26 = stdout;\n    v27 = gettext(\n            \"  -T, --omit-pagination\\n\"\n            \"                    omit page headers and trailers, eliminate any pagination\\n\"\n            \"                    by form feeds set in input files\\n\"\n            \"  -v, --show-nonprinting\\n\"\n            \"                    use octal backslash notation\\n\"\n            \"  -w, --width=PAGE_WIDTH\\n\"\n            \"                    set page width to PAGE_WIDTH (72) characters for\\n\"\n            \"                    multiple text-column output only, -s[char] turns off (72)\\n\");\n    fputs_unlocked(v27, v26);\n    v28 = stdout;\n    v29 = gettext(\n            \"  -W, --page-width=PAGE_WIDTH\\n\"\n            \"                    set page width to PAGE_WIDTH (72) characters always,\\n\"\n            \"                    truncate lines, except -J option is set, no interference\\n\"\n            \"                    with -S or -s\\n\");\n    fputs_unlocked(v29, v28);\n    v30 = stdout;\n    v31 = gettext(\"      --help     display this help and exit\\n\");\n    fputs_unlocked(v31, v30);\n    v32 = stdout;\n    v33 = gettext(\"      --version  output version information and exit\\n\");\n    fputs_unlocked(v33, v32);\n    v34 = stdout;\n    v35 = gettext(\"\\n-t is implied if PAGE_LENGTH <= 10.  With no FILE, or when FILE is -, read\\nstandard input.\\n\");\n    fputs_unlocked(v35, v34);\n    sub_401A9C();\n  }\n  exit(a1);\n}\n"], [4215750, "sub_4053C6", "__int64 __fastcall sub_4053C6(unsigned __int8 a1)\n{\n  __int64 result; // rax\n\n  result = a1;\n  byte_610448 = a1;\n  return result;\n}\n"], [4215771, "sub_4053DB", "__int64 sub_4053DB()\n{\n  const char *v0; // rbx\n  int *v1; // rax\n  int *v2; // rax\n  __int64 result; // rax\n  char *v4; // [rsp+8h] [rbp-18h]\n\n  if ( (unsigned int)sub_40B8D1(stdout) && (byte_610448 != 1 || *__errno_location() != 32) )\n  {\n    v4 = gettext(\"write error\");\n    if ( qword_610440 )\n    {\n      v0 = (const char *)sub_407160(qword_610440);\n      v1 = __errno_location();\n      error(0, *v1, \"%s: %s\", v0, v4);\n    }\n    else\n    {\n      v2 = __errno_location();\n      error(0, *v2, \"%s\", v4);\n    }\n    _exit(status);\n  }\n  result = sub_40B8D1(stderr);\n  if ( (_DWORD)result )\n    _exit(status);\n  return result;\n}\n"], [4216006, "sub_4054C6", "_BYTE *__fastcall sub_4054C6(_BYTE *a1)\n{\n  char v2; // [rsp+17h] [rbp-11h]\n  _BYTE *i; // [rsp+20h] [rbp-8h]\n\n  v2 = 0;\n  while ( *a1 == 47 )\n    ++a1;\n  for ( i = a1; *i; ++i )\n  {\n    if ( *i == 47 )\n    {\n      v2 = 1;\n    }\n    else if ( v2 )\n    {\n      a1 = i;\n      v2 = 0;\n    }\n  }\n  return a1;\n}\n"], [4216111, "sub_40552F", "size_t __fastcall sub_40552F(const char *a1)\n{\n  size_t i; // [rsp+10h] [rbp-10h]\n\n  for ( i = strlen(a1); i > 1 && a1[i - 1] == 47; --i )\n    ;\n  return i;\n}\n"], [4216189, "sub_40557D", "int __fastcall sub_40557D(int a1, off_t a2, off_t a3, int a4)\n{\n  return posix_fadvise(a1, a2, a3, a4);\n}\n"], [4216237, "sub_4055AD", "void __fastcall sub_4055AD(FILE *a1, int a2)\n{\n  int v2; // eax\n\n  if ( a1 )\n  {\n    v2 = fileno(a1);\n    sub_40557D(v2, 0LL, 0LL, a2);\n  }\n}\n"], [4216295, "sub_4055E7", "FILE *__fastcall sub_4055E7(const char *a1, const char *a2)\n{\n  int v3; // [rsp+18h] [rbp-18h]\n  int fd; // [rsp+1Ch] [rbp-14h]\n  int v5; // [rsp+20h] [rbp-10h]\n  int v6; // [rsp+24h] [rbp-Ch]\n  FILE *stream; // [rsp+28h] [rbp-8h]\n\n  stream = fopen(a1, a2);\n  if ( !stream )\n    return stream;\n  v3 = fileno(stream);\n  if ( v3 < 0 || v3 > 2 )\n    return stream;\n  fd = sub_409D90((unsigned int)v3);\n  if ( fd < 0 )\n  {\n    v5 = *__errno_location();\n    sub_40B42C(stream);\n    *__errno_location() = v5;\n    return 0LL;\n  }\n  if ( !(unsigned int)sub_40B42C(stream) )\n  {\n    stream = fdopen(fd, a2);\n    if ( stream )\n      return stream;\n  }\n  v6 = *__errno_location();\n  close(fd);\n  *__errno_location() = v6;\n  return 0LL;\n}\n"], [4216525, "sub_4056CD", "int __fastcall sub_4056CD(struct timespec *a1)\n{\n  int result; // eax\n  struct timeval tv; // [rsp+10h] [rbp-10h] BYREF\n\n  result = clock_gettime(0, a1);\n  if ( result )\n  {\n    gettimeofday(&tv, 0LL);\n    a1->tv_sec = tv.tv_sec;\n    result = (int)a1;\n    a1->tv_nsec = 1000 * tv.tv_usec;\n  }\n  return result;\n}\n"], [4216609, "sub_405721", "__int64 __fastcall sub_405721(int a1)\n{\n  unsigned __int8 v2; // [rsp+17h] [rbp-9h]\n  const char *s1; // [rsp+18h] [rbp-8h]\n\n  v2 = 1;\n  s1 = setlocale(a1, 0LL);\n  if ( s1 && (!strcmp(s1, \"C\") || !strcmp(s1, \"POSIX\")) )\n    v2 = 0;\n  return v2;\n}\n"], [4216702, "sub_40577E", "__int64 __fastcall sub_40577E(const char *a1, unsigned int a2)\n{\n  size_t v2; // rax\n\n  v2 = strlen(a1);\n  return sub_4057B0(a1, v2, a2);\n}\n"], [4216752, "sub_4057B0", "__int64 __fastcall sub_4057B0(char *a1, __int64 a2, char a3)\n{\n  int v3; // eax\n  char *v5; // rax\n  unsigned __int8 v7; // [rsp+2Bh] [rbp-45h]\n  wchar_t pwc; // [rsp+2Ch] [rbp-44h] BYREF\n  unsigned int v9; // [rsp+30h] [rbp-40h]\n  int v10; // [rsp+34h] [rbp-3Ch]\n  char *v11; // [rsp+38h] [rbp-38h]\n  size_t v12; // [rsp+40h] [rbp-30h]\n  char *v13; // [rsp+48h] [rbp-28h]\n  mbstate_t s[4]; // [rsp+50h] [rbp-20h] BYREF\n\n  s[1] = (mbstate_t)__readfsqword(0x28u);\n  v11 = a1;\n  v13 = &a1[a2];\n  v9 = 0;\n  if ( __ctype_get_mb_cur_max() <= 1 )\n  {\n    while ( 1 )\n    {\n      do\n      {\n        while ( 1 )\n        {\n          if ( v11 >= v13 )\n            return v9;\n          v5 = v11++;\n          v7 = *v5;\n          if ( ((*__ctype_b_loc())[v7] & 0x4000) == 0 )\n            break;\n          if ( v9 == 0x7FFFFFFF )\n            return 0x7FFFFFFFLL;\n          ++v9;\n        }\n        if ( (a3 & 2) != 0 )\n          return 0xFFFFFFFFLL;\n      }\n      while ( ((*__ctype_b_loc())[v7] & 2) != 0 );\n      if ( v9 == 0x7FFFFFFF )\n        return 0x7FFFFFFFLL;\n      ++v9;\n    }\n  }\n  while ( 1 )\n  {\nLABEL_31:\n    if ( v11 >= v13 )\n      return v9;\n    v3 = *v11;\n    if ( v3 > 63 )\n      break;\n    if ( v3 < 37 && (unsigned int)(v3 - 32) > 3 )\n      goto LABEL_11;\nLABEL_10:\n    ++v11;\n    ++v9;\n  }\n  if ( v3 >= 65 && (v3 <= 95 || (unsigned int)(v3 - 97) <= 0x1D) )\n    goto LABEL_10;\nLABEL_11:\n  memset(s, 0, 8uLL);\n  while ( 1 )\n  {\n    v12 = mbrtowc(&pwc, v11, v13 - v11, s);\n    if ( v12 == -1LL )\n    {\n      if ( (a3 & 1) == 0 )\n      {\n        ++v11;\n        ++v9;\n        goto LABEL_31;\n      }\n      return 0xFFFFFFFFLL;\n    }\n    if ( v12 == -2LL )\n      break;\n    if ( !v12 )\n      v12 = 1LL;\n    v10 = wcwidth(pwc);\n    if ( v10 < 0 )\n    {\n      if ( (a3 & 2) != 0 )\n        return 0xFFFFFFFFLL;\n      if ( !iswcntrl(pwc) )\n      {\n        if ( v9 == 0x7FFFFFFF )\n          return 0x7FFFFFFFLL;\n        ++v9;\n      }\n    }\n    else\n    {\n      if ( (int)(0x7FFFFFFF - v9) < v10 )\n        return 0x7FFFFFFFLL;\n      v9 += v10;\n    }\n    v11 += v12;\n    if ( mbsinit(s) )\n      goto LABEL_31;\n  }\n  if ( (a3 & 1) == 0 )\n  {\n    v11 = v13;\n    ++v9;\n    goto LABEL_31;\n  }\n  return 0xFFFFFFFFLL;\n}\n"], [4217404, "sub_405A3C", "char *__fastcall sub_405A3C(const char *a1)\n{\n  char *v1; // rax\n  char *result; // rax\n  char *s; // [rsp+8h] [rbp-18h]\n  char *v4; // [rsp+10h] [rbp-10h]\n  char *s1; // [rsp+18h] [rbp-8h]\n\n  s = (char *)a1;\n  if ( !a1 )\n  {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\", 1uLL, 0x37uLL, stderr);\n    abort();\n  }\n  v4 = strrchr(a1, 47);\n  if ( v4 )\n    v1 = v4 + 1;\n  else\n    v1 = (char *)a1;\n  s1 = v1;\n  if ( v1 - a1 > 6 && !strncmp(v1 - 7, \"/.libs/\", 7uLL) )\n  {\n    s = s1;\n    if ( !strncmp(s1, \"lt-\", 3uLL) )\n    {\n      s = s1 + 3;\n      program_invocation_short_name = (__int64)(s1 + 3);\n    }\n  }\n  qword_610450 = (__int64)s;\n  result = s;\n  program_invocation_name = (__int64)s;\n  return result;\n}\n"], [4217635, "sub_405B23", "__int64 __fastcall sub_405B23(unsigned int a1, __int64 a2)\n{\n  return sub_406FD2(a1, 6LL, a2);\n}\n"], [4217671, "sub_405B47", "__int64 __fastcall sub_405B47(__int64 a1)\n{\n  return sub_405B23(0, a1);\n}\n"], [4217702, "sub_405B66", "__int64 __fastcall sub_405B66(__int64 *a1)\n{\n  __int64 *v1; // rax\n  int v3; // [rsp+14h] [rbp-Ch]\n  __int64 v4; // [rsp+18h] [rbp-8h]\n\n  v3 = *__errno_location();\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_610460;\n  v4 = sub_40A874(v1, 56LL);\n  *__errno_location() = v3;\n  return v4;\n}\n"], [4217775, "sub_405BAF", "__int64 __fastcall sub_405BAF(__int64 *a1)\n{\n  __int64 *v1; // rax\n\n  if ( a1 )\n    v1 = a1;\n  else\n    v1 = &qword_610460;\n  return *(unsigned int *)v1;\n}\n"], [4217805, "sub_405BCD", "__int64 *__fastcall sub_405BCD(__int64 *a1, int a2)\n{\n  __int64 *result; // rax\n\n  if ( a1 )\n    result = a1;\n  else\n    result = &qword_610460;\n  *(_DWORD *)result = a2;\n  return result;\n}\n"], [4217841, "sub_405BF1", "__int64 __fastcall sub_405BF1(__int64 *a1, unsigned __int8 a2, char a3)\n{\n  __int64 *v3; // rax\n  unsigned int v5; // [rsp+24h] [rbp-Ch]\n\n  if ( a1 )\n    v3 = a1;\n  else\n    v3 = &qword_610460;\n  v5 = (*((_DWORD *)v3 + (a2 >> 5) + 2) >> (a2 & 0x1F)) & 1;\n  *((_DWORD *)v3 + (a2 >> 5) + 2) ^= (v5 ^ a3 & 1) << (a2 & 0x1F);\n  return v5;\n}\n"], [4217977, "sub_405C79", "__int64 __fastcall sub_405C79(__int64 *a1, int a2)\n{\n  __int64 *v3; // [rsp+4h] [rbp-18h]\n  unsigned int v4; // [rsp+18h] [rbp-4h]\n\n  v3 = a1;\n  if ( !a1 )\n    v3 = &qword_610460;\n  v4 = *((_DWORD *)v3 + 1);\n  *((_DWORD *)v3 + 1) = a2;\n  return v4;\n}\n"], [4218028, "sub_405CAC", "__int64 *__fastcall sub_405CAC(__int64 *a1, __int64 a2, __int64 a3)\n{\n  __int64 *result; // rax\n  __int64 *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = a1;\n  if ( !a1 )\n    v4 = &qword_610460;\n  *(_DWORD *)v4 = 8;\n  if ( !a2 || !a3 )\n    abort();\n  v4[5] = a2;\n  result = v4;\n  v4[6] = a3;\n  return result;\n}\n"], [4218118, "sub_405D06", "_QWORD *__fastcall sub_405D06(_QWORD *a1, int a2)\n{\n  __int64 v3[7]; // [rsp+10h] [rbp-40h] BYREF\n\n  memset(v3, 0, sizeof(v3));\n  if ( a2 == 8 )\n    abort();\n  LODWORD(v3[0]) = a2;\n  *a1 = v3[0];\n  a1[1] = v3[1];\n  a1[2] = v3[2];\n  a1[3] = v3[3];\n  a1[4] = v3[4];\n  a1[5] = v3[5];\n  a1[6] = v3[6];\n  return a1;\n}\n"], [4218238, "sub_405D7E", "char *__fastcall sub_405D7E(const char *a1, int a2)\n{\n  char *v3; // [rsp+18h] [rbp-8h]\n\n  v3 = gettext(a1);\n  if ( v3 == a1 && a2 == 7 )\n    v3 = (char *)asc_40D480;\n  return v3;\n}\n"], [4218299, "sub_405DBB", "unsigned __int64 __fastcall sub_405DBB(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, unsigned int a5, int a6, __int64 a7, char *a8, char *a9)\n{\n  int v9; // eax\n  bool v10; // al\n  int v11; // eax\n  char v20; // [rsp+65h] [rbp-6Bh]\n  bool v21; // [rsp+66h] [rbp-6Ah]\n  unsigned __int8 v22; // [rsp+67h] [rbp-69h]\n  char v23; // [rsp+68h] [rbp-68h]\n  char v24; // [rsp+69h] [rbp-67h]\n  bool v25; // [rsp+6Ah] [rbp-66h]\n  bool v26; // [rsp+6Bh] [rbp-65h]\n  wchar_t pwc; // [rsp+6Ch] [rbp-64h] BYREF\n  __int64 i; // [rsp+70h] [rbp-60h]\n  unsigned __int64 v29; // [rsp+78h] [rbp-58h]\n  char *s; // [rsp+80h] [rbp-50h]\n  size_t n; // [rsp+88h] [rbp-48h]\n  unsigned __int64 v32; // [rsp+90h] [rbp-40h]\n  unsigned __int64 j; // [rsp+98h] [rbp-38h]\n  size_t v34; // [rsp+A0h] [rbp-30h]\n  unsigned __int64 v35; // [rsp+A8h] [rbp-28h]\n  mbstate_t p; // [rsp+B0h] [rbp-20h] BYREF\n  unsigned __int64 v37; // [rsp+B8h] [rbp-18h]\n\n  v37 = __readfsqword(0x28u);\n  v29 = 0LL;\n  s = 0LL;\n  n = 0LL;\n  v20 = 0;\n  v26 = __ctype_get_mb_cur_max() == 1;\n  v21 = (a6 & 2) != 0;\n  if ( a5 == 3 )\n    goto LABEL_11;\n  if ( a5 > 3 )\n  {\n    if ( a5 == 5 )\n    {\n      v20 = 1;\n      v21 = 0;\n      goto LABEL_33;\n    }\n    if ( a5 >= 5 )\n    {\n      if ( a5 > 8 )\n        abort();\n      if ( a5 != 8 )\n      {\n        a8 = sub_405D7E((const char *)&asc_40D480[1], a5);\n        a9 = sub_405D7E((const char *)&asc_40D480[2], a5);\n      }\n      if ( (a6 & 2) == 0 )\n      {\n        for ( s = a8; *s; ++s )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(v29 + a1) = *s;\n          ++v29;\n        }\n      }\n      v20 = 1;\n      s = a9;\n      n = strlen(a9);\n      goto LABEL_33;\n    }\n    a5 = 3;\n    v21 = 1;\nLABEL_11:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 34;\n      ++v29;\n    }\n    v20 = 1;\n    s = (char *)asc_40D480;\n    n = 1LL;\n    goto LABEL_33;\n  }\n  if ( a5 == 1 )\n  {\n    a5 = 2;\n    v21 = 1;\n    goto LABEL_27;\n  }\n  if ( a5 > 1 )\n  {\nLABEL_27:\n    if ( !v21 )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(a1 + v29) = 39;\n      ++v29;\n    }\n    s = (_BYTE *)(asc_40D480 + 4);\n    n = 1LL;\n    goto LABEL_33;\n  }\n  v21 = 0;\nLABEL_33:\n  for ( i = 0LL; a4 == -1LL ? *(_BYTE *)(a3 + i) != 0 : i != a4; ++i )\n  {\n    v24 = 0;\n    if ( v20 && n && i + n <= a4 && !memcmp((const void *)(a3 + i), s, n) )\n    {\n      if ( v21 )\n        return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n      v24 = 1;\n    }\n    v22 = *(_BYTE *)(a3 + i);\n    if ( v22 > 0x3Au )\n    {\n      if ( v22 == 94 )\n        goto LABEL_144;\n      if ( v22 > 0x5Eu )\n      {\n        if ( v22 <= 0x7Au )\n        {\n          if ( v22 >= 0x61u || v22 == 95 )\n            goto LABEL_206;\n          goto LABEL_144;\n        }\n        if ( v22 != 124 )\n        {\n          if ( v22 < 0x7Cu || v22 == 125 )\n          {\n            if ( a4 == -1LL )\n              v10 = *(_BYTE *)(a3 + 1) != 0;\n            else\n              v10 = a4 != 1;\n            if ( v10 )\n              goto LABEL_206;\n          }\n          else if ( v22 != 126 )\n          {\nLABEL_157:\n            if ( v26 )\n            {\n              v32 = 1LL;\n              v25 = ((*__ctype_b_loc())[v22] & 0x4000) != 0;\n            }\n            else\n            {\n              memset(&p, 0, sizeof(p));\n              v32 = 0LL;\n              v25 = 1;\n              if ( a4 == -1LL )\n                a4 = strlen((const char *)a3);\n              do\n              {\n                v34 = mbrtowc(&pwc, (const char *)(v32 + i + a3), a4 - (v32 + i), &p);\n                if ( !v34 )\n                  break;\n                if ( v34 == -1LL )\n                {\n                  v25 = 0;\n                  break;\n                }\n                if ( v34 == -2LL )\n                {\n                  v25 = 0;\n                  while ( i + v32 < a4 && *(_BYTE *)(v32 + i + a3) )\n                    ++v32;\n                  break;\n                }\n                if ( v21 && a5 == 2 )\n                {\n                  for ( j = 1LL; j < v34; ++j )\n                  {\n                    v11 = *(char *)(j + v32 + i + a3);\n                    if ( v11 == 94 )\n                      return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    if ( v11 > 94 )\n                    {\n                      if ( v11 == 96 || v11 == 124 )\n                        return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                    else if ( (unsigned int)(v11 - 91) <= 1 )\n                    {\n                      return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                    }\n                  }\n                }\n                if ( !iswprint(pwc) )\n                  v25 = 0;\n                v32 += v34;\n              }\n              while ( !mbsinit(&p) );\n            }\n            if ( v32 > 1 || v20 && !v25 )\n            {\n              v35 = i + v32;\n              while ( 1 )\n              {\n                if ( v20 && !v25 )\n                {\n                  if ( v21 )\n                    return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = (v22 >> 6) + 48;\n                  if ( ++v29 < a2 )\n                    *(_BYTE *)(v29 + a1) = ((v22 >> 3) & 7) + 48;\n                  ++v29;\n                  v22 = (v22 & 7) + 48;\n                }\n                else if ( v24 )\n                {\n                  if ( v29 < a2 )\n                    *(_BYTE *)(a1 + v29) = 92;\n                  ++v29;\n                  v24 = 0;\n                }\n                if ( i + 1 >= v35 )\n                  break;\n                if ( v29 < a2 )\n                  *(_BYTE *)(v29 + a1) = v22;\n                ++v29;\n                ++i;\n                v22 = *(_BYTE *)(a3 + i);\n              }\n              goto LABEL_215;\n            }\n            goto LABEL_206;\n          }\n          goto LABEL_143;\n        }\nLABEL_144:\n        if ( a5 == 2 && v21 )\n          return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        goto LABEL_206;\n      }\n      if ( v22 > 0x5Au )\n      {\n        if ( v22 == 92 )\n        {\n          v23 = *(_BYTE *)(a3 + i);\n          if ( v20 && v21 && n )\n            goto LABEL_215;\n          goto LABEL_134;\n        }\n        if ( v22 <= 0x5Cu )\n          goto LABEL_144;\n      }\n      else\n      {\n        if ( v22 >= 0x41u )\n          goto LABEL_206;\n        if ( v22 <= 0x3Eu )\n          goto LABEL_144;\n        if ( v22 != 63 )\n          goto LABEL_157;\n        if ( a5 == 2 )\n        {\n          if ( v21 )\n            return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        }\n        else if ( a5 == 3 && (a6 & 4) != 0 && i + 2 < a4 && *(_BYTE *)(i + 1 + a3) == 63 )\n        {\n          v9 = *(char *)(i + 2 + a3);\n          if ( v9 != 45 )\n          {\n            if ( v9 > 45 )\n            {\n              if ( v9 != 47 && (v9 < 47 || (unsigned int)(v9 - 60) > 2) )\n                goto LABEL_206;\n            }\n            else if ( v9 != 33 && (v9 < 33 || (unsigned int)(v9 - 39) > 2) )\n            {\n              goto LABEL_206;\n            }\n          }\n          if ( v21 )\n            return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          v22 = *(_BYTE *)(i + 2 + a3);\n          i += 2LL;\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 34;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 63;\n          ++v29;\n        }\n      }\n    }\n    else\n    {\n      if ( v22 >= 0x2Bu )\n        goto LABEL_206;\n      if ( v22 > 0x22u )\n      {\n        if ( v22 != 38 )\n        {\n          if ( v22 > 0x26u )\n          {\n            if ( v22 == 39 )\n            {\n              if ( a5 == 2 )\n              {\n                if ( v21 )\n                  return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n                if ( v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 92;\n                if ( ++v29 < a2 )\n                  *(_BYTE *)(a1 + v29) = 39;\n                ++v29;\n              }\n              goto LABEL_206;\n            }\n            goto LABEL_144;\n          }\n          if ( v22 != 36 )\n          {\n            if ( v22 > 0x24u )\n              goto LABEL_206;\nLABEL_143:\n            if ( i )\n              goto LABEL_206;\n          }\n        }\n        goto LABEL_144;\n      }\n      if ( v22 >= 0x20u )\n        goto LABEL_144;\n      if ( v22 == 9 )\n      {\n        v23 = 116;\n        goto LABEL_134;\n      }\n      if ( v22 > 9u )\n      {\n        if ( v22 == 11 )\n        {\n          v23 = 118;\n        }\n        else\n        {\n          if ( v22 < 0xBu )\n          {\n            v23 = 110;\n            goto LABEL_134;\n          }\n          if ( v22 == 12 )\n          {\n            v23 = 102;\n          }\n          else\n          {\n            if ( v22 != 13 )\n              goto LABEL_157;\n            v23 = 114;\nLABEL_134:\n            if ( a5 == 2 && v21 )\n              return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          }\n        }\nLABEL_136:\n        if ( v20 )\n        {\n          v22 = v23;\nLABEL_211:\n          if ( v21 )\n            return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 92;\n          ++v29;\n          goto LABEL_215;\n        }\n        goto LABEL_206;\n      }\n      if ( v22 == 7 )\n      {\n        v23 = 97;\n        goto LABEL_136;\n      }\n      if ( v22 > 7u )\n      {\n        v23 = 98;\n        goto LABEL_136;\n      }\n      if ( v22 )\n        goto LABEL_157;\n      if ( v20 )\n      {\n        if ( v21 )\n          return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n        if ( v29 < a2 )\n          *(_BYTE *)(a1 + v29) = 92;\n        ++v29;\n        if ( i + 1 < a4 && *(char *)(i + 1 + a3) > 47 && *(char *)(i + 1 + a3) <= 57 )\n        {\n          if ( v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          if ( ++v29 < a2 )\n            *(_BYTE *)(a1 + v29) = 48;\n          ++v29;\n        }\n        v22 = 48;\n      }\n      else if ( (a6 & 1) != 0 )\n      {\n        continue;\n      }\n    }\nLABEL_206:\n    if ( (v20 == 1 || v21) && a7 && (*(_DWORD *)(4LL * (v22 >> 5) + a7) & (1 << (v22 & 0x1F))) != 0 || v24 == 1 )\n      goto LABEL_211;\nLABEL_215:\n    if ( v29 < a2 )\n      *(_BYTE *)(v29 + a1) = v22;\n    ++v29;\n  }\n  if ( !v29 && a5 == 2 && v21 )\n    return sub_405DBB(a1, a2, a3, a4, a5, a6 & 0xFFFFFFFD, 0LL, (__int64)a8, (__int64)a9);\n  if ( s && !v21 )\n  {\n    while ( *s )\n    {\n      if ( v29 < a2 )\n        *(_BYTE *)(v29 + a1) = *s;\n      ++v29;\n      ++s;\n    }\n  }\n  if ( v29 < a2 )\n    *(_BYTE *)(a1 + v29) = 0;\n  return v29;\n}\n"], [4221446, "sub_406A06", "unsigned __int64 __fastcall sub_406A06(__int64 a1, unsigned __int64 a2, __int64 a3, size_t a4, __int64 *a5)\n{\n  __int64 *v5; // rax\n  int v9; // [rsp+4Ch] [rbp-14h]\n  __int64 *v10; // [rsp+50h] [rbp-10h]\n  unsigned __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a5 )\n    v5 = a5;\n  else\n    v5 = &qword_610460;\n  v10 = v5;\n  v9 = *__errno_location();\n  v11 = sub_405DBB(\n          a1,\n          a2,\n          a3,\n          a4,\n          *(_DWORD *)v10,\n          *((_DWORD *)v10 + 1),\n          (__int64)(v10 + 1),\n          (char *)v10[5],\n          (char *)v10[6]);\n  *__errno_location() = v9;\n  return v11;\n}\n"], [4221606, "sub_406AA6", "__int64 __fastcall sub_406AA6(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_406AD8(a1, a2, 0LL, a3);\n}\n"], [4221656, "sub_406AD8", "__int64 __fastcall sub_406AD8(__int64 a1, size_t a2, _QWORD *a3, __int64 *a4)\n{\n  __int64 *v4; // rax\n  int v7; // [rsp+40h] [rbp-20h]\n  int v8; // [rsp+44h] [rbp-1Ch]\n  __int64 *v9; // [rsp+48h] [rbp-18h]\n  unsigned __int64 v10; // [rsp+50h] [rbp-10h]\n  __int64 v11; // [rsp+58h] [rbp-8h]\n\n  if ( a4 )\n    v4 = a4;\n  else\n    v4 = &qword_610460;\n  v9 = v4;\n  v7 = *__errno_location();\n  v8 = *((_DWORD *)v9 + 1) | (a3 == 0LL);\n  v10 = sub_405DBB(0LL, 0LL, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]) + 1;\n  v11 = sub_40A736(v10);\n  sub_405DBB(v11, v10, a1, a2, *(_DWORD *)v9, v8, (__int64)(v9 + 1), (char *)v9[5], (char *)v9[6]);\n  *__errno_location() = v7;\n  if ( a3 )\n    *a3 = v10 - 1;\n  return v11;\n}\n"], [4221956, "sub_406C04", "void sub_406C04()\n{\n  unsigned int i; // [rsp+4h] [rbp-Ch]\n  void **ptr; // [rsp+8h] [rbp-8h]\n\n  ptr = (void **)off_6102D0;\n  for ( i = 1; i < dword_6102B0; ++i )\n    free(ptr[2 * i + 1]);\n  if ( ptr[1] != &unk_6104A0 )\n  {\n    free(ptr[1]);\n    qword_6102C0 = 256LL;\n    off_6102C8 = &unk_6104A0;\n  }\n  if ( ptr != (void **)&qword_6102C0 )\n  {\n    free(ptr);\n    off_6102D0 = &qword_6102C0;\n  }\n  dword_6102B0 = 1;\n}\n"], [4222127, "sub_406CAF", "void *__fastcall sub_406CAF(int a1, __int64 a2, size_t a3, __int64 a4)\n{\n  __int64 *v4; // rax\n  void *v5; // rdx\n  bool v9; // [rsp+4Bh] [rbp-45h]\n  int v10; // [rsp+4Ch] [rbp-44h]\n  int v11; // [rsp+54h] [rbp-3Ch]\n  __int64 *v12; // [rsp+58h] [rbp-38h]\n  void *ptr; // [rsp+60h] [rbp-30h]\n  __int64 v14; // [rsp+68h] [rbp-28h]\n  unsigned __int64 v15; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v16; // [rsp+70h] [rbp-20h]\n  unsigned __int64 v17; // [rsp+78h] [rbp-18h]\n\n  v10 = *__errno_location();\n  v12 = off_6102D0;\n  if ( a1 < 0 )\n    abort();\n  if ( dword_6102B0 <= (unsigned int)a1 )\n  {\n    v14 = (unsigned int)(a1 + 1);\n    v9 = off_6102D0 == &qword_6102C0;\n    if ( off_6102D0 == &qword_6102C0 )\n      v4 = 0LL;\n    else\n      v4 = off_6102D0;\n    v12 = (__int64 *)sub_40A785(v4, 16 * v14);\n    off_6102D0 = v12;\n    if ( v9 )\n    {\n      v5 = off_6102C8;\n      *v12 = qword_6102C0;\n      v12[1] = (__int64)v5;\n    }\n    memset(&v12[2 * (unsigned int)dword_6102B0], 0, 16 * (v14 - (unsigned int)dword_6102B0));\n    dword_6102B0 = a1 + 1;\n  }\n  v15 = v12[2 * a1];\n  ptr = (void *)v12[2 * a1 + 1];\n  v11 = *(_DWORD *)(a4 + 4) | 1;\n  v17 = sub_405DBB((__int64)ptr, v15, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  if ( v15 <= v17 )\n  {\n    v16 = v17 + 1;\n    v12[2 * a1] = v17 + 1;\n    if ( ptr != &unk_6104A0 )\n      free(ptr);\n    ptr = (void *)sub_40A736(v16);\n    v12[2 * a1 + 1] = (__int64)ptr;\n    sub_405DBB((__int64)ptr, v16, a2, a3, *(_DWORD *)a4, v11, a4 + 8, *(char **)(a4 + 40), *(char **)(a4 + 48));\n  }\n  *__errno_location() = v10;\n  return ptr;\n}\n"], [4222773, "sub_406F35", "void *__fastcall sub_406F35(int a1, __int64 a2)\n{\n  return sub_406CAF(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (__int64)&qword_610460);\n}\n"], [4222816, "sub_406F60", "void *__fastcall sub_406F60(int a1, __int64 a2, size_t a3)\n{\n  return sub_406CAF(a1, a2, a3, (__int64)&qword_610460);\n}\n"], [4222860, "sub_406F8C", "void *__fastcall sub_406F8C(__int64 a1)\n{\n  return sub_406F35(0, a1);\n}\n"], [4222891, "sub_406FAB", "void *__fastcall sub_406FAB(__int64 a1, size_t a2)\n{\n  return sub_406F60(0, a1, a2);\n}\n"], [4222930, "sub_406FD2", "void *__fastcall sub_406FD2(int a1, int a2, __int64 a3)\n{\n  _QWORD v5[8]; // [rsp+10h] [rbp-40h] BYREF\n\n  sub_405D06(v5, a2);\n  return sub_406CAF(a1, a3, 0xFFFFFFFFFFFFFFFFLL, (__int64)v5);\n}\n"], [4222995, "sub_407013", "void *__fastcall sub_407013(int a1, int a2, __int64 a3, size_t a4)\n{\n  _QWORD v7[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  sub_405D06(v7, a2);\n  return sub_406CAF(a1, a3, a4, (__int64)v7);\n}\n"], [4223058, "sub_407052", "void *__fastcall sub_407052(int a1, __int64 a2)\n{\n  return sub_406FD2(0, a1, a2);\n}\n"], [4223094, "sub_407076", "void *__fastcall sub_407076(int a1, __int64 a2, size_t a3)\n{\n  return sub_407013(0, a1, a2, a3);\n}\n"], [4223138, "sub_4070A2", "void *__fastcall sub_4070A2(__int64 a1, size_t a2, unsigned __int8 a3)\n{\n  __int64 v4[8]; // [rsp+20h] [rbp-40h] BYREF\n\n  v4[0] = qword_610460;\n  v4[1] = qword_610468;\n  v4[2] = qword_610470;\n  v4[3] = qword_610478;\n  v4[4] = qword_610480;\n  v4[5] = qword_610488;\n  v4[6] = qword_610490;\n  sub_405BF1(v4, a3, 1);\n  return sub_406CAF(0, a1, a2, (__int64)v4);\n}\n"], [4223286, "sub_407136", "void *__fastcall sub_407136(__int64 a1, unsigned __int8 a2)\n{\n  return sub_4070A2(a1, 0xFFFFFFFFFFFFFFFFLL, a2);\n}\n"], [4223328, "sub_407160", "void *__fastcall sub_407160(__int64 a1)\n{\n  return sub_407136(a1, 0x3Au);\n}\n"], [4223359, "sub_40717F", "void *__fastcall sub_40717F(__int64 a1, size_t a2)\n{\n  return sub_4070A2(a1, a2, 0x3Au);\n}\n"], [4223401, "sub_4071A9", "__int64 __fastcall sub_4071A9(unsigned int a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  return sub_4071DF(a1, a2, a3, a4, -1LL);\n}\n"], [4223455, "sub_4071DF", "void *__fastcall sub_4071DF(int a1, __int64 a2, __int64 a3, __int64 a4, size_t a5)\n{\n  __int64 v8[8]; // [rsp+30h] [rbp-40h] BYREF\n\n  v8[0] = qword_610460;\n  v8[1] = qword_610468;\n  v8[2] = qword_610470;\n  v8[3] = qword_610478;\n  v8[4] = qword_610480;\n  v8[5] = qword_610488;\n  v8[6] = qword_610490;\n  sub_405CAC(v8, a2, a3);\n  return sub_406CAF(a1, a4, a5, (__int64)v8);\n}\n"], [4223606, "sub_407276", "__int64 __fastcall sub_407276(__int64 a1, __int64 a2, __int64 a3)\n{\n  return sub_4071A9(0, a1, a2, a3);\n}\n"], [4223653, "sub_4072A5", "void *__fastcall sub_4072A5(__int64 a1, __int64 a2, __int64 a3, size_t a4)\n{\n  return sub_4071DF(0, a1, a2, a3, a4);\n}\n"], [4223711, "sub_4072DF", "__int64 __fastcall sub_4072DF(__int64 a1, __int64 a2, __int64 a3)\n{\n  while ( a3-- )\n    *(_BYTE *)(a1 + a3) = tolower(*(unsigned __int8 *)(a2 + a3));\n  return a1;\n}\n"], [4223800, "sub_407338", "__int64 __fastcall sub_407338(__int64 a1, __int64 a2, __int64 a3)\n{\n  while ( a3-- )\n    *(_BYTE *)(a1 + a3) = toupper(*(unsigned __int8 *)(a2 + a3));\n  return a1;\n}\n"], [4223889, "sub_407391", "__int64 __fastcall sub_407391(int a1, int a2)\n{\n  return (unsigned int)(a1 - (a1 - a2 + 382) % 7 + 3);\n}\n"], [4223970, "sub_4073E2", "__int64 __fastcall sub_4073E2(unsigned __int8 a1, char *a2, __int64 a3, char *a4, const struct tm *a5, int a6, int a7)\n{\n  __int64 result; // rax\n  int v8; // eax\n  int v9; // eax\n  char *v10; // rax\n  unsigned __int64 v11; // rax\n  unsigned __int64 v12; // rax\n  size_t v13; // rax\n  _BOOL4 v14; // eax\n  char v15; // al\n  unsigned __int64 v16; // rax\n  int v17; // eax\n  unsigned __int64 v18; // rax\n  unsigned __int64 v19; // rax\n  unsigned __int64 v20; // rax\n  unsigned __int64 v21; // rax\n  unsigned __int64 v22; // rax\n  char v23; // al\n  unsigned __int64 v24; // rax\n  int v25; // eax\n  _BOOL4 v26; // eax\n  _BOOL4 v27; // eax\n  int v28; // eax\n  int v29; // eax\n  int v30; // eax\n  unsigned __int64 v31; // rax\n  unsigned __int64 v32; // rax\n  bool v36; // [rsp+32h] [rbp-6CEh]\n  char v37; // [rsp+33h] [rbp-6CDh]\n  char v38; // [rsp+34h] [rbp-6CCh]\n  unsigned __int8 v39; // [rsp+35h] [rbp-6CBh]\n  char v40; // [rsp+36h] [rbp-6CAh]\n  char v41; // [rsp+37h] [rbp-6C9h]\n  int v42; // [rsp+38h] [rbp-6C8h]\n  int v43; // [rsp+3Ch] [rbp-6C4h]\n  int v44; // [rsp+40h] [rbp-6C0h]\n  int v45; // [rsp+44h] [rbp-6BCh]\n  int v46; // [rsp+48h] [rbp-6B8h]\n  unsigned int v47; // [rsp+4Ch] [rbp-6B4h]\n  int v48; // [rsp+50h] [rbp-6B0h]\n  int v49; // [rsp+54h] [rbp-6ACh]\n  int v50; // [rsp+58h] [rbp-6A8h]\n  int j; // [rsp+5Ch] [rbp-6A4h]\n  int v52; // [rsp+60h] [rbp-6A0h]\n  int v53; // [rsp+64h] [rbp-69Ch]\n  int v54; // [rsp+68h] [rbp-698h]\n  int i; // [rsp+6Ch] [rbp-694h]\n  int v56; // [rsp+70h] [rbp-690h]\n  int v57; // [rsp+74h] [rbp-68Ch]\n  int v58; // [rsp+78h] [rbp-688h]\n  int v59; // [rsp+7Ch] [rbp-684h]\n  int v60; // [rsp+80h] [rbp-680h]\n  int v61; // [rsp+84h] [rbp-67Ch]\n  int v62; // [rsp+88h] [rbp-678h]\n  int v63; // [rsp+8Ch] [rbp-674h]\n  int v64; // [rsp+90h] [rbp-670h]\n  int v65; // [rsp+94h] [rbp-66Ch]\n  char *v66; // [rsp+98h] [rbp-668h]\n  __int64 v67; // [rsp+A0h] [rbp-660h]\n  const char *v70; // [rsp+B8h] [rbp-648h]\n  __int64 src; // [rsp+C0h] [rbp-640h]\n  __int64 k; // [rsp+C8h] [rbp-638h]\n  char *v73; // [rsp+D0h] [rbp-630h]\n  time_t v74; // [rsp+D8h] [rbp-628h]\n  unsigned __int64 v75; // [rsp+108h] [rbp-5F8h]\n  unsigned __int64 v76; // [rsp+110h] [rbp-5F0h]\n  __int64 v77; // [rsp+118h] [rbp-5E8h]\n  unsigned __int64 v78; // [rsp+128h] [rbp-5D8h]\n  unsigned __int64 v79; // [rsp+130h] [rbp-5D0h]\n  __int64 v80; // [rsp+138h] [rbp-5C8h]\n  unsigned __int64 v81; // [rsp+148h] [rbp-5B8h]\n  unsigned __int64 v82; // [rsp+150h] [rbp-5B0h]\n  unsigned __int64 v83; // [rsp+158h] [rbp-5A8h]\n  size_t v84; // [rsp+160h] [rbp-5A0h]\n  unsigned __int64 v85; // [rsp+170h] [rbp-590h]\n  unsigned __int64 v86; // [rsp+178h] [rbp-588h]\n  __int64 v87; // [rsp+180h] [rbp-580h]\n  unsigned __int64 v88; // [rsp+188h] [rbp-578h]\n  unsigned __int64 v89; // [rsp+190h] [rbp-570h]\n  unsigned __int64 v90; // [rsp+198h] [rbp-568h]\n  size_t v91; // [rsp+1A0h] [rbp-560h]\n  unsigned __int64 v92; // [rsp+1B0h] [rbp-550h]\n  unsigned __int64 v93; // [rsp+1B8h] [rbp-548h]\n  __int64 v94; // [rsp+1C0h] [rbp-540h]\n  unsigned __int64 v95; // [rsp+1D0h] [rbp-530h]\n  unsigned __int64 v96; // [rsp+1D8h] [rbp-528h]\n  __int64 v97; // [rsp+1E0h] [rbp-520h]\n  unsigned __int64 v98; // [rsp+1F0h] [rbp-510h]\n  unsigned __int64 v99; // [rsp+1F8h] [rbp-508h]\n  __int64 v100; // [rsp+200h] [rbp-500h]\n  unsigned __int64 v101; // [rsp+210h] [rbp-4F0h]\n  unsigned __int64 v102; // [rsp+218h] [rbp-4E8h]\n  __int64 v103; // [rsp+220h] [rbp-4E0h]\n  unsigned __int64 v104; // [rsp+228h] [rbp-4D8h]\n  unsigned __int64 v105; // [rsp+230h] [rbp-4D0h]\n  unsigned __int64 v106; // [rsp+238h] [rbp-4C8h]\n  size_t v107; // [rsp+240h] [rbp-4C0h]\n  size_t v108; // [rsp+248h] [rbp-4B8h]\n  unsigned __int64 v109; // [rsp+250h] [rbp-4B0h]\n  unsigned __int64 v110; // [rsp+258h] [rbp-4A8h]\n  size_t v111; // [rsp+260h] [rbp-4A0h]\n  size_t v112; // [rsp+268h] [rbp-498h]\n  unsigned __int64 v113; // [rsp+278h] [rbp-488h]\n  unsigned __int64 v114; // [rsp+280h] [rbp-480h]\n  __int64 v115; // [rsp+288h] [rbp-478h]\n  struct tm v116; // [rsp+290h] [rbp-470h] BYREF\n  char format[2]; // [rsp+2D0h] [rbp-430h] BYREF\n  char v118; // [rsp+2D2h] [rbp-42Eh] BYREF\n  _BYTE v119[5]; // [rsp+2D3h] [rbp-42Dh] BYREF\n  char v120; // [rsp+2E0h] [rbp-420h] BYREF\n  _BYTE v121[22]; // [rsp+2E1h] [rbp-41Fh] BYREF\n  _BYTE v122[1033]; // [rsp+2F7h] [rbp-409h] BYREF\n  __int64 savedregs; // [rsp+700h] [rbp+0h] BYREF\n\n  *(_QWORD *)&v122[1009] = __readfsqword(0x28u);\n  v42 = a5->tm_hour;\n  v67 = 0LL;\n  v66 = (char *)a5->tm_zone;\n  if ( v42 <= 12 )\n  {\n    if ( !v42 )\n      v42 = 12;\n  }\n  else\n  {\n    v42 -= 12;\n  }\n  while ( 2 )\n  {\n    if ( !*a4 )\n    {\n      if ( a2 )\n      {\n        if ( a3 )\n          *a2 = 0;\n      }\n      return v67;\n    }\n    v43 = 0;\n    v45 = 0;\n    v49 = -1;\n    v38 = 0;\n    v39 = a1;\n    v40 = 0;\n    if ( *a4 != 37 )\n    {\n      if ( (unsigned __int64)(a3 - v67) <= 1 )\n        return 0LL;\n      if ( a2 )\n        *a2++ = *a4;\n      ++v67;\n      goto LABEL_477;\n    }\n    while ( 1 )\n    {\n      while ( 1 )\n      {\n        v8 = *++a4;\n        if ( v8 == 48 )\n          goto LABEL_19;\n        if ( v8 > 48 )\n          break;\n        if ( v8 == 35 )\n        {\n          v40 = 1;\n        }\n        else\n        {\n          if ( v8 != 45 )\n            goto LABEL_22;\nLABEL_19:\n          v43 = *a4;\n        }\n      }\n      if ( v8 != 94 )\n        break;\n      v39 = 1;\n    }\n    if ( v8 == 95 )\n      goto LABEL_19;\nLABEL_22:\n    if ( (unsigned int)(*a4 - 48) <= 9 )\n    {\n      v49 = 0;\n      do\n      {\n        if ( v49 > 214748364 || v49 == 214748364 && *a4 - 48 > 7 )\n          v49 = 0x7FFFFFFF;\n        else\n          v49 = *a4 - 48 + 10 * v49;\n        ++a4;\n      }\n      while ( (unsigned int)(*a4 - 48) <= 9 );\n    }\n    v9 = *a4;\n    if ( v9 == 69 || v9 == 79 )\n    {\n      v10 = a4++;\n      v44 = *v10;\n    }\n    else\n    {\n      v44 = 0;\n    }\n    v50 = *a4;\n    if ( v50 == 89 )\n    {\n      if ( v44 == 69 )\n        goto LABEL_152;\n      if ( v44 == 79 )\n        goto LABEL_457;\n      v45 = 4;\n      v36 = a5->tm_year < -1900;\n      v47 = a5->tm_year + 1900;\n      goto LABEL_196;\n    }\n    if ( v50 > 89 )\n    {\n      if ( v50 == 108 )\n      {\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = v42;\n      }\n      else\n      {\n        if ( v50 > 108 )\n        {\n          if ( v50 == 116 )\n          {\n            LODWORD(v24) = 0;\n            if ( v49 >= 0 )\n              LODWORD(v24) = v49;\n            v85 = (int)v24;\n            v24 = (int)v24;\n            if ( (unsigned __int64)(int)v24 <= 1 )\n              v24 = 1LL;\n            v86 = v24;\n            if ( a3 - v67 > v24 )\n            {\n              if ( a2 )\n              {\n                if ( v85 > 1 )\n                {\n                  v87 = v49 - 1LL;\n                  if ( v43 == 48 )\n                    memset(a2, 48, v87);\n                  else\n                    memset(a2, 32, v87);\n                  a2 += v87;\n                }\n                *a2++ = 9;\n              }\n              v67 += v86;\n              goto LABEL_477;\n            }\n            return 0LL;\n          }\n          if ( v50 > 116 )\n          {\n            if ( v50 == 120 )\n            {\n              if ( v44 == 79 )\n                goto LABEL_457;\n              goto LABEL_152;\n            }\n            if ( v50 > 120 )\n            {\n              if ( v50 != 121 )\n              {\n                if ( v50 != 122 )\n                  goto LABEL_457;\n                k = 0LL;\n                goto LABEL_444;\n              }\n              if ( v44 == 69 )\n                goto LABEL_152;\n              v54 = a5->tm_year % 100;\n              if ( v54 < 0 )\n              {\n                if ( a5->tm_year >= -1900 )\n                  v30 = v54 + 100;\n                else\n                  v30 = -v54;\n                v54 = v30;\n              }\n              v45 = 2;\n              v46 = v54;\n            }\n            else if ( v50 == 117 )\n            {\n              v45 = 1;\n              v46 = (a5->tm_wday + 6) % 7 + 1;\n            }\n            else\n            {\n              if ( v50 != 119 || v44 == 69 )\n                goto LABEL_457;\n              v45 = 1;\n              v46 = a5->tm_wday;\n            }\n            goto LABEL_195;\n          }\n          if ( v50 != 112 )\n          {\n            if ( v50 > 112 )\n            {\n              if ( v50 == 114 )\n                goto LABEL_152;\n              if ( v50 != 115 )\n                goto LABEL_457;\n              v116 = *a5;\n              v74 = mktime(&v116);\n              src = (__int64)v122;\n              v36 = v74 < 0;\n              do\n              {\n                v57 = (int)v74 % 10;\n                v74 /= 10LL;\n                --src;\n                if ( v36 )\n                  v23 = 48 - v57;\n                else\n                  v23 = v57 + 48;\n                *(_BYTE *)src = v23;\n              }\n              while ( v74 );\n              v45 = 1;\n              v37 = 0;\n              goto LABEL_205;\n            }\n            if ( v50 != 109 )\n            {\n              if ( v50 != 110 )\n                goto LABEL_457;\n              LODWORD(v22) = 0;\n              if ( v49 >= 0 )\n                LODWORD(v22) = v49;\n              v78 = (int)v22;\n              v22 = (int)v22;\n              if ( (unsigned __int64)(int)v22 <= 1 )\n                v22 = 1LL;\n              v79 = v22;\n              if ( a3 - v67 > v22 )\n              {\n                if ( a2 )\n                {\n                  if ( v78 > 1 )\n                  {\n                    v80 = v49 - 1LL;\n                    if ( v43 == 48 )\n                      memset(a2, 48, v80);\n                    else\n                      memset(a2, 32, v80);\n                    a2 += v80;\n                  }\n                  *a2++ = 10;\n                }\n                v67 += v79;\n                goto LABEL_477;\n              }\n              return 0LL;\n            }\n            if ( v44 == 69 )\n              goto LABEL_457;\n            v45 = 2;\n            v36 = a5->tm_mon < -1;\n            v47 = a5->tm_mon + 1;\n            goto LABEL_196;\n          }\n          goto LABEL_341;\n        }\n        if ( v50 == 100 )\n        {\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_mday;\n          goto LABEL_195;\n        }\n        if ( v50 <= 100 )\n        {\n          if ( v50 == 97 )\n          {\n            if ( v44 )\n              goto LABEL_457;\n            if ( v40 )\n            {\n              v39 = 1;\n              v38 = 0;\n            }\n            goto LABEL_152;\n          }\n          if ( v50 <= 97 )\n          {\n            if ( v50 != 90 )\n              goto LABEL_457;\n            if ( v40 )\n            {\n              v39 = 0;\n              v38 = 1;\n            }\n            if ( !v66 )\n              v66 = (char *)&unk_40D4A7;\n            v88 = strlen(v66);\n            LODWORD(v31) = 0;\n            if ( v49 >= 0 )\n              LODWORD(v31) = v49;\n            v89 = (int)v31;\n            v31 = (int)v31;\n            if ( v88 >= (int)v31 )\n              v31 = v88;\n            v90 = v31;\n            if ( a3 - v67 > v31 )\n            {\n              if ( a2 )\n              {\n                if ( v88 < v89 )\n                {\n                  v91 = v49 - v88;\n                  if ( v43 == 48 )\n                    memset(a2, 48, v91);\n                  else\n                    memset(a2, 32, v91);\n                  a2 += v91;\n                }\n                if ( v38 )\n                {\n                  sub_4072DF((__int64)a2, (__int64)v66, v88);\n                }\n                else if ( v39 )\n                {\n                  sub_407338((__int64)a2, (__int64)v66, v88);\n                }\n                else\n                {\n                  memcpy(a2, v66, v88);\n                }\n                a2 += v88;\n              }\n              v67 += v90;\n              goto LABEL_477;\n            }\n            return 0LL;\n          }\n          if ( v50 != 98 )\n          {\n            if ( v44 == 79 )\n              goto LABEL_457;\n            goto LABEL_152;\n          }\nLABEL_128:\n          if ( v40 )\n          {\n            v39 = 1;\n            v38 = 0;\n          }\n          if ( !v44 )\n            goto LABEL_152;\nLABEL_457:\n          for ( i = 1; a4[1 - i] != 37; ++i )\n            ;\n          LODWORD(v32) = 0;\n          if ( v49 >= 0 )\n            LODWORD(v32) = v49;\n          v113 = (int)v32;\n          v32 = (int)v32;\n          if ( i >= (unsigned __int64)(int)v32 )\n            v32 = i;\n          v114 = v32;\n          if ( a3 - v67 > v32 )\n          {\n            if ( a2 )\n            {\n              if ( i < v113 )\n              {\n                v115 = v49 - (__int64)i;\n                if ( v43 == 48 )\n                  memset(a2, 48, v115);\n                else\n                  memset(a2, 32, v115);\n                a2 += v115;\n              }\n              if ( v39 )\n                sub_407338((__int64)a2, (__int64)&a4[1 - i], i);\n              else\n                memcpy(a2, &a4[1 - i], i);\n              a2 += i;\n            }\n            v67 += v114;\n            goto LABEL_477;\n          }\n          return 0LL;\n        }\n        if ( v50 == 104 )\n          goto LABEL_128;\n        if ( v50 > 104 )\n        {\n          if ( v50 == 106 )\n          {\n            if ( v44 == 69 )\n              goto LABEL_457;\n            v45 = 3;\n            v36 = a5->tm_yday < -1;\n            v47 = a5->tm_yday + 1;\n            goto LABEL_196;\n          }\n          if ( v50 != 107 || v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_hour;\n        }\n        else\n        {\n          if ( v50 != 101 )\n          {\n            if ( v50 != 103 )\n              goto LABEL_457;\n            goto LABEL_373;\n          }\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_mday;\n        }\n      }\n      if ( v43 != 48 && v43 != 45 )\n        v43 = 95;\n      goto LABEL_195;\n    }\n    if ( v50 == 73 )\n    {\n      if ( v44 == 69 )\n        goto LABEL_457;\n      v45 = 2;\n      v46 = v42;\n      goto LABEL_195;\n    }\n    if ( v50 > 73 )\n    {\n      if ( v50 == 83 )\n      {\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = a5->tm_sec;\n      }\n      else if ( v50 > 83 )\n      {\n        if ( v50 == 86 )\n          goto LABEL_373;\n        if ( v50 > 86 )\n        {\n          if ( v50 != 87 )\n          {\n            if ( v44 == 79 )\n              goto LABEL_457;\n            goto LABEL_152;\n          }\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = (a5->tm_yday - (a5->tm_wday + 6) % 7 + 7) / 7;\n          goto LABEL_195;\n        }\n        if ( v50 == 84 )\n        {\n          v70 = \"%H:%M:%S\";\n          v12 = sub_4073E2(v39, 0, -1, (unsigned int)\"%H:%M:%S\", (_DWORD)a5, a6, a7);\n          goto LABEL_138;\n        }\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v45 = 2;\n        v46 = (a5->tm_yday - a5->tm_wday + 7) / 7;\n      }\n      else\n      {\n        if ( v50 != 78 )\n        {\n          if ( v50 <= 78 )\n          {\n            if ( v50 != 77 || v44 == 69 )\n              goto LABEL_457;\n            v45 = 2;\n            v46 = a5->tm_min;\n            goto LABEL_195;\n          }\n          if ( v50 != 80 )\n          {\n            if ( v50 != 82 )\n              goto LABEL_457;\n            v70 = \"%H:%M\";\n            v12 = sub_4073E2(v39, 0, -1, (unsigned int)\"%H:%M\", (_DWORD)a5, a6, a7);\n            goto LABEL_138;\n          }\n          v38 = 1;\n          LOBYTE(v50) = 112;\nLABEL_341:\n          if ( v40 )\n          {\n            v39 = 0;\n            v38 = 1;\n          }\n          goto LABEL_152;\n        }\n        if ( v44 == 69 )\n          goto LABEL_457;\n        v46 = a7;\n        if ( v49 == -1 )\n        {\n          v49 = 9;\n        }\n        else\n        {\n          for ( j = v49; j <= 8; ++j )\n            v46 /= 10;\n        }\n        v45 = v49;\n      }\nLABEL_195:\n      v36 = v46 < 0;\n      v47 = v46;\n      goto LABEL_196;\n    }\n    if ( v50 == 66 )\n    {\n      if ( v44 )\n        goto LABEL_457;\n      if ( v40 )\n      {\n        v39 = 1;\n        v38 = 0;\n      }\n      goto LABEL_152;\n    }\n    if ( v50 > 66 )\n    {\n      if ( v50 != 70 )\n      {\n        if ( v50 <= 70 )\n        {\n          if ( v50 != 67 )\n          {\n            if ( v50 != 68 || v44 )\n              goto LABEL_457;\n            v70 = \"%m/%d/%y\";\n            v12 = sub_4073E2(v39, 0, -1, (unsigned int)\"%m/%d/%y\", (_DWORD)a5, a6, a7);\n            goto LABEL_138;\n          }\n          if ( v44 == 79 )\n            goto LABEL_457;\n          if ( v44 == 69 )\n            goto LABEL_152;\n          v56 = a5->tm_year / 100 + 19;\n          v14 = a5->tm_year % 100 < 0 && v56 > 0;\n          v45 = 2;\n          v36 = a5->tm_year < -1900;\n          v47 = v56 - v14;\nLABEL_196:\n          v37 = 0;\n          v48 = 0;\n          goto LABEL_197;\n        }\n        if ( v50 != 71 )\n        {\n          if ( v44 == 69 )\n            goto LABEL_457;\n          v45 = 2;\n          v46 = a5->tm_hour;\n          goto LABEL_195;\n        }\nLABEL_373:\n        if ( v44 == 69 )\n          goto LABEL_457;\n        if ( a5->tm_year >= 0 )\n          v25 = -100;\n        else\n          v25 = 300;\n        v58 = a5->tm_year + v25;\n        v52 = 0;\n        v53 = sub_407391(a5->tm_yday, a5->tm_wday);\n        if ( v53 >= 0 )\n        {\n          v27 = (v58 & 3) == 0 && (v58 % 100 || !(v58 % 400));\n          v59 = sub_407391(a5->tm_yday + -365 - v27, a5->tm_wday);\n          if ( v59 >= 0 )\n          {\n            v52 = 1;\n            v53 = v59;\n          }\n        }\n        else\n        {\n          v52 = -1;\n          v26 = (((_BYTE)v58 - 1) & 3) == 0 && ((v58 - 1) % 100 || !((v58 - 1) % 400));\n          v53 = sub_407391(a5->tm_yday + v26 + 365, a5->tm_wday);\n        }\n        v28 = *a4;\n        if ( v28 == 71 )\n        {\n          v45 = 4;\n          v36 = a5->tm_year < -1900 - v52;\n          v47 = a5->tm_year + v52 + 1900;\n          goto LABEL_196;\n        }\n        if ( v28 == 103 )\n        {\n          v60 = (a5->tm_year % 100 + v52) % 100;\n          v45 = 2;\n          if ( v60 >= 0 )\n          {\n            v29 = (a5->tm_year % 100 + v52) % 100;\n          }\n          else if ( a5->tm_year >= -1900 - v52 )\n          {\n            v29 = v60 + 100;\n          }\n          else\n          {\n            v29 = -v60;\n          }\n          v46 = v29;\n        }\n        else\n        {\n          v45 = 2;\n          v46 = v53 / 7 + 1;\n        }\n        goto LABEL_195;\n      }\n      if ( v44 )\n        goto LABEL_457;\n      v70 = \"%Y-%m-%d\";\n      v12 = sub_4073E2(v39, 0, -1, (unsigned int)\"%Y-%m-%d\", (_DWORD)a5, a6, a7);\nLABEL_138:\n      v81 = v12;\n      LODWORD(v12) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v12) = v49;\n      v82 = (int)v12;\n      v12 = (int)v12;\n      if ( v81 >= (int)v12 )\n        v12 = v81;\n      v83 = v12;\n      if ( a3 - v67 <= v12 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v81 < v82 )\n        {\n          v84 = v49 - v81;\n          if ( v43 == 48 )\n            memset(a2, 48, v84);\n          else\n            memset(a2, 32, v84);\n          a2 += v84;\n        }\n        sub_4073E2(v39, (_DWORD)a2, a3 - v67, (_DWORD)v70, (_DWORD)a5, a6, a7);\n        a2 += v81;\n      }\n      v67 += v83;\n      goto LABEL_477;\n    }\n    if ( v50 == 37 )\n    {\n      if ( v44 )\n        goto LABEL_457;\n      LODWORD(v11) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v11) = v49;\n      v75 = (int)v11;\n      v11 = (int)v11;\n      if ( (unsigned __int64)(int)v11 <= 1 )\n        v11 = 1LL;\n      v76 = v11;\n      if ( a3 - v67 <= v11 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( v75 > 1 )\n        {\n          v77 = v49 - 1LL;\n          if ( v43 == 48 )\n            memset(a2, 48, v77);\n          else\n            memset(a2, 32, v77);\n          a2 += v77;\n        }\n        *a2++ = *a4;\n      }\n      v67 += v76;\n      goto LABEL_477;\n    }\n    if ( v50 <= 37 )\n    {\n      if ( !*a4 )\n        --a4;\n      goto LABEL_457;\n    }\n    if ( v50 != 58 )\n    {\n      if ( v50 != 65 || v44 )\n        goto LABEL_457;\n      if ( v40 )\n      {\n        v39 = 1;\n        v38 = 0;\n      }\nLABEL_152:\n      format[0] = 32;\n      v73 = &v118;\n      format[1] = 37;\n      if ( v44 )\n      {\n        v73 = v119;\n        v118 = v44;\n      }\n      *v73 = v50;\n      v73[1] = 0;\n      v108 = strftime(&v120, 0x400uLL, format, a5);\n      if ( v108 )\n      {\n        v109 = v108 - 1;\n        LODWORD(v13) = 0;\n        if ( v49 >= 0 )\n          LODWORD(v13) = v49;\n        v110 = (int)v13;\n        v13 = (int)v13;\n        if ( v109 >= (int)v13 )\n          v13 = v108 - 1;\n        v111 = v13;\n        if ( a3 - v67 <= v13 )\n          return 0LL;\n        if ( a2 )\n        {\n          if ( !v45 && v109 < v110 )\n          {\n            v112 = v49 - v109;\n            if ( v43 == 48 )\n              memset(a2, 48, v112);\n            else\n              memset(a2, 32, v112);\n            a2 += v112;\n          }\n          if ( v38 )\n          {\n            sub_4072DF((__int64)a2, (__int64)v121, v109);\n          }\n          else if ( v39 )\n          {\n            sub_407338((__int64)a2, (__int64)v121, v109);\n          }\n          else\n          {\n            memcpy(a2, v121, v109);\n          }\n          a2 += v109;\n        }\n        v67 += v111;\n      }\nLABEL_477:\n      ++a4;\n      continue;\n    }\n    break;\n  }\n  for ( k = 1LL; a4[k] == 58; ++k )\n    ;\n  if ( a4[k] != 122 )\n    goto LABEL_457;\n  a4 += k;\nLABEL_444:\n  if ( a5->tm_isdst < 0 )\n    goto LABEL_477;\n  v61 = a5->tm_gmtoff;\n  v62 = v61 / 3600;\n  v63 = v61 / 60 % 60;\n  v64 = v61 % 60;\n  switch ( k )\n  {\n    case 1LL:\n      goto LABEL_451;\n    case 0LL:\n      v45 = 5;\n      v36 = v61 < 0;\n      v48 = 0;\n      v47 = 100 * v62 + v63;\n      goto LABEL_191;\n    case 2LL:\n      goto LABEL_452;\n  }\n  if ( k != 3 )\n    goto LABEL_457;\n  if ( v64 )\n  {\nLABEL_452:\n    v45 = 9;\n    v36 = v61 < 0;\n    v48 = 20;\n    v47 = 100 * v63 + 10000 * v62 + v64;\n    goto LABEL_191;\n  }\n  if ( v63 )\n  {\nLABEL_451:\n    v45 = 6;\n    v36 = v61 < 0;\n    v48 = 4;\n    v47 = 100 * v62 + v63;\n    goto LABEL_191;\n  }\n  v45 = 3;\n  v36 = v61 < 0;\n  v48 = 0;\n  v47 = v61 / 3600;\nLABEL_191:\n  v37 = 1;\nLABEL_197:\n  if ( v44 == 79 && !v36 )\n    goto LABEL_152;\n  src = (__int64)v122;\n  if ( v36 )\n    v47 = -v47;\n  do\n  {\n    if ( (v48 & 1) != 0 )\n      *(_BYTE *)--src = 58;\n    v48 >>= 1;\n    *(_BYTE *)--src = v47 % 0xA + 48;\n    v47 /= 0xAu;\n  }\n  while ( v47 || v48 );\nLABEL_205:\n  if ( v45 < v49 )\n    v45 = v49;\n  if ( v36 )\n  {\n    v15 = 45;\n  }\n  else if ( v37 )\n  {\n    v15 = 43;\n  }\n  else\n  {\n    v15 = 0;\n  }\n  v41 = v15;\n  if ( v43 == 45 )\n  {\n    if ( v15 )\n    {\n      LODWORD(v16) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v16) = v49;\n      v92 = (int)v16;\n      v16 = (int)v16;\n      if ( (unsigned __int64)(int)v16 <= 1 )\n        v16 = 1LL;\n      v93 = v16;\n      if ( a3 - v67 <= v16 )\n        return 0LL;\n      if ( a2 )\n      {\n        if ( !v45 && v92 > 1 )\n        {\n          v94 = v49 - 1LL;\n          memset(a2, 32, v94);\n          a2 += v94;\n        }\n        *a2++ = v41;\n      }\n      v67 += v93;\n    }\nLABEL_285:\n    v104 = (unsigned __int64)&v122[-src];\n    LODWORD(v21) = 0;\n    if ( v49 >= 0 )\n      LODWORD(v21) = v49;\n    v105 = (int)v21;\n    v21 = (int)v21;\n    if ( v104 >= (int)v21 )\n      v21 = (unsigned __int64)&v122[-src];\n    v106 = v21;\n    if ( a3 - v67 > v21 )\n    {\n      if ( a2 )\n      {\n        if ( !v45 && v104 < v105 )\n        {\n          v107 = v49 - v104;\n          if ( v43 == 48 )\n            memset(a2, 48, v107);\n          else\n            memset(a2, 32, v107);\n          a2 += v107;\n        }\n        if ( v39 )\n          sub_407338((__int64)a2, src, v104);\n        else\n          memcpy(a2, (const void *)src, v104);\n        a2 += v104;\n      }\n      v67 += v106;\n      goto LABEL_477;\n    }\n    result = 0LL;\n  }\n  else\n  {\n    v65 = v45 + src - ((unsigned int)&savedregs - 1056 + 23) - (v15 != 0);\n    if ( v65 <= 0 )\n    {\n      if ( !v15 )\n        goto LABEL_285;\n      LODWORD(v20) = 0;\n      if ( v49 >= 0 )\n        LODWORD(v20) = v49;\n      v101 = (int)v20;\n      v20 = (int)v20;\n      if ( (unsigned __int64)(int)v20 <= 1 )\n        v20 = 1LL;\n      v102 = v20;\n      if ( a3 - v67 > v20 )\n      {\n        if ( a2 )\n        {\n          if ( !v45 && v101 > 1 )\n          {\n            v103 = v49 - 1LL;\n            if ( v43 == 48 )\n              memset(a2, 48, v103);\n            else\n              memset(a2, 32, v103);\n            a2 += v103;\n          }\n          *a2++ = v41;\n        }\n        v67 += v102;\n        goto LABEL_285;\n      }\n      result = 0LL;\n    }\n    else\n    {\n      if ( v43 != 95 )\n      {\n        if ( v45 >= (unsigned __int64)(a3 - v67) )\n          return 0LL;\n        if ( v15 )\n        {\n          LODWORD(v19) = 0;\n          if ( v49 >= 0 )\n            LODWORD(v19) = v49;\n          v98 = (int)v19;\n          v19 = (int)v19;\n          if ( (unsigned __int64)(int)v19 <= 1 )\n            v19 = 1LL;\n          v99 = v19;\n          if ( a3 - v67 <= v19 )\n            return 0LL;\n          if ( a2 )\n          {\n            if ( !v45 && v98 > 1 )\n            {\n              v100 = v49 - 1LL;\n              if ( v43 == 48 )\n                memset(a2, 48, v100);\n              else\n                memset(a2, 32, v100);\n              a2 += v100;\n            }\n            *a2++ = v41;\n          }\n          v67 += v99;\n        }\n        if ( a2 )\n        {\n          memset(a2, 48, v65);\n          a2 += v65;\n        }\n        v67 += v65;\n        v49 = 0;\n        goto LABEL_285;\n      }\n      if ( v65 < (unsigned __int64)(a3 - v67) )\n      {\n        if ( a2 )\n        {\n          memset(a2, 32, v65);\n          a2 += v65;\n        }\n        v67 += v65;\n        if ( v49 <= v65 )\n          v17 = 0;\n        else\n          v17 = v49 - v65;\n        v49 = v17;\n        if ( !v41 )\n          goto LABEL_285;\n        LODWORD(v18) = 0;\n        if ( v49 >= 0 )\n          LODWORD(v18) = v49;\n        v95 = (int)v18;\n        v18 = (int)v18;\n        if ( (unsigned __int64)(int)v18 <= 1 )\n          v18 = 1LL;\n        v96 = v18;\n        if ( a3 - v67 > v18 )\n        {\n          if ( a2 )\n          {\n            if ( !v45 && v95 > 1 )\n            {\n              v97 = v49 - 1LL;\n              memset(a2, 32, v97);\n              a2 += v97;\n            }\n            *a2++ = v41;\n          }\n          v67 += v96;\n          goto LABEL_285;\n        }\n        result = 0LL;\n      }\n      else\n      {\n        result = 0LL;\n      }\n    }\n  }\n  return result;\n}\n"], [4234561, "sub_409D41", "__int64 __fastcall sub_409D41(char *a1, __int64 a2, char *a3, const struct tm *a4, int a5, int a6)\n{\n  return sub_4073E2(0, a1, a2, a3, a4, a5, a6);\n}\n"], [4234640, "sub_409D90", "__int64 __fastcall sub_409D90(int a1, __int64 a2, __int64 a3, int a4, int a5, int a6)\n{\n  return sub_40B4E1(a1, 0, 3, a4, a5, a6);\n}\n"], [4234678, "sub_409DB6", "int __fastcall sub_409DB6(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5, unsigned __int64 a6)\n{\n  char *v6; // rax\n  char *v7; // rax\n  __int64 v8; // rbx\n  char *v9; // rax\n  __int64 v10; // r12\n  __int64 v11; // rbx\n  char *v12; // rax\n  __int64 v13; // r13\n  __int64 v14; // r12\n  __int64 v15; // rbx\n  char *v16; // rax\n  int result; // eax\n  __int64 v18; // r14\n  __int64 v19; // r13\n  __int64 v20; // r12\n  __int64 v21; // rbx\n  char *v22; // rax\n  __int64 v23; // r13\n  __int64 v24; // r15\n  __int64 v25; // r14\n  __int64 v26; // r12\n  __int64 v27; // rbx\n  char *v28; // rax\n  __int64 v29; // r14\n  __int64 v30; // r13\n  __int64 v31; // r15\n  __int64 v32; // r12\n  __int64 v33; // rbx\n  char *v34; // rax\n  __int64 v35; // r15\n  __int64 v36; // r14\n  __int64 v37; // r13\n  __int64 v38; // r12\n  __int64 v39; // rbx\n  char *v40; // rax\n  __int64 v41; // r15\n  __int64 v42; // r14\n  __int64 v43; // r13\n  __int64 v44; // r12\n  __int64 v45; // rbx\n  char *v46; // rax\n  __int64 v47; // r15\n  __int64 v48; // r14\n  __int64 v49; // r13\n  __int64 v50; // r12\n  __int64 v51; // rbx\n  char *v52; // rax\n  __int64 v53; // [rsp+30h] [rbp-80h]\n  __int64 v54; // [rsp+38h] [rbp-78h]\n  __int64 v55; // [rsp+38h] [rbp-78h]\n  __int64 v56; // [rsp+40h] [rbp-70h]\n  __int64 v57; // [rsp+40h] [rbp-70h]\n  __int64 v58; // [rsp+40h] [rbp-70h]\n  __int64 v59; // [rsp+48h] [rbp-68h]\n  __int64 v60; // [rsp+48h] [rbp-68h]\n  __int64 v61; // [rsp+48h] [rbp-68h]\n  __int64 v62; // [rsp+48h] [rbp-68h]\n\n  if ( a2 )\n    fprintf(a1, \"%s (%s) %s\\n\", a2, a3, a4);\n  else\n    fprintf(a1, \"%s %s\\n\", a3, a4);\n  v6 = gettext(\"(C)\");\n  fprintf(a1, \"Copyright %s %d Free Software Foundation, Inc.\", v6, 2011LL);\n  v7 = gettext(\n         \"\\n\"\n         \"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\\n\"\n         \"This is free software: you are free to change and redistribute it.\\n\"\n         \"There is NO WARRANTY, to the extent permitted by law.\\n\"\n         \"\\n\");\n  fputs_unlocked(v7, a1);\n  if ( a6 == 4 )\n  {\n    v18 = a5[3];\n    v19 = a5[2];\n    v20 = a5[1];\n    v21 = *a5;\n    v22 = gettext(\"Written by %s, %s, %s,\\nand %s.\\n\");\n    result = fprintf(a1, v22, v21, v20, v19, v18);\n  }\n  else if ( a6 > 4 )\n  {\n    if ( a6 == 7 )\n    {\n      v35 = a5[6];\n      v36 = a5[5];\n      v37 = a5[4];\n      v60 = a5[3];\n      v56 = a5[2];\n      v38 = a5[1];\n      v39 = *a5;\n      v40 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\");\n      result = fprintf(a1, v40, v39, v38, v56, v60, v37, v36, v35);\n    }\n    else if ( a6 > 7 )\n    {\n      if ( a6 == 8 )\n      {\n        v61 = a5[7];\n        v41 = a5[6];\n        v42 = a5[5];\n        v43 = a5[4];\n        v57 = a5[3];\n        v54 = a5[2];\n        v44 = a5[1];\n        v45 = *a5;\n        v46 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\");\n        result = fprintf(a1, v46, v45, v44, v54, v57, v43, v42, v41, v61);\n      }\n      else\n      {\n        v62 = a5[8];\n        v58 = a5[7];\n        v47 = a5[6];\n        v48 = a5[5];\n        v49 = a5[4];\n        v55 = a5[3];\n        v53 = a5[2];\n        v50 = a5[1];\n        v51 = *a5;\n        if ( a6 == 9 )\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\");\n        else\n          v52 = gettext(\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\");\n        result = fprintf(a1, v52, v51, v50, v53, v55, v49, v48, v47, v58, v62);\n      }\n    }\n    else if ( a6 == 5 )\n    {\n      v23 = a5[4];\n      v24 = a5[3];\n      v25 = a5[2];\n      v26 = a5[1];\n      v27 = *a5;\n      v28 = gettext(\"Written by %s, %s, %s,\\n%s, and %s.\\n\");\n      result = fprintf(a1, v28, v27, v26, v25, v24, v23);\n    }\n    else\n    {\n      v29 = a5[5];\n      v30 = a5[4];\n      v59 = a5[3];\n      v31 = a5[2];\n      v32 = a5[1];\n      v33 = *a5;\n      v34 = gettext(\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\");\n      result = fprintf(a1, v34, v33, v32, v31, v59, v30, v29);\n    }\n  }\n  else\n  {\n    switch ( a6 )\n    {\n      case 1uLL:\n        v8 = *a5;\n        v9 = gettext(\"Written by %s.\\n\");\n        result = fprintf(a1, v9, v8);\n        break;\n      case 0uLL:\n        abort();\n      case 2uLL:\n        v10 = a5[1];\n        v11 = *a5;\n        v12 = gettext(\"Written by %s and %s.\\n\");\n        result = fprintf(a1, v12, v11, v10);\n        break;\n      default:\n        v13 = a5[2];\n        v14 = a5[1];\n        v15 = *a5;\n        v16 = gettext(\"Written by %s, %s, and %s.\\n\");\n        result = fprintf(a1, v16, v15, v14, v13);\n        break;\n    }\n  }\n  return result;\n}\n"], [4236193, "sub_40A3A1", "int __fastcall sub_40A3A1(FILE *a1, const char *a2, const char *a3, const char *a4, __int64 *a5)\n{\n  unsigned __int64 i; // [rsp+38h] [rbp-8h]\n\n  for ( i = 0LL; a5[i]; ++i )\n    ;\n  return sub_409DB6(a1, a2, a3, a4, a5, i);\n}\n"], [4236303, "sub_40A40F", "int __fastcall sub_40A40F(FILE *a1, const char *a2, const char *a3, const char *a4, unsigned int *a5)\n{\n  __int64 *v5; // rax\n  unsigned __int64 i; // [rsp+38h] [rbp-58h]\n  __int64 v8[10]; // [rsp+40h] [rbp-50h] BYREF\n\n  for ( i = 0LL; i <= 9; ++i )\n  {\n    if ( *a5 >= 0x30 )\n    {\n      v5 = (__int64 *)*((_QWORD *)a5 + 1);\n      *((_QWORD *)a5 + 1) = v5 + 1;\n    }\n    else\n    {\n      v5 = (__int64 *)(*((_QWORD *)a5 + 2) + *a5);\n      *a5 += 8;\n    }\n    v8[i] = *v5;\n    if ( !v8[i] )\n      break;\n  }\n  return sub_409DB6(a1, a2, a3, a4, v8, i);\n}\n"], [4236520, "sub_40A4E8", "int sub_40A4E8(FILE *a1, const char *a2, const char *a3, const char *a4, ...)\n{\n  gcc_va_list va; // [rsp+28h] [rbp-C8h] BYREF\n\n  va_start(va, a4);\n  return sub_40A40F(a1, a2, a3, a4, (unsigned int *)va);\n}\n"], [4236702, "sub_40A59E", "int sub_40A59E()\n{\n  char *v0; // rax\n  char *v1; // rax\n  FILE *v2; // rbx\n  char *v3; // rax\n\n  v0 = gettext(\"\\nReport bugs to: %s\\n\");\n  printf(v0, \"bug-coreutils@gnu.org\");\n  v1 = gettext(\"%s home page: <%s>\\n\");\n  printf(v1, \"GNU coreutils\", \"http://www.gnu.org/software/coreutils/\");\n  v2 = stdout;\n  v3 = gettext(\"General help using GNU software: <http://www.gnu.org/gethelp/>\\n\");\n  return fputs_unlocked(v3, v2);\n}\n"], [4236807, "sub_40A607", "__int64 __fastcall sub_40A607(unsigned __int64 a1, unsigned __int64 a2)\n{\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 < a1 )\n    sub_40A8D2(a1, a2, 0xFFFFFFFFFFFFFFFFLL % a2);\n  return sub_40A750(a2 * a1);\n}\n"], [4236869, "sub_40A645", "__int64 __fastcall sub_40A645(__int64 a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rax\n  unsigned __int64 v4; // rdx\n\n  v3 = 0xFFFFFFFFFFFFFFFFLL / a3;\n  v4 = 0xFFFFFFFFFFFFFFFFLL % a3;\n  if ( v3 < a2 )\n    sub_40A8D2(a1, a2, v4);\n  return sub_40A785(a1, a3 * a2);\n}\n"], [4236945, "sub_40A691", "__int64 __fastcall sub_40A691(__int64 a1, unsigned __int64 *a2, unsigned __int64 a3)\n{\n  unsigned __int64 v3; // rdx\n  unsigned __int64 v6; // [rsp+28h] [rbp-8h]\n\n  v6 = *a2;\n  if ( a1 )\n  {\n    v3 = 0xAAAAAAAAAAAAAAAALL % a3;\n    if ( 0xAAAAAAAAAAAAAAAALL / a3 <= v6 )\n      sub_40A8D2(a1, a2, v3);\n    v6 += (v6 + 1) >> 1;\n  }\n  else if ( !v6 )\n  {\n    v6 = (0x80 / a3 == 0) + 0x80 / a3;\n  }\n  *a2 = v6;\n  return sub_40A785(a1, a3 * v6);\n}\n"], [4237110, "sub_40A736", "__int64 __fastcall sub_40A736(__int64 a1)\n{\n  return sub_40A750(a1);\n}\n"], [4237136, "sub_40A750", "void *__fastcall sub_40A750(size_t a1, __int64 a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = malloc(a1);\n  if ( !v4 && a1 )\n    sub_40A8D2(a1, a2, v2);\n  return v4;\n}\n"], [4237189, "sub_40A785", "void *__fastcall sub_40A785(void *a1, size_t a2)\n{\n  void *result; // rax\n  __int64 v3; // rdx\n  void *ptr; // [rsp+8h] [rbp-8h]\n\n  if ( a2 || !a1 )\n  {\n    ptr = realloc(a1, a2);\n    if ( !ptr )\n    {\n      if ( a2 )\n        sub_40A8D2(a1, a2, v3);\n    }\n    result = ptr;\n  }\n  else\n  {\n    free(a1);\n    result = 0LL;\n  }\n  return result;\n}\n"], [4237286, "sub_40A7E6", "__int64 __fastcall sub_40A7E6(__int64 a1, unsigned __int64 *a2)\n{\n  return sub_40A691(a1, a2, 1uLL);\n}\n"], [4237328, "sub_40A810", "void *__fastcall sub_40A810(size_t a1, __int64 a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40A750(a1, a2);\n  return memset(v2, 0, a1);\n}\n"], [4237371, "sub_40A83B", "void *__fastcall sub_40A83B(size_t a1, size_t a2)\n{\n  __int64 v2; // rdx\n  void *v4; // [rsp+18h] [rbp-8h]\n\n  v4 = calloc(a1, a2);\n  if ( !v4 )\n    sub_40A8D2(a1, a2, v2);\n  return v4;\n}\n"], [4237428, "sub_40A874", "void *__fastcall sub_40A874(const void *a1, size_t a2)\n{\n  void *v2; // rax\n\n  v2 = sub_40A750(a2, a2);\n  return memcpy(v2, a1, a2);\n}\n"], [4237477, "sub_40A8A5", "void *__fastcall sub_40A8A5(const char *a1)\n{\n  size_t v1; // rax\n\n  v1 = strlen(a1);\n  return sub_40A874(a1, v1 + 1);\n}\n"], [4237522, "sub_40A8D2", "void __noreturn sub_40A8D2()\n{\n  char *v0; // rax\n\n  v0 = gettext(\"memory exhausted\");\n  error(status, 0, \"%s\", v0);\n  abort();\n}\n"], [4237575, "sub_40A907", "__int64 __fastcall sub_40A907(__int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( *a1 >= (__int64)0x8000000000000000LL / a2 )\n  {\n    if ( 0x7FFFFFFFFFFFFFFFLL / a2 >= *a1 )\n    {\n      *a1 *= a2;\n      result = 0LL;\n    }\n    else\n    {\n      *a1 = 0x7FFFFFFFFFFFFFFFLL;\n      result = 1LL;\n    }\n  }\n  else\n  {\n    *a1 = 0x8000000000000000LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4237735, "sub_40A9A7", "__int64 __fastcall sub_40A9A7(__int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_40A907(a1, a2) )\n    ;\n  return i;\n}\n"], [4237800, "sub_40A9E8", "__int64 __fastcall sub_40A9E8(const char *a1, char **a2, int a3, _QWORD *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned int v12; // [rsp+38h] [rbp-28h]\n  int v13; // [rsp+3Ch] [rbp-24h]\n  int v14; // [rsp+40h] [rbp-20h]\n  int v15; // [rsp+44h] [rbp-1Ch]\n  char v16; // [rsp+48h] [rbp-18h] BYREF\n  __int64 v17; // [rsp+50h] [rbp-10h] BYREF\n  char **endptr; // [rsp+58h] [rbp-8h]\n\n  v12 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtol\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v16;\n  endptr = v5;\n  *__errno_location() = 0;\n  v17 = strtol(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v17 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v12 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v17;\n    return v12;\n  }\n  if ( !**endptr )\n    goto LABEL_71;\n  v13 = 1024;\n  v14 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v17;\n    return v12 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_30;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_31;\nLABEL_30:\n      v13 = 1000;\n      v14 = 2;\n      goto LABEL_31;\n    }\n    if ( (*endptr)[2] == 66 )\n      v14 = 3;\n  }\nLABEL_31:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_60:\n        v15 = sub_40A9A7(&v17, v13, 3);\n        goto LABEL_69;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v15 = sub_40A907(&v17, 512);\n            break;\n          case 'c':\n            v15 = 0;\n            break;\n          case 'Z':\n            v15 = sub_40A9A7(&v17, v13, 7);\n            break;\n          default:\n            goto LABEL_68;\n        }\n        goto LABEL_69;\n      }\n      if ( v8 == 109 )\n        goto LABEL_62;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_68;\n          v15 = sub_40A907(&v17, 2);\n          goto LABEL_69;\n        }\nLABEL_64:\n        v15 = sub_40A9A7(&v17, v13, 4);\n        goto LABEL_69;\n      }\n      if ( v8 != 107 )\n        goto LABEL_68;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v15 = sub_40A9A7(&v17, v13, 6);\n          goto LABEL_69;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_68:\n            *a4 = v17;\n            return v12 | 2;\n          }\n          v15 = sub_40A907(&v17, 1024);\n          goto LABEL_69;\n        }\n        goto LABEL_60;\n      }\n      if ( v8 == 80 )\n      {\n        v15 = sub_40A9A7(&v17, v13, 5);\n        goto LABEL_69;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_68;\nLABEL_62:\n        v15 = sub_40A9A7(&v17, v13, 2);\n        goto LABEL_69;\n      }\n      goto LABEL_64;\n    }\n    v15 = sub_40A9A7(&v17, v13, 1);\n    goto LABEL_69;\n  }\n  v15 = sub_40A9A7(&v17, v13, 8);\nLABEL_69:\n  v12 |= v15;\n  *endptr += v14;\n  if ( **endptr )\n    v12 |= 2u;\nLABEL_71:\n  *a4 = v17;\n  return v12;\n}\n"], [4238848, "sub_40AE00", "void __fastcall sub_40AE00(unsigned int a1, int a2, char a3, __int64 a4, __int64 a5, int a6)\n{\n  char *v6; // rax\n  char v9[8]; // [rsp+20h] [rbp-20h] BYREF\n  const char *v10; // [rsp+28h] [rbp-18h]\n  char *msgid; // [rsp+30h] [rbp-10h]\n  char *v12; // [rsp+38h] [rbp-8h]\n\n  v10 = \"--\";\n  if ( a1 > 3 )\n  {\n    if ( a1 != 4 )\n      goto LABEL_6;\n    msgid = \"invalid %s%s argument `%s'\";\n  }\n  else if ( a1 >= 2 )\n  {\n    msgid = \"invalid suffix in %s%s argument `%s'\";\n  }\n  else\n  {\n    if ( a1 != 1 )\nLABEL_6:\n      abort();\n    msgid = \"%s%s argument `%s' too large\";\n  }\n  if ( a2 >= 0 )\n  {\n    v12 = *(char **)(32LL * a2 + a4);\n  }\n  else\n  {\n    v10 -= a2;\n    v9[0] = a3;\n    v9[1] = 0;\n    v12 = v9;\n  }\n  v6 = gettext(msgid);\n  error(a6, 0, v6, v10, v12, a5);\n}\n"], [4239066, "sub_40AEDA", "void __fastcall __noreturn sub_40AEDA(unsigned int a1, int a2, char a3, __int64 a4, __int64 a5)\n{\n  sub_40AE00(a1, a2, a3, a4, a5, status);\n  abort();\n}\n"], [4239136, "sub_40AF20", "__int64 __fastcall sub_40AF20(unsigned __int64 *a1, int a2)\n{\n  __int64 result; // rax\n\n  if ( 0xFFFFFFFFFFFFFFFFLL / a2 >= *a1 )\n  {\n    *a1 *= a2;\n    result = 0LL;\n  }\n  else\n  {\n    *a1 = -1LL;\n    result = 1LL;\n  }\n  return result;\n}\n"], [4239231, "sub_40AF7F", "__int64 __fastcall sub_40AF7F(unsigned __int64 *a1, int a2, int a3)\n{\n  unsigned int i; // [rsp+1Ch] [rbp-4h]\n\n  for ( i = 0; a3--; i |= sub_40AF20(a1, a2) )\n    ;\n  return i;\n}\n"], [4239296, "sub_40AFC0", "__int64 __fastcall sub_40AFC0(const char *a1, char **a2, int a3, uintmax_t *a4, const char *a5)\n{\n  char **v5; // rax\n  int v7; // eax\n  int v8; // eax\n  unsigned __int8 i; // [rsp+3Fh] [rbp-31h]\n  unsigned int v13; // [rsp+40h] [rbp-30h]\n  int v14; // [rsp+44h] [rbp-2Ch]\n  int v15; // [rsp+48h] [rbp-28h]\n  int v16; // [rsp+4Ch] [rbp-24h]\n  char v17; // [rsp+50h] [rbp-20h] BYREF\n  uintmax_t v18; // [rsp+58h] [rbp-18h] BYREF\n  unsigned __int8 *v19; // [rsp+60h] [rbp-10h]\n  char **endptr; // [rsp+68h] [rbp-8h]\n\n  v13 = 0;\n  if ( a3 < 0 || a3 > 36 )\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\", \"../../src/lib/xstrtol.c\", 0x53u, \"xstrtoumax\");\n  if ( a2 )\n    v5 = a2;\n  else\n    v5 = (char **)&v17;\n  endptr = v5;\n  v19 = (unsigned __int8 *)a1;\n  for ( i = *a1; ((*__ctype_b_loc())[i] & 0x2000) != 0; i = *v19 )\n    ++v19;\n  if ( i == 45 )\n    return 4LL;\n  *__errno_location() = 0;\n  v18 = strtoumax(a1, endptr, a3);\n  if ( *endptr == a1 )\n  {\n    if ( !a5 || !**endptr || !strchr(a5, **endptr) )\n      return 4LL;\n    v18 = 1LL;\n  }\n  else if ( *__errno_location() )\n  {\n    if ( *__errno_location() != 34 )\n      return 4LL;\n    v13 = 1;\n  }\n  if ( !a5 )\n  {\n    *a4 = v18;\n    return v13;\n  }\n  if ( !**endptr )\n    goto LABEL_76;\n  v14 = 1024;\n  v15 = 1;\n  if ( !strchr(a5, **endptr) )\n  {\n    *a4 = v18;\n    return v13 | 2;\n  }\n  if ( strchr(a5, 48) )\n  {\n    v7 = (*endptr)[1];\n    if ( v7 == 68 )\n      goto LABEL_35;\n    if ( v7 != 105 )\n    {\n      if ( v7 != 66 )\n        goto LABEL_36;\nLABEL_35:\n      v14 = 1000;\n      v15 = 2;\n      goto LABEL_36;\n    }\n    if ( (*endptr)[2] == 66 )\n      v15 = 3;\n  }\nLABEL_36:\n  v8 = **endptr;\n  if ( v8 != 89 )\n  {\n    if ( v8 > 89 )\n    {\n      if ( v8 == 103 )\n      {\nLABEL_65:\n        v16 = sub_40AF7F(&v18, v14, 3);\n        goto LABEL_74;\n      }\n      if ( v8 <= 103 )\n      {\n        switch ( v8 )\n        {\n          case 'b':\n            v16 = sub_40AF20(&v18, 512);\n            break;\n          case 'c':\n            v16 = 0;\n            break;\n          case 'Z':\n            v16 = sub_40AF7F(&v18, v14, 7);\n            break;\n          default:\n            goto LABEL_73;\n        }\n        goto LABEL_74;\n      }\n      if ( v8 == 109 )\n        goto LABEL_67;\n      if ( v8 > 109 )\n      {\n        if ( v8 != 116 )\n        {\n          if ( v8 != 119 )\n            goto LABEL_73;\n          v16 = sub_40AF20(&v18, 2);\n          goto LABEL_74;\n        }\nLABEL_69:\n        v16 = sub_40AF7F(&v18, v14, 4);\n        goto LABEL_74;\n      }\n      if ( v8 != 107 )\n        goto LABEL_73;\n    }\n    else if ( v8 != 75 )\n    {\n      if ( v8 <= 75 )\n      {\n        if ( v8 == 69 )\n        {\n          v16 = sub_40AF7F(&v18, v14, 6);\n          goto LABEL_74;\n        }\n        if ( v8 != 71 )\n        {\n          if ( v8 != 66 )\n          {\nLABEL_73:\n            *a4 = v18;\n            return v13 | 2;\n          }\n          v16 = sub_40AF20(&v18, 1024);\n          goto LABEL_74;\n        }\n        goto LABEL_65;\n      }\n      if ( v8 == 80 )\n      {\n        v16 = sub_40AF7F(&v18, v14, 5);\n        goto LABEL_74;\n      }\n      if ( v8 != 84 )\n      {\n        if ( v8 != 77 )\n          goto LABEL_73;\nLABEL_67:\n        v16 = sub_40AF7F(&v18, v14, 2);\n        goto LABEL_74;\n      }\n      goto LABEL_69;\n    }\n    v16 = sub_40AF7F(&v18, v14, 1);\n    goto LABEL_74;\n  }\n  v16 = sub_40AF7F(&v18, v14, 8);\nLABEL_74:\n  v13 |= v16;\n  *endptr += v15;\n  if ( **endptr )\n    v13 |= 2u;\nLABEL_76:\n  *a4 = v18;\n  return v13;\n}\n"], [4240428, "sub_40B42C", "int __fastcall sub_40B42C(FILE *a1)\n{\n  int v2; // eax\n  int v3; // [rsp+14h] [rbp-Ch]\n  int v4; // [rsp+18h] [rbp-8h]\n\n  v3 = 0;\n  if ( fileno(a1) < 0 )\n    return fclose(a1);\n  if ( !__freading(a1) || (v2 = fileno(a1), lseek(v2, 0LL, 1) != -1) )\n  {\n    if ( (unsigned int)sub_40B7CE(a1) )\n      v3 = *__errno_location();\n  }\n  v4 = fclose(a1);\n  if ( v3 )\n  {\n    *__errno_location() = v3;\n    v4 = -1;\n  }\n  return v4;\n}\n"], [4240609, "sub_40B4E1", "__int64 __fastcall sub_40B4E1(int a1, int a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6, __m128 a7, __m128 a8, __m128 a9, __m128 a10, __m128 a11, __m128 a12, __m128 a13, __m128 a14)\n{\n  int v14; // ecx\n  int v15; // er8\n  int v16; // er9\n  int v18; // [rsp+10h] [rbp-E0h]\n  int v19; // [rsp+14h] [rbp-DCh]\n  int v20; // [rsp+18h] [rbp-D8h]\n  int v21; // [rsp+1Ch] [rbp-D4h]\n  __int64 v22; // [rsp+50h] [rbp-A0h]\n  __int64 v23; // [rsp+58h] [rbp-98h]\n  __int64 v24; // [rsp+60h] [rbp-90h]\n  __int64 v25; // [rsp+68h] [rbp-88h]\n  __m128 v26; // [rsp+70h] [rbp-80h]\n  __m128 v27; // [rsp+80h] [rbp-70h]\n  __m128 v28; // [rsp+90h] [rbp-60h]\n  __m128 v29; // [rsp+A0h] [rbp-50h]\n  __m128 v30; // [rsp+B0h] [rbp-40h]\n  __m128 v31; // [rsp+C0h] [rbp-30h]\n  __m128 v32; // [rsp+D0h] [rbp-20h]\n  __m128 v33; // [rsp+E0h] [rbp-10h]\n\n  v22 = a3;\n  v23 = a4;\n  v24 = a5;\n  v25 = a6;\n  v26 = a7;\n  v27 = a8;\n  v28 = a9;\n  v29 = a10;\n  v30 = a11;\n  v31 = a12;\n  v32 = a13;\n  v33 = a14;\n  if ( a2 != 1030 )\n    return (unsigned int)fcntl(a1, a2, v22);\n  v19 = v22;\n  if ( dword_6105A0 < 0 )\n  {\n    v18 = sub_40B4E1(a1, 0, v22, a4, a5, a6);\n  }\n  else\n  {\n    v18 = fcntl(a1, 1030, (unsigned int)v22);\n    if ( v18 < 0 && *__errno_location() == 22 )\n    {\n      v18 = sub_40B4E1(a1, 0, v19, v14, v15, v16);\n      if ( v18 < 0 )\n        return (unsigned int)v18;\n      dword_6105A0 = -1;\n    }\n    else\n    {\n      dword_6105A0 = 1;\n    }\n  }\n  if ( v18 >= 0 && dword_6105A0 == -1 )\n  {\n    v20 = fcntl(v18, 1);\n    if ( v20 < 0 || fcntl(v18, 2, v20 | 1u) == -1 )\n    {\n      v21 = *__errno_location();\n      close(v18);\n      *__errno_location() = v21;\n      v18 = -1;\n    }\n  }\n  return (unsigned int)v18;\n}\n"], [4241307, "sub_40B79B", "__int64 __fastcall sub_40B79B(_DWORD *a1)\n{\n  __int64 result; // rax\n\n  result = *a1 & 0x100;\n  if ( (_DWORD)result )\n    result = sub_40B819(a1, 0LL, 1LL);\n  return result;\n}\n"], [4241358, "sub_40B7CE", "int __fastcall sub_40B7CE(FILE *a1)\n{\n  if ( !a1 || !__freading(a1) )\n    return fflush(a1);\n  sub_40B79B(a1);\n  return fflush(a1);\n}\n"], [4241433, "sub_40B819", "int __fastcall sub_40B819(FILE *a1, __off_t a2, int a3)\n{\n  int v3; // eax\n  __off_t v6; // [rsp+28h] [rbp-8h]\n\n  if ( a1->_IO_read_end != a1->_IO_read_ptr || a1->_IO_write_ptr != a1->_IO_write_base || a1->_IO_save_base )\n    return fseeko(a1, a2, a3);\n  v3 = fileno(a1);\n  v6 = lseek(v3, a2, a3);\n  if ( v6 == -1 )\n    return -1;\n  a1->_flags &= 0xFFFFFFEF;\n  a1->_offset = v6;\n  return 0;\n}\n"], [4241617, "sub_40B8D1", "__int64 __fastcall sub_40B8D1(FILE *a1)\n{\n  bool v2; // [rsp+1Dh] [rbp-3h]\n  bool v3; // [rsp+1Eh] [rbp-2h]\n  bool v4; // [rsp+1Fh] [rbp-1h]\n\n  v2 = __fpending(a1) != 0;\n  v3 = ferror_unlocked(a1) != 0;\n  v4 = sub_40B42C(a1) != 0;\n  if ( !v3 && (!v4 || !v2 && *__errno_location() == 9) )\n    return 0LL;\n  if ( !v4 )\n    *__errno_location() = 0;\n  return 0xFFFFFFFFLL;\n}\n"], [4241760, "init", "void __fastcall init(unsigned int a1, __int64 a2, __int64 a3)\n{\n  __int64 v4; // rbx\n  signed __int64 v5; // rbp\n\n  v4 = 0LL;\n  v5 = &off_60FE18 - off_60FE10;\n  init_proc();\n  if ( v5 )\n  {\n    do\n      ((void (__fastcall *)(_QWORD, __int64, __int64))off_60FE10[v4++])(a1, a2, a3);\n    while ( v4 != v5 );\n  }\n}\n"], [4241872, "fini", "void fini(void)\n{\n  ;\n}\n"], [4241888, "sub_40B9E0", "int __fastcall sub_40B9E0(void (__fastcall *a1)(void *))\n{\n  void *v1; // rdx\n\n  if ( &qword_610238 )\n    v1 = (void *)qword_610238;\n  else\n    v1 = 0LL;\n  return __cxa_atexit(a1, 0LL, v1);\n}\n"], [4241920, "sub_40BA00", "int __fastcall sub_40BA00(int fildes, struct stat *stat_buf)\n{\n  return __fxstat(1, fildes, stat_buf);\n}\n"], [4241936, ".term_proc", "void term_proc()\n{\n  ;\n}\n"]]